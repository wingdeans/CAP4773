{"src": ".LFB0:\nleaq -264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L4\nmovl $264,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $216,%rsp\nleaq <.LC25>(%rip),%rcx\nmovq %rcx,-224(%rbp)\nmovq $3,-216(%rbp)\nleaq <.LC26>(%rip),%rcx\nmovq %rcx,-208(%rbp)\nmovq $3,-200(%rbp)\nleaq -224(%rbp),%rcx\nmovq %rcx,-144(%rbp)\nmovq $2,-136(%rbp)\nmovq $2,-128(%rbp)\nleaq <.LC27>(%rip),%rax\nmovl $14,%edx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <main.mostCommonWord>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <string..d>(%rip),%r14\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq %r12,-176(%rbp)\nmovq %r13,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -184(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-160(%rbp)\nmovq %r15,-152(%rbp)\nleaq -160(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-240(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "fmt.Println(mostCommonWord(\"STR\", []string{\"STR\", \"STR\"}))"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L24\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L24:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\n.LBB2:\n.LBB3:\nmovq <16>(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB4:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\nsete %al\n.L2:\n.LBE4:\n.LBE3:\ntestb %al,%al\njne .L21\n.LBE2:\nmovq $0,-8(%rbp)\n.LBB6:\nmovq $0,-16(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -40(%rbp),%rcx\nmovl $0,%eax\n.LBE9:\njmp .L5\n.L22:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -40(%rbp),%rdx\ntestq %rax,%rax\njs .L6\ncmpq %rdx,%rax\njge .L6\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE12:\n.LBB13:\nmovq %rdx,-16(%rbp)\n.LBE13:\n.LBB14:\n.LBB15:\ncmpq $0,-16(%rbp)\njne .L7\njmp .L8\n.L6:\n.LBE15:\n.LBE14:\n.LBB18:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB16:\nmovq <24>(%rbp),%rdx\ncmpq $0,-8(%rbp)\njs .L9\ncmpq %rdx,-8(%rbp)\njl .L17\n.L9:\nmovq -8(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\nmovq <16>(%rbp),%rsi\nmovq -8(%rbp),%rdx\nsalq $3,%rdx\naddq %rdx,%rsi\nmovq -16(%rbp),%rdx\nmovq %rdx,(%rsi)\naddq $1,-8(%rbp)\n.L8:\n.LBE16:\n.LBE17:\n.LBE19:\n.LBE11:\n.LBB20:\naddq $1,%rax\n.L5:\n.LBE20:\ncmpq %rcx,%rax\njl .L22\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB21:\n.LBB22:\njmp .L13\n.L23:\n.LBB23:\nnop\n.LBE23:\n.LBB24:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L14\ncmpq %rax,-8(%rbp)\njl .L19\n.L14:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq $0,(%rax)\naddq $1,-8(%rbp)\n.L13:\n.LBE24:\nmovq <24>(%rbp),%rax\ncmpq %rax,-8(%rbp)\njl .L23\njmp .L1\n.L21:\n.LBE22:\n.LBE21:\n.LBB25:\n.LBB5:\nnop\n.L1:\n.LBE5:\n.LBE25:\nleave\nret", "tgt": "if nil == nums || len(nums) == 0 {\n\treturn\n}\ninsertPos := 0\nfor _, values := range nums {\n\tif 0 != values {\n\t\tnums[insertPos] = values\n\t\tinsertPos++\n\t}\n}\nfor insertPos < len(nums) {\n\tnums[insertPos] = 0\n\tinsertPos++\n}"}
{"src": ".LFB0:\nleaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12\nmovl $456,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $408,%rsp\nmovq %rdi,-424(%rbp)\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\nmovq $1,-328(%rbp)\nmovq $1,-320(%rbp)\nmovq $1,-312(%rbp)\nmovq $-1,-304(%rbp)\nmovq $1,-296(%rbp)\nmovq $-1,-288(%rbp)\nmovq $1,-280(%rbp)\nmovq $-1,-272(%rbp)\nmovq $-1,-264(%rbp)\nmovq $10,-256(%rbp)\nmovq $2,-248(%rbp)\nmovq $2,-240(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq $5,-376(%rbp)\nmovq $5,-368(%rbp)\n.LBB2:\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\nmovq $0,-400(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L11:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -184(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -192(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-208(%rbp)\n.LBE8:\n.LBB9:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBE9:\n.LBB10:\nmovq -408(%rbp),%rdx\nmovq -416(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.integer.Min>\nmovq %rax,-56(%rbp)\n.LBB11:\nmovq -400(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB16:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE16:\n.LBB17:\n.LBB15:\n.LBB12:\nleaq <int..d>(%rip),%rax\nmovq %rax,-448(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq -400(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-440(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -448(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC5>(%rip),%r12\nmovl $28,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -424(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE15:\n.LBE17:\n.LBE7:\n.LBB18:\naddq $1,%rbx\n.L2:\n.LBE18:\ncmpq -432(%rbp),%rbx\njl .L11\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\ta, b, expected int\n}{\n\t{\n\t\ta:        0,\n\t\tb:        0,\n\t\texpected: 0,\n\t},\n\t{\n\t\ta:        1,\n\t\tb:        1,\n\t\texpected: 1,\n\t},\n\t{\n\t\ta:        -1,\n\t\tb:        1,\n\t\texpected: -1,\n\t},\n\t{\n\t\ta:        1,\n\t\tb:        -1,\n\t\texpected: -1,\n\t},\n\t{\n\t\ta:        10,\n\t\tb:        2,\n\t\texpected: 2,\n\t},\n}\nfor _, c := range cases {\n\tactual := Min(c.a, c.b)\n\tif actual != c.expected {\n\t\tt.Errorf(\"STR\", c.expected, actual)\n\t}\n}"}
{"src": ".LFB0:\nleaq -264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L32\nmovl $264,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $240,%rsp\nmovq $0,-40(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\n.LBB3:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njns .L2\n.LBB4:\n.LBB5:\nmovq $0,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L24\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\n.LBB6:\nmovq $0,-32(%rbp)\n.LBB7:\njmp .L4\n.L31:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\ncmpq $0,-32(%rbp)\njne .L5\n.LBB11:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L6\ncmpq %rax,-32(%rbp)\njl .L25\n.L6:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L8\n.LBB12:\nmovq -224(%rbp),%rsi\nleaq -128(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-240(%rbp)\n.LBE12:\njmp .L9\n.L8:\n.LBB13:\nmovq -224(%rbp),%rcx\nmovq -208(%rbp),%rdx\nmovq %rcx,-256(%rbp)\nmovq %rax,-248(%rbp)\nmovq %rdx,-240(%rbp)\n.L9:\n.LBE13:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\ncall <go.problem84.maxArea>\naddq $32,%rsp\nmovq %rax,-64(%rbp)\nmovq -24(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem84.max>\nmovq %rax,-24(%rbp)\njmp .L10\n.L5:\n.LBE11:\n.LBE10:\n.LBB14:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L11\ncmpq %rdx,%rax\njl .L26\n.L11:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\nmovq <24>(%rbp),%rdx\ncmpq $0,-32(%rbp)\njs .L13\ncmpq %rdx,-32(%rbp)\njl .L27\n.L13:\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njle .L15\n.LBB15:\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\ncall <go.problem84.maxArea>\naddq $32,%rsp\nmovq %rax,-48(%rbp)\nmovq -24(%rbp),%rdx\nmovq -48(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem84.max>\nmovq %rax,-24(%rbp)\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L16\ncmpq %rax,-32(%rbp)\njl .L28\n.L16:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nleaq -192(%rbp),%rax\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem84.changeStack>\naddq $32,%rsp\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-240(%rbp)\n.L15:\n.LBE15:\n.LBE14:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L18\ncmpq %rax,-32(%rbp)\njl .L29\n.L18:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -144(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L20\n.LBB16:\nmovq -160(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-240(%rbp)\n.LBE16:\njmp .L21\n.L20:\n.LBB17:\nmovq -160(%rbp),%rcx\nmovq -144(%rbp),%rdx\nmovq %rcx,-256(%rbp)\nmovq %rax,-248(%rbp)\nmovq %rdx,-240(%rbp)\n.L21:\n.LBE17:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\n.LBB18:\nmovq -32(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq <24>(%rbp),%rax\ncmpq %rax,%rdx\njne .L10\n.LBB19:\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\ncall <go.problem84.maxArea>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\nmovq -24(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem84.max>\nmovq %rax,-24(%rbp)\nnop\n.L10:\n.LBE19:\n.LBE18:\n.LBE9:\n.LBB20:\naddq $1,-32(%rbp)\n.L4:\n.LBE20:\nmovq <24>(%rbp),%rax\ncmpq %rax,-32(%rbp)\njl .L31\n.LBE7:\n.LBE6:\n.LBB21:\nmovq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.L24:\n.LBE21:\n.LBE2:\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "ma := 0\nif len(heights) < 0 {\n\treturn 0\n}\nvar stack []int\nfor i := 0; i < len(heights); i++ {\n\tif i == 0 {\n\t\tstack = append(stack, heights[i])\n\t\tm := maxArea(stack)\n\t\tma = max(m, ma)\n\t\tcontinue\n\t}\n\tif heights[i-1] > heights[i] {\n\t\tm := maxArea(stack)\n\t\tma = max(m, ma)\n\t\tstack = changeStack(stack, heights[i])\n\t}\n\tstack = append(stack, heights[i])\n\tif i+1 == len(heights) {\n\t\tm := maxArea(stack)\n\t\tma = max(m, ma)\n\t\tcontinue\n\t}\n}\nreturn ma"}
{"src": ".LFB45:\ncmpq %fs:112,%rsp\njnb .L1184\nmovl $136,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL58:\nret\n.L1184:\npushq %rbp\nmovq %rsp,%rbp\naddq $-128,%rsp\nmovq $0,-16(%rbp)\n.LBB969:\nleaq <go.leetcode.minCostClimbingStairs..func1..f>(%rip),%rax\nmovq %rax,-24(%rbp)\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $2,-120(%rbp)\nmovq $2,-112(%rbp)\n.LBB970:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L1164\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1164:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rcx\nmovq <24>(%rbp),%rax\ncmpq $1,%rax\njg .L1165\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1165:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -72(%rbp),%rax\ntestq %rax,%rax\njg .L1166\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1166:\nmovq -80(%rbp),%rax\nmovq %rcx,(%rax)\nmovq -40(%rbp),%rax\ncmpq $1,%rax\njg .L1167\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1167:\nmovq -48(%rbp),%rax\naddq $8,%rax\nmovq %rdx,(%rax)\n.LBE970:\n.LBB971:\nmovq $2,-8(%rbp)\n.LBB972:\njmp .L1168\n.L1183:\n.LBB973:\nnop\n.LBE973:\n.LBB974:\nmovq -120(%rbp),%rax\ntestq %rax,%rax\njg .L1169\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1169:\nmovq -120(%rbp),%rax\ncmpq $1,%rax\njg .L1170\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1170:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -128(%rbp),%rax\naddq $8,%rax\nmovq (%rax),%rdx\nmovq -128(%rbp),%rax\nmovq (%rax),%rax\nmovq -24(%rbp),%r10\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL59:\nmovq %rax,%rcx\nmovq -8(%rbp),%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\nmovq -120(%rbp),%rdx\ntestq %rax,%rax\njs .L1171\ncmpq %rdx,%rax\njl .L1180\n.L1171:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1180:\nmovq <24>(%rbp),%rdx\ncmpq $0,-8(%rbp)\njs .L1173\ncmpq %rdx,-8(%rbp)\njl .L1181\n.L1173:\nmovq -8(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1181:\nmovq <16>(%rbp),%rsi\nmovq -8(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rdx\nmovq -128(%rbp),%rsi\nsalq $3,%rax\naddq %rsi,%rax\naddq %rcx,%rdx\nmovq %rdx,(%rax)\n.LBE974:\n.LBB975:\naddq $1,-8(%rbp)\n.L1168:\n.LBE975:\nmovq <24>(%rbp),%rax\ncmpq %rax,-8(%rbp)\njl .L1183\n.LBE972:\n.LBE971:\n.LBB976:\nmovq -120(%rbp),%rax\ntestq %rax,%rax\njg .L1177\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1177:\nmovq -120(%rbp),%rax\ncmpq $1,%rax\njg .L1178\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1178:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -128(%rbp),%rax\naddq $8,%rax\nmovq (%rax),%rdx\nmovq -128(%rbp),%rax\nmovq (%rax),%rax\nmovq -24(%rbp),%r10\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL60:\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.LBE976:\n.LBE969:\nleave\nret", "tgt": "min := func(a, b int) int {\n\treturn int(math.Min(float64(a), float64(b)))\n}\ndp := make([]int, 2)\ndp[0], dp[1] = cost[0], cost[1]\nfor i := 2; i < len(cost); i++ {\n\tdp[i%2] = cost[i] + min(dp[0], dp[1])\n}\nreturn min(dp[0], dp[1])"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L8\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq -40(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq $0,-16(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L7:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -16(%rbp),%rax\naddq %rax,%rax\naddq $1,%rax\nmovq %rax,-16(%rbp)\nmovq -8(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-8(%rbp)\n.L2:\n.LBE6:\ncmpq $0,-8(%rbp)\njg .L7\n.LBE4:\n.LBE3:\n.LBB7:\nmovq -16(%rbp),%rax\nxorq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE7:\n.LBE2:\npopq %rbp\nret", "tgt": "temp, mask := num, 0\nfor temp > 0 {\n\tmask = mask*2 + 1\n\ttemp /= 2\n}\nreturn mask ^ num"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L2\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\nsubq $224,%rsp\nmovq %rdi,-216(%rbp)\nmovl $1,%esi\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nleaq -208(%rbp),%rax\nmovq %rax,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq $4,(%rax)\nmovq $0,<8>(%rax)\nmovq -184(%rbp),%rdx\nmovl $4,%ecx\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nleaq -176(%rbp),%rax\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq %rsi,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -152(%rbp),%rdx\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovl $8,%esi\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rax\nmovq $4,(%rax)\nmovq $0,<8>(%rax)\nmovq -88(%rbp),%rdx\nmovl $1,%ecx\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nleaq -80(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\nmovq %rsi,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -56(%rbp),%rdx\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nleaq -48(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -24(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rdx\nmovq -8(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.getIntersectionNode>\nleave\nret", "tgt": "listNode1 := &ListNode{\n\tVal: 4,\n\tNext: &ListNode{\n\t\tVal: 1,\n\t\tNext: &ListNode{\n\t\t\tVal:  4,\n\t\t\tNext: nil,\n\t\t},\n\t},\n}\nlistNode2 := &ListNode{\n\tVal: 1,\n\tNext: &ListNode{\n\t\tVal: 8,\n\t\tNext: &ListNode{\n\t\t\tVal:  4,\n\t\t\tNext: nil,\n\t\t},\n\t},\n}\ngetIntersectionNode(listNode1, listNode2)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L12\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $56,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\nmovl $1,%ebx\nmovq -80(%rbp),%rdx\nmovq -72(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem0468.isIPv4>\ncmpb %al,%bl\njne .L10\n.LBB5:\n.LBB6:\nleaq <.LC0>(%rip),%rax\nmovq %rax,-96(%rbp)\nmovq $4,-88(%rbp)\nmovdqa -96(%rbp),%xmm0\nmovups %xmm0,-64(%rbp)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\njmp .L7\n.L10:\n.LBE6:\n.LBE5:\n.LBB7:\nnop\n.LBE7:\nmovq -80(%rbp),%rdx\nmovq -72(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem0468.isIPv6>\ncmpb %al,%bl\njne .L11\n.LBB8:\n.LBB9:\nleaq <.LC1>(%rip),%r14\nmovl $4,%r15d\nmovq %r14,-64(%rbp)\nmovq %r15,-56(%rbp)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\njmp .L7\n.L11:\n.LBE9:\n.LBE8:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nleaq <.LC2>(%rip),%r12\nmovl $7,%r13d\nmovq %r12,-64(%rbp)\nmovq %r13,-56(%rbp)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\n.L7:\n.LBE12:\n.LBE11:\n.LBE4:\n.LBE3:\n.LBE2:\naddq $56,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "switch {\ncase isIPv4(IP):\n\treturn \"STR\"\ncase isIPv6(IP):\n\treturn \"STR\"\ndefault:\n\treturn \"STR\"\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $168,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\nmovq $0,-48(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB3:\ncmpq $0,-40(%rbp)\njne .L4\n.LBB4:\n.LBB5:\nmovq $0,-48(%rbp)\nmovq -48(%rbp),%rax\njmp .L3\n.L25:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\n.LBB7:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nsubq $1,-40(%rbp)\n.L4:\n.LBE9:\n.LBB10:\ncmpq $1,-40(%rbp)\nsetg %al\ntestb %al,%al\nje .L5\n.LBB11:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L6\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njl .L21\n.L7:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq <16>(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetl %al\n.L5:\n.LBE11:\n.LBE10:\ntestb %al,%al\njne .L25\n.LBE7:\n.LBE6:\n.LBB12:\nmovq <32>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L11\ncmpq %rax,-40(%rbp)\njg .L11\ncmpq $0,-40(%rbp)\njg .L12\njmp .L23\n.L11:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L23:\nmovq -40(%rbp),%rax\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L12:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rax,-112(%rbp)\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-104(%rbp)\nmovq <32>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-96(%rbp)\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\ncall <main.bstFromPreorder>\naddq $32,%rsp\nmovq %rax,%r12\nmovq <32>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L14\ncmpq %rax,-40(%rbp)\njle .L24\n.L14:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L24:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq %rax,-40(%rbp)\nje .L16\nmovq -40(%rbp),%rax\nsalq $3,%rax\njmp .L17\n.L16:\nmovl $0,%eax\n.L17:\naddq %rdx,%rax\nmovq %rax,-80(%rbp)\nmovq <24>(%rbp),%rax\nsubq -40(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq <32>(%rbp),%rax\nsubq -40(%rbp),%rax\nmovq %rax,-64(%rbp)\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\ncall <main.bstFromPreorder>\naddq $32,%rsp\nmovq %rax,%rbx\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L18\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq <16>(%rbp),%rax\nmovq (%rax),%r13\nleaq <main.TreeNode..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq %r13,-144(%rbp)\nmovq %r12,-136(%rbp)\nmovq %rbx,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L19\n.LBB13:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE13:\njmp .L20\n.L19:\n.LBB14:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <main.TreeNode..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L20:\n.LBE14:\nmovq -152(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.L3:\n.LBE12:\n.LBE2:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "l := len(preorder)\nif l == 0 {\n\treturn nil\n}\nfor 1 < l && preorder[0] < preorder[l-1] {\n\tl--\n}\nreturn &TreeNode{\n\tVal:   preorder[0],\n\tLeft:  bstFromPreorder(preorder[1:l]),\n\tRight: bstFromPreorder(preorder[l:]),\n}"}
{"src": ".LFB0:\nleaq -264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L21\nmovl $264,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L21:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $232,%rsp\nmovq $0,-64(%rbp)\n.LBB2:\nleaq <go.problem1029.twoCitySchedCost..func1>(%rip),%rdx\nleaq <16>(%rbp),%rcx\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovq %rdx,(%rax)\nmovq %rcx,<8>(%rax)\nmovq -168(%rbp),%rbx\nleaq <type...6.7.6.7int>(%rip),%r12\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-208(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -232(%rbp),%rax\nleaq -224(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -232(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-56(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-72(%rbp)\n.LBB5:\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\n.LBB6:\n.LBB7:\n.LBB8:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rsi\nmovl $0,%eax\n.LBE8:\njmp .L4\n.L20:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\n.LBB11:\nmovq -120(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njge .L5\nmovq -128(%rbp),%rcx\nmovq %rax,%rdi\nmovq %rdi,%rdx\naddq %rdx,%rdx\naddq %rdi,%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\nmovq %rcx,-160(%rbp)\nmovq %rbx,-152(%rbp)\nmovq <16>(%rdx),%rdx\nmovq %rdx,-144(%rbp)\n.LBE11:\n.LBB12:\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq -144(%rbp),%rdx\nmovq %rdx,-80(%rbp)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,-256(%rbp)\nmovq %rbx,-248(%rbp)\nmovq -80(%rbp),%rdx\nmovq %rdx,-240(%rbp)\n.LBE12:\n.LBB13:\n.LBB14:\n.LBB15:\n.LBB16:\nmovq -248(%rbp),%rdx\ntestq %rdx,%rdx\njg .L6\njmp .L18\n.L5:\n.LBE16:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBB24:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\n.LBE24:\n.LBB25:\n.LBB23:\n.LBB20:\n.LBB18:\nmovq %rdx,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6:\nmovq -248(%rbp),%rdx\ncmpq $1,%rdx\njg .L8\nmovq %rdx,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L8:\nmovq -256(%rbp),%rdx\nmovq (%rdx),%rcx\nmovq -256(%rbp),%rdx\naddq $8,%rdx\nmovq (%rdx),%rdx\ncmpq %rdx,%rcx\nsetl %dl\ntestb %dl,%dl\nje .L9\n.LBB17:\nmovq -48(%rbp),%rdx\ncmpq -72(%rbp),%rdx\nsetl %dl\n.L9:\n.LBE17:\n.LBE18:\nmovl %edx,%ecx\nxorl $1,%ecx\ntestb %cl,%cl\nje .L10\n.LBB19:\nmovq -56(%rbp),%rdx\ncmpq -72(%rbp),%rdx\nsete %dl\n.L10:\n.LBE19:\n.LBE20:\ntestb %dl,%dl\nje .L11\n.LBB21:\nmovq -248(%rbp),%rdx\ntestq %rdx,%rdx\njg .L12\nmovq %rdx,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq -256(%rbp),%rdx\nmovq (%rdx),%rdx\naddq %rdx,-40(%rbp)\naddq $1,-48(%rbp)\n.LBE21:\njmp .L13\n.L11:\n.LBB22:\nmovq -248(%rbp),%rdx\ncmpq $1,%rdx\njg .L14\nmovq %rdx,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq -256(%rbp),%rdx\naddq $8,%rdx\nmovq (%rdx),%rdx\naddq %rdx,-40(%rbp)\naddq $1,-56(%rbp)\n.L13:\n.LBE22:\n.LBE23:\n.LBE25:\n.LBE10:\n.LBB26:\naddq $1,%rax\n.L4:\n.LBE26:\ncmpq %rsi,%rax\njl .L20\n.LBE7:\n.LBE6:\n.LBE5:\n.LBB27:\nmovq -40(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\n.LBE27:\n.LBE2:\naddq $232,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "sort.Slice(costs, func(i, j int) bool {\n\treturn abs(costs[i][0]-costs[i][1]) > abs(costs[j][0]-costs[j][1])\n})\ncost, a, b, n := 0, 0, 0, len(costs)/2\nfor _, c := range costs {\n\tif (c[0] < c[1] && a < n) || b == n {\n\t\tcost += c[0]\n\t\ta++\n\t} else {\n\t\tcost += c[1]\n\t\tb++\n\t}\n}\nreturn cost"}
{"src": "cmpq %fs:112,%rsp\njnb .L14\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\ncall <runtime.printlock@PLT>\nleaq <.LC2>(%rip),%r12\nmovl $4,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\ncall <runtime.printlock@PLT>\nleaq <.LC27>(%rip),%r14\nmovl $3,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq <main.v1>(%rip),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <main.v2>(%rip),%r13\nmovq <8+main.v2>(%rip),%r12\ncall <runtime.printlock@PLT>\nleaq <.LC28>(%rip),%rax\nmovq %rax,-176(%rbp)\nmovq $3,-168(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq %r13,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovq %r12,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <8+main.v3>(%rip),%r15\nmovq <16+main.v3>(%rip),%r14\nmovq <8+main.v3>(%rip),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L4:\nmovq <main.v3>(%rip),%rax\nmovq (%rax),%r13\nmovq <8+main.v3>(%rip),%rax\ncmpq $3,%rax\njg .L5\nmovq %rax,%rsi\nmovl $3,%edi\ncall <runtime.goPanicIndex@PLT>\n.L5:\nmovq <main.v3>(%rip),%rax\nmovq <24>(%rax),%r12\ncall <runtime.printlock@PLT>\nleaq <.LC29>(%rip),%rax\nmovq %rax,-160(%rbp)\nmovq $3,-152(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq %r15,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovq %r14,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovq %r13,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovq %r12,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <main.v4>(%rip),%rax\ntestq %rax,%rax\nje .L6\nmovq <main.v4>(%rip),%rax\nmovq (%rax),%rbx\njmp .L7\n.L6:\nmovl $0,%ebx\n.L7:\nmovq <main.v4>(%rip),%rax\ntestq %rax,%rax\nsete %r12b\ncall <runtime.printlock@PLT>\nleaq <.LC30>(%rip),%rax\nmovq %rax,-144(%rbp)\nmovq $3,-136(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq %rbx,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovl %r12d,%edi\ncall <runtime.printbool@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <main.v5>(%rip),%rax\ntestq %rax,%rax\nje .L8\nmovq <main.v5>(%rip),%rax\nmovq (%rax),%rbx\njmp .L9\n.L8:\nmovl $0,%ebx\n.L9:\nmovq <main.v5>(%rip),%rax\ntestq %rax,%rax\nsete %r12b\ncall <runtime.printlock@PLT>\nleaq <.LC31>(%rip),%rax\nmovq %rax,-128(%rbp)\nmovq $3,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq %rbx,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovl %r12d,%edi\ncall <runtime.printbool@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\ncall <runtime.printlock@PLT>\nleaq <.LC32>(%rip),%rax\nmovq %rax,-112(%rbp)\nmovq $3,-104(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovzbl <main.v6>(%rip),%eax\nmovl %eax,%edi\ncall <runtime.printbool@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <16+main.v7>(%rip),%rbx\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq <16+main.v7>(%rip)\npushq <8+main.v7>(%rip)\npushq <main.v7>(%rip)\nmovq %rax,%rdi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\ncall <runtime.printlock@PLT>\nleaq <.LC33>(%rip),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq %rbx,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <8+main.uint8SliceSrc>(%rip),%rax\ntestq %rax,%rax\njg .L10\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L10:\nmovq <main.uint8SliceSrc>(%rip),%rax\nmovzbl (%rax),%ebx\ncall <runtime.printlock@PLT>\nmovzbl %bl,%eax\nmovq %rax,%rdi\ncall <runtime.printuint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <8+main.uint8SliceDst>(%rip),%rax\ntestq %rax,%rax\njg .L11\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L11:\nmovq <main.uint8SliceDst>(%rip),%rax\nmovzbl (%rax),%ebx\ncall <runtime.printlock@PLT>\nmovzbl %bl,%eax\nmovq %rax,%rdi\ncall <runtime.printuint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <8+main.intSliceSrc>(%rip),%rax\ntestq %rax,%rax\njg .L12\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq <main.intSliceSrc>(%rip),%rax\nmovzwl (%rax),%ebx\ncall <runtime.printlock@PLT>\nmovswq %bx,%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nmovq <8+main.intSliceDst>(%rip),%rax\ntestq %rax,%rax\njg .L13\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L13:\nmovq <main.intSliceDst>(%rip),%rax\nmovzwl (%rax),%ebx\ncall <runtime.printlock@PLT>\nmovswq %bx,%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "println(\"STR\")\nprintln(\"STR\", v1)\nprintln(\"STR\", v2.x, v2.y)\nprintln(\"STR\", len(v3), cap(v3), v3[0], v3[3])\nprintln(\"STR\", len(v4), v4 == nil)\nprintln(\"STR\", len(v5), v5 == nil)\nprintln(\"STR\", v6)\nprintln(\"STR\", cap(v7), string(v7))\nprintln(uint8SliceSrc[0])\nprintln(uint8SliceDst[0])\nprintln(intSliceSrc[0])\nprintln(intSliceDst[0])"}
{"src": "cmpq %fs:112,%rsp\njnb .L62\nmovl $136,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L62:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\n.LBB45:\nleaq -112(%rbp),%rax\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <strings.Fields@PLT>\n.LBB46:\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <go.Solution.reverseSlice>\naddq $32,%rsp\nleaq <.LC23>(%rip),%r12\nmovl $1,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <strings.Join@PLT>\naddq $32,%rsp\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\n.LBE46:\n.LBE45:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "words := strings.Fields(s)\nreturn strings.Join(reverseSlice(words), \"STR\")"}
{"src": ".LFB0:\nleaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $520,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nmovq %rdi,-488(%rbp)\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-448(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $8,-504(%rbp)\nmovdqa -512(%rbp),%xmm0\nmovups %xmm0,-416(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovq -440(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq -440(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $4,-392(%rbp)\nmovq $4,-384(%rbp)\nmovb $1,-376(%rbp)\nleaq <.LC23>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-368(%rbp)\nmovq %r15,-360(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-432(%rbp)\nmovq -432(%rbp),%rax\nmovq $4,(%rax)\nmovq $3,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq -432(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $4,-344(%rbp)\nmovq $4,-336(%rbp)\nmovb $1,-328(%rbp)\nleaq <.LC23>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-320(%rbp)\nmovq %r13,-312(%rbp)\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-424(%rbp)\nmovq -424(%rbp),%rax\nmovq $1,(%rax)\nmovq $3,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq -424(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $3,-296(%rbp)\nmovq $3,-288(%rbp)\nmovb $0,-280(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -448(%rbp),%rax\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -448(%rbp),%rax\nleaq -416(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -448(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $3,-472(%rbp)\nmovq $3,-464(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -224(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-256(%rbp)\nmovq %rdi,-248(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE10:\n.LBB11:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC24>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0bool.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0bool.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -488(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $472,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs []int\n\texpect bool\n}{\n\t{\"STR\", []int{1, 2, 2, 3}, true},\n\t{\"STR\", []int{4, 3, 3, 2}, true},\n\t{\"STR\", []int{1, 3, 2}, false},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.inputs)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.inputs)\n\t\t}\n\t})\n}"}
{"src": ".LFB0:\nleaq -1144(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L23\nmovl $1144,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $1120,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-1136(%rbp)\nmovq %rdx,-1128(%rbp)\nmovb $0,-25(%rbp)\n.LBB2:\nleaq -1088(%rbp),%rdx\nmovl $0,%eax\nmovl $123,%ecx\nmovq %rdx,%rdi\nrep stosqleaq -1088(%rbp),%rax\nmovq %rax,-1120(%rbp)\nmovq $123,-1112(%rbp)\nmovq $123,-1104(%rbp)\n.LBB3:\nmovq $0,-40(%rbp)\nmovl $0,-44(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -1128(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L21:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -1128(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -1136(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L17\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\nleaq <1>(%rbx),%rdx\n.LBE10:\njmp .L6\n.L17:\n.LBB11:\nmovq -1136(%rbp),%rcx\nmovq -1128(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovl %esi,%eax\nmovq %rdi,%rdx\n.L6:\n.LBE11:\n.LBE9:\n.LBB12:\nmovq %rbx,-40(%rbp)\nmovl %eax,-44(%rbp)\n.LBE12:\n.LBB13:\nmovq -1112(%rbp),%rax\ncmpl $0,-44(%rbp)\njs .L7\nmovl -44(%rbp),%ecx\nmovslq %ecx,%rcx\ncmpq %rcx,%rax\njg .L18\n.L7:\nmovl -44(%rbp),%edx\nmovslq %edx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq -1120(%rbp),%rcx\nmovl -44(%rbp),%eax\ncltq\nsalq $3,%rax\naddq %rax,%rcx\nmovq -40(%rbp),%rax\nmovq %rax,(%rcx)\n.LBE13:\n.LBE8:\n.LBB14:\nmovq %rdx,%rbx\n.L2:\n.LBE14:\ncmpq %r12,%rbx\njl .L21\n.LBE5:\n.LBE4:\n.LBE3:\nleaq <go.problem0953.isAlienSorted..func1>(%rip),%rcx\nleaq <16>(%rbp),%rsi\nleaq -1120(%rbp),%rdx\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rsi,<8>(%rax)\nmovq %rdx,<16>(%rax)\nmovq -64(%rbp),%rax\nmovq %rax,-56(%rbp)\n.LBB15:\nmovq $1,-24(%rbp)\n.LBB16:\njmp .L11\n.L22:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -24(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -24(%rbp),%rax\nmovq -56(%rbp),%r10\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall *%rcx\n.LVL1:\nxorl $1,%eax\ntestb %al,%al\nje .L12\n.LBB20:\n.LBB21:\nmovb $0,-25(%rbp)\nmovzbl -25(%rbp),%eax\njmp .L16\n.L12:\n.LBE21:\n.LBE20:\n.LBE19:\n.LBE18:\n.LBB22:\naddq $1,-24(%rbp)\n.L11:\n.LBE22:\nmovq <24>(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L22\n.LBE16:\n.LBE15:\n.LBB23:\nmovb $1,-25(%rbp)\nmovzbl -25(%rbp),%eax\n.L16:\n.LBE23:\n.LBE2:\naddq $1120,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "indexs := make([]int, 123)\nfor i, c := range order {\n\tindexs[c] = i\n}\nless := func(i, j int) bool {\n\tsi, sj := len(words[i]), len(words[j])\n\tfor k := 0; k < si && k < sj; k++ {\n\t\tii, ij := indexs[words[i][k]], indexs[words[j][k]]\n\t\tswitch {\n\t\tcase ii < ij:\n\t\t\treturn true\n\t\tcase ii > ij:\n\t\t\treturn false\n\t\t}\n\t}\n\treturn si <= sj\n}\nfor i := 1; i < len(words); i++ {\n\tif !less(i-1, i) {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": ".LFB2:\nleaq -568(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L119\nmovl $568,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L119:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $552,%rsp\nmovq $0,-64(%rbp)\n.LBB30:\nmovq <24>(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L33\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-80(%rbp)\nmovq -72(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-560(%rbp)\nmovq %rbx,-552(%rbp)\nmovq %rbx,-544(%rbp)\n.LBB31:\nmovq $0,-24(%rbp)\n.LBB32:\njmp .L34\n.L114:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\nmovq -80(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -552(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L35\ncmpq %rax,-24(%rbp)\njl .L94\n.L35:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L94:\nmovq -560(%rbp),%rsi\nmovq -24(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq %rdx,-528(%rbp)\nmovq %rbx,-520(%rbp)\nmovq %rbx,-512(%rbp)\nmovq -520(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -512(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L37\n.LBB35:\nmovq -528(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L38\n.L37:\n.LBE35:\n.LBB36:\nmovq -528(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L38:\n.LBE36:\n.LBE34:\n.LBB37:\naddq $1,-24(%rbp)\n.L34:\n.LBE37:\nmovq -24(%rbp),%rax\ncmpq -72(%rbp),%rax\njl .L114\n.LBE32:\n.LBE31:\nmovq -552(%rbp),%rax\ntestq %rax,%rax\njg .L41\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -560(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-480(%rbp)\nmovq -488(%rbp),%rax\ntestq %rax,%rax\njg .L42\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L43\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq <16>(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%rax\ntestq %rax,%rax\njg .L44\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L44:\nmovq -464(%rbp),%rdx\nmovq -496(%rbp),%rax\nmovq (%rdx),%rdx\nmovq %rdx,(%rax)\n.LBB38:\nmovq $1,-32(%rbp)\n.LBB39:\njmp .L45\n.L115:\n.LBB40:\nnop\n.LBE40:\n.LBB41:\nmovq -552(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L46\ncmpq %rax,-32(%rbp)\njl .L96\n.L46:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L96:\nmovq -560(%rbp),%rcx\nmovq -32(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\ntestq %rax,%rax\njg .L48\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L48:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq -552(%rbp),%rdx\ntestq %rax,%rax\njs .L49\ncmpq %rdx,%rax\njl .L97\n.L49:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L97:\nmovq -560(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-384(%rbp)\nmovq -392(%rbp),%rax\ntestq %rax,%rax\njg .L51\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L51:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L52\ncmpq %rax,-32(%rbp)\njl .L98\n.L52:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L98:\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%rax\ntestq %rax,%rax\njg .L54\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L54:\nmovq -400(%rbp),%rax\nmovq (%rax),%rcx\nmovq -368(%rbp),%rax\nmovq (%rax),%rdx\nmovq -432(%rbp),%rax\naddq %rcx,%rdx\nmovq %rdx,(%rax)\n.LBE41:\n.LBB42:\naddq $1,-32(%rbp)\n.L45:\n.LBE42:\nmovq -32(%rbp),%rax\ncmpq -72(%rbp),%rax\njl .L115\n.LBE39:\n.LBE38:\n.LBB43:\nmovq $1,-40(%rbp)\n.LBB44:\njmp .L57\n.L116:\n.LBB45:\nnop\n.LBE45:\n.LBB46:\nmovq -552(%rbp),%rax\ntestq %rax,%rax\njg .L58\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L58:\nmovq -560(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L59\ncmpq %rax,-40(%rbp)\njl .L100\n.L59:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L100:\nmovq -552(%rbp),%rax\ntestq %rax,%rax\njg .L61\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L61:\nmovq -560(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-288(%rbp)\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq -296(%rbp),%rdx\ntestq %rax,%rax\njs .L62\ncmpq %rdx,%rax\njl .L101\n.L62:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L101:\nmovq <24>(%rbp),%rdx\ntestq %rdx,%rdx\njg .L64\nmovq %rdx,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq <16>(%rbp),%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\nmovq %rcx,-272(%rbp)\nmovq %rbx,-264(%rbp)\nmovq <16>(%rdx),%rdx\nmovq %rdx,-256(%rbp)\nmovq -264(%rbp),%rdx\ncmpq $0,-40(%rbp)\njs .L65\ncmpq %rdx,-40(%rbp)\njl .L102\n.L65:\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L102:\nmovq -304(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq -272(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -336(%rbp),%rsi\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\naddq %rcx,%rdx\nmovq %rdx,(%rax)\n.LBE46:\n.LBB47:\naddq $1,-40(%rbp)\n.L57:\n.LBE47:\nmovq -40(%rbp),%rax\ncmpq -80(%rbp),%rax\njl .L116\n.LBE44:\n.LBE43:\n.LBB48:\nmovq $1,-48(%rbp)\n.LBB49:\njmp .L69\n.L118:\n.LBB50:\nnop\n.LBE50:\n.LBB51:\n.LBB52:\nmovq $1,-56(%rbp)\n.LBB53:\njmp .L70\n.L117:\n.LBB54:\nnop\n.LBE54:\n.LBB55:\nmovq -48(%rbp),%rax\nsubq $1,%rax\nmovq -552(%rbp),%rdx\ntestq %rax,%rax\njs .L71\ncmpq %rdx,%rax\njl .L104\n.L71:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L104:\nmovq -560(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L73\ncmpq %rax,-56(%rbp)\njl .L105\n.L73:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L105:\nmovq -552(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L75\ncmpq %rax,-48(%rbp)\njl .L106\n.L75:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L106:\nmovq -560(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-192(%rbp)\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq -200(%rbp),%rdx\ntestq %rax,%rax\njs .L77\ncmpq %rdx,%rax\njge .L77\nmovq -208(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -240(%rbp),%rcx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.Solution.Min>\nmovq %rax,%rsi\nmovq -552(%rbp),%rax\ncmpq $0,-48(%rbp)\njns .L78\njmp .L79\n.L77:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L78:\ncmpq %rax,-48(%rbp)\njl .L107\n.L79:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L107:\nmovq -560(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L81\ncmpq %rax,-56(%rbp)\njl .L108\n.L81:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L108:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L83\ncmpq %rax,-48(%rbp)\njl .L109\n.L83:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L109:\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L85\ncmpq %rax,-56(%rbp)\njge .L85\nmovq -144(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -176(%rbp),%rcx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\naddq %rsi,%rdx\nmovq %rdx,(%rax)\n.LBE55:\n.LBB56:\naddq $1,-56(%rbp)\njmp .L70\n.L85:\n.LBE56:\n.LBB57:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L70:\n.LBE57:\nmovq -56(%rbp),%rax\ncmpq -80(%rbp),%rax\njl .L117\n.LBE53:\n.LBE52:\n.LBE51:\n.LBB58:\naddq $1,-48(%rbp)\n.L69:\n.LBE58:\nmovq -48(%rbp),%rax\ncmpq -72(%rbp),%rax\njl .L118\n.LBE49:\n.LBE48:\n.LBB59:\nmovq -72(%rbp),%rax\nsubq $1,%rax\nmovq -552(%rbp),%rdx\ntestq %rax,%rax\njs .L90\ncmpq %rdx,%rax\njl .L112\n.L90:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L112:\nmovq -560(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-96(%rbp)\nmovq -80(%rbp),%rax\nsubq $1,%rax\nmovq -104(%rbp),%rdx\ntestq %rax,%rax\njs .L92\ncmpq %rdx,%rax\njge .L92\nmovq -112(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\njmp .L113\n.L92:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L113:\n.LBE59:\n.LBE30:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "row := len(grid)\ncol := len(grid[0])\ndp := make([][]int, row)\nfor i := 0; i < row; i++ {\n\tdp[i] = make([]int, col)\n}\ndp[0][0] = grid[0][0]\nfor i := 1; i < row; i++ {\n\tdp[i][0] = dp[i-1][0] + grid[i][0]\n}\nfor i := 1; i < col; i++ {\n\tdp[0][i] = dp[0][i-1] + grid[0][i]\n}\nfor i := 1; i < row; i++ {\n\tfor j := 1; j < col; j++ {\n\t\tdp[i][j] = Min(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n\t}\n}\nreturn dp[row-1][col-1]"}
{"src": "cmpq %fs:112,%rsp\njnb .L6\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L6:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-160(%rbp)\nmovq %rdi,-152(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <string..d>(%rip),%rcx\nleaq <go..C6>(%rip),%rbx\nmovq %rcx,-112(%rbp)\nmovq %rbx,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nmovq -160(%rbp),%rax\ntestq %rax,%rax\njne .L4\nmovl $0,%eax\njmp .L5\n.L4:\nmovq -160(%rbp),%rax\nmovq (%rax),%rax\n.L5:\nmovq %rax,%rsi\nleaq <io.Writer..d>(%rip),%rdi\ncall <runtime.requireitab@PLT>\nmovq %rax,%r12\nmovq -152(%rbp),%rax\nmovq %rax,%r13\nleaq -64(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Fprint@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "fmt.Fprint(w, \"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L34\nmovl $232,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L34:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $216,%rsp\nmovq %rdi,-216(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-24(%rbp)\ncmpq $-1,-24(%rbp)\njne .L2\nmovl $0,%eax\njmp .L3\n.L2:\ncmpq $0,-24(%rbp)\njne .L4\ncall <runtime.panicdivide@PLT>\n.L4:\nmovq -216(%rbp),%rax\ncqto\nidivq -24(%rbp)\nmovq %rdx,%rax\n.L3:\nmovq %rax,-216(%rbp)\nmovq -24(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-208(%rbp)\nmovq %rbx,-200(%rbp)\nmovq %rbx,-192(%rbp)\nmovq -200(%rbp),%rax\nmovq <24>(%rbp),%rdx\ncmpq %rax,%rdx\ncmovle %rdx,%rax\nleaq <0>(,%rax,8),%rdx\nmovq <16>(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memmove@PLT>\n.LBB2:\nmovq $0,-32(%rbp)\nmovq $0,-40(%rbp)\n.LBB3:\nmovq -24(%rbp),%rax\nsubq -216(%rbp),%rax\nmovq -192(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njle .L26\n.L5:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L26:\nmovq -208(%rbp),%rcx\nmovq -192(%rbp),%rdx\ncmpq %rdx,%rax\nje .L7\nmovq %rax,%rdx\nsalq $3,%rdx\njmp .L8\n.L7:\nmovl $0,%edx\n.L8:\naddq %rcx,%rdx\nmovq %rdx,-176(%rbp)\nmovq -200(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-160(%rbp)\n.LBB4:\n.LBB5:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rcx\nmovl $0,%eax\n.LBE5:\njmp .L9\n.L32:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -136(%rbp),%rdx\ntestq %rax,%rax\njs .L10\ncmpq %rdx,%rax\njge .L10\nmovq -144(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE8:\n.LBB9:\nmovq %rax,-32(%rbp)\nmovq %rdx,-40(%rbp)\n.LBE9:\n.LBB10:\nmovq <24>(%rbp),%rdx\ncmpq $0,-32(%rbp)\njns .L11\njmp .L12\n.L10:\n.LBE10:\n.LBB11:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE11:\n.LBB12:\ncmpq %rdx,-32(%rbp)\njl .L27\n.L12:\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq <16>(%rbp),%rsi\nmovq -32(%rbp),%rdx\nsalq $3,%rdx\naddq %rdx,%rsi\nmovq -40(%rbp),%rdx\nmovq %rdx,(%rsi)\n.LBE12:\n.LBE7:\n.LBB13:\naddq $1,%rax\n.L9:\n.LBE13:\ncmpq %rcx,%rax\njl .L32\n.LBE4:\n.LBE3:\n.LBE2:\n.LBB14:\nmovq $0,-48(%rbp)\nmovq $0,-56(%rbp)\n.LBB15:\nmovq -24(%rbp),%rax\nsubq -216(%rbp),%rax\nmovq %rax,%rdi\nmovq -192(%rbp),%rax\ntestq %rdi,%rdi\njs .L16\ncmpq %rax,%rdi\njg .L16\ntestq %rdi,%rdi\njns .L17\njmp .L29\n.L16:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L29:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L17:\nmovq -208(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq %rdi,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-96(%rbp)\n.LBB16:\n.LBB17:\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rsi\nmovl $0,%eax\n.LBE17:\njmp .L19\n.L33:\n.LBB18:\nnop\n.LBE18:\n.LBB19:\n.LBB20:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L20\ncmpq %rdx,%rax\njge .L20\nmovq -80(%rbp),%rdx\nmovq %rax,%rcx\nsalq $3,%rcx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\n.LBE20:\n.LBB21:\nmovq %rax,-48(%rbp)\nmovq %rdx,-56(%rbp)\n.LBE21:\n.LBB22:\nmovq -216(%rbp),%rcx\nmovq -48(%rbp),%rdx\naddq %rcx,%rdx\nmovq <24>(%rbp),%rcx\ntestq %rdx,%rdx\njns .L21\njmp .L22\n.L20:\n.LBE22:\n.LBB23:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\n.LBE23:\n.LBB24:\ncmpq %rcx,%rdx\njl .L30\n.L22:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq <16>(%rbp),%rcx\nsalq $3,%rdx\naddq %rdx,%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rcx)\n.LBE24:\n.LBE19:\n.LBB25:\naddq $1,%rax\n.L19:\n.LBE25:\ncmpq %rsi,%rax\njl .L33\n.LBE16:\n.LBE15:\n.LBE14:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "l := len(nums)\nk %= l\ns := make([]int, l)\ncopy(s, nums)\nfor i, v := range s[l-k:] {\n\tnums[i] = v\n}\nfor i, v := range s[:l-k] {\n\tnums[k+i] = v\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\ncmpq $0,-24(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\ncmpq $0,-32(%rbp)\nsete %al\n.L2:\n.LBE5:\n.LBE4:\ntestb %al,%al\nje .L3\n.LBB6:\n.LBB7:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\nsete %al\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L4\n.L3:\n.LBE7:\n.LBE6:\n.LBE3:\n.LBB8:\n.LBB9:\n.LBB10:\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.isSameTree>\ntestb %al,%al\nje .L5\n.LBB11:\nmovq -24(%rbp),%rax\nmovq (%rax),%rdx\nmovq -32(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L5:\n.LBE11:\n.LBE10:\ntestb %al,%al\nje .L6\n.LBB12:\nmovq -32(%rbp),%rax\nmovq <16>(%rax),%rdx\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.isSameTree>\n.L6:\n.LBE12:\n.LBE9:\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L4:\n.LBE8:\n.LBE2:\nleave\nret", "tgt": "if p == nil || q == nil {\n\treturn p == q\n}\nreturn isSameTree(p.Left, q.Left) && p.Val == q.Val && isSameTree(p.Right, q.Right)"}
{"src": "cmpq %fs:112,%rsp\njnb .L17\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L17:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-40(%rbp)\nmovl %esi,-44(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\n.LBB6:\n.LBB7:\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\n.LBB8:\njmp .L8\n.L16:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\n.LBB11:\nmovq -8(%rbp),%rax\nmovl (%rax),%eax\ncmpl %eax,-44(%rbp)\njne .L9\n.LBB12:\n.LBB13:\nleaq <type...1go.binaryTree.bstElement>(%rip),%rax\nmovq %rax,-32(%rbp)\nmovq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\njmp .L14\n.L9:\n.LBE13:\n.LBE12:\n.LBB14:\n.LBB15:\nmovq -8(%rbp),%rax\nmovl (%rax),%eax\ncmpl %eax,-44(%rbp)\njnb .L11\n.LBB16:\nmovq -8(%rbp),%rax\nmovq <32>(%rax),%rax\nmovq %rax,-8(%rbp)\n.LBE16:\njmp .L8\n.L11:\n.LBB17:\nmovq -8(%rbp),%rax\nmovq <40>(%rax),%rax\nmovq %rax,-8(%rbp)\n.L8:\n.LBE17:\n.LBE15:\n.LBE14:\n.LBE11:\n.LBE10:\ncmpq $0,-8(%rbp)\njne .L16\n.LBE8:\n.LBE7:\n.LBB18:\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\n.L14:\n.LBE18:\n.LBE6:\npopq %rbp\nret", "tgt": "for cur := t.root; cur != nil; {\n\tif cur.Key == key {\n\t\treturn cur\n\t} else if key < cur.Key {\n\t\tcur = cur.left\n\t} else {\n\t\tcur = cur.right\n\t}\n}\nreturn nil"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L43\nmovl $216,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L43:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $184,%rsp\nmovq %rdi,-200(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\n.LBB2:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq $0,-176(%rbp)\n.LBB3:\nmovq $0,-40(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r13\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L42:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -120(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-40(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\n.LBB13:\njmp .L4\n.L3:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB35:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\n.LBE35:\n.LBB36:\n.LBB21:\n.LBB20:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\nmovq -184(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -176(%rbp),%rax\ntestq %rdi,%rdi\njs .L5\ncmpq %rax,%rdi\njg .L5\ntestq %rdi,%rdi\njns .L6\njmp .L33\n.L5:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L33:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L6:\nmovq -192(%rbp),%rdx\nmovq -176(%rbp),%rax\nmovq %rdx,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq %rax,-176(%rbp)\n.L4:\n.LBE15:\n.LBB16:\n.LBB17:\nmovq -184(%rbp),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L8\n.LBB18:\nmovq -184(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L9\ncmpq %rdx,%rax\njl .L34\n.L9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq -192(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\nsetg %al\n.L8:\n.LBE18:\n.LBE17:\ntestb %al,%al\nje .L11\n.LBB19:\nmovq -184(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L12\ncmpq %rdx,%rax\njl .L35\n.L12:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq -192(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -40(%rbp),%rdx\nnegq %rdx\ncmpq %rdx,%rax\nsetl %al\n.L11:\n.LBE19:\n.LBE16:\ntestb %al,%al\njne .L41\n.LBE20:\n.LBE21:\n.LBB22:\n.LBB23:\n.LBB24:\nmovq -184(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L16\n.LBB25:\ncmpq $0,-40(%rbp)\nsetg %al\n.L16:\n.LBE25:\n.LBE24:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L17\n.LBB26:\nmovq -184(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L18\ncmpq %rdx,%rax\njl .L37\n.L18:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\nmovq -192(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nshrq $63,%rax\n.L17:\n.LBE26:\n.LBE23:\ntestb %al,%al\nje .L20\n.LBB27:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L21\n.LBB28:\nmovq -96(%rbp),%rsi\nleaq -64(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-176(%rbp)\n.LBE28:\njmp .L22\n.L21:\n.LBB29:\nmovq -96(%rbp),%rcx\nmovq -80(%rbp),%rdx\nmovq %rcx,-192(%rbp)\nmovq %rax,-184(%rbp)\nmovq %rdx,-176(%rbp)\n.L22:\n.LBE29:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -96(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE27:\njmp .L23\n.L20:\n.LBB30:\n.LBB31:\n.LBB32:\nmovq -40(%rbp),%rax\nshrq $63,%rax\ntestb %al,%al\nje .L24\n.LBB33:\nmovq -184(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L25\ncmpq %rdx,%rax\njl .L38\n.L25:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq -192(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -40(%rbp),%rdx\nnegq %rdx\ncmpq %rdx,%rax\nsete %al\n.L24:\n.LBE33:\n.LBE32:\ntestb %al,%al\nje .L23\n.LBB34:\nmovq -184(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -176(%rbp),%rax\ntestq %rdi,%rdi\njs .L27\ncmpq %rax,%rdi\njg .L27\ntestq %rdi,%rdi\njns .L28\njmp .L39\n.L27:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L39:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L28:\nmovq -192(%rbp),%rdx\nmovq -176(%rbp),%rax\nmovq %rdx,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq %rax,-176(%rbp)\n.L23:\n.LBE34:\n.LBE31:\n.LBE30:\n.LBE22:\n.LBE36:\n.LBE8:\n.LBB37:\naddq $1,%rbx\n.L2:\n.LBE37:\ncmpq %r13,%rbx\njl .L42\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB38:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -200(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE38:\n.LBE2:\nmovq -200(%rbp),%rax\naddq $184,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "s := []int{}\nfor _, asteroid := range asteroids {\n\tfor len(s) != 0 && s[len(s)-1] > 0 && s[len(s)-1] < -asteroid {\n\t\ts = s[:len(s)-1]\n\t}\n\tif len(s) == 0 || asteroid > 0 || s[len(s)-1] < 0 {\n\t\ts = append(s, asteroid)\n\t} else if asteroid < 0 && s[len(s)-1] == -asteroid {\n\t\ts = s[:len(s)-1]\n\t}\n}\nreturn s"}
{"src": ".LFB0:\nleaq -328(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L23\nmovl $328,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $280,%rsp\nmovq $0,-56(%rbp)\nmovq $5,-64(%rbp)\nmovq $1901,-72(%rbp)\nmovb $0,-73(%rbp)\n.LBB2:\n.LBB3:\njmp .L2\n.L22:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq <main.month_len>(%rip),%rax\nmovq <8+main.month_len>(%rip),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16+main.month_len>(%rip),%rax\nmovq %rax,-288(%rbp)\n.LBB6:\ncmpb $0,-73(%rbp)\nje .L3\n.LBB7:\nmovq <main.leap_len>(%rip),%rax\nmovq <8+main.leap_len>(%rip),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16+main.leap_len>(%rip),%rax\nmovq %rax,-288(%rbp)\n.L3:\n.LBE7:\n.LBE6:\nmovq -64(%rbp),%rax\nmovq %rax,-88(%rbp)\n.LBB8:\nmovq $0,-96(%rbp)\n.LBB9:\n.LBB10:\n.LBB11:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%rcx\nmovl $0,%eax\n.LBE11:\njmp .L4\n.L21:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\n.LBB14:\nmovq -264(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njge .L5\nmovq -272(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE14:\n.LBB15:\nmovq %rdx,-96(%rbp)\n.LBE15:\n.LBB16:\n.LBB17:\ncmpq $0,-88(%rbp)\nje .L6\njmp .L7\n.L5:\n.LBE17:\n.LBE16:\n.LBB25:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE25:\n.LBB26:\n.LBB19:\n.LBB18:\naddq $1,-56(%rbp)\n.L7:\n.LBE18:\n.LBE19:\n.LBB20:\nmovq -88(%rbp),%rdx\ncmpq -96(%rbp),%rdx\njl .L20\n.LBE20:\n.LBB22:\nmovq -88(%rbp),%rdx\ncmpq -96(%rbp),%rdx\njl .L10\n.LBB23:\nmovq -96(%rbp),%rdx\nsubq %rdx,-88(%rbp)\n.L10:\n.LBE23:\n.LBE22:\n.LBE26:\n.LBE13:\n.LBB28:\naddq $1,%rax\n.L4:\n.LBE28:\ncmpq %rcx,%rax\njl .L21\njmp .L9\n.L20:\n.LBB29:\n.LBB27:\n.LBB24:\n.LBB21:\nnop\n.L9:\n.LBE21:\n.LBE24:\n.LBE27:\n.LBE29:\n.LBE10:\n.LBE9:\n.LBE8:\naddq $7,-64(%rbp)\n.LBB30:\n.LBB31:\nmovzbl -73(%rbp),%eax\ntestb %al,%al\nje .L12\n.LBB32:\ncmpq $365,-64(%rbp)\nsetg %al\n.L12:\n.LBE32:\n.LBE31:\ntestb %al,%al\nje .L13\n.LBB33:\naddq $1,-72(%rbp)\nmovq -64(%rbp),%rcx\nmovabsq $3225660165894566403,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $6,%rax\nmovq %rcx,%rdx\nsarq $63,%rdx\nsubq %rdx,%rax\nimulq $366,%rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\nmovq %rax,-64(%rbp)\nmovb $0,-73(%rbp)\n.LBE33:\njmp .L2\n.L13:\n.LBB34:\n.LBB35:\n.LBB36:\nmovzbl -73(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L15\n.LBB37:\ncmpq $364,-64(%rbp)\nsetg %al\n.L15:\n.LBE37:\n.LBE36:\ntestb %al,%al\nje .L2\n.LBB38:\naddq $1,-72(%rbp)\nmovq -64(%rbp),%rcx\nmovabsq $3234497591006606311,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $6,%rax\nmovq %rcx,%rsi\nsarq $63,%rsi\nsubq %rsi,%rax\nmovq %rax,%rdx\nmovq %rdx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nleaq <0>(,%rax,4),%rdx\naddq %rdx,%rax\nsubq %rax,%rcx\nmovq %rcx,%rdx\nmovq %rdx,-64(%rbp)\n.LBB39:\nmovq -72(%rbp),%rax\nandl $3,%eax\ntestq %rax,%rax\njne .L2\n.LBB40:\nmovb $1,-73(%rbp)\n.L2:\n.LBE40:\n.LBE39:\n.LBE38:\n.LBE35:\n.LBE34:\n.LBE30:\n.LBE5:\ncmpq $2000,-72(%rbp)\njle .L22\n.LBE3:\n.LBE2:\nleaq <int..d>(%rip),%rax\nmovq %rax,-320(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-208(%rbp)\nmovq -208(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -208(%rbp),%rax\nmovq %rax,-312(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -200(%rbp),%rax\nmovq %rax,%r15\nmovdqa -320(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nmovq %r14,-176(%rbp)\nmovq %r15,-168(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $2,-152(%rbp)\nmovq $2,-144(%rbp)\nleaq <.LC14>(%rip),%r12\nmovl $26,%r13d\nleaq -128(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "sum := 0\nsunday := 5\nyear := 1901\nis_leap := false\nfor year < 2001 {\n\tchecker := month_len\n\tif is_leap {\n\t\tchecker = leap_len\n\t}\n\ttally := sunday\n\tfor _, v := range checker {\n\t\tif tally == 0 {\n\t\t\tsum += 1\n\t\t}\n\t\tif tally < v {\n\t\t\tbreak\n\t\t}\n\t\tif tally >= v {\n\t\t\ttally -= v\n\t\t}\n\t}\n\tsunday += 7\n\tif is_leap && sunday >= 366 {\n\t\tyear++\n\t\tsunday = sunday % 366\n\t\tis_leap = false\n\t} else if !is_leap && sunday >= 365 {\n\t\tyear++\n\t\tsunday = sunday % 365\n\t\tif year%4 == 0 {\n\t\t\tis_leap = true\n\t\t}\n\t}\n}\nfmt.Printf(\"STR\", year, sum)"}
{"src": ".LFB0:\nleaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $296,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $248,%rsp\nmovq $0,-56(%rbp)\nmovq $0,-64(%rbp)\n.LBB2:\nmovq $1,-72(%rbp)\n.LBB3:\njmp .L2\n.L7:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq -72(%rbp),%rax\nmovq %rax,%rdi\ncall <main.collatz>\nmovq %rax,-80(%rbp)\n.LBB6:\nmovq -80(%rbp),%rax\ncmpq -56(%rbp),%rax\njle .L3\n.LBB7:\nmovq -80(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-64(%rbp)\n.L3:\n.LBE7:\n.LBE6:\n.LBE5:\n.LBB8:\naddq $1,-72(%rbp)\n.L2:\n.LBE8:\ncmpq $999999,-72(%rbp)\njle .L7\n.LBE3:\n.LBE2:\nleaq <string..d>(%rip),%r14\nleaq <go..C6>(%rip),%r15\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-288(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-224(%rbp)\nmovq -224(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -224(%rbp),%rax\nmovq %rax,-280(%rbp)\nleaq <string..d>(%rip),%r12\nleaq <go..C12>(%rip),%r13\nmovq %rbx,-272(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -216(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -216(%rbp),%rax\nmovq %rax,-264(%rbp)\nmovq %r14,-208(%rbp)\nmovq %r15,-200(%rbp)\nmovdqa -288(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nmovq %r12,-176(%rbp)\nmovq %r13,-168(%rbp)\nmovdqa -272(%rbp),%xmm1\nmovups %xmm1,-160(%rbp)\nleaq -208(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $4,-136(%rbp)\nmovq $4,-128(%rbp)\nleaq -112(%rbp),%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-240(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "max, winner := 0, 0\nfor i := 1; i < 1000000; i++ {\n\tterms := collatz(i)\n\tif terms > max {\n\t\tmax = terms\n\t\twinner = i\n\t}\n}\nfmt.Println(\"STR\", max, \"STR\", winner)"}
{"src": ".LFB1:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L20\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $328,%rsp\nmovq %rdi,-328(%rbp)\ncmpq $0,-328(%rbp)\njne .L12\ncall <runtime.panicmem@PLT>\n.L12:\nmovq -328(%rbp),%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-304(%rbp)\nmovq %rbx,-296(%rbp)\nmovq <16>(%rax),%rcx\nmovq <24>(%rax),%rbx\nmovq %rcx,-288(%rbp)\nmovq %rbx,-280(%rbp)\nmovq <32>(%rax),%rcx\nmovq <40>(%rax),%rbx\nmovq %rcx,-272(%rbp)\nmovq %rbx,-264(%rbp)\nmovq <48>(%rax),%rcx\nmovq <56>(%rax),%rbx\nmovq %rcx,-256(%rbp)\nmovq %rbx,-248(%rbp)\nmovq <64>(%rax),%rcx\nmovq <72>(%rax),%rbx\nmovq %rcx,-240(%rbp)\nmovq %rbx,-232(%rbp)\nmovq <80>(%rax),%rax\nmovq %rax,-224(%rbp)\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\n.LBB10:\n.LBB11:\nleaq <string..d>(%rip),%rax\nmovq %rax,-368(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB12:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE12:\njmp .L14\n.L13:\n.LBB13:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE13:\nmovq -216(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-352(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L15\n.LBB14:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE14:\njmp .L16\n.L15:\n.LBB15:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L16:\n.LBE15:\nmovq -184(%rbp),%rax\nmovq %rax,-344(%rbp)\nleaq <string..d>(%rip),%r14\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L17\n.LBB16:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE16:\njmp .L18\n.L17:\n.LBB17:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L18:\n.LBE17:\nmovq -152(%rbp),%rax\nmovq %rax,%r15\nmovdqa -368(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -352(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq -128(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC88>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <fmt.Sprintf@PLT>\naddq $32,%rsp\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\n.LBE11:\n.LBE10:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "return fmt.Sprintf(\"STR\", c.FirstName, c.LastName, c.Email)"}
{"src": "cmpq %fs:112,%rsp\njnb .L322\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL18:\nret\n.L322:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $56,%rsp\nmovq %rdi,-40(%rbp)\nmovq %rsi,-48(%rbp)\nmovq %rdx,-64(%rbp)\nmovq %rcx,-56(%rbp)\nmovq $0,-24(%rbp)\n.LBB277:\nmovq -40(%rbp),%rax\nmovq -48(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -40(%rbp),%rax\naddq $56,%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L314\n.LBB278:\nmovq -56(%rbp),%rdx\nmovq %rdx,<8>(%rax)\n.LBE278:\njmp .L315\n.L314:\n.LBB279:\nmovq -56(%rbp),%rdx\naddq $8,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L315:\n.LBE279:\ncall <runtime.makemap_small@PLT>\nmovq %rax,%rdx\nmovq -40(%rbp),%rax\naddq $48,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L316\n.LBB280:\nmovq %rdx,(%rax)\n.LBE280:\njmp .L317\n.L316:\n.LBB281:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L317:\n.LBE281:\n.LBB282:\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\ncmpq $1,%rax\njle .L318\n.LBB283:\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\naddq $1,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,<8>(%rax)\nmovq -40(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rax\nsubq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,<16>(%rax)\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rbx\nleaq <go.vEBTree..go.vEBTree.rsVEBTreeElement..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,%rdi\nmovq -40(%rbp),%rax\nmovq <64>(%rax),%rdx\nmovq <56>(%rax),%rax\nmovq %rdx,%rcx\nmovq %rax,%rdx\nmovq %rbx,%rsi\ncall <go.vEBTree.rsVEBTreeElement.init>\nmovq %rax,%rdx\nmovq -40(%rbp),%rax\naddq $40,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L319\n.LBB284:\nmovq %rdx,(%rax)\n.LBE284:\njmp .L320\n.L319:\n.LBB285:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L320\n.L318:\n.LBE285:\n.LBE283:\n.LBB286:\nmovq -40(%rbp),%rax\nmovq $0,<8>(%rax)\nmovq -40(%rbp),%rax\nmovq $0,<16>(%rax)\n.L320:\n.LBE286:\n.LBE282:\n.LBB287:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE287:\n.LBE277:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "e.lgu = lgu\ne.mixin = mixin\ne.cluster = make(map[interface{}]*rsVEBTreeElement)\nif e.lgu > 1 {\n\te.summaryLgu = (e.lgu + 1) / 2\n\te.clusterLgu = e.lgu - e.summaryLgu\n\te.summary = new(rsVEBTreeElement).init(e.summaryLgu, e.mixin)\n} else {\n\te.summaryLgu = 0\n\te.clusterLgu = 0\n}\nreturn e"}
{"src": ".LFB8:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $24,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <go.day352.checkHorizontal>\naddq $32,%rsp\nmovb %al,-2(%rbp)\nmovzbl -2(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L2\n.LBB4:\n.LBB5:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <go.day352.checkVertical>\naddq $32,%rsp\nmovb %al,-3(%rbp)\nmovzbl -3(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L4\n.LBB7:\n.LBB8:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L4:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB9:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <go.day352.checkReachable>\naddq $32,%rsp\nmovb %al,-4(%rbp)\nmovzbl -4(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L5\n.LBB10:\n.LBB11:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L5:\n.LBE11:\n.LBE10:\n.LBE9:\n.LBB12:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <go.day352.checkRotationallySymmetric>\naddq $32,%rsp\nmovb %al,-5(%rbp)\nmovzbl -5(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L6\n.LBB13:\n.LBB14:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L6:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBB15:\nmovb $1,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L3:\n.LBE15:\n.LBE2:\nleave\nret", "tgt": "if isValid := checkHorizontal(puzzle); !isValid {\n\treturn false\n}\nif isValid := checkVertical(puzzle); !isValid {\n\treturn false\n}\nif isValid := checkReachable(puzzle); !isValid {\n\treturn false\n}\nif isValid := checkRotationallySymmetric(puzzle); !isValid {\n\treturn false\n}\nreturn true"}
{"src": "cmpq %fs:112,%rsp\njnb .L43\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L43:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $40,%rsp\nmovq %rdi,-56(%rbp)\nleaq <.LC37>(%rip),%rax\nmovl $5,%edx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nleaq <go.Solution.BenchmarkSolution..func1..f>(%rip),%rcx\nmovq %rax,%rdi\ncall <testing.B.Run@PLT>\nleaq <.LC38>(%rip),%rax\nmovq %rax,-80(%rbp)\nmovq $5,-72(%rbp)\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nleaq <go.Solution.BenchmarkSolution..func2..f>(%rip),%rcx\nmovq %rax,%rdi\ncall <testing.B.Run@PLT>\nleaq <.LC39>(%rip),%r14\nmovl $5,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nleaq <go.Solution.BenchmarkSolution..func3..f>(%rip),%rcx\nmovq %rax,%rdi\ncall <testing.B.Run@PLT>\nleaq <.LC40>(%rip),%r12\nmovl $5,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nleaq <go.Solution.BenchmarkSolution..func4..f>(%rip),%rcx\nmovq %rax,%rdi\ncall <testing.B.Run@PLT>\naddq $40,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "b.Run(\"STR\", func(b *testing.B) {\n\tb.ResetTimer()\n\tgot := multiply(\"STR\", \"STR\")\n\twant := \"STR\"\n\tif got != want {\n\t\tb.Error(\"STR\")\n\t}\n})\nb.Run(\"STR\", func(b *testing.B) {\n\tb.ResetTimer()\n\tgot := multiply(\"STR\", \"STR\")\n\twant := \"STR\"\n\tif got != want {\n\t\tb.Error(\"STR\")\n\t}\n})\nb.Run(\"STR\", func(b *testing.B) {\n\tb.ResetTimer()\n\tgot := multiply(\"STR\", \"STR\")\n\twant := \"STR\"\n\tif got != want {\n\t\tb.Error(\"STR\")\n\t}\n})\nb.Run(\"STR\", func(b *testing.B) {\n\tb.ResetTimer()\n\tgot := multiply(\"STR\", \"STR\")\n\twant := \"STR\"\n\tif got != want {\n\t\tb.Error(\"STR\")\n\t}\n})"}
{"src": ".LFB2:\nleaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L43\nmovl $456,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L43:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $408,%rsp\nmovq %rdi,-360(%rbp)\nmovq -360(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB29:\nmovq $0,-56(%rbp)\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\n.LBB30:\n.LBB31:\n.LBB32:\nmovq <go.day452.testcases>(%rip),%rax\nmovq <8+go.day452.testcases>(%rip),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16+go.day452.testcases>(%rip),%rax\nmovq %rax,-272(%rbp)\nmovq -280(%rbp),%r13\nmovl $0,%r12d\n.LBE32:\njmp .L29\n.L42:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\n.LBB35:\nmovq -280(%rbp),%rax\ntestq %r12,%r12\njs .L30\ncmpq %rax,%r12\njge .L30\nmovq -288(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-304(%rbp)\n.LBE35:\n.LBB36:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq %r12,-56(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-336(%rbp)\n.LBE36:\n.LBB37:\n.LBB38:\nmovq -344(%rbp),%rdx\nmovq -352(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day452.SumRevLLNum>\nmovq %rax,-64(%rbp)\nmovq -336(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day452.equal>\nxorl $1,%eax\ntestb %al,%al\njne .L31\njmp .L32\n.L30:\n.LBE38:\n.LBE37:\n.LBB47:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\n.LBE47:\n.LBB48:\n.LBB46:\n.LBB39:\nmovq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <go.day452.String>\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,%rdi\ncall <go.day452.String>\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-416(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-224(%rbp)\nmovq -224(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -224(%rbp),%rax\nmovq %rax,-408(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovdqa -448(%rbp),%xmm0\nmovups %xmm0,-208(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L33\n.LBB40:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE40:\njmp .L34\n.L33:\n.LBB41:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L34:\n.LBE41:\nmovq -216(%rbp),%rax\nmovq %rax,-392(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-384(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovdqa -432(%rbp),%xmm1\nmovups %xmm1,-176(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L35\n.LBB42:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE42:\njmp .L36\n.L35:\n.LBB43:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L36:\n.LBE43:\nmovq -184(%rbp),%rax\nmovq %rax,-376(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -416(%rbp),%xmm2\nmovups %xmm2,-144(%rbp)\nmovdqa -400(%rbp),%xmm3\nmovups %xmm3,-128(%rbp)\nmovdqa -384(%rbp),%xmm4\nmovups %xmm4,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L37\n.LBB44:\nmovq -152(%rbp),%rax\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE44:\njmp .L38\n.L37:\n.LBB45:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L38:\n.LBE45:\nmovq -152(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq $3,-80(%rbp)\nleaq <.LC19>(%rip),%r14\nmovl $50,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -360(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L32:\n.LBE39:\n.LBE46:\n.LBE48:\n.LBE34:\n.LBB49:\naddq $1,%r12\n.L29:\n.LBE49:\ncmpq %r13,%r12\njl .L42\n.LBE31:\n.LBE30:\n.LBE29:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor tcid, tc := range testcases {\n\tif result := SumRevLLNum(tc.first, tc.second); !equal(result, tc.sum) {\n\t\tt.Errorf(\"STR\",\n\t\t\ttcid, String(result), String(tc.sum))\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L1528\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL160:\nret\n.L1528:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $184,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nleaq <.LC248>(%rip),%rax\nmovl $7,%edx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovl $123,%ebx\nleaq <go.structs.TestHasZero_OmitNested.go.structs.B..i1..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq %rbx,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1523\n.LBB1551:\nmovq -168(%rbp),%rax\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -128(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.LBE1551:\njmp .L1524\n.L1523:\n.LBB1552:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.structs.TestHasZero_OmitNested.go.structs.B..i1..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1524:\n.LBE1552:\nmovq -168(%rbp),%rax\nmovq %rax,-56(%rbp)\nleaq <type...1go.structs.TestHasZero_OmitNested.B..i1>(%rip),%r12\nmovq -56(%rbp),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.structs.HasZero>\nmovb %al,-57(%rbp)\n.LBB1553:\ncmpb $0,-57(%rbp)\nje .L1522\n.LBB1554:\nleaq <string..d>(%rip),%r14\nleaq <go..C1046>(%rip),%r15\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1526\n.LBB1555:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1555:\njmp .L1527\n.L1526:\n.LBB1556:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1527:\n.LBE1556:\nmovq -120(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nmovq -216(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Error..stub@PLT>\naddq $32,%rsp\n.L1522:\n.LBE1554:\n.LBE1553:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "type A struct {\n\tName string\n\tD    string\n}\na := A{Name: \"STR\"}\ntype B struct {\n\tAA `structs:\"STR\"`\n\tC  int\n}\nb := &B{A: a, C: 123}\nok := HasZero(b)\nif ok {\n\tt.Error(\"STR\")\n}"}
{"src": ".LFB0:\nleaq -440(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L2\nmovl $440,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $392,%rsp\nmovq %rdi,-424(%rbp)\nmovq $1,-352(%rbp)\nmovq $1,-344(%rbp)\nmovq $2,-336(%rbp)\nmovq $2,-328(%rbp)\nmovq $3,-320(%rbp)\nmovq $3,-312(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq $6,-376(%rbp)\nmovq $6,-368(%rbp)\nsubq $8,%rsp\npushq -368(%rbp)\npushq -376(%rbp)\npushq -384(%rbp)\ncall <go.problem575.distributeCandies>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -280(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-272(%rbp)\nmovq %r15,-264(%rbp)\nleaq -272(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nleaq -144(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $1,-256(%rbp)\nmovq $1,-248(%rbp)\nmovq $2,-240(%rbp)\nmovq $3,-232(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq $4,-408(%rbp)\nmovq $4,-400(%rbp)\nsubq $8,%rsp\npushq -400(%rbp)\npushq -408(%rbp)\npushq -416(%rbp)\ncall <go.problem575.distributeCandies>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -200(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-192(%rbp)\nmovq %r13,-184(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-208(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "nums := []int{1, 1, 2, 2, 3, 3}\nfmt.Println(distributeCandies(nums))\nnums2 := []int{1, 1, 2, 3}\nfmt.Println(distributeCandies(nums2))"}
{"src": "cmpq %fs:112,%rsp\njnb .L93\nmovl $120,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L93:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-104(%rbp)\nmovq -104(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-32(%rbp)\n.LBB49:\n.LBB50:\njmp .L76\n.L92:\n.LBB51:\nnop\n.LBE51:\n.LBB52:\n.LBB53:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -24(%rbp),%rdx\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -32(%rbp),%rax\nmovq <24>(%rbp),%rcx\ncmpq $0,-32(%rbp)\njs .L77\ncmpq %rcx,-32(%rbp)\njl .L87\n.L77:\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L87:\nmovq <16>(%rbp),%rsi\nmovq -32(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq <24>(%rbp),%rcx\ncmpq $0,-24(%rbp)\njs .L79\ncmpq %rcx,-24(%rbp)\njl .L88\n.L79:\nmovq -24(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L88:\nmovq <16>(%rbp),%rsi\nmovq -24(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -88(%rbp),%rcx\ntestq %rdx,%rdx\njs .L81\ncmpq %rcx,%rdx\njl .L89\n.L81:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L89:\nmovq -96(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq %rdi,(%rdx)\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L83\ncmpq %rdx,%rax\njl .L90\n.L83:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L90:\nmovq -64(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE53:\naddq $1,-24(%rbp)\nsubq $1,-32(%rbp)\n.L76:\n.LBE52:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\njl .L92\n.LBE50:\n.LBE49:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "i, j := start, len(nums)-1\nfor i < j {\n\tnums[i], nums[j] = nums[j], nums[i]\n\ti++\n\tj--\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L10\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\nmovq $0,-16(%rbp)\n.LBB4:\njmp .L2\n.L9:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -40(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\nsete %al\nmovzbl %al,%edx\ncmpq $63,-16(%rbp)\nja .L3\nmovq -16(%rbp),%rax\nmovl %eax,%ecx\nsalq %cl,%rdx\nmovq %rdx,%rax\njmp .L4\n.L3:\nmovl $0,%eax\n.L4:\norq %rax,-8(%rbp)\naddq $1,-16(%rbp)\n.LBE6:\n.LBB7:\nsarq -40(%rbp)\n.L2:\n.LBE7:\ncmpq $0,-40(%rbp)\njne .L9\n.LBE4:\n.LBE3:\n.LBB8:\nmovq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE8:\n.LBE2:\npopq %rbp\nret", "tgt": "var val int\nfor n := uint(0); num != 0; num >>= 1 {\n\tval |= (1 - (num & 1)) << n\n\tn++\n}\nreturn val"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L19\nmovl $168,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-152(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq %rbx,-128(%rbp)\nmovq $0,-24(%rbp)\nmovq $1,-32(%rbp)\n.LBB3:\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rcx\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L18:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njge .L3\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE9:\n.LBB10:\nmovq %rdx,-48(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -48(%rbp),%rdx\nandl $1,%edx\ntestq %rdx,%rdx\nje .L4\njmp .L14\n.L3:\n.LBE12:\n.LBE11:\n.LBB16:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE16:\n.LBB17:\n.LBB15:\n.LBB13:\nmovq -136(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L6\ncmpq %rdx,-24(%rbp)\njl .L15\n.L6:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq -144(%rbp),%rsi\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rdx,%rsi\nmovq -48(%rbp),%rdx\nmovq %rdx,(%rsi)\naddq $2,-24(%rbp)\n.LBE13:\njmp .L8\n.L14:\n.LBB14:\nmovq -136(%rbp),%rdx\ncmpq $0,-32(%rbp)\njs .L9\ncmpq %rdx,-32(%rbp)\njl .L16\n.L9:\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\nmovq -144(%rbp),%rsi\nmovq -32(%rbp),%rdx\nsalq $3,%rdx\naddq %rdx,%rsi\nmovq -48(%rbp),%rdx\nmovq %rdx,(%rsi)\naddq $2,-32(%rbp)\n.L8:\n.LBE14:\n.LBE15:\n.LBE17:\n.LBE8:\n.LBB18:\naddq $1,%rax\n.L2:\n.LBE18:\ncmpq %rcx,%rax\njl .L18\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB19:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -152(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE19:\n.LBE2:\nmovq -152(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "size := len(A)\nres := make([]int, size)\neven, odd := 0, 1\nfor _, a := range A {\n\tif a%2 == 0 {\n\t\tres[even] = a\n\t\teven += 2\n\t} else {\n\t\tres[odd] = a\n\t\todd += 2\n\t}\n}\nreturn res"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L47\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L47:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB30:\n.LBB31:\njmp .L27\n.L44:\n.LBB32:\nnop\n.LBE32:\n.LBB33:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-8(%rbp)\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-16(%rbp)\n.L27:\n.LBE33:\n.LBB34:\ncmpq $0,-16(%rbp)\nsetne %al\ntestb %al,%al\nje .L28\n.LBB35:\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsetne %al\n.L28:\n.LBE35:\n.LBE34:\ntestb %al,%al\njne .L44\n.LBE31:\n.LBE30:\nmovq $0,-24(%rbp)\n.LBB36:\n.LBB37:\njmp .L31\n.L45:\n.LBB38:\nnop\n.LBE38:\n.LBB39:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-56(%rbp)\nmovq -8(%rbp),%rax\naddq $8,%rax\nmovq -24(%rbp),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L32\n.LBB40:\nmovq %rdx,(%rax)\n.LBE40:\njmp .L33\n.L32:\n.LBB41:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L33:\n.LBE41:\n.LBB42:\nmovq -8(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,-24(%rbp)\nmovq %rax,-8(%rbp)\n.L31:\n.LBE42:\n.LBE39:\ncmpq $0,-8(%rbp)\njne .L45\n.LBE37:\n.LBE36:\n.LBB43:\nmovq -72(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB44:\njmp .L36\n.L46:\n.LBB45:\nnop\n.LBE45:\n.LBB46:\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-48(%rbp)\nmovq -32(%rbp),%rax\naddq $8,%rax\nmovq -40(%rbp),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L37\n.LBB47:\nmovq %rdx,(%rax)\n.LBE47:\njmp .L38\n.L37:\n.LBB48:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L38:\n.LBE48:\nmovq -48(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBE46:\n.LBB49:\n.LBB50:\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rax\nmovq %rdx,-32(%rbp)\nmovq %rax,-40(%rbp)\n.L36:\n.LBE50:\n.LBE49:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njne .L46\n.LBE44:\n.LBE43:\nleave\nret", "tgt": "slow, fast := head, head\nfor fast != nil && fast.Next != nil {\n\tslow = slow.Next\n\tfast = fast.Next.Next\n}\nvar prev *ListNode\nfor slow != nil {\n\tnext := slow.Next\n\tslow.Next = prev\n\tprev, slow = slow, next\n}\nfor p, q := head, prev; p != q; p, q = q, p {\n\tnext := p.Next\n\tp.Next = q\n\tp = next\n}"}
{"src": ".LFB0:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L29\nmovl $376,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $360,%rsp\nmovb $0,-41(%rbp)\n.LBB2:\n.LBB3:\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\n.LBB4:\nmovq $0,-320(%rbp)\nmovq $1,-312(%rbp)\nmovq $2,-304(%rbp)\nmovq $3,-296(%rbp)\nmovq $4,-288(%rbp)\nmovq $5,-280(%rbp)\nmovq $6,-272(%rbp)\nmovq $7,-264(%rbp)\nmovq $8,-256(%rbp)\nmovq $9,-248(%rbp)\nleaq -320(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $10,-72(%rbp)\nmovq $10,-64(%rbp)\nleaq -240(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rax,%rdi\ncall <go.day361.perm6>\naddq $32,%rsp\n.LBB5:\n.LBB6:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rdi\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L28:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -200(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njge .L3\nmovq -208(%rbp),%rdx\nmovq %rax,%rcx\nsalq $4,%rcx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\n.LBE9:\n.LBB10:\nmovq %rcx,-336(%rbp)\nmovq %rbx,-328(%rbp)\n.LBE10:\n.LBB11:\nmovb $1,-17(%rbp)\n.LBB12:\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\n.LBB13:\n.LBB14:\n.LBB15:\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq <32>(%rbp),%rdx\nmovq %rdx,-128(%rbp)\nmovq -136(%rbp),%r8\nmovl $0,%edx\n.LBE15:\njmp .L4\n.L3:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB41:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\n.LBE41:\n.LBB42:\n.LBB37:\n.LBB36:\n.LBB35:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -136(%rbp),%rcx\ntestq %rdx,%rdx\njs .L5\ncmpq %rcx,%rdx\njge .L5\nmovq -144(%rbp),%rsi\nmovq %rdx,%r9\nmovq %r9,%rcx\naddq %rcx,%rcx\naddq %r9,%rcx\nsalq $3,%rcx\naddq %rcx,%rsi\nmovq (%rsi),%rcx\nmovq <8>(%rsi),%rbx\nmovq %rcx,-176(%rbp)\nmovq %rbx,-168(%rbp)\nmovq <16>(%rsi),%rcx\nmovq %rcx,-160(%rbp)\n.LBE18:\n.LBB19:\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,-112(%rbp)\nmovq %rbx,-104(%rbp)\nmovq -160(%rbp),%rcx\nmovq %rcx,-96(%rbp)\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,-368(%rbp)\nmovq %rbx,-360(%rbp)\nmovq -96(%rbp),%rcx\nmovq %rcx,-352(%rbp)\n.LBE19:\n.LBB20:\nmovq $0,-32(%rbp)\n.LBB21:\nmovq $0,-40(%rbp)\n.LBB22:\njmp .L6\n.L5:\n.LBE22:\n.LBE21:\n.LBE20:\n.LBB32:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\n.LBE32:\n.LBB33:\n.LBB29:\n.LBB28:\n.LBB23:\nnop\n.LBE23:\n.LBB24:\n.LBB25:\nmovq -328(%rbp),%rcx\ncmpq $0,-40(%rbp)\njs .L7\ncmpq %rcx,-40(%rbp)\njl .L21\n.L7:\nmovq -40(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rbx,%rsi\ncmpq $0,-40(%rbp)\njs .L9\ncmpq %rsi,-40(%rbp)\njl .L22\n.L9:\nmovq -40(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq -336(%rbp),%r9\nmovq -40(%rbp),%rsi\naddq %r9,%rsi\nmovzbl (%rsi),%esi\nmovq %rcx,%r9\nmovq -40(%rbp),%rcx\naddq %r9,%rcx\nmovzbl (%rcx),%ecx\ncmpb %cl,%sil\njne .L11\n.LBB26:\naddq $1,-32(%rbp)\n.L11:\n.LBE26:\n.LBE25:\n.LBE24:\n.LBB27:\naddq $1,-40(%rbp)\n.L6:\n.LBE27:\nmovq -328(%rbp),%rcx\ncmpq %rcx,-40(%rbp)\njl .L26\n.LBE28:\n.LBE29:\n.LBB30:\nmovq -352(%rbp),%rcx\ncmpq %rcx,-32(%rbp)\nje .L14\n.LBB31:\nmovb $0,-17(%rbp)\njmp .L15\n.L14:\n.LBE31:\n.LBE30:\n.LBE33:\n.LBE17:\n.LBB34:\naddq $1,%rdx\n.L4:\n.LBE34:\ncmpq %r8,%rdx\njl .L27\n.L15:\n.LBE35:\n.LBE36:\n.LBE37:\n.LBB38:\ncmpb $0,-17(%rbp)\nje .L17\n.LBB39:\n.LBB40:\nmovb $1,-41(%rbp)\nmovzbl -41(%rbp),%eax\njmp .L18\n.L17:\n.LBE40:\n.LBE39:\n.LBE38:\n.LBE42:\n.LBE8:\n.LBB43:\naddq $1,%rax\n.L2:\n.LBE43:\ncmpq %rdi,%rax\njl .L28\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB44:\nmovb $0,-41(%rbp)\nmovzbl -41(%rbp),%eax\n.L18:\n.LBE44:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "for _, p := range perm6([]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}) {\n\tvalid := true\n\tfor _, g := range guesses {\n\t\tvar count int\n\t\tfor i := 0; i < len(p); i++ {\n\t\t\tif p[i] == g.Code[i] {\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t\tif count != g.Score {\n\t\t\tvalid = false\n\t\t\tbreak\n\t\t}\n\t}\n\tif valid {\n\t\treturn true\n\t}\n}\nreturn false"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L35\nmovl $248,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L35:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $224,%rsp\nmovq %rdi,-232(%rbp)\n.LBB11:\nmovq $0,-24(%rbp)\n.LBB12:\njmp .L26\n.L34:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\n.LBB15:\nmovq -24(%rbp),%rcx\nmovabsq $7870610804782742023,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $7,%rax\nmovq %rcx,%rdx\nsarq $63,%rdx\nsubq %rdx,%rax\nimulq $300,%rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\ntestq %rax,%rax\njne .L27\n.LBB16:\nleaq -224(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.utils.GetArrayOfSize>\n.LBB17:\nmovq -216(%rbp),%rax\ncmpq %rax,-24(%rbp)\nje .L27\n.LBB18:\nleaq <type...6.7int>(%rip),%r12\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L29\n.LBB19:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE19:\njmp .L30\n.L29:\n.LBB20:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L30:\n.LBE20:\nmovq -168(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-128(%rbp)\nmovq %r13,-120(%rbp)\nleaq -128(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\nmovq -232(%rbp),%rax\nsubq $8,%rsp\npushq -32(%rbp)\npushq -40(%rbp)\npushq -48(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Error..stub@PLT>\naddq $32,%rsp\n.L27:\n.LBE18:\n.LBE17:\n.LBE16:\n.LBE15:\n.LBE14:\n.LBB21:\naddq $1,-24(%rbp)\n.L26:\n.LBE21:\ncmpq $99999,-24(%rbp)\njle .L34\n.LBE12:\n.LBE11:\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "for i := 0; i < 100000; i++ {\n\tif i%300 == 0 {\n\t\tarray := GetArrayOfSize(i)\n\t\tif len(array) != i {\n\t\t\tfmt.Println(array)\n\t\t\tt.Error()\n\t\t}\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L55\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L55:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $64,%rsp\nmovq %rdi,-56(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovb $0,-25(%rbp)\n.LBB41:\nmovq -56(%rbp),%rax\nmovq %rax,-24(%rbp)\n.LBB42:\nmovl $0,-32(%rbp)\n.LBB43:\n.LBB44:\n.LBB45:\nmovq -72(%rbp),%r12\nmovl $0,%ebx\n.LBE45:\njmp .L41\n.L54:\n.LBB46:\nnop\n.LBE46:\n.LBB47:\n.LBB48:\nmovq -72(%rbp),%rax\ntestq %rbx,%rbx\njs .L42\ncmpq %rax,%rbx\njge .L42\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L43\njmp .L51\n.L42:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\n.LBB49:\naddq $1,%rbx\n.LBE49:\njmp .L45\n.L51:\n.LBB50:\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovl %ecx,%eax\n.L45:\n.LBE50:\n.LBE48:\n.LBB51:\nmovl %eax,-32(%rbp)\n.LBE51:\n.LBB52:\n.LBB53:\nmovq $0,-40(%rbp)\nmovb $0,-41(%rbp)\n.LBB54:\nmovl -32(%rbp),%eax\nmovl %eax,-48(%rbp)\nleaq -48(%rbp),%rax\nmovl (%rax),%edx\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6int32.7.1go.Solution.Trie>(%rip),%rdi\ncall <runtime.mapaccess2_fast32@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq %rax,-40(%rbp)\nmovb %dl,-41(%rbp)\n.LBE54:\ncmpb $0,-41(%rbp)\nje .L46\n.LBB55:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\njmp .L41\n.L46:\n.LBE55:\n.LBE53:\n.LBB56:\nmovb $0,-25(%rbp)\nmovzbl -25(%rbp),%eax\njmp .L48\n.L41:\n.LBE56:\n.LBE52:\n.LBE47:\ncmpq %r12,%rbx\njl .L54\n.LBE44:\n.LBE43:\n.LBE42:\n.LBB57:\nmovb $1,-25(%rbp)\nmovzbl -25(%rbp),%eax\n.L48:\n.LBE57:\n.LBE41:\naddq $64,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "parent := this\nfor _, ch := range prefix {\n\tif child, ok := parent.Children[ch]; ok {\n\t\tparent = child\n\t\tcontinue\n\t}\n\treturn false\n}\nreturn true"}
{"src": "cmpq %fs:112,%rsp\njnb .L5\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq $0,-8(%rbp)\n.LBB2:\nmovq <go.bank.sema>(%rip),%rax\nleaq -16(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.chansend1@PLT>\nmovq <go.bank.balance>(%rip),%rax\nmovq %rax,-16(%rbp)\nmovq <go.bank.sema>(%rip),%rax\nleaq -16(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.chanrecv1@PLT>\n.LBB3:\nmovq -16(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "sema <- struct{}{}\nb := balance\n<-sema\nreturn b"}
{"src": ".LFB123:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L1897\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL128:\nret\n.L1897:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-264(%rbp)\nmovq $10,-240(%rbp)\nmovq $7,-232(%rbp)\nmovq $1000,-224(%rbp)\nmovq $983,-216(%rbp)\n.LBB1525:\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\n.LBB1526:\n.LBB1527:\n.LBB1528:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq $2,-272(%rbp)\nmovl $0,%ebx\n.LBE1528:\njmp .L1886\n.L1896:\n.LBB1529:\nnop\n.LBE1529:\n.LBB1530:\n.LBB1531:\ntestq %rbx,%rbx\njs .L1887\ncmpq $1,%rbx\njg .L1887\nmovq %rbx,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nsubq $160,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE1531:\n.LBB1532:\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBE1532:\n.LBB1533:\nmovq -256(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB1534:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <main.p26>\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\ncmpq -64(%rbp),%rax\nje .L1889\njmp .L1894\n.L1887:\n.LBE1534:\n.LBE1533:\n.LBB1539:\nmovl $2,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1894:\n.LBE1539:\n.LBB1540:\n.LBB1538:\n.LBB1535:\nleaq <int..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-288(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,-280(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovdqa -288(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1890\n.LBB1536:\nmovq -152(%rbp),%rax\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE1536:\njmp .L1891\n.L1890:\n.LBB1537:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1891:\n.LBE1537:\nmovq -152(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq $3,-80(%rbp)\nleaq <.LC98>(%rip),%r12\nmovl $26,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -264(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L1889:\n.LBE1535:\n.LBE1538:\n.LBE1540:\n.LBE1530:\n.LBB1541:\naddq $1,%rbx\n.L1886:\n.LBE1541:\ncmpq -272(%rbp),%rbx\njl .L1896\n.LBE1527:\n.LBE1526:\n.LBE1525:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "pairs := [...][2]int{{10, 7}, {1000, 983}}\nfor _, pair := range pairs {\n\tin, out := pair[0], pair[1]\n\tif x := p26(in); x != out {\n\t\tt.Errorf(\"STR\", in, x, out)\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L55\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L55:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-104(%rbp)\nmovq %rsi,-112(%rbp)\n.LBB39:\nmovq $0,-56(%rbp)\n.LBB40:\njmp .L36\n.L54:\n.LBB41:\nnop\n.LBE41:\n.LBB42:\n.LBB43:\ncmpq $0,-104(%rbp)\nje .L37\nmovq -104(%rbp),%rax\nmovq (%rax),%rax\njmp .L38\n.L37:\nmovl $0,%eax\n.L38:\ncmpq -56(%rbp),%rax\nje .L39\n.LBB44:\ncmpq $0,-104(%rbp)\nje .L40\nmovq -104(%rbp),%rax\nmovq (%rax),%rbx\njmp .L41\n.L40:\nmovl $0,%ebx\n.L41:\ncall <runtime.printlock@PLT>\nleaq <.LC99>(%rip),%rax\nmovq %rax,-144(%rbp)\nmovq $18,-136(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq %rbx,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nleaq <.LC100>(%rip),%rax\nmovq %rax,-128(%rbp)\nmovq $6,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\n.L39:\n.LBE44:\n.LBE43:\n.LBB45:\nmovq -56(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -56(%rbp),%rax\nimulq %rax,%rax\nmovq %rax,%rbx\nleaq -96(%rbp),%rax\nmovq (%rax),%rdx\nmovq -104(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %rbx,(%rax)\n.LBE45:\n.LBB46:\nmovq $0,-64(%rbp)\n.LBB47:\njmp .L42\n.L53:\n.LBB48:\nnop\n.LBE48:\n.LBB49:\n.LBB50:\nmovq $0,-72(%rbp)\nmovb $0,-73(%rbp)\n.LBB51:\nmovq -64(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq -88(%rbp),%rax\nmovq (%rax),%rdx\nmovq -104(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq %rax,-72(%rbp)\nmovb %dl,-73(%rbp)\n.LBE51:\n.LBB52:\nmovzbl -73(%rbp),%eax\nxorl $1,%eax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L43\n.LBB53:\nmovq -64(%rbp),%rax\nimulq %rax,%rax\ncmpq %rax,-72(%rbp)\nsetne %al\n.L43:\n.LBE53:\n.LBE52:\ntestb %al,%al\nje .L44\n.LBB54:\n.LBB55:\nmovzbl -73(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L45\n.LBB56:\ncall <runtime.printlock@PLT>\nleaq <.LC101>(%rip),%r14\nmovl $29,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\n.LBE56:\n.LBE55:\njmp .L35\n.L45:\n.LBB58:\n.LBB57:\ncall <runtime.printlock@PLT>\nleaq <.LC102>(%rip),%r12\nmovl $44,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printsp@PLT>\nmovq -72(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\n.LBE57:\n.LBE58:\njmp .L35\n.L44:\n.LBE54:\n.LBE50:\n.LBE49:\n.LBB59:\naddq $1,-64(%rbp)\n.L42:\n.LBE59:\nmovq -64(%rbp),%rax\ncmpq -56(%rbp),%rax\njle .L53\n.LBE47:\n.LBE46:\n.LBE42:\n.LBB60:\naddq $1,-56(%rbp)\n.L36:\n.LBE60:\nmovq -56(%rbp),%rax\ncmpq -112(%rbp),%rax\njl .L54\n.L35:\n.LBE40:\n.LBE39:\naddq $104,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "for i := 0; i < n; i++ {\n\tif len(squares) != i {\n\t\tprintln(\"STR\", len(squares), \"STR\", i)\n\t}\n\tsquares[i] = i * i\n\tfor j := 0; j <= i; j++ {\n\t\tif v, ok := squares[j]; !ok || v != j*j {\n\t\t\tif !ok {\n\t\t\t\tprintln(\"STR\", j)\n\t\t\t} else {\n\t\t\t\tprintln(\"STR\", j, v)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L93\nmovl $168,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L93:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $120,%rsp\nmovq %rdi,-152(%rbp)\nmovq $0,-56(%rbp)\n.LBB71:\n.LBB72:\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\n.LBB73:\n.LBB74:\n.LBB75:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r12\nmovl $0,%ebx\n.LBE75:\njmp .L80\n.L91:\n.LBB76:\nnop\n.LBE76:\n.LBB77:\n.LBB78:\nmovq -104(%rbp),%rax\ntestq %rbx,%rbx\njs .L81\ncmpq %rax,%rbx\njge .L81\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE78:\n.LBB79:\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\n.LBE79:\n.LBB80:\n.LBB81:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovl $0,%r13d\nmovq -152(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %r13,(%rax)\n.LBE81:\n.LBE80:\n.LBE77:\n.LBB83:\naddq $1,%rbx\njmp .L80\n.L81:\n.LBE83:\n.LBB84:\n.LBB82:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L80:\n.LBE82:\n.LBE84:\ncmpq %r12,%rbx\njl .L91\n.LBE74:\n.LBE73:\n.LBE72:\n.LBB85:\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\n.LBB86:\n.LBB87:\n.LBB88:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%r14\nmovl $0,%ebx\n.LBE88:\njmp .L84\n.L92:\n.LBB89:\nnop\n.LBE89:\n.LBB90:\n.LBB91:\nmovq -72(%rbp),%rax\ntestq %rbx,%rbx\njs .L85\ncmpq %rax,%rbx\njge .L85\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE91:\n.LBB92:\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\n.LBE92:\n.LBB93:\n.LBB94:\nmovq -144(%rbp),%r12\nmovq -136(%rbp),%r13\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq -152(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq (%rax),%rax\nleaq <1>(%rax),%r15\nmovq -152(%rbp),%rax\nmovq %r12,%rdx\nmovq %r13,%rcx\nmovq %rax,%rsi\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %r15,(%rax)\n.LBE94:\n.LBE93:\n.LBE90:\n.LBB96:\naddq $1,%rbx\njmp .L84\n.L85:\n.LBE96:\n.LBB97:\n.LBB95:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L84:\n.LBE95:\n.LBE97:\ncmpq %r14,%rbx\njl .L92\n.LBE87:\n.LBE86:\n.LBE85:\n.LBB98:\nmovq $0,-56(%rbp)\nmovq -56(%rbp),%rax\n.LBE98:\n.LBE71:\naddq $120,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "for _, word := range words {\n\tremainNum[word] = 0\n}\nfor _, word := range words {\n\tremainNum[word]++\n}\nreturn 0"}
{"src": "cmpq %fs:112,%rsp\njnb .L8\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $56,%rsp\nleaq <.LC19>(%rip),%rsi\nmovl $10,%edi\nmovq %rsi,-64(%rbp)\nmovq %rdi,-56(%rbp)\nleaq <.LC20>(%rip),%rcx\nmovl $14,%ebx\nmovq %rcx,-48(%rbp)\nmovq %rbx,-40(%rbp)\nleaq <.LC21>(%rip),%rax\nmovl $5,%edx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nleaq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <main.user.notify>\nleaq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <main.admin.notify..stub>\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "ad := admin{\n\tuser: user{\n\t\tname:  \"STR\",\n\t\temail: \"STR\",\n\t},\n\tlevel: \"STR\",\n}\nad.user.notify()\nad.notify()"}
{"src": "cmpq %fs:112,%rsp\njnb .L78\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L78:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $24,%rsp\nmovb %dil,-17(%rbp)\n.LBB60:\nmovzbl -17(%rbp),%ecx\nxorl $1,%ecx\ntestb %cl,%cl\nje .L76\n.LBB61:\nleaq <string..d>(%rip),%rax\nleaq <go..C29>(%rip),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L76:\n.LBE61:\n.LBE60:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if !ok {\n\tpanic(\"STR\")\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\naddq $-128,%rsp\nmovq $0,-24(%rbp)\nmovq $1,-32(%rbp)\nmovq $1,-40(%rbp)\n.LBB2:\n.LBB3:\njmp .L2\n.L6:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\n.LBB6:\nmovq -40(%rbp),%rax\nmovq -32(%rbp),%rcx\nmovq -40(%rbp),%rdx\naddq %rcx,%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-40(%rbp)\n.LBE6:\n.LBB7:\nmovq -40(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\njne .L2\n.LBB8:\nmovq -40(%rbp),%rax\naddq %rax,-24(%rbp)\n.L2:\n.LBE8:\n.LBE7:\n.LBE5:\ncmpq $4000000,-40(%rbp)\njle .L6\n.LBE3:\n.LBE2:\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "sum := 0\nprev := 1\ncurr := 1\nfor curr <= 4e6 {\n\tprev, curr = curr, prev+curr\n\tif curr%2 == 0 {\n\t\tsum += curr\n\t}\n}\nfmt.Println(sum)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L15\nmovl $168,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\nsubq $160,%rsp\nmovq %rdi,-152(%rbp)\nmovq %rsi,-160(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\n.LBB2:\nleaq <go.leetcode0973.kClosest..func1>(%rip),%rdx\nleaq <16>(%rbp),%rcx\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\nmovq %rdx,(%rax)\nmovq %rcx,<8>(%rax)\nmovq -72(%rbp),%rax\nmovq %rax,-136(%rbp)\nleaq <go.leetcode0973.kClosest..func2>(%rip),%rcx\nleaq -136(%rbp),%rdx\nleaq <16>(%rbp),%rsi\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\nleaq -64(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq %rsi,<16>(%rax)\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq $0,-8(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L14:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -16(%rbp),%rdx\nmovq -8(%rbp),%rax\nmovq -24(%rbp),%r10\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL1:\nmovq %rax,-32(%rbp)\n.LBB7:\nmovq -32(%rbp),%rax\ncmpq -160(%rbp),%rax\nje .L13\n.LBB8:\n.LBB9:\nmovq -32(%rbp),%rax\ncmpq -160(%rbp),%rax\njle .L5\n.LBB10:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBE10:\njmp .L2\n.L5:\n.LBB11:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq %rax,-8(%rbp)\n.L2:\n.LBE11:\n.LBE9:\n.LBE8:\n.LBE7:\n.LBE6:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njl .L14\njmp .L4\n.L13:\n.LBB14:\n.LBB13:\n.LBB12:\nnop\n.L4:\n.LBE12:\n.LBE13:\n.LBE14:\n.LBE4:\n.LBE3:\n.LBB15:\nmovq <32>(%rbp),%rax\ncmpq $0,-160(%rbp)\njs .L7\ncmpq %rax,-160(%rbp)\njg .L7\ncmpq $0,-160(%rbp)\njns .L8\njmp .L12\n.L7:\nmovq -160(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L12:\nmovq -160(%rbp),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L8:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\nmovq %rdx,-128(%rbp)\nmovq -160(%rbp),%rdx\nmovq %rdx,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq -152(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE15:\n.LBE2:\nmovq -152(%rbp),%rax\nleave\nret", "tgt": "dist := func(i int) int {\n\tx, y := points[i][0], points[i][1]\n\treturn x*x + y*y\n}\npartition := func(l, r int) int {\n\tpivot, pdist := l, dist(l)\n\tpoints[pivot], points[r] = points[r], points[pivot]\n\tdivider := l\n\tfor i := l; i < r; i++ {\n\t\tif dist(i) < pdist {\n\t\t\tpoints[i], points[divider] = points[divider], points[i]\n\t\t\tdivider++\n\t\t}\n\t}\n\tpoints[divider], points[r] = points[r], points[divider]\n\treturn divider\n}\nl, r := 0, len(points)-1\nfor l < r {\n\ti := partition(l, r)\n\tif i == K {\n\t\tbreak\n\t} else if i > K {\n\t\tr = i - 1\n\t} else {\n\t\tl = i + 1\n\t}\n}\nreturn points[:K]"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L11\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L11:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovb $0,-17(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-40(%rbp)\njns .L2\n.LBB4:\n.LBB5:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq $0,-8(%rbp)\nmovq -40(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode0633.mySqrt>\nmovq %rax,-16(%rbp)\n.LBB6:\n.LBB7:\njmp .L4\n.L10:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -8(%rbp),%rax\nimulq %rax,%rax\nmovq %rax,%rdx\nmovq -16(%rbp),%rax\nimulq %rax,%rax\naddq %rdx,%rax\nmovq %rax,-32(%rbp)\n.LBB10:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njge .L5\n.LBB11:\naddq $1,-8(%rbp)\n.LBE11:\njmp .L4\n.L5:\n.LBB12:\n.LBB13:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njle .L6\n.LBB14:\nsubq $1,-16(%rbp)\n.LBE14:\njmp .L4\n.L6:\n.LBB15:\n.LBB16:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L3\n.L4:\n.LBE16:\n.LBE15:\n.LBE13:\n.LBE12:\n.LBE10:\n.LBE9:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njle .L10\n.LBE7:\n.LBE6:\n.LBB17:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L3:\n.LBE17:\n.LBE2:\nleave\nret", "tgt": "if c < 0 {\n\treturn false\n}\nl, r := 0, mySqrt(c)\nfor l <= r {\n\tcur := l*l + r*r\n\tif cur < c {\n\t\tl++\n\t} else if cur > c {\n\t\tr--\n\t} else {\n\t\treturn true\n\t}\n}\nreturn false"}
{"src": ".LFB0:\nleaq -280(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L29\nmovl $280,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $256,%rsp\nmovq %rdi,-264(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq $0,-176(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-224(%rbp)\nmovq %rbx,-216(%rbp)\nmovq %rbx,-208(%rbp)\n.LBB3:\nmovq $0,-32(%rbp)\n.LBB4:\njmp .L2\n.L26:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -216(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L3\ncmpq %rax,-32(%rbp)\njl .L20\n.L3:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq -224(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rax,%rdx\nmovq -32(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE6:\n.LBB7:\naddq $1,-32(%rbp)\n.L2:\n.LBE7:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L26\n.LBE4:\n.LBE3:\nmovq $0,-24(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\n.LBB8:\n.LBB9:\n.LBB10:\n.LBB11:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r12\nmovl $0,%ebx\n.LBE11:\njmp .L7\n.L28:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\n.LBB14:\nmovq -120(%rbp),%rax\ntestq %rbx,%rbx\njs .L8\ncmpq %rax,%rbx\njge .L8\nmovq -128(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-144(%rbp)\n.LBE14:\n.LBB15:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq %rbx,-24(%rbp)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-240(%rbp)\n.LBE15:\n.LBB16:\nmovq -248(%rbp),%rax\ntestq %rax,%rax\njg .L9\njmp .L22\n.L8:\n.LBE16:\n.LBB20:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\n.LBE20:\n.LBB21:\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9:\nmovq -256(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-48(%rbp)\nmovq -248(%rbp),%rax\ncmpq $1,%rax\njg .L11\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L11:\nmovq -256(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-56(%rbp)\nmovq -48(%rbp),%rax\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\nmovq %rax,%rdi\ncall <go.problem0684.find>\naddq $32,%rsp\nmovq %rax,-64(%rbp)\nmovq -56(%rbp),%rax\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\nmovq %rax,%rdi\ncall <go.problem0684.find>\naddq $32,%rsp\nmovq %rax,-72(%rbp)\n.LBB17:\nmovq -64(%rbp),%rax\ncmpq -72(%rbp),%rax\nje .L27\n.LBE17:\nmovq -216(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L14\ncmpq %rax,-64(%rbp)\njl .L23\n.L14:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq -224(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $3,%rax\naddq %rax,%rdx\nmovq -72(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE21:\n.LBE13:\n.LBB23:\naddq $1,%rbx\n.L7:\n.LBE23:\ncmpq %r12,%rbx\njl .L28\njmp .L13\n.L27:\n.LBB24:\n.LBB22:\n.LBB19:\n.LBB18:\nnop\n.L13:\n.LBE18:\n.LBE19:\n.LBE22:\n.LBE24:\n.LBE10:\n.LBE9:\n.LBE8:\n.LBB25:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L17\ncmpq %rax,-24(%rbp)\njl .L25\n.L17:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-176(%rbp)\nmovq -264(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE25:\n.LBE2:\nmovq -264(%rbp),%rax\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "n := len(edges)\nparent := make([]int, n+1)\nfor i := 0; i < n; i++ {\n\tparent[i] = i\n}\nvar i int\nvar e []int\nfor i, e = range edges {\n\tf, t := e[0], e[1]\n\tpf := find(parent, f)\n\tpt := find(parent, t)\n\tif pf == pt {\n\t\tbreak\n\t}\n\tparent[pf] = pt\n}\nreturn edges[i]"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L55\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L55:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $216,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-24(%rbp)\n.LBB46:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\n.LBB47:\n.LBB48:\njmp .L49\n.L54:\n.LBB49:\nnop\n.LBE49:\n.LBB50:\nmovq -216(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nleaq -96(%rbp),%rdi\nleaq -208(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <strings.Builder.WriteString@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -216(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-216(%rbp)\n.L49:\n.LBE50:\ncmpq $0,-216(%rbp)\njne .L54\n.LBE48:\n.LBE47:\nleaq -208(%rbp),%rax\nmovq %rax,%rdi\ncall <strings.Builder.String@PLT>\nleaq -64(%rbp),%rdi\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovl $64,%r8d\nmovl $2,%ecx\nmovq %rax,%rdx\ncall <strconv.ParseInt@PLT>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -120(%rbp),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\n.LBB51:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE51:\n.LBE46:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "var bin strings.Builder\nfor head != nil {\n\tbin.WriteString(strconv.Itoa(head.Val))\n\thead = head.Next\n}\ni, _ := strconv.ParseInt(bin.String(), 2, 64)\nreturn int(i)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-24(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq -24(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\nmovq %rax,%rdi\ncall <go.leetcode0172.trailingZeroes>\nmovq %rax,%rsi\nmovq -24(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\naddq %rsi,%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L3:\n.LBE6:\n.LBE2:\nleave\nret", "tgt": "if n == 0 {\n\treturn 0\n}\nreturn n/5 + trailingZeroes(n/5)"}
{"src": ".LFB3:\nleaq -760(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L81\nmovl $760,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L81:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $712,%rsp\nmovq %rdi,-680(%rbp)\nmovq -680(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB67:\nmovq $0,-56(%rbp)\nmovq $0,-672(%rbp)\nmovq $0,-664(%rbp)\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\nmovq $0,-632(%rbp)\n.LBB68:\n.LBB69:\n.LBB70:\nmovq <go.day63.testcases>(%rip),%rax\nmovq <8+go.day63.testcases>(%rip),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq <16+go.day63.testcases>(%rip),%rax\nmovq %rax,-528(%rbp)\nmovq -536(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovl $0,%r12d\n.LBE70:\njmp .L59\n.L80:\n.LBB71:\nnop\n.LBE71:\n.LBB72:\n.LBB73:\nmovq -536(%rbp),%rax\ntestq %r12,%r12\njs .L60\ncmpq %rax,%r12\njge .L60\nmovq -544(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-592(%rbp)\nmovq %rbx,-584(%rbp)\nmovq <16>(%rax),%rcx\nmovq <24>(%rax),%rbx\nmovq %rcx,-576(%rbp)\nmovq %rbx,-568(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\n.LBE73:\n.LBB74:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq %r12,-56(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\n.LBE74:\n.LBB75:\nmovq -664(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-624(%rbp)\nmovq %rbx,-616(%rbp)\nmovq %rbx,-608(%rbp)\n.LBB76:\nmovq $0,-64(%rbp)\n.LBB77:\n.LBB78:\n.LBB79:\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,-744(%rbp)\nmovl $0,%r13d\n.LBE79:\njmp .L61\n.L60:\n.LBE78:\n.LBE77:\n.LBE76:\n.LBE75:\n.LBB93:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L79:\n.LBE93:\n.LBB94:\n.LBB88:\n.LBB87:\n.LBB86:\n.LBB80:\nnop\n.LBE80:\n.LBB81:\nmovq %r13,-64(%rbp)\n.LBB82:\nmovq -616(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L62\ncmpq %rax,-64(%rbp)\njl .L75\n.L62:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L75:\nmovq -624(%rbp),%rcx\nmovq -64(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq (%rcx,%rax),%rbx\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L64\ncmpq %rax,-64(%rbp)\njge .L64\nmovq -432(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nleaq -160(%rbp),%rdi\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rdx,%rcx\nmovq %rax,%rdx\nmovl $0,%esi\ncall <runtime.stringtoslicerune@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -392(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -384(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L65\njmp .L76\n.L64:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L65:\n.LBB83:\nmovq -400(%rbp),%rax\nmovq %rax,(%rbx)\njmp .L67\n.L76:\n.LBE83:\n.LBB84:\nmovq -400(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L67:\n.LBE84:\n.LBE82:\n.LBE81:\n.LBB85:\naddq $1,%r13\n.L61:\n.LBE85:\ncmpq -744(%rbp),%r13\njl .L79\n.LBE86:\n.LBE87:\n.LBE88:\n.LBB89:\nleaq -128(%rbp),%rdi\nmovq -648(%rbp),%rax\nmovq -640(%rbp),%rdx\nleaq -368(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicerune@PLT>\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\npushq -608(%rbp)\npushq -616(%rbp)\npushq -624(%rbp)\ncall <go.day63.FindWordLD>\naddq $48,%rsp\nmovb %al,-65(%rbp)\nmovzbl -632(%rbp),%eax\ncmpb %al,-65(%rbp)\nje .L70\n.LBB90:\nleaq <int..d>(%rip),%rax\nmovq %rax,-736(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-240(%rbp)\nmovq -240(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -240(%rbp),%rax\nmovq %rax,-728(%rbp)\nleaq <bool..d>(%rip),%rbx\nmovq %rbx,-720(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq -232(%rbp),%rax\nmovzbl -632(%rbp),%edx\nmovb %dl,(%rax)\nmovq -232(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovq %rbx,-704(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-224(%rbp)\nmovq -224(%rbp),%rax\nmovzbl -65(%rbp),%edx\nmovb %dl,(%rax)\nmovq -224(%rbp),%rax\nmovq %rax,-696(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovdqa -736(%rbp),%xmm0\nmovups %xmm0,-208(%rbp)\nmovdqa -720(%rbp),%xmm1\nmovups %xmm1,-192(%rbp)\nmovdqa -704(%rbp),%xmm2\nmovups %xmm2,-176(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L71\n.LBB91:\nmovq -216(%rbp),%rax\nmovq -208(%rbp),%rcx\nmovq -200(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE91:\njmp .L72\n.L71:\n.LBB92:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L72:\n.LBE92:\nmovq -216(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq $3,-80(%rbp)\nleaq <.LC18>(%rip),%r14\nmovl $23,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -680(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L70:\n.LBE90:\n.LBE89:\n.LBE94:\n.LBE72:\n.LBB95:\naddq $1,%r12\n.L59:\n.LBE95:\ncmpq -688(%rbp),%r12\njl .L80\n.LBE69:\n.LBE68:\n.LBE67:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor tcid, tc := range testcases {\n\tpuzzle := make([][]rune, len(tc.puzzle))\n\tfor i := range puzzle {\n\t\tpuzzle[i] = []rune(tc.puzzle[i])\n\t}\n\tif result := FindWordLD(puzzle, []rune(tc.target)); result != tc.expected {\n\t\tt.Errorf(\"STR\", tcid, tc.expected, result)\n\t}\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L67\nmovl $168,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L67:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-152(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\n.LBB42:\nmovq $0,-40(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-48(%rbp)\n.LBB43:\n.LBB44:\njmp .L45\n.L66:\n.LBB45:\nnop\n.LBE45:\n.LBB46:\n.LBB47:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -40(%rbp),%rcx\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -48(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L46\ncmpq %rax,-48(%rbp)\njl .L61\n.L46:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L61:\nmovq <16>(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq <24>(%rbp),%rsi\ncmpq $0,-40(%rbp)\njs .L48\ncmpq %rsi,-40(%rbp)\njl .L62\n.L48:\nmovq -40(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\nmovq <16>(%rbp),%rdi\nmovq -40(%rbp),%rsi\nsalq $4,%rsi\naddq %rdi,%rsi\nmovq (%rsi),%r12\nmovq <8>(%rsi),%r13\nmovq -104(%rbp),%rsi\ntestq %rcx,%rcx\njs .L50\ncmpq %rsi,%rcx\njl .L63\n.L50:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\nmovq -112(%rbp),%rsi\nsalq $4,%rcx\naddq %rsi,%rcx\nmovq %rdx,%rsi\nmovq %rsi,<8>(%rcx)\nleaq <runtime.writeBarrier>(%rip),%rsi\nmovl (%rsi),%esi\ntestl %esi,%esi\njne .L52\n.LBB48:\nmovq %rax,(%rcx)\njmp .L53\n.L52:\n.LBE48:\n.LBB49:\nmovq %rax,%rdx\nmovq %rcx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L53:\n.LBE49:\nmovq -72(%rbp),%rax\ntestq %rbx,%rbx\njs .L54\ncmpq %rax,%rbx\njl .L64\n.L54:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L56\n.LBB50:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L57\n.L56:\n.LBE50:\n.LBB51:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L57:\n.LBE51:\n.LBE47:\naddq $1,-40(%rbp)\nsubq $1,-48(%rbp)\n.L45:\n.LBE46:\nmovq -40(%rbp),%rax\ncmpq -48(%rbp),%rax\njl .L66\n.LBE44:\n.LBE43:\n.LBB52:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE52:\n.LBE42:\nmovq -152(%rbp),%rax\naddq $136,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "start := 0\nend := len(s) - 1\nfor start < end {\n\ts[start], s[end] = s[end], s[start]\n\tstart++\n\tend--\n}\nreturn s"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L13\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-32(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $1,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\ncmpq $1,-24(%rbp)\nje .L4\ncmpq $2,-24(%rbp)\nje .L5\njmp .L11\n.L4:\n.LBB7:\n.LBB8:\nmovq $2,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L5:\n.LBE8:\n.LBE7:\n.LBB9:\n.LBB10:\ncmpq $1,-32(%rbp)\njne .L7\n.LBB11:\n.LBB12:\nmovq $3,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L7:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB13:\nmovq $4,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L11:\n.LBE13:\n.LBE9:\n.LBB14:\n.LBB15:\ncmpq $1,-32(%rbp)\nje .L8\ncmpq $2,-32(%rbp)\nje .L9\njmp .L12\n.L8:\n.LBB16:\n.LBB17:\nmovq $4,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L9:\n.LBE17:\n.LBE16:\n.LBB18:\n.LBB19:\nmovq $7,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L12:\n.LBE19:\n.LBE18:\n.LBB20:\n.LBB21:\nmovq $8,-8(%rbp)\nmovq -8(%rbp),%rax\n.L3:\n.LBE21:\n.LBE20:\n.LBE15:\n.LBE14:\n.LBE6:\n.LBE2:\npopq %rbp\nret", "tgt": "if m == 0 {\n\treturn 1\n}\nswitch n {\ncase 1:\n\treturn 2\ncase 2:\n\tif m == 1 {\n\t\treturn 3\n\t}\n\treturn 4\ndefault:\n\tswitch m {\n\tcase 1:\n\t\treturn 4\n\tcase 2:\n\t\treturn 7\n\tdefault:\n\t\treturn 8\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L41\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L41:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB3:\nmovq $1,-16(%rbp)\n.LBB4:\njmp .L2\n.L40:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq -16(%rbp),%rax\nsubq $1,%rax\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njl .L28\n.L3:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq -56(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L5\ncmpq %rdx,-16(%rbp)\njl .L29\n.L5:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq -64(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -64(%rbp),%rcx\nmovq -16(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nje .L37\n.LBE7:\n.LBB9:\nmovq $0,-24(%rbp)\n.LBB10:\njmp .L9\n.L39:\n.LBB11:\nnop\n.LBE11:\n.LBB12:\n.LBB13:\nmovq -8(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rax,%rdx\nmovq -56(%rbp),%rax\ntestq %rdx,%rdx\njs .L10\ncmpq %rax,%rdx\njl .L30\n.L10:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq -16(%rbp),%rcx\nmovq -24(%rbp),%rax\naddq %rcx,%rax\nmovq -56(%rbp),%rcx\ntestq %rax,%rax\njs .L12\ncmpq %rcx,%rax\njl .L31\n.L12:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\nmovq -64(%rbp),%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nmovq -64(%rbp),%rcx\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\njnb .L14\n.LBB14:\nmovq -16(%rbp),%rax\nmovq %rax,-8(%rbp)\njmp .L8\n.L14:\n.LBE14:\n.LBE13:\n.LBB15:\nmovq -8(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rax,%rdx\nmovq -56(%rbp),%rax\ntestq %rdx,%rdx\njs .L15\ncmpq %rax,%rdx\njl .L32\n.L15:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq -16(%rbp),%rcx\nmovq -24(%rbp),%rax\naddq %rcx,%rax\nmovq -56(%rbp),%rcx\ntestq %rax,%rax\njs .L17\ncmpq %rcx,%rax\njl .L33\n.L17:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq -64(%rbp),%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nmovq -64(%rbp),%rcx\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nja .L38\n.LBE15:\n.LBE12:\n.LBB18:\naddq $1,-24(%rbp)\n.L9:\n.LBE18:\nmovq -16(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\ncmpq %rax,-32(%rbp)\njg .L39\njmp .L8\n.L37:\n.LBE10:\n.LBE9:\n.LBB21:\n.LBB8:\nnop\njmp .L8\n.L38:\n.LBE8:\n.LBE21:\n.LBB22:\n.LBB20:\n.LBB19:\n.LBB17:\n.LBB16:\nnop\n.L8:\n.LBE16:\n.LBE17:\n.LBE19:\n.LBE20:\n.LBE22:\n.LBE6:\n.LBB23:\naddq $1,-16(%rbp)\n.L2:\n.LBE23:\nmovq -16(%rbp),%rax\ncmpq -32(%rbp),%rax\njl .L40\n.LBE4:\n.LBE3:\n.LBB24:\nmovq -56(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L23\ncmpq %rax,-8(%rbp)\njg .L23\nmovq -64(%rbp),%rdx\nmovq -56(%rbp),%rax\ncmpq %rax,-8(%rbp)\njne .L24\njmp .L36\n.L23:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L24:\nmovq -8(%rbp),%rax\njmp .L26\n.L36:\nmovl $0,%eax\n.L26:\naddq %rax,%rdx\nmovq -56(%rbp),%rax\nsubq -8(%rbp),%rax\nmovq %rdx,-48(%rbp)\nmovq %rax,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\n.LBE24:\n.LBE2:\nleave\nret", "tgt": "last, n := 0, len(s)\nfor i := 1; i < n; i++ {\n\tif s[i-1] == s[i] {\n\t\tcontinue\n\t}\n\tfor l := 0; i+l < n; l++ {\n\t\tif s[last+l] < s[i+l] {\n\t\t\tlast = i\n\t\t\tbreak\n\t\t}\n\t\tif s[last+l] > s[i+l] {\n\t\t\tbreak\n\t\t}\n\t}\n}\nreturn s[last:]"}
{"src": ".LFB1:\nleaq -424(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L18\nmovl $424,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $376,%rsp\nmovq %rdi,-392(%rbp)\nmovl $6,%edi\ncall <go.problem507.checkPerfectNumber>\nmovl %eax,%ebx\nleaq <bool..d>(%rip),%rax\nmovq %rax,-416(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq -360(%rbp),%rax\nmovb %bl,(%rax)\nmovq -360(%rbp),%rax\nmovq %rax,-408(%rbp)\nmovdqa -416(%rbp),%xmm0\nmovups %xmm0,-352(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nleaq -208(%rbp),%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovl $28,%edi\ncall <go.problem507.checkPerfectNumber>\nmovl %eax,%ebx\nleaq <bool..d>(%rip),%r14\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovb %bl,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-304(%rbp)\nmovq %r15,-296(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nleaq -144(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovl $30,%edi\ncall <go.problem507.checkPerfectNumber>\nmovl %eax,%ebx\nleaq <bool..d>(%rip),%r12\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -264(%rbp),%rax\nmovb %bl,(%rax)\nmovq -264(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-256(%rbp)\nmovq %r13,-248(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-272(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "fmt.Println(checkPerfectNumber(6))\nfmt.Println(checkPerfectNumber(28))\nfmt.Println(checkPerfectNumber(30))"}
{"src": ".LFB1:\nleaq -408(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L43\nmovl $408,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L43:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $360,%rsp\nmovq %rdi,-360(%rbp)\nmovq -360(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB29:\nmovq $0,-56(%rbp)\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\n.LBB30:\n.LBB31:\n.LBB32:\nmovq <go.day108.testcases>(%rip),%rax\nmovq <8+go.day108.testcases>(%rip),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16+go.day108.testcases>(%rip),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovl $0,%ebx\n.LBE32:\njmp .L33\n.L42:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\n.LBB35:\nmovq -248(%rbp),%rax\ntestq %rbx,%rbx\njs .L34\ncmpq %rax,%rbx\njge .L34\nmovq -256(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-288(%rbp)\nmovq %rdi,-280(%rbp)\nmovq <32>(%rax),%rax\nmovq %rax,-272(%rbp)\n.LBE35:\n.LBB36:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-320(%rbp)\n.LBE36:\n.LBB37:\n.LBB38:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq -352(%rbp),%rdi\nmovq -344(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <go.day108.EqualWithShifting>\nmovb %al,-57(%rbp)\nmovzbl -320(%rbp),%eax\ncmpb %al,-57(%rbp)\njne .L35\njmp .L36\n.L34:\n.LBE38:\n.LBE37:\n.LBB43:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\n.LBE43:\n.LBB44:\n.LBB42:\n.LBB39:\nleaq <int..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-392(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-384(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovzbl -320(%rbp),%edx\nmovb %dl,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,-376(%rbp)\nleaq <bool..d>(%rip),%r14\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovzbl -57(%rbp),%edx\nmovb %dl,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -400(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovdqa -384(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L37\n.LBB40:\nmovq -152(%rbp),%rax\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE40:\njmp .L38\n.L37:\n.LBB41:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L38:\n.LBE41:\nmovq -152(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq $3,-80(%rbp)\nleaq <.LC16>(%rip),%r12\nmovl $30,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -360(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L36:\n.LBE39:\n.LBE42:\n.LBE44:\n.LBE34:\n.LBB45:\naddq $1,%rbx\n.L33:\n.LBE45:\ncmpq -368(%rbp),%rbx\njl .L42\n.LBE31:\n.LBE30:\n.LBE29:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor tcid, tc := range testcases {\n\tif result := EqualWithShifting(tc.A, tc.B); result != tc.expected {\n\t\tt.Errorf(\"STR\", tcid, tc.expected, result)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L8\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\nsubq $112,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\nmovq -112(%rbp),%rdx\nmovq -104(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <strings.TrimSpace@PLT>\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq -48(%rbp),%rax\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdx\nmovl $64,%ecx\nmovq %rax,%rdi\ncall <strconv.ParseFloat@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovsd -80(%rbp),%xmm0\nmovsd %xmm0,-16(%rbp)\nmovq -72(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\n.LBB3:\n.LBB4:\nmovq -96(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\nmovq -96(%rbp),%rax\ntestq %rax,%rax\nje .L3\nmovq -96(%rbp),%rax\nmovq (%rax),%rax\nleaq <type...1strconv.NumError>(%rip),%rdx\ncmpq %rdx,%rax\nje .L4\n.L3:\nmovq -96(%rbp),%rax\ntestq %rax,%rax\njne .L5\nmovl $0,%eax\njmp .L6\n.L5:\nmovq -96(%rbp),%rax\nmovq (%rax),%rax\n.L6:\nleaq <error..d>(%rip),%rdx\nmovq %rax,%rsi\nleaq <type...1strconv.NumError>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L4:\nmovq -88(%rbp),%rcx\nmovq <strconv.ErrSyntax>(%rip),%rax\nmovq <8+strconv.ErrSyntax>(%rip),%rdx\nmovq <32>(%rcx),%rdi\nmovq <40>(%rcx),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.ifaceeq@PLT>\nxorl $1,%eax\n.L2:\n.LBE5:\n.LBE4:\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "s = strings.TrimSpace(s)\n_, err := strconv.ParseFloat(s, 64)\nreturn err == nil || err.(*strconv.NumError).Err != strconv.ErrSyntax"}
{"src": ".LFB0:\nleaq -984(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $984,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $936,%rsp\nmovq %rdi,-840(%rbp)\nleaq <.LC15>(%rip),%rax\nmovl $13,%edx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nleaq <.LC16>(%rip),%rcx\nmovl $3,%ebx\nmovq %rcx,-688(%rbp)\nmovq %rbx,-680(%rbp)\nleaq <.LC17>(%rip),%r10\nmovl $4,%r11d\nmovq %r10,-672(%rbp)\nmovq %r11,-664(%rbp)\nleaq <.LC18>(%rip),%r12\nmovl $1,%r13d\nmovq %r12,-656(%rbp)\nmovq %r13,-648(%rbp)\nleaq <.LC19>(%rip),%r14\nmovl $2,%r15d\nmovq %r14,-640(%rbp)\nmovq %r15,-632(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-944(%rbp)\nmovq $0,-936(%rbp)\nmovdqa -944(%rbp),%xmm0\nmovups %xmm0,-624(%rbp)\nleaq <.LC18>(%rip),%rax\nmovq %rax,-928(%rbp)\nmovq $1,-920(%rbp)\nmovdqa -928(%rbp),%xmm1\nmovups %xmm1,-608(%rbp)\nmovq %rax,-912(%rbp)\nmovq $1,-904(%rbp)\nmovdqa -912(%rbp),%xmm2\nmovups %xmm2,-592(%rbp)\nmovq %rax,-896(%rbp)\nmovq $1,-888(%rbp)\nmovdqa -896(%rbp),%xmm3\nmovups %xmm3,-576(%rbp)\nleaq -704(%rbp),%rax\nmovq %rax,-736(%rbp)\nmovq $3,-728(%rbp)\nmovq $3,-720(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC21>(%rip),%r8\nmovl $68,%r9d\nleaq -208(%rbp),%rax\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %r8,%rcx\nmovq %r9,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-544(%rbp)\n.LBB2:\nmovq $0,-800(%rbp)\nmovq $0,-792(%rbp)\nmovq $0,-784(%rbp)\nmovq $0,-776(%rbp)\nmovq $0,-768(%rbp)\nmovq $0,-760(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -720(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq -472(%rbp),%r13\nmovl $0,%r12d\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -472(%rbp),%rax\ntestq %r12,%r12\njs .L3\ncmpq %rax,%r12\njge .L3\nmovq -480(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-528(%rbp)\nmovq %rbx,-520(%rbp)\nmovq <16>(%rax),%rcx\nmovq <24>(%rax),%rbx\nmovq %rcx,-512(%rbp)\nmovq %rbx,-504(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\n.LBE8:\n.LBB9:\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-768(%rbp)\nmovq %rdx,-760(%rbp)\n.LBE9:\n.LBB10:\nmovq -768(%rbp),%rax\nmovq -760(%rbp),%rdx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -784(%rbp),%rax\nmovq -776(%rbp),%rdx\nmovq %rax,-816(%rbp)\nmovq %rdx,-808(%rbp)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq -832(%rbp),%rdi\nmovq -824(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <go.leetcode.minWindow>\nmovq %rax,%r14\nmovq %rdx,%r15\nleaq <go.leetcode..go.leetcode.para76..d>(%rip),%rax\nmovq %rax,-976(%rbp)\nleaq <go.leetcode..go.leetcode.para76..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L11\n.L3:\n.LBE10:\n.LBB15:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE15:\n.LBB16:\n.LBB11:\nmovq -376(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE11:\njmp .L6\n.L11:\n.LBB12:\nmovq -376(%rbp),%rax\nleaq -368(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para76..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -376(%rbp),%rax\nmovq %rax,-968(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-960(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovq %r14,-320(%rbp)\nmovq %r15,-312(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB13:\nmovq -328(%rbp),%rcx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE13:\njmp .L8\n.L7:\n.LBB14:\nmovq -328(%rbp),%rax\nleaq -320(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE14:\nmovq -328(%rbp),%rax\nmovq %rax,-952(%rbp)\nmovdqa -976(%rbp),%xmm4\nmovups %xmm4,-304(%rbp)\nmovdqa -960(%rbp),%xmm5\nmovups %xmm5,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC22>(%rip),%rax\nmovq %rax,-880(%rbp)\nmovq $39,-872(%rbp)\nleaq -144(%rbp),%rax\nmovq -880(%rbp),%rcx\nmovq -872(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE16:\n.LBE7:\n.LBB17:\naddq $1,%r12\n.L2:\n.LBE17:\ncmpq %r13,%r12\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-864(%rbp)\nmovq $3,-856(%rbp)\nleaq -80(%rbp),%rax\nmovq -864(%rbp),%rcx\nmovq -856(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question76{\n\t{\n\t\tpara76{\"STR\", \"STR\"},\n\t\tans76{\"STR\"},\n\t},\n\t{\n\t\tpara76{\"STR\", \"STR\"},\n\t\tans76{\"STR\"},\n\t},\n\t{\n\t\tpara76{\"STR\", \"STR\"},\n\t\tans76{\"STR\"},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans76, q.para76\n\tfmt.Printf(\"STR\", p, minWindow(p.s, p.p))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\nleaq -680(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $680,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $632,%rsp\nmovq %rdi,-648(%rbp)\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.nums1.0.6.7int.2.go.Solution.nums2.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-616(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-672(%rbp)\nmovq $8,-664(%rbp)\nmovdqa -672(%rbp),%xmm0\nmovups %xmm0,-560(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-608(%rbp)\nmovq -608(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -608(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovq $5,-536(%rbp)\nmovq $5,-528(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq $3,(%rax)\nmovq $2,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $4,<24>(%rax)\nmovq $7,<32>(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-520(%rbp)\nmovq $5,-512(%rbp)\nmovq $5,-504(%rbp)\nmovq $3,-496(%rbp)\nleaq <.LC21>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-488(%rbp)\nmovq %r15,-480(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-592(%rbp)\nmovq -592(%rbp),%rax\nmovq $0,(%rax)\nmovq $0,<8>(%rax)\nmovq $0,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq $0,<32>(%rax)\nmovq -592(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq $5,-464(%rbp)\nmovq $5,-456(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-584(%rbp)\nmovq -584(%rbp),%rax\nmovq $0,(%rax)\nmovq $0,<8>(%rax)\nmovq $0,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq $0,<32>(%rax)\nmovq -584(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq $5,-440(%rbp)\nmovq $5,-432(%rbp)\nmovq $5,-424(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-416(%rbp)\nmovq %r13,-408(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-576(%rbp)\nmovq -576(%rbp),%rax\nmovq $0,(%rax)\nmovq $0,<8>(%rax)\nmovq $0,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -576(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $5,-392(%rbp)\nmovq $5,-384(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-568(%rbp)\nmovq -568(%rbp),%rax\nmovq $1,(%rax)\nmovq $0,<8>(%rax)\nmovq $0,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq $0,<32>(%rax)\nmovq -568(%rbp),%rax\nmovq %rax,-376(%rbp)\nmovq $5,-368(%rbp)\nmovq $5,-360(%rbp)\nmovq $4,-352(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -616(%rbp),%rax\nmovq -560(%rbp),%rcx\nmovq -552(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -544(%rbp),%rcx\nmovq -536(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -528(%rbp),%rcx\nmovq -520(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -512(%rbp),%rcx\nmovq -504(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -496(%rbp),%rcx\nmovq -488(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -464(%rbp),%rcx\nmovq -456(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -432(%rbp),%rcx\nmovq -424(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,<144>(%rax)\nmovq %rbx,<152>(%rax)\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,<160>(%rax)\nmovq %rbx,<168>(%rax)\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,<176>(%rax)\nmovq %rbx,<184>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<192>(%rax)\nmovq %rbx,<200>(%rax)\nmovq -352(%rbp),%rdx\nmovq %rdx,<208>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -616(%rbp),%rax\nleaq -560(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.nums1.0.6.7int.2.go.Solution.nums2.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -616(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq $3,-632(%rbp)\nmovq $3,-624(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.nums1.0.6.7int.2.go.Solution.nums2.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -624(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -248(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -256(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-336(%rbp)\nmovq %rdi,-328(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-320(%rbp)\nmovq %rdi,-312(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <48>(%rax),%rsi\nmovq <56>(%rax),%rdi\nmovq %rsi,-288(%rbp)\nmovq %rdi,-280(%rbp)\nmovq <64>(%rax),%rax\nmovq %rax,-272(%rbp)\n.LBE10:\n.LBB11:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -224(%rbp),%rsi\nmovq -216(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -208(%rbp),%rsi\nmovq -200(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<48>(%rax)\nmovq %rdi,<56>(%rax)\nmovq -160(%rbp),%rdx\nmovq %rdx,<64>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -224(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.nums1.0.6.7int.2.go.Solution.nums2.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC22>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.nums1.0.6.7int.2.go.Solution.nums2.0.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.nums1.0.6.7int.2.go.Solution.nums2.0.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -648(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $632,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tnums1  []int\n\tnums2  []int\n\texpect int\n}{\n\t{\"STR\", []int{1, 2, 3, 2, 1}, []int{3, 2, 1, 4, 7}, 3},\n\t{\"STR\", []int{0, 0, 0, 0, 0}, []int{0, 0, 0, 0, 0}, 5},\n\t{\"STR\", []int{0, 0, 0, 0, 1}, []int{1, 0, 0, 0, 0}, 4},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.nums1, c.nums2)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.nums1, c.nums2)\n\t\t}\n\t})\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L611\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL13:\nret\n.L611:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $40,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\n.LBB615:\n.LBB616:\nleaq <.LC208>(%rip),%rcx\nmovl $0,%ebx\nleaq <.LC210>(%rip),%rax\nmovl $4,%edx\nmovq -40(%rbp),%rsi\nmovq (%rsi),%rsi\nmovq (%rsi),%rdi\nmovq <8>(%rsi),%rsi\nmovq %rcx,%r8\nmovq %rbx,%r9\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <strings.ReplaceAll@PLT>\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\n.LBE616:\n.LBE615:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return strings.ReplaceAll(r.element.Name, \"STR\", \"\")"}
{"src": ".LFB19:\nleaq -680(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L213\nmovl $680,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL20:\nret\n.L213:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $632,%rsp\nmovq %rdi,-456(%rbp)\nmovl $5,%edi\ncall <main.Mul3And5>\nmovq %rax,-56(%rbp)\n.LBB177:\ncmpq $3,-56(%rbp)\nje .L198\n.LBB178:\nleaq <int..d>(%rip),%rax\nmovq %rax,-672(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-448(%rbp)\nmovq -448(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -448(%rbp),%rax\nmovq %rax,-664(%rbp)\nleaq <int..d>(%rip),%r12\nleaq <go..C38>(%rip),%r13\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovdqa -672(%rbp),%xmm0\nmovups %xmm0,-432(%rbp)\nmovq %r12,-416(%rbp)\nmovq %r13,-408(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L199\n.LBB179:\nmovq -440(%rbp),%rcx\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE179:\njmp .L200\n.L199:\n.LBB180:\nmovq -440(%rbp),%rcx\nleaq -432(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L200:\n.LBE180:\nmovq -440(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $2,-200(%rbp)\nmovq $2,-192(%rbp)\nleaq <.LC20>(%rip),%r14\nmovl $21,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -456(%rbp),%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L198:\n.LBE178:\n.LBE177:\nmovl $6,%edi\ncall <main.Mul3And5>\nmovq %rax,-56(%rbp)\n.LBB181:\ncmpq $8,-56(%rbp)\nje .L201\n.LBB182:\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-656(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-400(%rbp)\nmovq -400(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -400(%rbp),%rax\nmovq %rax,-648(%rbp)\nmovq %rbx,-640(%rbp)\nleaq <go..C39>(%rip),%rax\nmovq %rax,-632(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nmovdqa -656(%rbp),%xmm1\nmovups %xmm1,-384(%rbp)\nmovdqa -640(%rbp),%xmm2\nmovups %xmm2,-368(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L202\n.LBB183:\nmovq -392(%rbp),%rcx\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE183:\njmp .L203\n.L202:\n.LBB184:\nmovq -392(%rbp),%rcx\nleaq -384(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L203:\n.LBE184:\nmovq -392(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-528(%rbp)\nmovq $21,-520(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -456(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L201:\n.LBE182:\n.LBE181:\nmovl $7,%edi\ncall <main.Mul3And5>\nmovq %rax,-56(%rbp)\n.LBB185:\ncmpq $14,-56(%rbp)\nje .L204\n.LBB186:\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-624(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-352(%rbp)\nmovq -352(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -352(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq %rbx,-608(%rbp)\nleaq <go..C40>(%rip),%rax\nmovq %rax,-600(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovdqa -624(%rbp),%xmm3\nmovups %xmm3,-336(%rbp)\nmovdqa -608(%rbp),%xmm4\nmovups %xmm4,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L205\n.LBB187:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE187:\njmp .L206\n.L205:\n.LBB188:\nmovq -344(%rbp),%rcx\nleaq -336(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L206:\n.LBE188:\nmovq -344(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $2,-136(%rbp)\nmovq $2,-128(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $21,-504(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -456(%rbp),%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L204:\n.LBE186:\n.LBE185:\nmovl $10,%edi\ncall <main.Mul3And5>\nmovq %rax,-56(%rbp)\n.LBB189:\ncmpq $23,-56(%rbp)\nje .L207\n.LBB190:\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-592(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-304(%rbp)\nmovq -304(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -304(%rbp),%rax\nmovq %rax,-584(%rbp)\nmovq %rbx,-576(%rbp)\nleaq <go..C41>(%rip),%rax\nmovq %rax,-568(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovdqa -592(%rbp),%xmm5\nmovups %xmm5,-288(%rbp)\nmovdqa -576(%rbp),%xmm6\nmovups %xmm6,-272(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L208\n.LBB191:\nmovq -296(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE191:\njmp .L209\n.L208:\n.LBB192:\nmovq -296(%rbp),%rax\nleaq -288(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L209:\n.LBE192:\nmovq -296(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-496(%rbp)\nmovq $21,-488(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -456(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L207:\n.LBE190:\n.LBE189:\nmovl $11,%edi\ncall <main.Mul3And5>\nmovq %rax,-56(%rbp)\n.LBB193:\ncmpq $33,-56(%rbp)\nje .L197\n.LBB194:\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-560(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-256(%rbp)\nmovq -256(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -256(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovq %rbx,-544(%rbp)\nleaq <go..C42>(%rip),%rax\nmovq %rax,-536(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovdqa -560(%rbp),%xmm7\nmovups %xmm7,-240(%rbp)\nmovdqa -544(%rbp),%xmm0\nmovups %xmm0,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L211\n.LBB195:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE195:\njmp .L212\n.L211:\n.LBB196:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L212:\n.LBE196:\nmovq -248(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-480(%rbp)\nmovq $21,-472(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -456(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L197:\n.LBE194:\n.LBE193:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "result := Mul3And5(5)\nif result != 3 {\n\tt.Errorf(\"STR\", result, 3)\n}\nresult = Mul3And5(6)\nif result != 8 {\n\tt.Errorf(\"STR\", result, 8)\n}\nresult = Mul3And5(7)\nif result != 14 {\n\tt.Errorf(\"STR\", result, 14)\n}\nresult = Mul3And5(10)\nif result != 23 {\n\tt.Errorf(\"STR\", result, 23)\n}\nresult = Mul3And5(11)\nif result != 33 {\n\tt.Errorf(\"STR\", result, 33)\n}"}
{"src": ".LFB0:\nleaq -744(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $744,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $704,%rsp\nmovq %rdi,-664(%rbp)\nleaq <.LC13>(%rip),%rax\nmovl $7,%edx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nleaq <.LC14>(%rip),%r12\nmovl $13,%r13d\nmovq %r12,-544(%rbp)\nmovq %r13,-536(%rbp)\nleaq <.LC15>(%rip),%r10\nmovl $12,%r11d\nmovq %r10,-528(%rbp)\nmovq %r11,-520(%rbp)\nleaq <.LC16>(%rip),%r8\nmovl $18,%r9d\nmovq %r8,-512(%rbp)\nmovq %r9,-504(%rbp)\nleaq -560(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $2,-584(%rbp)\nmovq $2,-576(%rbp)\nmovq $0,-224(%rbp)\nmovq $0,-216(%rbp)\nmovq $0,-208(%rbp)\nleaq <.LC17>(%rip),%rcx\nmovl $70,%ebx\nleaq -192(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB2:\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\nmovq $0,-632(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%r14\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE8:\n.LBB9:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\n.LBE9:\n.LBB10:\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -624(%rbp),%rdx\nmovq -616(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode.defangIPaddr>\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <go.leetcode..go.leetcode.para1108..d>(%rip),%rax\nmovq %rax,-736(%rbp)\nleaq <go.leetcode..go.leetcode.para1108..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L11\n.L3:\n.LBE10:\n.LBB15:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE15:\n.LBB16:\n.LBB11:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE11:\njmp .L6\n.L11:\n.LBB12:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para1108..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -344(%rbp),%rax\nmovq %rax,-728(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-720(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq %r12,-304(%rbp)\nmovq %r13,-296(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB13:\nmovq -312(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE13:\njmp .L8\n.L7:\n.LBB14:\nmovq -312(%rbp),%rax\nleaq -304(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE14:\nmovq -312(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovdqa -736(%rbp),%xmm0\nmovups %xmm0,-288(%rbp)\nmovdqa -720(%rbp),%xmm1\nmovups %xmm1,-272(%rbp)\nleaq -288(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $2,-152(%rbp)\nmovq $2,-144(%rbp)\nleaq <.LC18>(%rip),%rax\nmovq %rax,-704(%rbp)\nmovq $37,-696(%rbp)\nleaq -128(%rbp),%rax\nmovq -704(%rbp),%rsi\nmovq -696(%rbp),%rdi\nmovq %rsi,%r8\nmovq %rdi,%r9\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE16:\n.LBE7:\n.LBB17:\naddq $1,%rbx\n.L2:\n.LBE17:\ncmpq %r14,%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nleaq <.LC19>(%rip),%rax\nmovq %rax,-688(%rbp)\nmovq $3,-680(%rbp)\nleaq -64(%rbp),%rax\nmovq -688(%rbp),%rcx\nmovq -680(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-240(%rbp)\nleaq -32(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "qs := []question1108{\n\t{\n\t\tpara1108{\"STR\"},\n\t\tans1108{\"STR\"},\n\t},\n\t{\n\t\tpara1108{\"STR\"},\n\t\tans1108{\"STR\"},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1108, q.para1108\n\tfmt.Printf(\"STR\", p, defangIPaddr(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": "cmpq %fs:112,%rsp\njnb .L10\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq $0,-8(%rbp)\n.LBB4:\n.LBB5:\ncmpq $0,-24(%rbp)\njne .L5\n.LBB6:\n.LBB7:\nmovq $0,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L6\n.L5:\n.LBE7:\n.LBE6:\n.LBE5:\n.LBB8:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\njne .L7\n.LBB9:\n.LBB10:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L6\n.L7:\n.LBE10:\n.LBE9:\n.LBB11:\n.LBB12:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\njle .L8\n.LBB13:\nmovq -24(%rbp),%rax\nmovq <24>(%rax),%rax\nmovq %rax,-24(%rbp)\n.LBE13:\njmp .L9\n.L8:\n.LBB14:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-24(%rbp)\n.L9:\n.LBE14:\n.LBE12:\n.LBE11:\n.LBE8:\n.LBB15:\nmovq -32(%rbp),%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.avl.Get>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L6:\n.LBE15:\n.LBE4:\nleave\nret", "tgt": "if root == nil {\n\treturn nil\n}\nif root.Key == key {\n\treturn root\n} else if root.Key < key {\n\troot = root.Right\n} else {\n\troot = root.Left\n}\nreturn Get(root, key)"}
{"src": ".LFB0:\nleaq -712(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $712,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $664,%rsp\nmovq %rdi,-664(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-456(%rbp)\nmovq -456(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -456(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $5,-616(%rbp)\nmovq $5,-608(%rbp)\nmovq $2,-600(%rbp)\nleaq <type...67x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-448(%rbp)\nmovq -448(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq $4,<40>(%rax)\nmovq $2,<48>(%rax)\nmovq -448(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $7,-584(%rbp)\nmovq $7,-576(%rbp)\nmovq $6,-568(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovq -440(%rbp),%rax\nmovq $1,(%rax)\nmovq -440(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $1,-552(%rbp)\nmovq $1,-544(%rbp)\nmovq $1,-536(%rbp)\nleaq <type...613x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-432(%rbp)\nmovq -432(%rbp),%rax\nmovq $2,(%rax)\nmovq $1,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq $3,<40>(%rax)\nmovq $3,<48>(%rax)\nmovq $3,<56>(%rax)\nmovq $1,<64>(%rax)\nmovq $3,<72>(%rax)\nmovq $1,<80>(%rax)\nmovq $3,<88>(%rax)\nmovq $2,<96>(%rax)\nmovq -432(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $13,-520(%rbp)\nmovq $13,-512(%rbp)\nmovq $7,-504(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-424(%rbp)\nmovq -424(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -424(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq $5,-488(%rbp)\nmovq $5,-480(%rbp)\nmovq $2,-472(%rbp)\n.LBB2:\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\nmovq $0,-632(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq $5,-672(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %rbx,%rbx\njs .L3\ncmpq $4,%rbx\njg .L3\nmovq %rbx,%rax\nsalq $5,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -336(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\n.LBE8:\n.LBB9:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\n.LBE9:\n.LBB10:\nsubq $8,%rsp\npushq -640(%rbp)\npushq -648(%rbp)\npushq -656(%rbp)\ncall <go.problem697.findShortestSubArray>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\n.LBB11:\nmovq -632(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB18:\nmovl $5,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB12:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-704(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -640(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -184(%rbp),%rax\nmovq %rax,-696(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-688(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-680(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -704(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -688(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB15:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE15:\njmp .L9\n.L8:\n.LBB16:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE16:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC29>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -664(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE17:\n.LBE19:\n.LBE7:\n.LBB20:\naddq $1,%rbx\n.L2:\n.LBE20:\ncmpq -672(%rbp),%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   []int{1, 2, 2, 3, 1},\n\t\twant: 2,\n\t},\n\t{\n\t\tin:   []int{1, 2, 2, 3, 1, 4, 2},\n\t\twant: 6,\n\t},\n\t{\n\t\tin:   []int{1},\n\t\twant: 1,\n\t},\n\t{\n\t\tin:   []int{2, 1, 1, 2, 1, 3, 3, 3, 1, 3, 1, 3, 2},\n\t\twant: 7,\n\t},\n\t{\n\t\tin:   []int{1, 2, 2, 3, 1},\n\t\twant: 2,\n\t},\n}\nfor _, tt := range tests {\n\tgot := findShortestSubArray(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L16\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $136,%rsp\nleaq <string..d>(%rip),%rcx\nleaq <go..C6>(%rip),%rbx\nleaq <string..d>(%rip),%rax\nleaq <go..C7>(%rip),%rdx\nmovq %rcx,-112(%rbp)\nmovq %rbx,-104(%rbp)\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq -48(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "fmt.Println(runtime.GOOS, runtime.GOARCH)"}
{"src": ".LFB308:\ncmpq %fs:112,%rsp\njnb .L7726\nmovl $232,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL382:\nret\n.L7726:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $208,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\n.LBB6378:\nmovl $0,%edx\nmovl $0,%esi\nleaq <string..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nmovq $-1,-24(%rbp)\nmovq $-1,-32(%rbp)\n.LBB6379:\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB6380:\n.LBB6381:\n.LBB6382:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%r12\nmovl $0,%ebx\n.LBE6382:\njmp .L7710\n.L7725:\n.LBB6383:\nnop\n.LBE6383:\n.LBB6384:\n.LBB6385:\nmovq -136(%rbp),%rax\ntestq %rbx,%rbx\njs .L7711\ncmpq %rax,%rbx\njge .L7711\nmovq -144(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE6385:\n.LBB6386:\nmovq %rbx,-40(%rbp)\nmovq %rax,-48(%rbp)\n.LBE6386:\n.LBB6387:\n.LBB6388:\n.LBB6389:\ncmpq $0,-40(%rbp)\nsetg %al\ntestb %al,%al\njne .L7712\njmp .L7713\n.L7711:\n.LBE6389:\n.LBE6388:\n.LBE6387:\n.LBB6397:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7712:\n.LBE6397:\n.LBB6398:\n.LBB6396:\n.LBB6391:\n.LBB6390:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L7714\ncmpq %rdx,%rax\njl .L7723\n.L7714:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7723:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\naddq $1,%rax\ncmpq %rax,-48(%rbp)\nsete %al\n.L7713:\n.LBE6390:\n.LBE6391:\ntestb %al,%al\nje .L7716\n.LBB6392:\nmovq -40(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBE6392:\njmp .L7717\n.L7716:\n.LBB6393:\n.LBB6394:\ncmpq $0,-40(%rbp)\njle .L7718\n.LBB6395:\nleaq -112(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq -24(%rbp),%rcx\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.appendRanges>\naddq $48,%rsp\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-192(%rbp)\n.L7718:\n.LBE6395:\n.LBE6394:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -40(%rbp),%rax\nmovq %rax,-32(%rbp)\n.L7717:\n.LBE6393:\n.LBE6396:\n.LBE6398:\n.LBE6384:\n.LBB6399:\naddq $1,%rbx\n.L7710:\n.LBE6399:\ncmpq %r12,%rbx\njl .L7725\n.LBE6381:\n.LBE6380:\n.LBE6379:\n.LBB6400:\ncmpq $0,-32(%rbp)\njs .L7721\n.LBB6401:\nleaq -80(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq -24(%rbp),%rcx\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.appendRanges>\naddq $48,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-192(%rbp)\n.L7721:\n.LBE6401:\n.LBE6400:\n.LBB6402:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -216(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE6402:\n.LBE6378:\nmovq -216(%rbp),%rax\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "result := make([]string, 0)\nstart := -1\nend := -1\nfor i, num := range nums {\n\tif i > 0 && num == nums[i-1]+1 {\n\t\tend = i\n\t} else {\n\t\tif i > 0 {\n\t\t\tresult = appendRanges(result, nums, start, end)\n\t\t}\n\t\tstart = i\n\t\tend = i\n\t}\n}\nif end >= 0 {\n\tresult = appendRanges(result, nums, start, end)\n}\nreturn result"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L11\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L11:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq %rdx,-40(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L10:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\naddq $1,-8(%rbp)\n.L2:\n.LBE6:\ncmpq $-1,-32(%rbp)\njne .L3\nmovl $1,%eax\nsubq -40(%rbp),%rax\njmp .L4\n.L3:\ncmpq $0,-32(%rbp)\njne .L5\ncall <runtime.panicdivide@PLT>\n.L5:\nmovq -40(%rbp),%rax\ncqto\nidivq -32(%rbp)\naddq $1,%rax\n.L4:\nmovq -8(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem458.mypow>\ncmpq %rax,-24(%rbp)\njg .L10\n.LBE4:\n.LBE3:\n.LBB7:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.LBE7:\n.LBE2:\nleave\nret", "tgt": "pigs := 0\nfor mypow(minutesToTest/minutesToDie+1, pigs) < buckets {\n\tpigs++\n}\nreturn pigs"}
{"src": ".LFB0:\nleaq -568(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $568,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $520,%rsp\nmovq %rdi,-504(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\nmovq $2,-448(%rbp)\nmovq $1,-432(%rbp)\nleaq -448(%rbp),%rcx\nmovq %rcx,-480(%rbp)\nmovq $3,-472(%rbp)\nmovq $3,-464(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC13>(%rip),%rax\nmovl $69,%edx\nleaq -208(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBB2:\nmovq $0,-488(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L7:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -376(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -384(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE8:\n.LBB9:\nmovq %rax,-488(%rbp)\n.LBE9:\n.LBB10:\nmovq -488(%rbp),%rax\nmovq %rax,-496(%rbp)\ncall <go.leetcode.rand10>\nmovq %rax,-552(%rbp)\nleaq <go.leetcode..go.leetcode.para470..d>(%rip),%rdi\nmovq %rdi,-544(%rbp)\nleaq <go.leetcode..go.leetcode.para470..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-320(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-536(%rbp)\nleaq <int..d>(%rip),%rcx\nmovq %rcx,-528(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -552(%rbp),%rdi\nmovq %rdi,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-520(%rbp)\nmovdqa -544(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -528(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC14>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-336(%rbp)\n.LBE10:\n.LBE7:\n.LBB12:\naddq $1,%rbx\njmp .L2\n.L3:\n.LBE12:\n.LBB13:\n.LBB11:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE11:\n.LBE13:\ncmpq -512(%rbp),%rbx\njl .L7\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC15>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question470{\n\t{\n\t\tpara470{},\n\t\tans470{2},\n\t},\n\t{\n\t\tpara470{},\n\t\tans470{0},\n\t},\n\t{\n\t\tpara470{},\n\t\tans470{1},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans470, q.para470\n\tfmt.Printf(\"STR\", p, rand10())\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L6\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L6:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-24(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\n.LBB7:\n.LBB8:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.isSubtree>\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L4\n.LBB9:\nmovq -32(%rbp),%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.isSameTree>\n.L4:\n.LBE9:\n.LBE8:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L5\n.LBB10:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.isSubtree>\n.L5:\n.LBE10:\n.LBE7:\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L3:\n.LBE6:\n.LBE2:\nleave\nret", "tgt": "if s == nil {\n\treturn false\n}\nreturn isSubtree(s.Left, t) || isSameTree(s, t) || isSubtree(s.Right, t)"}
{"src": "cmpq %fs:112,%rsp\njnb .L573\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL58:\nret\n.L573:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq $0,-8(%rbp)\n.LBB474:\n.LBB475:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-16(%rbp)\n.LBB476:\nmovq -24(%rbp),%rax\nmovq <32>(%rax),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L569\n.LBB477:\nmovq -24(%rbp),%rax\nmovq <32>(%rax),%rax\ntestq %rax,%rax\njne .L570\ncall <runtime.panicmem@PLT>\n.L570:\naddq $8,%rax\ncmpq %rax,-16(%rbp)\nsetne %al\n.L569:\n.LBE477:\n.LBE476:\ntestb %al,%al\nje .L571\n.LBB478:\n.LBB479:\nmovq -16(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L572\n.L571:\n.LBE479:\n.LBE478:\n.LBE475:\n.LBB480:\nmovq $0,-8(%rbp)\nmovq -8(%rbp),%rax\n.L572:\n.LBE480:\n.LBE474:\nleave\nret", "tgt": "if p := e.r; e.list != nil && p != &e.list.root {\n\treturn p\n}\nreturn nil"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L22\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-152(%rbp)\nmovq %rsi,-160(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\nmovl $1,%edx\n.LBB5:\ncmpq $0,-152(%rbp)\nsete %al\ntestb %al,%al\nje .L2\n.LBB6:\ncmpq $0,-160(%rbp)\nsete %al\n.L2:\n.LBE6:\n.LBE5:\ncmpb %al,%dl\njne .L19\n.LBB7:\n.LBB8:\nmovq $0,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L5\n.L19:\n.LBE8:\n.LBE7:\n.LBB9:\nnop\n.LBE9:\ncmpq $0,-152(%rbp)\nsete %al\ncmpb %al,%dl\njne .L20\n.LBB10:\n.LBB11:\nmovq -160(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <go.day327.MergeBinaryTrees>\nmovq %rax,%r12\nmovq -160(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <go.day327.MergeBinaryTrees>\nmovq %rax,%rbx\nmovq -160(%rbp),%rax\nmovq (%rax),%r13\nleaq <go.day327.BinaryTree..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq %r13,-128(%rbp)\nmovq %r12,-120(%rbp)\nmovq %rbx,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB12:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE12:\njmp .L9\n.L8:\n.LBB13:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.day327.BinaryTree..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE13:\nmovq -136(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L5\n.L20:\n.LBE11:\n.LBE10:\n.LBB14:\nnop\n.LBE14:\ncmpq $0,-160(%rbp)\nsete %al\ncmpb %al,%dl\njne .L21\n.LBB15:\n.LBB16:\nmovq -152(%rbp),%rax\nmovq <8>(%rax),%rax\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.day327.MergeBinaryTrees>\nmovq %rax,%r12\nmovq -152(%rbp),%rax\nmovq <16>(%rax),%rax\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.day327.MergeBinaryTrees>\nmovq %rax,%rbx\nmovq -152(%rbp),%rax\nmovq (%rax),%r13\nleaq <go.day327.BinaryTree..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-104(%rbp)\nmovq %r13,-96(%rbp)\nmovq %r12,-88(%rbp)\nmovq %rbx,-80(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB17:\nmovq -104(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE17:\njmp .L13\n.L12:\n.LBB18:\nmovq -104(%rbp),%rax\nleaq -96(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.day327.BinaryTree..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L13:\n.LBE18:\nmovq -104(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L5\n.L21:\n.LBE16:\n.LBE15:\n.LBB19:\nnop\n.LBE19:\n.LBE4:\n.LBE3:\n.LBB20:\nmovq -160(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -152(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day327.MergeBinaryTrees>\nmovq %rax,%r12\nmovq -160(%rbp),%rax\nmovq <16>(%rax),%rdx\nmovq -152(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day327.MergeBinaryTrees>\nmovq %rax,%rbx\nmovq -152(%rbp),%rax\nmovq (%rax),%rdx\nmovq -160(%rbp),%rax\nmovq (%rax),%rax\nleaq (%rdx,%rax),%r13\nleaq <go.day327.BinaryTree..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq %r13,-64(%rbp)\nmovq %r12,-56(%rbp)\nmovq %rbx,-48(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L14\n.LBB21:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE21:\njmp .L15\n.L14:\n.LBB22:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.day327.BinaryTree..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L15:\n.LBE22:\nmovq -72(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.L5:\n.LBE20:\n.LBE2:\naddq $136,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "switch {\ncase one == nil && two == nil:\n\treturn nil\ncase one == nil:\n\treturn &BinaryTree{two.Val,\n\t\tMergeBinaryTrees(nil, two.Left),\n\t\tMergeBinaryTrees(nil, two.Right),\n\t}\ncase two == nil:\n\treturn &BinaryTree{one.Val,\n\t\tMergeBinaryTrees(one.Left, nil),\n\t\tMergeBinaryTrees(one.Right, nil),\n\t}\n}\nreturn &BinaryTree{one.Val + two.Val,\n\tMergeBinaryTrees(one.Left, two.Left),\n\tMergeBinaryTrees(one.Right, two.Right),\n}"}
{"src": ".LFB0:\nleaq -344(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L49\nmovl $344,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L49:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $328,%rsp\nmovq %rdi,-328(%rbp)\nmovq %rsi,-336(%rbp)\nmovq $0,-288(%rbp)\nmovq $0,-280(%rbp)\nmovq $0,-272(%rbp)\n.LBB2:\nmovq -336(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-320(%rbp)\nmovq %rbx,-312(%rbp)\nmovq %rbx,-304(%rbp)\n.LBB3:\ncmpq $0,-336(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -328(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -312(%rbp),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L4:\nmovq -320(%rbp),%rbx\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -264(%rbp),%rax\nmovq $1,(%rax)\nmovq -264(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq $1,-248(%rbp)\nmovq $1,-240(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -240(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L5\n.LBB6:\nmovq -256(%rbp),%rax\nmovq %rax,(%rbx)\njmp .L6\n.L5:\n.LBE6:\n.LBB7:\nmovq -256(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L6:\n.LBE7:\n.LBB8:\nmovq $1,-24(%rbp)\n.LBB9:\njmp .L7\n.L48:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\nmovq -24(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -312(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L8\ncmpq %rax,-24(%rbp)\njl .L36\n.L8:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\nmovq -320(%rbp),%rsi\nmovq -24(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq %rdx,-224(%rbp)\nmovq %rbx,-216(%rbp)\nmovq %rbx,-208(%rbp)\nmovq -216(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -208(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L10\n.LBB12:\nmovq -224(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L11\n.L10:\n.LBE12:\n.LBB13:\nmovq -224(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L11:\n.LBE13:\nmovq -312(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L12\ncmpq %rax,-24(%rbp)\njl .L37\n.L12:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\nmovq -320(%rbp),%rcx\nmovq -24(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\ntestq %rax,%rax\njg .L14\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq -192(%rbp),%rax\nmovq $1,(%rax)\nmovq -312(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L15\ncmpq %rax,-24(%rbp)\njl .L38\n.L15:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq -320(%rbp),%rcx\nmovq -24(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L17\ncmpq %rax,-24(%rbp)\njge .L17\nmovq -160(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq $1,(%rax)\n.LBB14:\nmovq $1,-32(%rbp)\n.LBB15:\njmp .L18\n.L17:\n.LBE15:\n.LBE14:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L47:\n.LBB20:\n.LBB19:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\nmovq -312(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L19\ncmpq %rax,-24(%rbp)\njl .L39\n.L19:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -320(%rbp),%rcx\nmovq -24(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L21\ncmpq %rax,-32(%rbp)\njl .L40\n.L21:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq -312(%rbp),%rdx\ntestq %rax,%rax\njs .L23\ncmpq %rdx,%rax\njl .L41\n.L23:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -320(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-80(%rbp)\nmovq -32(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -88(%rbp),%rax\ntestq %rdx,%rdx\njs .L25\ncmpq %rax,%rdx\njl .L42\n.L25:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq -312(%rbp),%rcx\ntestq %rax,%rax\njs .L27\ncmpq %rcx,%rax\njl .L43\n.L27:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq -320(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L29\ncmpq %rax,-32(%rbp)\njl .L44\n.L29:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L44:\nmovq -96(%rbp),%rax\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq -64(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -128(%rbp),%rsi\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\naddq %rcx,%rdx\nmovq %rdx,(%rax)\n.LBE17:\n.LBB18:\naddq $1,-32(%rbp)\n.L18:\n.LBE18:\nmovq -32(%rbp),%rax\ncmpq -24(%rbp),%rax\njl .L47\n.LBE19:\n.LBE20:\n.LBE11:\n.LBB21:\naddq $1,-24(%rbp)\n.L7:\n.LBE21:\nmovq -24(%rbp),%rax\ncmpq -336(%rbp),%rax\njl .L48\n.LBE9:\n.LBE8:\n.LBB22:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -328(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE22:\n.LBE2:\nmovq -328(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "rets := make([][]int, numRows)\nif numRows == 0 {\n\treturn rets\n}\nrets[0] = []int{1}\nfor i := 1; i < numRows; i++ {\n\trets[i] = make([]int, i+1)\n\trets[i][0] = 1\n\trets[i][i] = 1\n\tfor j := 1; j < i; j++ {\n\t\trets[i][j] = rets[i-1][j-1] + rets[i-1][j]\n\t}\n}\nreturn rets"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L25\nmovl $40,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L25:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovb $0,-9(%rbp)\n.LBB21:\nmovq $0,-8(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-24(%rbp)\n.LBB22:\n.LBB23:\njmp .L16\n.L24:\n.LBB24:\nnop\n.LBE24:\n.LBB25:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L17\ncmpq %rax,-8(%rbp)\njl .L22\n.L17:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -8(%rbp),%rax\naddq %rdx,%rax\naddq $1,%rax\nmovq %rax,-8(%rbp)\n.L16:\n.LBE25:\nmovq -8(%rbp),%rax\ncmpq -24(%rbp),%rax\njl .L24\n.LBE23:\n.LBE22:\n.LBB26:\nmovq -8(%rbp),%rax\ncmpq -24(%rbp),%rax\nsete %al\nmovb %al,-9(%rbp)\nmovzbl -9(%rbp),%eax\n.LBE26:\n.LBE21:\nleave\nret", "tgt": "i, l := 0, len(bits)-1\nfor i < l {\n\ti += bits[i] + 1\n}\nreturn i == l"}
{"src": ".LFB0:\nleaq -856(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $856,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $808,%rsp\nleaq <.LC9>(%rip),%rax\nmovl $5,%edx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nleaq <.LC10>(%rip),%rcx\nmovl $8,%ebx\nmovq %rcx,-752(%rbp)\nmovq %rbx,-744(%rbp)\nmovq $35,-56(%rbp)\nleaq <string..d>(%rip),%rsi\nleaq <go..C6>(%rip),%rdi\nmovq %rsi,-688(%rbp)\nmovq %rdi,-680(%rbp)\nleaq -688(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $1,-360(%rbp)\nmovq $1,-352(%rbp)\nleaq -336(%rbp),%rax\nsubq $8,%rsp\npushq -352(%rbp)\npushq -360(%rbp)\npushq -368(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-704(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-848(%rbp)\nleaq <go..C7>(%rip),%rbx\nmovq %rbx,-840(%rbp)\nmovq %rax,-832(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -648(%rbp),%rcx\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -648(%rbp),%rcx\nleaq -640(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -648(%rbp),%rax\nmovq %rax,-824(%rbp)\nmovdqa -848(%rbp),%xmm0\nmovups %xmm0,-624(%rbp)\nmovdqa -832(%rbp),%xmm1\nmovups %xmm1,-608(%rbp)\nleaq -624(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $2,-296(%rbp)\nmovq $2,-288(%rbp)\nleaq -272(%rbp),%rax\nsubq $8,%rsp\npushq -288(%rbp)\npushq -296(%rbp)\npushq -304(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-656(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-816(%rbp)\nleaq <go..C8>(%rip),%rbx\nmovq %rbx,-808(%rbp)\nmovq %rax,-800(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-568(%rbp)\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -568(%rbp),%rcx\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -568(%rbp),%rax\nleaq -560(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -568(%rbp),%rax\nmovq %rax,-792(%rbp)\nmovdqa -816(%rbp),%xmm2\nmovups %xmm2,-544(%rbp)\nmovdqa -800(%rbp),%xmm3\nmovups %xmm3,-528(%rbp)\nleaq -544(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $2,-232(%rbp)\nmovq $2,-224(%rbp)\nleaq -208(%rbp),%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-576(%rbp)\nleaq <string..d>(%rip),%r14\nleaq <go..C9>(%rip),%r15\nleaq <int..d>(%rip),%rax\nmovq %rax,-784(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-488(%rbp)\nmovq -488(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -488(%rbp),%rax\nmovq %rax,-776(%rbp)\nmovq %r14,-480(%rbp)\nmovq %r15,-472(%rbp)\nmovdqa -784(%rbp),%xmm4\nmovups %xmm4,-464(%rbp)\nleaq -480(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq -144(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-496(%rbp)\nleaq <string..d>(%rip),%r12\nleaq <go..C15>(%rip),%r13\nleaq <string..d>(%rip),%rax\nmovq %rax,-768(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-424(%rbp)\nmovq <main.Country>(%rip),%rax\nmovq <8+main.Country>(%rip),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB6:\nmovq -424(%rbp),%rcx\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE6:\njmp .L7\n.L6:\n.LBB7:\nmovq -424(%rbp),%rax\nleaq -416(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE7:\nmovq -424(%rbp),%rax\nmovq %rax,-760(%rbp)\nmovq %r12,-400(%rbp)\nmovq %r13,-392(%rbp)\nmovdqa -768(%rbp),%xmm5\nmovups %xmm5,-384(%rbp)\nleaq -400(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-432(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "fname, lname := \"STR\", \"STR\"\nage := 35\nfmt.Println(Title)\nfmt.Println(\"STR\", fname)\nfmt.Println(\"STR\", lname)\nfmt.Println(\"STR\", age)\nfmt.Println(\"STR\", Country)"}
{"src": "cmpq %fs:112,%rsp\njnb .L37\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\n.LBB38:\nmovq $0,-8(%rbp)\n.LBB39:\njmp .L32\n.L36:\n.LBB40:\nnop\n.LBE40:\n.LBB41:\nmovq $7,-64(%rbp)\nmovq $8,-56(%rbp)\nmovq $10,-48(%rbp)\nleaq -64(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq $3,-24(%rbp)\nmovq $3,-16(%rbp)\nsubq $8,%rsp\npushq -16(%rbp)\npushq -24(%rbp)\npushq -32(%rbp)\ncall <go.calc.Sum>\naddq $32,%rsp\n.LBE41:\n.LBB42:\naddq $1,-8(%rbp)\n.L32:\n.LBE42:\nmovq -72(%rbp),%rax\nmovq <272>(%rax),%rax\ncmpq %rax,-8(%rbp)\njl .L36\n.LBE39:\n.LBE38:\nleave\nret", "tgt": "for i := 0; i < b.N; i++ {\n\tSum(7, 8, 10)\n}"}
{"src": ".LFB0:\nleaq -776(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L39\nmovl $776,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $728,%rsp\nleaq <pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%rsi\nmovq <os.Stdin>(%rip),%rax\nmovq %rax,%rdi\nmovq %rsi,%rcx\nmovq %rdi,%rbx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <encoding..z2fxml.NewDecoder@PLT>\nmovq %rax,-56(%rbp)\nmovq $0,-544(%rbp)\nmovq $0,-536(%rbp)\nmovq $0,-528(%rbp)\n.L29:\n.LBB2:\n.LBB3:\n.LBB4:\nleaq -272(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <encoding..z2fxml.Decoder.Token@PLT>\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\n.LBB5:\nmovq <io.EOF>(%rip),%rax\nmovq <8+io.EOF>(%rip),%rdx\nmovq -576(%rbp),%rdi\nmovq -568(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.ifaceeq@PLT>\ntestb %al,%al\njne .L34\n.LBB6:\n.LBB7:\nmovq -576(%rbp),%rax\ntestq %rax,%rax\nje .L4\n.LBB8:\nmovq -576(%rbp),%rax\ntestq %rax,%rax\njne .L5\nmovl $0,%eax\njmp .L6\n.L5:\nmovq -576(%rbp),%rax\nmovq (%rax),%rax\n.L6:\nmovq %rax,-768(%rbp)\nmovq -568(%rbp),%rax\nmovq %rax,-760(%rbp)\nmovdqa -768(%rbp),%xmm0\nmovups %xmm0,-448(%rbp)\nleaq -448(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nleaq <.LC2>(%rip),%rax\nmovq %rax,-720(%rbp)\nmovq $14,-712(%rbp)\nleaq <pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%rax\nmovq %rax,-704(%rbp)\nmovq <os.Stderr>(%rip),%rax\nmovq %rax,-696(%rbp)\nleaq -208(%rbp),%r9\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rdi,%rcx\nmovq %rax,%rdx\nmovq %r9,%rdi\ncall <fmt.Fprintf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovl $1,%edi\ncall <os.Exit@PLT>\n.L4:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBE5:\n.LBB10:\nmovq -560(%rbp),%rcx\nmovq -552(%rbp),%rbx\n.LBB11:\nmovq %rcx,%rax\nmovq %rbx,%rdx\nmovq %rax,%rdx\nleaq <encoding..z2fxml.StartElement..d>(%rip),%rax\ncmpq %rax,%rdx\njne .L35\n.LBB12:\nmovq %rcx,%rdx\nleaq <encoding..z2fxml.StartElement..d>(%rip),%rax\ncmpq %rax,%rdx\nje .L9\nmovq %rcx,%rax\nleaq <encoding..z2fxml.Token..d>(%rip),%rdx\nmovq %rax,%rsi\nleaq <encoding..z2fxml.StartElement..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L9:\nmovq %rbx,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq <48>(%rcx),%rax\nmovq %rax,-624(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rbx\nmovq -656(%rbp),%r12\nmovq -648(%rbp),%r13\nleaq <1>(%rbx),%rcx\nmovq -416(%rbp),%rsi\nmovq %rcx,%rdx\nmovq %rsi,%rax\ncmpq %rax,%rdx\njbe .L10\n.LBB13:\nmovq -432(%rbp),%rax\nleaq -176(%rbp),%rdi\nmovq %rcx,%r9\nmovq %rsi,%r8\nmovq %rbx,%rcx\nmovq %rax,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBE13:\njmp .L11\n.L10:\n.LBB14:\nmovq -432(%rbp),%rax\nmovq -416(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rcx,-536(%rbp)\nmovq %rdx,-528(%rbp)\n.L11:\n.LBE14:\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -432(%rbp),%rdx\nmovq %rbx,%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rcx\nmovq %r13,%rax\nmovq %rax,<8>(%rcx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB15:\nmovq %r12,%rax\nmovq %rax,(%rcx)\n.LBE15:\n.LBE12:\njmp .L14\n.L12:\n.LBB17:\n.LBB16:\nmovq %r12,%rax\nmovq %rax,%rdx\nmovq %rcx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.LBE16:\n.LBE17:\njmp .L14\n.L35:\n.LBB18:\nnop\n.LBE18:\nleaq <encoding..z2fxml.EndElement..d>(%rip),%rax\ncmpq %rax,%rdx\njne .L36\n.LBB19:\nmovq %rcx,%rdx\nleaq <encoding..z2fxml.EndElement..d>(%rip),%rax\ncmpq %rax,%rdx\nje .L17\nmovq %rcx,%rax\nleaq <encoding..z2fxml.Token..d>(%rip),%rdx\nmovq %rax,%rsi\nleaq <encoding..z2fxml.EndElement..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L17:\nmovq %rbx,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -536(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -528(%rbp),%rax\ntestq %rdi,%rdi\njs .L18\ncmpq %rax,%rdi\njg .L18\ntestq %rdi,%rdi\njns .L19\njmp .L33\n.L18:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L33:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L19:\nmovq -544(%rbp),%rax\nmovq -528(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdi,-536(%rbp)\nmovq %rdx,-528(%rbp)\n.LBE19:\njmp .L14\n.L36:\n.LBB20:\nnop\n.LBE20:\nleaq <encoding..z2fxml.CharData..d>(%rip),%rax\ncmpq %rax,%rdx\njne .L37\n.LBB21:\nmovq %rcx,%rdx\nleaq <encoding..z2fxml.CharData..d>(%rip),%rax\ncmpq %rax,%rdx\nje .L22\nmovq %rcx,%rax\nleaq <encoding..z2fxml.Token..d>(%rip),%rdx\nmovq %rax,%rsi\nleaq <encoding..z2fxml.CharData..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L22:\nmovq %rbx,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-592(%rbp)\n.LBB22:\nmovq <16+os.Args>(%rip),%rax\ntestq %rax,%rax\njg .L23\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L23:\nmovq <os.Args>(%rip),%rdx\nmovq <16+os.Args>(%rip),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $4,%rax\naddq %rdx,%rax\nmovq %rax,-144(%rbp)\nmovq <8+os.Args>(%rip),%rax\nsubq $1,%rax\nmovq %rax,-136(%rbp)\nmovq <16+os.Args>(%rip),%rax\nsubq $1,%rax\nmovq %rax,-128(%rbp)\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\npushq -528(%rbp)\npushq -536(%rbp)\npushq -544(%rbp)\ncall <main.containsAll>\naddq $48,%rsp\ntestb %al,%al\nje .L38\n.LBB23:\nleaq <.LC3>(%rip),%rax\nmovq %rax,-688(%rbp)\nmovq $1,-680(%rbp)\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -528(%rbp)\npushq -536(%rbp)\npushq -544(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <strings.Join@PLT>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <string..d>(%rip),%rax\nmovq %rax,-752(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq %r12,-368(%rbp)\nmovq %r13,-360(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L25\n.LBB24:\nmovq -376(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE24:\njmp .L26\n.L25:\n.LBB25:\nmovq -376(%rbp),%rcx\nleaq -368(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L26:\n.LBE25:\nmovq -376(%rbp),%rax\nmovq %rax,-744(%rbp)\nleaq <encoding..z2fxml.CharData..d>(%rip),%rax\nmovq %rax,-736(%rbp)\nleaq <encoding..z2fxml.CharData..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -592(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L27\n.LBB26:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE26:\njmp .L28\n.L27:\n.LBB27:\nmovq -344(%rbp),%rcx\nleaq -336(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <encoding..z2fxml.CharData..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L28:\n.LBE27:\nmovq -344(%rbp),%rax\nmovq %rax,-728(%rbp)\nmovdqa -752(%rbp),%xmm1\nmovups %xmm1,-304(%rbp)\nmovdqa -736(%rbp),%xmm2\nmovups %xmm2,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq <.LC4>(%rip),%r14\nmovl $7,%r15d\nleaq -80(%rbp),%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE23:\n.LBE22:\n.LBE21:\njmp .L38\n.L37:\n.LBB28:\nnop\njmp .L29\n.L38:\n.LBE28:\nnop\n.L14:\n.LBE11:\n.LBE10:\n.LBE4:\njmp .L29\n.L34:\n.LBB30:\n.LBB29:\n.LBB9:\nnop\n.LBE9:\n.LBE29:\n.LBE30:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "dec := xml.NewDecoder(os.Stdin)\nvar stack []string\nfor {\n\ttok, err := dec.Token()\n\tif err == io.EOF {\n\t\tbreak\n\t} else if err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"STR\", err)\n\t\tos.Exit(1)\n\t}\n\tswitch tok := tok.(type) {\n\tcase xml.StartElement:\n\t\tstack = append(stack, tok.Name.Local)\n\tcase xml.EndElement:\n\t\tstack = stack[:len(stack)-1]\n\tcase xml.CharData:\n\t\tif containsAll(stack, os.Args[1:]) {\n\t\t\tfmt.Printf(\"STR\", strings.Join(stack, \"STR\"), tok)\n\t\t}\n\t}\n}"}
{"src": ".LFB0:\nleaq -568(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L39\nmovl $568,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $520,%rsp\nmovq %rdi,-520(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq $0,-400(%rbp)\nmovq $0,-392(%rbp)\nmovq $0,-384(%rbp)\n.LBB2:\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\nmovq $0,-416(%rbp)\nmovq $0,-56(%rbp)\nleaq <.LC16>(%rip),%rcx\nmovl $1,%ebx\nleaq -464(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rsi,%rdi\nmovq %rbx,%r8\nmovq -544(%rbp),%rsi\nmovq -536(%rbp),%rdx\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <strings.Split@PLT>\nmovb $0,-57(%rbp)\n.LBB3:\nmovq $0,-72(%rbp)\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L38:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -360(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -368(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rbx,-72(%rbp)\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBE10:\n.LBB11:\nleaq -176(%rbp),%rdi\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nleaq -336(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicerune@PLT>\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-496(%rbp)\n.LBB12:\n.LBB13:\nmovq -472(%rbp),%rax\ntestq %rax,%rax\nje .L4\njmp .L34\n.L3:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB34:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE34:\n.LBB35:\n.LBB17:\n.LBB15:\nmovq -480(%rbp),%rax\nleaq <.LC17>(%rip),%rdx\ncmpq %rdx,%rax\njne .L6\nmovl $1,%eax\njmp .L8\n.L6:\nmovl $1,%eax\njmp .L8\n.L34:\nmovl $0,%eax\n.L8:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L9\n.LBB14:\nsubq $8,%rsp\npushq -496(%rbp)\npushq -504(%rbp)\npushq -512(%rbp)\ncall <go.day263.isValid>\naddq $32,%rsp\nxorl $1,%eax\n.L9:\n.LBE14:\n.LBE15:\ntestb %al,%al\nje .L10\n.LBB16:\nmovb $0,-57(%rbp)\njmp .L30\n.L10:\n.LBE16:\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -504(%rbp),%rax\ntestq %rax,%rax\njg .L12\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq -512(%rbp),%rax\nmovl (%rax),%eax\ncmpl $64,%eax\nsetg %al\ntestb %al,%al\nje .L13\n.LBB20:\nmovq -504(%rbp),%rax\ntestq %rax,%rax\njg .L14\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq -512(%rbp),%rax\nmovl (%rax),%eax\ncmpl $90,%eax\nsetle %al\n.L13:\n.LBE20:\n.LBE19:\ntestb %al,%al\nje .L15\n.LBB21:\nmovb $1,-57(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-56(%rbp)\njmp .L30\n.L15:\n.LBE21:\n.LBE18:\n.LBB22:\nmovq -504(%rbp),%rax\nsubq $1,%rax\nmovq -504(%rbp),%rdx\ntestq %rax,%rax\njs .L16\ncmpq %rdx,%rax\njl .L35\n.L16:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq -512(%rbp),%rdx\nsalq $2,%rax\naddq %rdx,%rax\nmovl (%rax),%eax\nmovl %eax,-76(%rbp)\n.LBB23:\n.LBB24:\ncmpl $46,-76(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L18\n.LBB25:\ncmpl $33,-76(%rbp)\nsete %al\n.L18:\n.LBE25:\n.LBE24:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L19\n.LBB26:\ncmpl $63,-76(%rbp)\nsete %al\n.L19:\n.LBE26:\n.LBE23:\ntestb %al,%al\nje .L30\n.LBB27:\n.LBB28:\ncmpb $0,-57(%rbp)\nje .L30\n.LBB29:\nmovq -72(%rbp),%rax\nleaq <1>(%rax),%rdi\nmovq -448(%rbp),%rax\ntestq %rdi,%rdi\njs .L21\ncmpq %rax,%rdi\njg .L21\ncmpq $0,-56(%rbp)\njns .L22\njmp .L23\n.L21:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L22:\ncmpq %rdi,-56(%rbp)\njle .L36\n.L23:\nmovq -56(%rbp),%rax\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L36:\nleaq <.LC16>(%rip),%r14\nmovl $1,%r15d\nmovq -464(%rbp),%rdx\nmovq -448(%rbp),%rax\ncmpq %rax,-56(%rbp)\nje .L25\nmovq -56(%rbp),%rax\nsalq $4,%rax\njmp .L26\n.L25:\nmovl $0,%eax\n.L26:\naddq %rdx,%rax\nmovq %rax,-144(%rbp)\nmovq %rdi,%rax\nsubq -56(%rbp),%rax\nmovq %rax,-136(%rbp)\nmovq -448(%rbp),%rax\nsubq -56(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <strings.Join@PLT>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r10\nmovq %r10,-552(%rbp)\nleaq <1>(%r10),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L27\n.LBB30:\nmovq -208(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r10,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-416(%rbp)\n.LBE30:\njmp .L28\n.L27:\n.LBB31:\nmovq -208(%rbp),%rcx\nmovq -192(%rbp),%rdx\nmovq %rcx,-432(%rbp)\nmovq %rax,-424(%rbp)\nmovq %rdx,-416(%rbp)\n.L28:\n.LBE31:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq -552(%rbp),%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L29\n.LBB32:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L30\n.L29:\n.LBE32:\n.LBB33:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L30:\n.LBE33:\n.LBE29:\n.LBE28:\n.LBE27:\n.LBE22:\n.LBE35:\n.LBE8:\n.LBB36:\naddq $1,%rbx\n.L2:\n.LBE36:\ncmpq -528(%rbp),%rbx\njl .L38\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB37:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -520(%rbp),%rcx\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -384(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE37:\n.LBE2:\nmovq -520(%rbp),%rax\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var sentences []string\nvar start int\nspaceDelimited := strings.Split(text, \"STR\")\npossibleSentence := false\nfor i, part := range spaceDelimited {\n\trunes := []rune(part)\n\tif part == \"STR\" || !isValid(runes) {\n\t\tpossibleSentence = false\n\t\tcontinue\n\t}\n\tif runes[0] >= 'A' && runes[0] <= 'Z' {\n\t\tpossibleSentence = true\n\t\tstart = i\n\t\tcontinue\n\t}\n\tif last := runes[len(runes)-1]; last == '.' || last == '!' || last == '?' {\n\t\tif possibleSentence {\n\t\t\tsentences = append(sentences, strings.Join(spaceDelimited[start:i+1], \"STR\"))\n\t\t}\n\t}\n}\nreturn sentences"}
{"src": "leaq -424(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L542\nmovl $424,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL56:\nret\n.L542:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $376,%rsp\nmovq %rdi,-344(%rbp)\nleaq -304(%rbp),%rax\nmovl $10,%ecx\nmovl $20,%edx\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.binaryTree.randomSlice>\nleaq -336(%rbp),%rax\nmovl $10,%ecx\nmovl $10,%edx\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.binaryTree.randomSlice>\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq $0,(%rax)\nmovq %rax,-56(%rbp)\ncall <go.binaryTree.newRBT>\nmovq %rax,-64(%rbp)\n.LBB548:\nmovq $0,-72(%rbp)\n.LBB549:\n.LBB550:\n.LBB551:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%r13\nmovl $0,%r12d\n.LBE551:\njmp .L517\n.L538:\n.LBB552:\nnop\n.LBE552:\n.LBB553:\n.LBB554:\nmovq -264(%rbp),%rax\ntestq %r12,%r12\njs .L518\ncmpq %rax,%r12\njge .L518\nmovq -272(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE554:\n.LBB555:\nmovq %rax,-72(%rbp)\n.LBE555:\n.LBB556:\nleaq <uint32..d>(%rip),%r14\nleaq <uint32..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -248(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovl %edx,(%rax)\nmovq -248(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -64(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.rbt.Insert>\n.LBE556:\n.LBE553:\n.LBB558:\naddq $1,%r12\njmp .L517\n.L518:\n.LBE558:\n.LBB559:\n.LBB557:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L517:\n.LBE557:\n.LBE559:\ncmpq %r13,%r12\njl .L538\n.LBE550:\n.LBE549:\n.LBE548:\n.LBB560:\nmovq $0,-80(%rbp)\nmovq $0,-88(%rbp)\n.LBB561:\n.LBB562:\n.LBB563:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r13\nmovl $0,%r12d\n.LBE563:\njmp .L521\n.L541:\n.LBB564:\nnop\n.LBE564:\n.LBB565:\n.LBB566:\nmovq -232(%rbp),%rax\ntestq %r12,%r12\njs .L522\ncmpq %rax,%r12\njge .L522\nmovq -240(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE566:\n.LBB567:\nmovq %r12,-80(%rbp)\nmovq %rax,-88(%rbp)\n.LBE567:\n.LBB568:\nmovq -296(%rbp),%rax\ncmpq $0,-88(%rbp)\njns .L523\njmp .L524\n.L522:\n.LBE568:\n.LBB583:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L523:\n.LBE583:\n.LBB584:\ncmpq %rax,-88(%rbp)\njl .L536\n.L524:\nmovq -88(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L536:\nmovq -304(%rbp),%rdx\nmovq -88(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovl %eax,%edx\nmovq -64(%rbp),%rax\nmovl %edx,%esi\nmovq %rax,%rdi\ncall <go.binaryTree.rbt.Delete>\nmovq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <go.binaryTree.rbt.Root..stub>\nmovq %rax,%r14\nmovq %rdx,%r15\nmovq <go.binaryTree.debug>(%rip),%rax\nmovzbl (%rax),%eax\nmovq -56(%rbp),%rcx\nmovq -344(%rbp),%rdi\nmovl %eax,%edx\nmovq %rcx,%rsi\ncall <go.binaryTree.checkGBT>\nmovq %rax,%rsi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rdi\nmovq -64(%rbp),%rax\nmovq %rsi,%rcx\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.rbt.PreOrderWalk..stub>\nmovb %al,-89(%rbp)\n.LBB569:\ncmpb $0,-89(%rbp)\njne .L539\n.LBE569:\n.LBB571:\nmovq -56(%rbp),%rax\nmovq (%rax),%rdx\nmovq -328(%rbp),%rax\nsubq -80(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,%rdx\nje .L528\n.LBB572:\nmovq -328(%rbp),%rbx\nleaq <string..d>(%rip),%r15\nmovq %r15,-416(%rbp)\nleaq <go..C223>(%rip),%rax\nmovq %rax,-408(%rbp)\nleaq <int..d>(%rip),%r14\nmovq %r14,-400(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nsubq -80(%rbp),%rbx\nmovq %rbx,%rdx\nmovq -216(%rbp),%rax\nsubq $1,%rdx\nmovq %rdx,(%rax)\nmovq -216(%rbp),%rax\nmovq %rax,-392(%rbp)\nmovq %r15,-384(%rbp)\nleaq <go..C224>(%rip),%rax\nmovq %rax,-376(%rbp)\nmovq %r14,-368(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-208(%rbp)\nmovq -208(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rdx,(%rax)\nmovq -208(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovdqa -416(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nmovdqa -400(%rbp),%xmm1\nmovups %xmm1,-176(%rbp)\nmovdqa -384(%rbp),%xmm2\nmovups %xmm2,-160(%rbp)\nmovdqa -368(%rbp),%xmm3\nmovups %xmm3,-144(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L529\n.LBB573:\nmovq -200(%rbp),%rax\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\n.LBE573:\njmp .L530\n.L529:\n.LBB574:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L530:\n.LBE574:\nmovq -200(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $4,-120(%rbp)\nmovq $4,-112(%rbp)\nmovq -344(%rbp),%rax\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Log..stub@PLT>\naddq $32,%rsp\nmovq -344(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Fail..stub@PLT>\n.L528:\n.LBE572:\n.LBE571:\nmovq -56(%rbp),%rax\nmovq $0,(%rax)\n.LBB575:\nmovq -328(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-80(%rbp)\nje .L531\n.LBB576:\nmovq -64(%rbp),%rdx\nmovq -344(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.checkRBT>\nmovb %al,-89(%rbp)\n.LBB577:\ncmpb $0,-89(%rbp)\njne .L540\n.L531:\n.LBE577:\n.LBE576:\n.LBE575:\n.LBE584:\n.LBE565:\n.LBB586:\naddq $1,%r12\n.L521:\n.LBE586:\ncmpq %r13,%r12\njl .L541\njmp .L516\n.L539:\n.LBB587:\n.LBB585:\n.LBB581:\n.LBB570:\nnop\njmp .L516\n.L540:\n.LBE570:\n.LBE581:\n.LBB582:\n.LBB580:\n.LBB579:\n.LBB578:\nnop\n.L516:\n.LBE578:\n.LBE579:\n.LBE580:\n.LBE582:\n.LBE585:\n.LBE587:\n.LBE562:\n.LBE561:\n.LBE560:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "arr := randomSlice(0, 20, 10)\ndeleteSequence := randomSlice(0, 10, 10)\nnodeCnt := 0\nrbt := newRBT()\nfor _, v := range arr {\n\trbt.Insert(uint32(v))\n}\nfor i, v := range deleteSequence {\n\trbt.Delete(uint32(arr[v]))\n\tstop := rbt.PreOrderWalk(rbt.Root(), checkGBT(t, &nodeCnt, *debug))\n\tif stop {\n\t\treturn\n\t}\n\tif nodeCnt != len(deleteSequence)-1-i {\n\t\tt.Log(\"STR\", len(deleteSequence)-1-i, \"STR\", nodeCnt)\n\t\tt.Fail()\n\t}\n\tnodeCnt = 0\n\tif i != len(deleteSequence)-1 {\n\t\tstop = checkRBT(t, rbt)\n\t\tif stop {\n\t\t\treturn\n\t\t}\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $216,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $192,%rsp\nmovq %rdi,-200(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-192(%rbp)\nmovq %rbx,-184(%rbp)\nmovq %rbx,-176(%rbp)\n.LBB3:\nmovq $0,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L25:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -120(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rbx,-24(%rbp)\nmovq %rax,-32(%rbp)\n.LBE10:\n.LBB11:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq -176(%rbp),%rdx\ntestq %rax,%rax\njns .L4\njmp .L5\n.L3:\n.LBE11:\n.LBB12:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE12:\n.LBB13:\ncmpq %rdx,%rax\njle .L20\n.L5:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L20:\nmovq -176(%rbp),%rdx\ncmpq $0,-32(%rbp)\njs .L7\ncmpq %rdx,-32(%rbp)\njle .L21\n.L7:\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L21:\nmovq -192(%rbp),%rcx\nmovq -176(%rbp),%rdx\ncmpq %rdx,%rax\nje .L9\nmovq %rax,%rdx\nsalq $3,%rdx\njmp .L10\n.L9:\nmovl $0,%edx\n.L10:\naddq %rcx,%rdx\nmovq %rdx,-96(%rbp)\nmovq -184(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-88(%rbp)\nmovq -176(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-80(%rbp)\nmovq -192(%rbp),%rdx\nmovq -176(%rbp),%rax\ncmpq %rax,-32(%rbp)\nje .L11\nmovq -32(%rbp),%rax\nsalq $3,%rax\njmp .L12\n.L11:\nmovl $0,%eax\n.L12:\naddq %rdx,%rax\nmovq %rax,-64(%rbp)\nmovq -184(%rbp),%rax\nsubq -32(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -176(%rbp),%rax\nsubq -32(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -88(%rbp),%rax\nmovq -56(%rbp),%rdx\ncmpq %rax,%rdx\ncmovle %rdx,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -64(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memmove@PLT>\nmovq -184(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L13\ncmpq %rax,-32(%rbp)\njl .L22\n.L13:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L15\ncmpq %rax,-24(%rbp)\njl .L23\n.L15:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -192(%rbp),%rcx\nmovq -32(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\n.LBE13:\n.LBE8:\n.LBB14:\naddq $1,%rbx\n.L2:\n.LBE14:\ncmpq %r12,%rbx\njl .L25\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB15:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -200(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE15:\n.LBE2:\nmovq -200(%rbp),%rax\naddq $192,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "ans := make([]int, len(nums))\nfor i, idx := range index {\n\tcopy(ans[idx+1:], ans[idx:])\n\tans[idx] = nums[i]\n}\nreturn ans"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L15\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L3\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L3:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-16(%rbp)\n.LBB3:\nmovq $0,-32(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%rcx\nmovl $0,%eax\n.LBE6:\njmp .L4\n.L14:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njge .L5\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE9:\n.LBB10:\nmovq %rdx,-32(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -32(%rbp),%rdx\ncmpq -8(%rbp),%rdx\njl .L6\njmp .L7\n.L5:\n.LBE12:\n.LBE11:\n.LBB17:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE17:\n.LBB18:\n.LBB14:\n.LBB13:\nmovq -32(%rbp),%rdx\nmovq %rdx,-8(%rbp)\n.L7:\n.LBE13:\n.LBE14:\n.LBB15:\nmovq -32(%rbp),%rdx\ncmpq -16(%rbp),%rdx\njle .L8\n.LBB16:\nmovq -32(%rbp),%rdx\nmovq %rdx,-16(%rbp)\n.L8:\n.LBE16:\n.LBE15:\n.LBE18:\n.LBE8:\n.LBB19:\naddq $1,%rax\n.L4:\n.LBE19:\ncmpq %rcx,%rax\njl .L14\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB20:\nmovq -16(%rbp),%rax\nsubq -8(%rbp),%rax\nmovq -72(%rbp),%rdx\naddq %rdx,%rdx\ncmpq %rdx,%rax\njg .L11\n.LBB21:\n.LBB22:\nmovq $0,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L12\n.L11:\n.LBE22:\n.LBE21:\n.LBE20:\n.LBB23:\nmovq -16(%rbp),%rax\nsubq -8(%rbp),%rax\nsubq -72(%rbp),%rax\nsubq -72(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L12:\n.LBE23:\n.LBE2:\nleave\nret", "tgt": "min, max := A[0], A[0]\nfor _, a := range A {\n\tif a < min {\n\t\tmin = a\n\t}\n\tif a > max {\n\t\tmax = a\n\t}\n}\nif max-min <= K+K {\n\treturn 0\n}\nreturn max - min - K - K"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L61\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L61:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $64,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,-80(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\n.LBB40:\nmovq $0,-24(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-32(%rbp)\n.LBB41:\n.LBB42:\njmp .L34\n.L60:\n.LBB43:\nnop\n.LBE43:\n.LBB44:\n.LBB45:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L35\ncmpq %rax,-24(%rbp)\njl .L52\n.L35:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L52:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L37\ncmpq %rax,-32(%rbp)\njl .L53\n.L37:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L53:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\naddq %rdx,%rax\ncmpq %rax,-80(%rbp)\nje .L59\n.LBE45:\n.LBB47:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L41\ncmpq %rax,-24(%rbp)\njl .L54\n.L41:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L43\ncmpq %rax,-32(%rbp)\njl .L55\n.L43:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\naddq %rdx,%rax\ncmpq %rax,-80(%rbp)\njge .L45\n.LBB48:\nsubq $1,-32(%rbp)\n.L45:\n.LBE48:\n.LBE47:\n.LBB49:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L46\ncmpq %rax,-24(%rbp)\njl .L56\n.L46:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L56:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L48\ncmpq %rax,-32(%rbp)\njl .L57\n.L48:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L57:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\naddq %rdx,%rax\ncmpq %rax,-80(%rbp)\njle .L34\n.LBB50:\naddq $1,-24(%rbp)\n.L34:\n.LBE50:\n.LBE49:\n.LBE44:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\njne .L60\njmp .L40\n.L59:\n.LBB52:\n.LBB51:\n.LBB46:\nnop\n.L40:\n.LBE46:\n.LBE51:\n.LBE52:\n.LBE42:\n.LBE41:\n.LBB53:\nmovq -24(%rbp),%rax\nleaq <1>(%rax),%r12\nmovq -32(%rbp),%rax\nleaq <1>(%rax),%rbx\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovq %r12,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -40(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $2,-56(%rbp)\nmovq $2,-48(%rbp)\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE53:\n.LBE40:\nmovq -72(%rbp),%rax\naddq $64,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "left := 0\nright := len(numbers) - 1\nfor left != right {\n\tif numbers[left]+numbers[right] == target {\n\t\tbreak\n\t}\n\tif numbers[left]+numbers[right] > target {\n\t\tright--\n\t}\n\tif numbers[left]+numbers[right] < target {\n\t\tleft++\n\t}\n}\nreturn []int{left + 1, right + 1}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L27\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovb $0,-1(%rbp)\n.LBB20:\n.LBB21:\n.LBB22:\njmp .L18\n.L26:\n.LBB23:\nnop\n.LBE23:\n.LBB24:\n.LBB25:\nmovq -24(%rbp),%rax\nmovq (%rax),%rdx\nmovq -32(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nje .L19\n.LBB26:\n.LBB27:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L20\n.L19:\n.LBE27:\n.LBE26:\n.LBE25:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-24(%rbp)\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-32(%rbp)\n.L18:\n.LBE24:\n.LBB28:\ncmpq $0,-24(%rbp)\nsetne %al\ntestb %al,%al\nje .L21\n.LBB29:\ncmpq $0,-32(%rbp)\nsetne %al\n.L21:\n.LBE29:\n.LBE28:\ntestb %al,%al\njne .L26\n.LBE22:\n.LBE21:\n.LBB30:\n.LBB31:\ncmpq $0,-24(%rbp)\nsete %al\ntestb %al,%al\nje .L24\n.LBB32:\ncmpq $0,-32(%rbp)\nsete %al\n.L24:\n.LBE32:\n.LBE31:\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L20:\n.LBE30:\n.LBE20:\npopq %rbp\nret", "tgt": "for a != nil && b != nil {\n\tif a.Value != b.Value {\n\t\treturn false\n\t}\n\ta = a.Next\n\tb = b.Next\n}\nreturn a == nil && b == nil"}
{"src": "cmpq %fs:112,%rsp\njnb .L717\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL79:\nret\n.L717:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $160,%rsp\nmovq %rdi,-168(%rbp)\nmovq %rsi,-176(%rbp)\nmovb %dl,-177(%rbp)\nleaq <type...1testing.T>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-104(%rbp)\nmovq -168(%rbp),%rax\nmovq %rax,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L710\n.LBB725:\nmovq -104(%rbp),%rax\nmovq -96(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE725:\njmp .L711\n.L710:\n.LBB726:\nmovq -96(%rbp),%rax\nmovq %rax,%rdx\nmovq -104(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L711:\n.LBE726:\nmovq -104(%rbp),%rax\nmovq %rax,-40(%rbp)\nleaq <type...1int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-80(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L712\n.LBB727:\nmovq -88(%rbp),%rax\nmovq -80(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE727:\njmp .L713\n.L712:\n.LBB728:\nmovq -80(%rbp),%rax\nmovq %rax,%rdx\nmovq -88(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L713:\n.LBE728:\nmovq -88(%rbp),%rax\nmovq %rax,-48(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\nmovzbl -177(%rbp),%edx\nmovb %dl,(%rax)\nmovq -72(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq $0,-64(%rbp)\n.LBB729:\n.LBB730:\nleaq <go.binaryTree.checkGBT..func1>(%rip),%r14\nmovq -40(%rbp),%r13\nmovq -56(%rbp),%r12\nmovq -48(%rbp),%rbx\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.binaryTree.t1.0.1.1testing.T.2.go.binaryTree.debug2.0.1bool.2.go.binaryTree.nodeCnt3.0.1.1int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq %r14,-144(%rbp)\nmovq %r13,-136(%rbp)\nmovq %r12,-128(%rbp)\nmovq %rbx,-120(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L714\n.LBB731:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE731:\njmp .L715\n.L714:\n.LBB732:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.binaryTree.t1.0.1.1testing.T.2.go.binaryTree.debug2.0.1bool.2.go.binaryTree.nodeCnt3.0.1.1int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L715:\n.LBE732:\nmovq -152(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\n.LBE730:\n.LBE729:\naddq $160,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "return func(treebinaryTreeIf, node interface{}) bool {\n\tn := node.(*gbtElement)\n\tif !tree.IsNil(n.Left) && n.Left.Key >= n.Key {\n\t\tt.Log(fmt.Sprintf(\"STR\", n.Left, n))\n\t\tt.Fail()\n\t\treturn true\n\t}\n\tif !tree.IsNil(n.Right) && n.Right.Key <= n.Key {\n\t\tt.Log(fmt.Sprintf(\"STR\", n.Right, n))\n\t\tt.Fail()\n\t\treturn true\n\t}\n\tif debug {\n\t\tfmt.Println(n)\n\t}\n\t*nodeCnt++\n\treturn false\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L71\nmovl $136,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L71:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $120,%rsp\nmovq %rdi,-120(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\n.LBB34:\nmovq <24>(%rbp),%rax\nmovq %rax,-48(%rbp)\n.LBB35:\ncmpq $0,-48(%rbp)\njne .L37\n.LBB36:\n.LBB37:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -120(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -64(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L36\n.L37:\n.LBE37:\n.LBE36:\n.LBE35:\nleaq <go.Solution.Solution..func1..f>(%rip),%rax\nmovq %rax,-56(%rbp)\nmovq -48(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-112(%rbp)\nmovq %rbx,-104(%rbp)\nmovq %rbx,-96(%rbp)\nmovq $0,-24(%rbp)\nmovq -48(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-32(%rbp)\nmovq -48(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-40(%rbp)\n.LBB38:\n.LBB39:\njmp .L39\n.L70:\n.LBB40:\nnop\n.LBE40:\n.LBB41:\n.LBB42:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L40\ncmpq %rax,-24(%rbp)\njl .L61\n.L40:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L61:\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rdx\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq -56(%rbp),%r10\nmovq %rax,%rdi\ncall *%rdx\n.LVL5:\nmovq %rax,%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L42\ncmpq %rax,-32(%rbp)\njl .L62\n.L42:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rdx\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq -56(%rbp),%r10\nmovq %rax,%rdi\ncall *%rdx\n.LVL6:\ncmpq %rax,%rbx\njle .L44\n.LBB43:\nmovq -104(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L45\ncmpq %rax,-40(%rbp)\njl .L63\n.L45:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L47\ncmpq %rax,-24(%rbp)\njl .L64\n.L47:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L49\ncmpq %rax,-24(%rbp)\njl .L65\n.L49:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L65:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -112(%rbp),%rsi\nmovq -40(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nimulq %rcx,%rax\nmovq %rax,(%rdx)\naddq $1,-24(%rbp)\n.LBE43:\njmp .L51\n.L44:\n.LBB44:\nmovq -104(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L52\ncmpq %rax,-40(%rbp)\njl .L66\n.L52:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L66:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L54\ncmpq %rax,-32(%rbp)\njl .L67\n.L54:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L67:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L56\ncmpq %rax,-32(%rbp)\njl .L68\n.L56:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L68:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -112(%rbp),%rsi\nmovq -40(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nimulq %rcx,%rax\nmovq %rax,(%rdx)\nsubq $1,-32(%rbp)\n.L51:\n.LBE44:\n.LBE42:\nsubq $1,-40(%rbp)\n.L39:\n.LBE41:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\njle .L70\n.LBE39:\n.LBE38:\n.LBB45:\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -120(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -64(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L36:\n.LBE45:\n.LBE34:\nmovq -120(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "n := len(A)\nif n == 0 {\n\treturn A\n}\nabs := func(num int) int { return int(math.Abs(float64(num))) }\nans := make([]int, n)\ni, j, k := 0, n-1, n-1\nfor i <= j {\n\tif abs(A[i]) > abs(A[j]) {\n\t\tans[k] = A[i] * A[i]\n\t\ti++\n\t} else {\n\t\tans[k] = A[j] * A[j]\n\t\tj--\n\t}\n\tk--\n}\nreturn ans"}
{"src": ".LFB1:\nleaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L31\nmovl $536,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L31:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $488,%rsp\nmovq %rdi,-456(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB10:\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\nmovq $0,-416(%rbp)\n.LBB11:\n.LBB12:\n.LBB13:\nmovq <go.day252.testcases>(%rip),%rax\nmovq <8+go.day252.testcases>(%rip),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16+go.day252.testcases>(%rip),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%r13\nmovl $0,%r12d\n.LBE13:\njmp .L12\n.L30:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\n.LBB16:\nmovq -312(%rbp),%rax\ntestq %r12,%r12\njs .L13\ncmpq %rax,%r12\njge .L13\nmovq -320(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <32>(%rcx),%rax\nmovq %rax,-336(%rbp)\n.LBE16:\n.LBB17:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-416(%rbp)\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -440(%rbp),%rax\nmovq -448(%rbp),%rcx\nleaq -400(%rbp),%rdi\nmovq %rax,%rdx\nmovq %rcx,%rsi\ncall <go.day252.EgyptianFractions>\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L14\njmp .L28\n.L13:\n.LBE19:\n.LBE18:\n.LBB32:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L14:\n.LBE32:\n.LBB33:\n.LBB31:\n.LBB20:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE20:\njmp .L16\n.L28:\n.LBB21:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L16:\n.LBE21:\nmovq -216(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L17\n.LBB22:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE22:\njmp .L18\n.L17:\n.LBB23:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L18:\n.LBE23:\nmovq -248(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -496(%rbp),%rdx\nmovq -488(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L19\n.LBB24:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L20\n.LBB25:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE25:\njmp .L21\n.L20:\n.LBB26:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L21:\n.LBE26:\nmovq -184(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L22\n.LBB27:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE27:\njmp .L23\n.L22:\n.LBB28:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L23:\n.LBE28:\nmovq -152(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -512(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L24\n.LBB29:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE29:\njmp .L25\n.L24:\n.LBB30:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L25:\n.LBE30:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC6>(%rip),%r14\nmovl $19,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -456(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L19:\n.LBE24:\n.LBE31:\n.LBE33:\n.LBE15:\n.LBB34:\naddq $1,%r12\n.L12:\n.LBE34:\ncmpq %r13,%r12\njl .L30\n.LBE12:\n.LBE11:\n.LBE10:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif denoms := EgyptianFractions(tc.numerator, tc.denominator); !reflect.DeepEqual(tc.denominators, denoms) {\n\t\tt.Errorf(\"STR\", tc.denominators, denoms)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $248,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $224,%rsp\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq $2,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovl $0,%esi\nmovl $1,%edi\ncall <main.merge>\naddq $48,%rsp\nleaq <type...6.7int>(%rip),%r12\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -136(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-96(%rbp)\nmovq %r13,-88(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $1,-72(%rbp)\nmovq $1,-64(%rbp)\nleaq -48(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "nums1 := []int{2}\nnums2 := []int{}\nmerge(nums1, 1, nums2, 0)\nfmt.Println(nums1)"}
{"src": ".LFB300:\ncmpq %fs:112,%rsp\njnb .L7509\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL371:\nret\n.L7509:\npushq %rbp\nmovq %rsp,%rbp\nmovl %edi,-20(%rbp)\nmovq $0,-16(%rbp)\n.LBB6249:\nmovq $0,-8(%rbp)\n.LBB6250:\n.LBB6251:\njmp .L7503\n.L7508:\n.LBB6252:\nnop\n.LBE6252:\n.LBB6253:\naddq $1,-8(%rbp)\nmovl -20(%rbp),%eax\nsubl $1,%eax\nandl %eax,-20(%rbp)\n.L7503:\n.LBE6253:\ncmpl $0,-20(%rbp)\njne .L7508\n.LBE6251:\n.LBE6250:\n.LBB6254:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.LBE6254:\n.LBE6249:\npopq %rbp\nret", "tgt": "result := 0\nfor num != 0 {\n\tresult++\n\tnum = num & (num - 1)\n}\nreturn result"}
{"src": ".LFB1:\nleaq -936(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L45\nmovl $936,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L45:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $888,%rsp\nmovq %rdi,-872(%rbp)\nleaq <type...68x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-720(%rbp)\nmovq -720(%rbp),%rax\nmovq $4,(%rax)\nmovq $3,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $7,<24>(%rax)\nmovq $8,<32>(%rax)\nmovq $2,<40>(%rax)\nmovq $3,<48>(%rax)\nmovq $1,<56>(%rax)\nmovq -720(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $8,-680(%rbp)\nmovq $8,-672(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-712(%rbp)\nmovq -712(%rbp),%rax\nmovq $5,(%rax)\nmovq $6,<8>(%rax)\nmovq -712(%rbp),%rax\nmovq %rax,-664(%rbp)\nmovq $2,-656(%rbp)\nmovq $2,-648(%rbp)\nleaq <type...611x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-704(%rbp)\nmovq -704(%rbp),%rax\nmovq $4,(%rax)\nmovq $3,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $10,<24>(%rax)\nmovq $9,<32>(%rax)\nmovq $2,<40>(%rax)\nmovq $3,<48>(%rax)\nmovq $1,<56>(%rax)\nmovq $1,<64>(%rax)\nmovq $1,<72>(%rax)\nmovq $1,<80>(%rax)\nmovq -704(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq $11,-632(%rbp)\nmovq $11,-624(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-696(%rbp)\nmovq -696(%rbp),%rax\nmovq $5,(%rax)\nmovq $6,<8>(%rax)\nmovq $7,<16>(%rax)\nmovq $8,<24>(%rax)\nmovq $11,<32>(%rax)\nmovq -696(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq $5,-608(%rbp)\nmovq $5,-600(%rbp)\nleaq -688(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovq $2,-744(%rbp)\nmovq $2,-736(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC19>(%rip),%rax\nmovq %rax,-896(%rbp)\nmovq $69,-888(%rbp)\nleaq -208(%rbp),%rax\nmovq -896(%rbp),%rcx\nmovq -888(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-576(%rbp)\n.LBB38:\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\nmovq $0,-840(%rbp)\nmovq $0,-832(%rbp)\nmovq $0,-824(%rbp)\n.LBB39:\n.LBB40:\n.LBB41:\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -736(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq -504(%rbp),%rax\nmovq %rax,-896(%rbp)\nmovl $0,%ebx\n.LBE41:\njmp .L33\n.L44:\n.LBB42:\nnop\n.LBE42:\n.LBB43:\n.LBB44:\nmovq -504(%rbp),%rax\ntestq %rbx,%rbx\njs .L34\ncmpq %rax,%rbx\njge .L34\nmovq -512(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-560(%rbp)\nmovq %rdi,-552(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-544(%rbp)\nmovq %rdi,-536(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\n.LBE44:\n.LBB45:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\n.LBE45:\n.LBB46:\nmovq -840(%rbp),%rax\nmovq -832(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovq -824(%rbp),%rax\nmovq %rax,-768(%rbp)\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-816(%rbp)\nmovq %rdx,-808(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-800(%rbp)\nleaq -400(%rbp),%rax\nsubq $8,%rsp\npushq -800(%rbp)\npushq -808(%rbp)\npushq -816(%rbp)\nmovq %rax,%rdi\ncall <go.leetcode.findDisappearedNumbers>\naddq $32,%rsp\nleaq <go.leetcode..go.leetcode.para448..d>(%rip),%rax\nmovq %rax,-928(%rbp)\nleaq <go.leetcode..go.leetcode.para448..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -800(%rbp),%rax\nmovq %rax,-352(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L35\njmp .L42\n.L34:\n.LBE46:\n.LBB51:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\n.LBE51:\n.LBB52:\n.LBB47:\nmovq -376(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE47:\njmp .L37\n.L42:\n.LBB48:\nmovq -376(%rbp),%rax\nleaq -368(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para448..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L37:\n.LBE48:\nmovq -376(%rbp),%rax\nmovq %rax,-920(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-912(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L38\n.LBB49:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE49:\njmp .L39\n.L38:\n.LBB50:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L39:\n.LBE50:\nmovq -344(%rbp),%rax\nmovq %rax,-904(%rbp)\nmovdqa -928(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -912(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC20>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-416(%rbp)\n.LBE52:\n.LBE43:\n.LBB53:\naddq $1,%rbx\n.L33:\n.LBE53:\ncmpq -896(%rbp),%rbx\njl .L44\n.LBE40:\n.LBE39:\n.LBE38:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question448{\n\t{\n\t\tpara448{[]int{4, 3, 2, 7, 8, 2, 3, 1}},\n\t\tans448{[]int{5, 6}},\n\t},\n\t{\n\t\tpara448{[]int{4, 3, 2, 10, 9, 2, 3, 1, 1, 1, 1}},\n\t\tans448{[]int{5, 6, 7, 8, 11}},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans448, q.para448\n\tfmt.Printf(\"STR\", p, findDisappearedNumbers(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $184,%rsp\ncall <flag.Parse@PLT>\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rbx\nleaq -208(%rbp),%rax\nmovq %rax,%rdi\ncall <flag.Args@PLT>\nmovq -200(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -208(%rbp),%rax\nmovq %rax,(%rbx)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -208(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L3:\n.LBE3:\n.LBB4:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\njne .L4\n.LBB5:\nmovq -56(%rbp),%rbx\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nleaq <.LC19>(%rip),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L5\n.LBB6:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE6:\njmp .L6\n.L5:\n.LBB7:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE7:\nmovq -184(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $1,-152(%rbp)\nmovq $1,-144(%rbp)\nmovq -152(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB8:\nmovq -160(%rbp),%rax\nmovq %rax,(%rbx)\n.LBE8:\njmp .L4\n.L7:\n.LBB9:\nmovq -160(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L4:\n.LBE9:\n.LBE5:\n.LBE4:\nleaq <type..chan.0int64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rbx\nmovl $0,%esi\nleaq <type..chan.0int64>(%rip),%rdi\ncall <runtime.makechan@PLT>\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L8\n.LBB10:\nmovq %rax,(%rbx)\n.LBE10:\njmp .L9\n.L8:\n.LBB11:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L9:\n.LBE11:\n.LBB12:\nleaq <main.main..func1>(%rip),%r13\nmovq -56(%rbp),%r12\nmovq -64(%rbp),%rbx\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.main.roots1.0.1.6.7string.2.main.fileSizes2.0.1chan.0int64.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq %r13,-128(%rbp)\nmovq %r12,-120(%rbp)\nmovq %rbx,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L10\n.LBB13:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE13:\njmp .L11\n.L10:\n.LBB14:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.main.roots1.0.1.6.7string.2.main.fileSizes2.0.1chan.0int64.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L11:\n.LBE14:\nmovq -136(%rbp),%rbx\ntestq %rbx,%rbx\njne .L12\ncall <runtime.panicgonil@PLT>\n.L12:\nleaq <type..struct.4.4x.5fn.0func.8.9.8.9.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-96(%rbp)\nmovq %rbx,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB15:\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE15:\njmp .L14\n.L13:\n.LBB16:\nmovq -88(%rbp),%rax\nmovq %rax,%rdx\nmovq -96(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L14:\n.LBE16:\nmovq -96(%rbp),%rax\nleaq <main.main..thunk0>(%rip),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <__go_go@PLT>\n.LBE12:\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB17:\nmovq $0,-72(%rbp)\n.L17:\n.LBB18:\n.LBB19:\n.LBB20:\n.LBB21:\n.LBB22:\nmovq -64(%rbp),%rax\nmovq (%rax),%rax\nleaq -80(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.chanrecv2@PLT>\nmovl %eax,%edx\nmovq -80(%rbp),%rax\n.LBE22:\nxorl $1,%edx\ntestb %dl,%dl\njne .L19\n.LBE21:\nmovq %rax,-72(%rbp)\n.LBB24:\naddq $1,-40(%rbp)\nmovq -72(%rbp),%rax\naddq %rax,-48(%rbp)\n.LBE24:\n.LBE20:\njmp .L17\n.L19:\n.LBB26:\n.LBB25:\n.LBB23:\nnop\n.LBE23:\n.LBE25:\n.LBE26:\n.LBE19:\n.LBE18:\n.LBE17:\nmovq -48(%rbp),%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.printDiskUsage>\naddq $184,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "flag.Parse()\nroots := flag.Args()\nif len(roots) == 0 {\n\troots = []string{\"STR\"}\n}\nfileSizes := make(chan int64)\ngo func() {\n\tfor _, root := range roots {\n\t\twalkDir(root, fileSizes)\n\t}\n\tclose(fileSizes)\n}()\nvar nfiles, nbytes int64\nfor size := range fileSizes {\n\tnfiles++\n\tnbytes += size\n}\nprintDiskUsage(nfiles, nbytes)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\ncmpq $0,-40(%rbp)\njne .L2\ncall <runtime.panicmem@PLT>\n.L2:\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nleaq -16(%rbp),%rax\nmovq (%rax),%rdx\nmovq <go.beerscli.toString>(%rip),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.beerscli.BeerType.7string>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return toString[t]"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L37\nmovl $152,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-136(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\n.LBB2:\n.LBB3:\nmovq <24>(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-24(%rbp)\n.LBB4:\njmp .L2\n.L36:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq -24(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB8:\njmp .L3\n.L35:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\n.LBB11:\nmovq -32(%rbp),%rax\nsubq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB12:\njmp .L4\n.L34:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\n.LBB15:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -40(%rbp),%rax\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq <32>(%rbp),%rdx\nmovq %rdx,-48(%rbp)\nmovq -40(%rbp),%rcx\nmovq -24(%rbp),%rdx\naddq %rcx,%rdx\nmovq -40(%rbp),%rsi\nmovq -24(%rbp),%rcx\naddq %rsi,%rcx\nmovq <24>(%rbp),%rsi\ntestq %rcx,%rcx\njs .L5\ncmpq %rsi,%rcx\njl .L25\n.L5:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq <16>(%rbp),%rsi\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq <24>(%rbp),%rcx\ncmpq $0,-40(%rbp)\njs .L7\ncmpq %rcx,-40(%rbp)\njl .L26\n.L7:\nmovq -40(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\nmovq <16>(%rbp),%rsi\nmovq -40(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -88(%rbp),%rcx\ntestq %rax,%rax\njs .L9\ncmpq %rcx,%rax\njl .L27\n.L9:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq -96(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rdi,(%rax)\nmovq -56(%rbp),%rax\ntestq %rdx,%rdx\njs .L11\ncmpq %rax,%rdx\njl .L28\n.L11:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq -64(%rbp),%rax\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE15:\n.LBE14:\n.LBB16:\nmovq -24(%rbp),%rax\nsubq %rax,-40(%rbp)\n.L4:\n.LBE16:\n.LBB17:\nmovq -40(%rbp),%rax\nnotq %rax\nshrq $63,%rax\ntestb %al,%al\nje .L13\n.LBB18:\nmovq -40(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L14\ncmpq %rdx,%rax\njl .L29\n.L14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq <24>(%rbp),%rdx\ncmpq $0,-40(%rbp)\njs .L16\ncmpq %rdx,-40(%rbp)\njl .L30\n.L16:\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetl %al\n.L13:\n.LBE18:\n.LBE17:\ntestb %al,%al\njne .L34\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB19:\naddq $1,-32(%rbp)\n.L3:\n.LBE19:\nmovq <24>(%rbp),%rax\ncmpq %rax,-32(%rbp)\njl .L35\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB20:\nmovq -24(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-24(%rbp)\n.L2:\n.LBE20:\ncmpq $0,-24(%rbp)\njg .L36\n.LBE4:\n.LBE3:\n.LBB21:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE21:\n.LBE2:\nmovq -136(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "for step := len(nums) / 2; step > 0; step /= 2 {\n\tfor i := step; i < len(nums); i++ {\n\t\tfor j := i - step; j >= 0 && nums[j+step] < nums[j]; j -= step {\n\t\t\tnums[j], nums[j+step] = nums[j+step], nums[j]\n\t\t}\n\t}\n}\nreturn nums"}
{"src": ".LFB2:\nleaq -1592(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L37\nmovl $1592,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1544,%rsp\nmovq %rdi,-1160(%rbp)\nleaq <int..d>(%rip),%r12\nleaq <go..C42>(%rip),%r13\nleaq <int..d>(%rip),%r10\nleaq <go..C43>(%rip),%r11\nleaq <int..d>(%rip),%r8\nleaq <go..C44>(%rip),%r9\nmovq $0,-1584(%rbp)\nmovq $0,-1576(%rbp)\nleaq <int..d>(%rip),%rcx\nleaq <go..C45>(%rip),%rbx\nmovl $0,%r14d\nmovl $0,%r15d\nleaq <int..d>(%rip),%rax\nleaq <go..C46>(%rip),%rdx\nmovq %r12,-1056(%rbp)\nmovq %r13,-1048(%rbp)\nmovq %r10,-1040(%rbp)\nmovq %r11,-1032(%rbp)\nmovq %r8,-1024(%rbp)\nmovq %r9,-1016(%rbp)\nmovdqa -1584(%rbp),%xmm0\nmovups %xmm0,-1008(%rbp)\nmovq %rcx,-992(%rbp)\nmovq %rbx,-984(%rbp)\nmovq %r14,-976(%rbp)\nmovq %r15,-968(%rbp)\nmovq %rax,-960(%rbp)\nmovq %rdx,-952(%rbp)\nleaq -1056(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $7,-136(%rbp)\nmovq $7,-128(%rbp)\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,%r12\nleaq <int..d>(%rip),%rax\nmovq %rax,-1568(%rbp)\nleaq <go..C47>(%rip),%rbx\nmovq %rbx,-1560(%rbp)\nmovq %rax,-1552(%rbp)\nleaq <go..C48>(%rip),%rbx\nmovq %rbx,-1544(%rbp)\nmovq %rax,-1536(%rbp)\nleaq <go..C49>(%rip),%rbx\nmovq %rbx,-1528(%rbp)\nmovq %rax,-1520(%rbp)\nleaq <go..C50>(%rip),%rbx\nmovq %rbx,-1512(%rbp)\nmovq %rax,-1504(%rbp)\nleaq <go..C51>(%rip),%rbx\nmovq %rbx,-1496(%rbp)\nmovq $0,-1488(%rbp)\nmovq $0,-1480(%rbp)\nmovq %rax,-1472(%rbp)\nleaq <go..C52>(%rip),%rsi\nmovq %rsi,-1464(%rbp)\nmovq $0,-1456(%rbp)\nmovq $0,-1448(%rbp)\nmovq %rax,-1440(%rbp)\nleaq <go..C53>(%rip),%rbx\nmovq %rbx,-1432(%rbp)\nmovq $0,-1424(%rbp)\nmovq $0,-1416(%rbp)\nmovq $0,-1408(%rbp)\nmovq $0,-1400(%rbp)\nmovq %rax,-1392(%rbp)\nleaq <go..C54>(%rip),%rsi\nmovq %rsi,-1384(%rbp)\nmovq $0,-1376(%rbp)\nmovq $0,-1368(%rbp)\nmovq $0,-1360(%rbp)\nmovq $0,-1352(%rbp)\nmovq %rax,-1344(%rbp)\nleaq <go..C55>(%rip),%rbx\nmovq %rbx,-1336(%rbp)\nmovq $0,-1328(%rbp)\nmovq $0,-1320(%rbp)\nmovq $0,-1312(%rbp)\nmovq $0,-1304(%rbp)\nmovq $0,-1296(%rbp)\nmovq $0,-1288(%rbp)\nmovq %rax,-1280(%rbp)\nleaq <go..C56>(%rip),%rax\nmovq %rax,-1272(%rbp)\nmovdqa -1568(%rbp),%xmm1\nmovups %xmm1,-944(%rbp)\nmovdqa -1552(%rbp),%xmm2\nmovups %xmm2,-928(%rbp)\nmovdqa -1536(%rbp),%xmm3\nmovups %xmm3,-912(%rbp)\nmovdqa -1520(%rbp),%xmm4\nmovups %xmm4,-896(%rbp)\nmovdqa -1504(%rbp),%xmm5\nmovups %xmm5,-880(%rbp)\nmovdqa -1488(%rbp),%xmm6\nmovups %xmm6,-864(%rbp)\nmovdqa -1472(%rbp),%xmm7\nmovups %xmm7,-848(%rbp)\nmovdqa -1456(%rbp),%xmm0\nmovups %xmm0,-832(%rbp)\nmovdqa -1440(%rbp),%xmm1\nmovups %xmm1,-816(%rbp)\nmovdqa -1424(%rbp),%xmm2\nmovups %xmm2,-800(%rbp)\nmovdqa -1408(%rbp),%xmm3\nmovups %xmm3,-784(%rbp)\nmovdqa -1392(%rbp),%xmm4\nmovups %xmm4,-768(%rbp)\nmovdqa -1376(%rbp),%xmm5\nmovups %xmm5,-752(%rbp)\nmovdqa -1360(%rbp),%xmm6\nmovups %xmm6,-736(%rbp)\nmovdqa -1344(%rbp),%xmm7\nmovups %xmm7,-720(%rbp)\nmovdqa -1328(%rbp),%xmm0\nmovups %xmm0,-704(%rbp)\nmovdqa -1312(%rbp),%xmm1\nmovups %xmm1,-688(%rbp)\nmovdqa -1296(%rbp),%xmm2\nmovups %xmm2,-672(%rbp)\nmovdqa -1280(%rbp),%xmm3\nmovups %xmm3,-656(%rbp)\nleaq -944(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $19,-104(%rbp)\nmovq $19,-96(%rbp)\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nmovq -632(%rbp),%rax\nmovq $1,(%rax)\nmovq $3,<8>(%rax)\nmovq $4,<16>(%rax)\nmovq -632(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $3,-616(%rbp)\nmovq $3,-608(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq $1,(%rax)\nmovq $3,<8>(%rax)\nmovq $6,<16>(%rax)\nmovq $8,<24>(%rax)\nmovq $9,<32>(%rax)\nmovq $10,<40>(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $6,-584(%rbp)\nmovq $6,-576(%rbp)\nmovq %r12,-560(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-552(%rbp)\nmovq %rdx,-544(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovq %rbx,-528(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-520(%rbp)\nmovq %rdx,-512(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nleaq -496(%rbp),%rax\nmovq %rax,-1088(%rbp)\nmovq $2,-1080(%rbp)\nmovq $2,-1072(%rbp)\n.LBB12:\nmovq $0,-1152(%rbp)\nmovq $0,-1144(%rbp)\nmovq $0,-1136(%rbp)\nmovq $0,-1128(%rbp)\n.LBB13:\n.LBB14:\n.LBB15:\nmovq -1088(%rbp),%rax\nmovq -1080(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -1072(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -392(%rbp),%r13\nmovl $0,%r12d\n.LBE15:\njmp .L18\n.L36:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -392(%rbp),%rax\ntestq %r12,%r12\njs .L19\ncmpq %rax,%r12\njge .L19\nmovq -400(%rbp),%rdx\nmovq %r12,%rax\nsalq $5,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBE18:\n.LBB19:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-1152(%rbp)\nmovq %rdx,-1144(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-1136(%rbp)\nmovq %rdx,-1128(%rbp)\n.LBE19:\n.LBB20:\nmovq -1152(%rbp),%rdx\nleaq -1120(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.rightSideView>\n.LBB21:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-1216(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovq -1144(%rbp),%rax\nmovq -1136(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -1128(%rbp),%rax\nmovq %rax,-272(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L20\njmp .L34\n.L19:\n.LBE21:\n.LBE20:\n.LBB34:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\n.LBE34:\n.LBB35:\n.LBB33:\n.LBB22:\nmovq -296(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE22:\njmp .L22\n.L34:\n.LBB23:\nmovq -296(%rbp),%rcx\nleaq -288(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L22:\n.LBE23:\nmovq -296(%rbp),%rax\nmovq %rax,-1208(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-1200(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovq -1120(%rbp),%rax\nmovq -1112(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -1104(%rbp),%rax\nmovq %rax,-304(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L23\n.LBB24:\nmovq -328(%rbp),%rcx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -304(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE24:\njmp .L24\n.L23:\n.LBB25:\nmovq -328(%rbp),%rcx\nleaq -320(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L24:\n.LBE25:\nmovq -328(%rbp),%rax\nmovq %rax,-1192(%rbp)\nmovq -1200(%rbp),%rax\nmovq -1192(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -1216(%rbp),%rdx\nmovq -1208(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L25\n.LBB26:\nleaq <type...1go.leetcode.TreeNode>(%rip),%rax\nmovq %rax,-1264(%rbp)\nmovq -1152(%rbp),%rax\nmovq %rax,-1256(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-1248(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -1120(%rbp),%rax\nmovq -1112(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -1104(%rbp),%rax\nmovq %rax,-240(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L26\n.LBB27:\nmovq -264(%rbp),%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -240(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE27:\njmp .L27\n.L26:\n.LBB28:\nmovq -264(%rbp),%rcx\nleaq -256(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L27:\n.LBE28:\nmovq -264(%rbp),%rax\nmovq %rax,-1240(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-1232(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq -1144(%rbp),%rax\nmovq -1136(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -1128(%rbp),%rax\nmovq %rax,-208(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L28\n.LBB29:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE29:\njmp .L29\n.L28:\n.LBB30:\nmovq -232(%rbp),%rcx\nleaq -224(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L29:\n.LBE30:\nmovq -232(%rbp),%rax\nmovq %rax,-1224(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovdqa -1264(%rbp),%xmm4\nmovups %xmm4,-192(%rbp)\nmovdqa -1248(%rbp),%xmm5\nmovups %xmm5,-176(%rbp)\nmovdqa -1232(%rbp),%xmm6\nmovups %xmm6,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L30\n.LBB31:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE31:\njmp .L31\n.L30:\n.LBB32:\nmovq -200(%rbp),%rcx\nleaq -192(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L31:\n.LBE32:\nmovq -200(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC25>(%rip),%rax\nmovq %rax,-1184(%rbp)\nmovq $36,-1176(%rbp)\nmovq -1184(%rbp),%rax\nmovq -1176(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -1160(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L25:\n.LBE26:\n.LBE33:\n.LBE35:\n.LBE17:\n.LBB36:\naddq $1,%r12\n.L18:\n.LBE36:\ncmpq %r13,%r12\njl .L36\n.LBE14:\n.LBE13:\n.LBE12:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var tests = []struct {\n\ttree *TreeNode\n\tvals []int\n}{\n\t{newTree(1, 2, 3, nil, 5, nil, 4), []int{1, 3, 4}},\n\t{newTree(1, 2, 3, 4, 5, nil, 6, nil, 7, nil, nil, 8, nil, nil, 9, nil, nil, nil, 10), []int{1, 3, 6, 8, 9, 10}},\n}\nfor _, tt := range tests {\n\tvals := rightSideView(tt.tree)\n\tif reflect.DeepEqual(vals, tt.vals) == false {\n\t\tt.Errorf(\"STR\", tt.tree, vals, tt.vals)\n\t}\n}"}
{"src": "leaq -616(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L86\nmovl $616,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L86:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $592,%rsp\nmovq $1,-512(%rbp)\nmovq $2,-504(%rbp)\nmovq $3,-496(%rbp)\nmovq $4,-488(%rbp)\nmovq $5,-480(%rbp)\nmovq $6,-472(%rbp)\nleaq -512(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovq $6,-536(%rbp)\nmovq $6,-528(%rbp)\nmovb $0,-452(%rbp)\nmovb $1,-451(%rbp)\nmovb $1,-450(%rbp)\nmovb $0,-449(%rbp)\nmovb $0,-448(%rbp)\nmovb $0,-447(%rbp)\nmovb $1,-446(%rbp)\nmovb $0,-445(%rbp)\nmovb $0,-444(%rbp)\nmovb $1,-443(%rbp)\nmovb $0,-442(%rbp)\nmovb $0,-441(%rbp)\nmovb $1,-440(%rbp)\nmovb $0,-439(%rbp)\nmovb $0,-438(%rbp)\nmovb $1,-437(%rbp)\nmovb $0,-436(%rbp)\nmovb $0,-435(%rbp)\nmovb $0,-434(%rbp)\nmovb $1,-433(%rbp)\nmovb $1,-432(%rbp)\nmovb $0,-431(%rbp)\nmovb $1,-430(%rbp)\nmovb $0,-429(%rbp)\nmovb $0,-428(%rbp)\nmovb $0,-427(%rbp)\nmovb $0,-426(%rbp)\nmovb $1,-425(%rbp)\nmovb $0,-424(%rbp)\nmovb $1,-423(%rbp)\nmovb $0,-422(%rbp)\nmovb $0,-421(%rbp)\nmovb $0,-420(%rbp)\nmovb $0,-419(%rbp)\nmovb $1,-418(%rbp)\nmovb $0,-417(%rbp)\nleaq -452(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq $6,-408(%rbp)\nmovq $6,-400(%rbp)\nleaq -446(%rbp),%rax\nmovq %rax,-392(%rbp)\nmovq $6,-384(%rbp)\nmovq $6,-376(%rbp)\nleaq -440(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $6,-360(%rbp)\nmovq $6,-352(%rbp)\nleaq -434(%rbp),%rax\nmovq %rax,-344(%rbp)\nmovq $6,-336(%rbp)\nmovq $6,-328(%rbp)\nleaq -428(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq $6,-312(%rbp)\nmovq $6,-304(%rbp)\nleaq -422(%rbp),%rax\nmovq %rax,-296(%rbp)\nmovq $6,-288(%rbp)\nmovq $6,-280(%rbp)\nleaq -416(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq $6,-568(%rbp)\nmovq $6,-560(%rbp)\nmovq $1,-24(%rbp)\nmovq $6,-32(%rbp)\nleaq -128(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq -24(%rbp),%rcx\npushq -560(%rbp)\npushq -568(%rbp)\npushq -576(%rbp)\npushq -528(%rbp)\npushq -536(%rbp)\npushq -544(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <main.dfs>\naddq $48,%rsp\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovzbl -248(%rbp),%eax\nmovb %al,-33(%rbp)\nleaq <type...6.7int>(%rip),%r12\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -592(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L84\n.LBB52:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE52:\njmp .L85\n.L84:\n.LBB53:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L85:\n.LBE53:\nmovq -184(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-144(%rbp)\nmovq %r13,-136(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "nodes := []int{\n\t1, 2, 3, 4, 5, 6,\n}\nedges := [][]bool{\n\t{false, true, true, false, false, false},\n\t{true, false, false, true, false, false},\n\t{true, false, false, true, false, false},\n\t{false, true, true, false, true, false},\n\t{false, false, false, true, false, true},\n\t{false, false, false, false, true, false},\n}\nstart := 1\nend := 6\nroute, _ := dfs(start, end, nodes, edges)\nfmt.Println(route)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L10\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-24(%rbp)\njns .L2\n.LBB4:\nnegq -24(%rbp)\n.L2:\n.LBE4:\n.LBE3:\nmovq $0,-8(%rbp)\n.LBB5:\n.LBB6:\njmp .L3\n.L9:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\naddq $1,-8(%rbp)\nmovq -8(%rbp),%rax\nsubq %rax,-24(%rbp)\n.L3:\n.LBE8:\ncmpq $0,-24(%rbp)\njg .L9\n.LBE6:\n.LBE5:\n.LBB9:\nmovq -24(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\njne .L6\n.LBB10:\n.LBB11:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L7\n.L6:\n.LBE11:\n.LBE10:\n.LBE9:\n.LBB12:\nmovq -8(%rbp),%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\nmovq %rax,%rdx\nmovq -8(%rbp),%rax\naddq %rdx,%rax\naddq $1,%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.L7:\n.LBE12:\n.LBE2:\npopq %rbp\nret", "tgt": "if target < 0 {\n\ttarget = -target\n}\nk := 0\nfor target > 0 {\n\tk++\n\ttarget -= k\n}\nif target%2 == 0 {\n\treturn k\n}\nreturn k + 1 + k%2"}
{"src": ".LFB1:\nleaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L22\nmovl $296,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $272,%rsp\nmovq %rdi,-264(%rbp)\nmovq %rsi,-272(%rbp)\nmovq %rdx,-280(%rbp)\nmovq %rcx,-288(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\n.LBB2:\n.LBB3:\ncmpq $1,-288(%rbp)\njne .L2\n.LBB4:\n.LBB5:\n.LBB6:\nmovl $0,%eax\nmovl $0,%r8d\nmovl $0,%r9d\nmovq %rax,-32(%rbp)\nmovq %r8,-240(%rbp)\nmovq %r9,-232(%rbp)\n.LBE6:\nmovq -32(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-216(%rbp)\nmovq %rdx,-208(%rbp)\nmovq -264(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB7:\ncmpq $0,-280(%rbp)\njns .L4\n.LBB8:\n.LBB9:\n.LBB10:\nmovq $-1,%rcx\nmovq <go.modular.ErrorNegativeExponent>(%rip),%rax\nmovq <8+go.modular.ErrorNegativeExponent>(%rip),%rdx\nmovq %rcx,-32(%rbp)\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE10:\nmovq -32(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-184(%rbp)\nmovq %rdx,-176(%rbp)\nmovq -264(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L4:\n.LBE9:\n.LBE8:\n.LBE7:\nmovq -288(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -288(%rbp),%rax\nleaq -1(%rax),%rcx\nleaq -64(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.modular.Multiply64BitInt>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -152(%rbp),%rax\nmovq -144(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBB11:\nmovq -256(%rbp),%rax\ntestq %rax,%rax\nje .L5\n.LBB12:\n.LBB13:\n.LBB14:\nmovq $-1,%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rcx,-32(%rbp)\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE14:\nmovq -32(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-120(%rbp)\nmovq %rdx,-112(%rbp)\nmovq -264(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L5:\n.LBE13:\n.LBE12:\n.LBE11:\nmovq $1,-24(%rbp)\ncmpq $-1,-288(%rbp)\njne .L6\nmovl $0,%eax\njmp .L7\n.L6:\ncmpq $0,-288(%rbp)\njne .L8\ncall <runtime.panicdivide@PLT>\n.L8:\nmovq -272(%rbp),%rax\ncqto\nidivq -288(%rbp)\nmovq %rdx,%rax\n.L7:\nmovq %rax,-272(%rbp)\n.LBB15:\n.LBB16:\njmp .L9\n.L21:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -280(%rbp),%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\ncmpq $1,%rax\njne .L10\n.LBB20:\nmovq -24(%rbp),%rax\nimulq -272(%rbp),%rax\ncmpq $-1,-288(%rbp)\njne .L11\nmovl $0,%eax\njmp .L12\n.L11:\ncmpq $0,-288(%rbp)\njne .L13\ncall <runtime.panicdivide@PLT>\n.L13:\ncqto\nidivq -288(%rbp)\nmovq %rdx,%rax\n.L12:\nmovq %rax,-24(%rbp)\n.L10:\n.LBE20:\n.LBE19:\nsarq -280(%rbp)\nmovq -272(%rbp),%rax\nimulq %rax,%rax\ncmpq $-1,-288(%rbp)\njne .L14\nmovl $0,%eax\njmp .L15\n.L14:\ncmpq $0,-288(%rbp)\njne .L16\ncall <runtime.panicdivide@PLT>\n.L16:\ncqto\nidivq -288(%rbp)\nmovq %rdx,%rax\n.L15:\nmovq %rax,-272(%rbp)\n.L9:\n.LBE18:\ncmpq $0,-280(%rbp)\njg .L21\n.LBE16:\n.LBE15:\n.LBB21:\n.LBB22:\nmovq -24(%rbp),%rax\nmovl $0,%r12d\nmovl $0,%r13d\nmovq %rax,-32(%rbp)\nmovq %r12,-240(%rbp)\nmovq %r13,-232(%rbp)\n.LBE22:\nmovq -32(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-88(%rbp)\nmovq %rdx,-80(%rbp)\nmovq -264(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE21:\n.LBE2:\nmovq -264(%rbp),%rax\naddq $272,%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "if mod == 1 {\n\treturn 0, nil\n}\nif exponent < 0 {\n\treturn -1, ErrorNegativeExponent\n}\n_, err := Multiply64BitInt(mod-1, mod-1)\nif err != nil {\n\treturn -1, err\n}\nvar result int64 = 1\nbase = base % mod\nfor exponent > 0 {\n\tif exponent%2 == 1 {\n\t\tresult = (result * base) % mod\n\t}\n\texponent = exponent >> 1\n\tbase = (base * base) % mod\n}\nreturn result, nil"}
{"src": "cmpq %fs:112,%rsp\njnb .L51\nmovl $24,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L51:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\n.LBB36:\nmovq $0,-8(%rbp)\n.LBB37:\njmp .L40\n.L50:\n.LBB38:\nnop\n.LBE38:\n.LBB39:\nmovq <48>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L41\ncmpq %rax,-8(%rbp)\njl .L47\n.L41:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L47:\nmovq <40>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nsubq $8,%rsp\npushq <56>(%rbp)\npushq <48>(%rbp)\npushq <40>(%rbp)\nmovq %rax,%rdi\ncall <go.crc32combine.gf2MatrixTimes>\naddq $32,%rsp\nmovq %rax,%rdx\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L43\ncmpq %rax,-8(%rbp)\njl .L48\n.L43:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L48:\nmovq <16>(%rbp),%rcx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rdx,(%rax)\n.LBE39:\n.LBB40:\naddq $1,-8(%rbp)\n.L40:\n.LBE40:\ncmpq $31,-8(%rbp)\njle .L50\n.LBE37:\n.LBE36:\nleave\nret", "tgt": "for n := 0; n < 32; n++ {\n\tsquare[n] = gf2MatrixTimes(mat, mat[n])\n}"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-56(%rbp)\ncmpq $0,-56(%rbp)\njne .L2\ncall <runtime.panicmem@PLT>\n.L2:\nmovq -56(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\nmovq -40(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return n.Ns == nil"}
{"src": ".LFB0:\nleaq -3880(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L50\nmovl $3880,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L50:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $3864,%rsp\nmovq $0,-56(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nimulq %rax,%rax\nmovq %rax,-72(%rbp)\nleaq -3424(%rbp),%rdx\nmovl $0,%eax\nmovl $400,%ecx\nmovq %rdx,%rdi\nrep stosqleaq -3424(%rbp),%rax\nmovq %rax,-3456(%rbp)\nmovq $400,-3448(%rbp)\nmovq $400,-3440(%rbp)\nleaq -3872(%rbp),%rdx\nmovl $0,%eax\nmovl $50,%ecx\nmovq %rdx,%rdi\nrep stosqmovq %rdi,%rdx\nmovb %al,(%rdx)\naddq $1,%rdx\nmovq -3448(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq -3456(%rbp),%rax\nmovq $1,(%rax)\nmovb $1,-3871(%rbp)\nmovq $0,-24(%rbp)\n.LBB3:\n.LBB4:\njmp .L3\n.L49:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\naddq $1,-24(%rbp)\nmovq -3448(%rbp),%rax\nmovq %rax,-80(%rbp)\n.LBB7:\nmovq $0,-32(%rbp)\n.LBB8:\njmp .L4\n.L48:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -3448(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L5\ncmpq %rax,-32(%rbp)\njl .L38\n.L5:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq -3456(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-88(%rbp)\n.LBB11:\nmovq $1,-40(%rbp)\n.LBB12:\njmp .L7\n.L47:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\nmovq -88(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,-48(%rbp)\nmovq -64(%rbp),%rdx\nmovq -48(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0909.position>\nmovq %rax,%rcx\nmovq %rcx,-96(%rbp)\nmovq %rdx,%rax\nmovq %rax,-104(%rbp)\n.LBB15:\nmovq <24>(%rbp),%rax\ncmpq $0,-96(%rbp)\njs .L8\ncmpq %rax,-96(%rbp)\njl .L39\n.L8:\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq <16>(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%rax\ncmpq $0,-104(%rbp)\njs .L10\ncmpq %rax,-104(%rbp)\njge .L10\nmovq -224(%rbp),%rdx\nmovq -104(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq $-1,%rax\njne .L11\njmp .L12\n.L10:\nmovq -104(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBB16:\ncmpq $0,-48(%rbp)\njs .L13\ncmpq $400,-48(%rbp)\njle .L40\n.L13:\nmovq -48(%rbp),%rax\nmovl $401,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nleaq -3872(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovb $1,(%rax)\nmovq <24>(%rbp),%rax\ncmpq $0,-96(%rbp)\njs .L15\ncmpq %rax,-96(%rbp)\njl .L41\n.L15:\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq <16>(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\ncmpq $0,-104(%rbp)\njs .L17\ncmpq %rax,-104(%rbp)\njge .L17\nmovq -192(%rbp),%rdx\nmovq -104(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-48(%rbp)\njmp .L12\n.L17:\nmovq -104(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\n.LBE16:\n.LBE15:\n.LBB17:\nmovq -48(%rbp),%rax\ncmpq -72(%rbp),%rax\njne .L18\n.LBB18:\n.LBB19:\nmovq -24(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\njmp .L37\n.L18:\n.LBE19:\n.LBE18:\n.LBE17:\n.LBB20:\ncmpq $0,-48(%rbp)\njs .L20\ncmpq $400,-48(%rbp)\njg .L20\nleaq -3872(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nxorl $1,%eax\ntestb %al,%al\njne .L21\njmp .L22\n.L20:\nmovq -48(%rbp),%rax\nmovl $401,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\n.LBB21:\nmovq -3456(%rbp),%rax\nmovq -3448(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -3440(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -144(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L23\n.LBB22:\nmovq -160(%rbp),%rsi\nleaq -128(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-3456(%rbp)\nmovq %rdx,-3448(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-3440(%rbp)\n.LBE22:\njmp .L24\n.L23:\n.LBB23:\nmovq -160(%rbp),%rcx\nmovq -144(%rbp),%rdx\nmovq %rcx,-3456(%rbp)\nmovq %rax,-3448(%rbp)\nmovq %rdx,-3440(%rbp)\n.L24:\n.LBE23:\nmovq -3456(%rbp),%rax\nmovq -3448(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -3440(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -48(%rbp),%rax\nmovq %rax,(%rdx)\ncmpq $0,-48(%rbp)\njs .L25\ncmpq $400,-48(%rbp)\njle .L42\n.L25:\nmovq -48(%rbp),%rax\nmovl $401,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nleaq -3872(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovb $1,(%rax)\n.L22:\n.LBE21:\n.LBE20:\n.LBE14:\n.LBB24:\naddq $1,-40(%rbp)\n.L7:\n.LBE24:\ncmpq $6,-40(%rbp)\njle .L47\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB25:\naddq $1,-32(%rbp)\n.L4:\n.LBE25:\nmovq -32(%rbp),%rax\ncmpq -80(%rbp),%rax\njl .L48\n.LBE8:\n.LBE7:\nmovq -3440(%rbp),%rax\ncmpq $0,-80(%rbp)\njs .L31\ncmpq %rax,-80(%rbp)\njle .L45\n.L31:\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L45:\nmovq -3456(%rbp),%rdx\nmovq -3440(%rbp),%rax\ncmpq %rax,-80(%rbp)\nje .L33\nmovq -80(%rbp),%rax\nsalq $3,%rax\njmp .L34\n.L33:\nmovl $0,%eax\n.L34:\nleaq (%rdx,%rax),%rcx\nmovq -3448(%rbp),%rax\nsubq -80(%rbp),%rax\nmovq %rax,%rdx\nmovq -3440(%rbp),%rax\nsubq -80(%rbp),%rax\nmovq %rcx,-3456(%rbp)\nmovq %rdx,-3448(%rbp)\nmovq %rax,-3440(%rbp)\n.L3:\n.LBE6:\nmovq -3448(%rbp),%rax\ntestq %rax,%rax\njg .L49\n.LBE4:\n.LBE3:\n.LBB26:\nmovq $-1,-56(%rbp)\nmovq -56(%rbp),%rax\n.L37:\n.LBE26:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "n := len(p)\ndestination := n * n\nsquares := make([]int, 400)\nisChecked := [401]bool{}\nsquares[0] = 1\nisChecked[1] = true\nsteps := 0\nfor len(squares) > 0 {\n\tsteps++\n\tsize := len(squares)\n\tfor j := 0; j < size; j++ {\n\t\ts := squares[j]\n\t\tfor i := 1; i <= 6; i++ {\n\t\t\tsi := s + i\n\t\t\tx, y := position(si, n)\n\t\t\tif p[x][y] != -1 {\n\t\t\t\tisChecked[si] = true\n\t\t\t\tsi = p[x][y]\n\t\t\t}\n\t\t\tif si == destination {\n\t\t\t\treturn steps\n\t\t\t}\n\t\t\tif !isChecked[si] {\n\t\t\t\tsquares = append(squares, si)\n\t\t\t\tisChecked[si] = true\n\t\t\t}\n\t\t}\n\t}\n\tsquares = squares[size:]\n}\nreturn -1"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $72,%rsp\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\nleaq <main..main.linkLoopNode..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB4:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE4:\njmp .L3\n.L2:\n.LBB5:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <main..main.linkLoopNode..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE5:\nmovq -72(%rbp),%rbx\nleaq <main..main.linkLoop..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq %rbx,-32(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB6:\nmovq -40(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE6:\njmp .L5\n.L4:\n.LBB7:\nmovq -32(%rbp),%rax\nmovq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L5:\n.LBE7:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE3:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return &linkLoop{\n\tHead: &linkLoopNode{},\n}"}
{"src": "leaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L42\nmovl $296,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL7:\nret\n.L42:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $280,%rsp\nmovq %rdi,-280(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\n.LBB34:\n.LBB35:\n.LBB36:\nleaq <.LC73>(%rip),%rax\nmovl $19,%edx\nleaq -64(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq <16+go.data._dataCustomersJson>(%rip)\npushq <8+go.data._dataCustomersJson>(%rip)\npushq <go.data._dataCustomersJson>(%rip)\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <go.data.bindataRead>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -200(%rbp),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq %rcx,-272(%rbp)\nmovq %rbx,-264(%rbp)\n.LBE36:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-88(%rbp)\nmovq %rdx,-80(%rbp)\nmovq -280(%rbp),%rax\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -80(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.LBE35:\n.LBE34:\nmovq -280(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return bindataRead(\n\t_dataCustomersJson,\n\t\"STR\",\n)"}
{"src": ".LFB0:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L58\nmovl $376,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L58:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $344,%rsp\nmovq $0,-64(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-72(%rbp)\n.LBB3:\ncmpq $0,-72(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-64(%rbp)\nmovq -64(%rbp),%rax\njmp .L43\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L4:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-80(%rbp)\n.LBB6:\ncmpq $0,-80(%rbp)\njne .L5\n.LBB7:\n.LBB8:\nmovq $0,-64(%rbp)\nmovq -64(%rbp),%rax\njmp .L43\n.L5:\n.LBE8:\n.LBE7:\n.LBE6:\nmovq $0,-40(%rbp)\nmovq -72(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-368(%rbp)\nmovq %rbx,-360(%rbp)\nmovq %rbx,-352(%rbp)\n.LBB9:\nmovq $0,-88(%rbp)\n.LBB10:\n.LBB11:\n.LBB12:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%r13\nmovl $0,%r12d\n.LBE12:\njmp .L6\n.L55:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\nmovq %r12,-88(%rbp)\n.LBB15:\nmovq -80(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -360(%rbp),%rax\ncmpq $0,-88(%rbp)\njs .L7\ncmpq %rax,-88(%rbp)\njl .L44\n.L7:\nmovq -88(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L44:\nmovq -368(%rbp),%rsi\nmovq -88(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq %rdx,-304(%rbp)\nmovq %rbx,-296(%rbp)\nmovq %rbx,-288(%rbp)\nmovq -296(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -288(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L9\n.LBB16:\nmovq -304(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L10\n.L9:\n.LBE16:\n.LBB17:\nmovq -304(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L10:\n.LBE17:\n.LBE15:\n.LBE14:\n.LBB18:\naddq $1,%r12\n.L6:\n.LBE18:\ncmpq %r13,%r12\njl .L55\n.LBE11:\n.LBE10:\n.LBE9:\n.LBB19:\nmovq $1,-48(%rbp)\n.LBB20:\njmp .L13\n.L57:\n.LBB21:\nnop\n.LBE21:\n.LBB22:\n.LBB23:\nmovq $1,-56(%rbp)\n.LBB24:\njmp .L14\n.L56:\n.LBB25:\nnop\n.LBE25:\n.LBB26:\n.LBB27:\nmovq -48(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L15\ncmpq %rdx,%rax\njl .L46\n.L15:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L46:\nmovq <16>(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-256(%rbp)\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq -264(%rbp),%rdx\ntestq %rax,%rax\njs .L17\ncmpq %rdx,%rax\njge .L17\nmovq -272(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $49,%al\nje .L18\njmp .L19\n.L17:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\n.LBB28:\nmovq -48(%rbp),%rax\nsubq $1,%rax\nmovq -360(%rbp),%rdx\ntestq %rax,%rax\njs .L20\ncmpq %rdx,%rax\njl .L47\n.L20:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L47:\nmovq -368(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L22\ncmpq %rax,-56(%rbp)\njl .L48\n.L22:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L48:\nmovq -360(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L24\ncmpq %rax,-48(%rbp)\njl .L49\n.L24:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L49:\nmovq -368(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-192(%rbp)\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq -200(%rbp),%rdx\ntestq %rax,%rax\njs .L26\ncmpq %rdx,%rax\njge .L26\nmovq -208(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -240(%rbp),%rcx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0221.min>\nmovq %rax,%rsi\nmovq -48(%rbp),%rax\nsubq $1,%rax\nmovq -360(%rbp),%rdx\ntestq %rax,%rax\njns .L27\njmp .L28\n.L26:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\ncmpq %rdx,%rax\njl .L50\n.L28:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L50:\nmovq -368(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-160(%rbp)\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq -168(%rbp),%rdx\ntestq %rax,%rax\njs .L30\ncmpq %rdx,%rax\njge .L30\nmovq -176(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,%rdi\ncall <go.problem0221.min>\nmovq %rax,%rsi\nmovq -360(%rbp),%rax\ncmpq $0,-48(%rbp)\njns .L31\njmp .L32\n.L30:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\ncmpq %rax,-48(%rbp)\njl .L51\n.L32:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L51:\nmovq -368(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L34\ncmpq %rax,-56(%rbp)\njge .L34\nmovq -144(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nleaq <1>(%rsi),%rdx\nmovq %rdx,(%rax)\nmovq -360(%rbp),%rax\ncmpq $0,-48(%rbp)\njns .L35\njmp .L36\n.L34:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\ncmpq %rax,-48(%rbp)\njl .L52\n.L36:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L52:\nmovq -368(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L38\ncmpq %rax,-56(%rbp)\njge .L38\nmovq -112(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0221.max>\nmovq %rax,-40(%rbp)\njmp .L19\n.L38:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\n.LBE28:\n.LBE27:\n.LBE26:\n.LBB29:\naddq $1,-56(%rbp)\n.L14:\n.LBE29:\nmovq -56(%rbp),%rax\ncmpq -80(%rbp),%rax\njle .L56\n.LBE24:\n.LBE23:\n.LBE22:\n.LBB30:\naddq $1,-48(%rbp)\n.L13:\n.LBE30:\nmovq -48(%rbp),%rax\ncmpq -72(%rbp),%rax\njle .L57\n.LBE20:\n.LBE19:\n.LBB31:\nmovq -40(%rbp),%rax\nimulq %rax,%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\n.L43:\n.LBE31:\n.LBE2:\naddq $344,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "m := len(matrix)\nif m == 0 {\n\treturn 0\n}\nn := len(matrix[0])\nif n == 0 {\n\treturn 0\n}\nmaxEdge := 0\ndp := make([][]int, m+1)\nfor i := range dp {\n\tdp[i] = make([]int, n+1)\n}\nfor i := 1; i <= m; i++ {\n\tfor j := 1; j <= n; j++ {\n\t\tif matrix[i-1][j-1] == '1' {\n\t\t\tdp[i][j] = 1 + min(dp[i-1][j-1], min(dp[i-1][j], dp[i][j-1]))\n\t\t\tmaxEdge = max(maxEdge, dp[i][j])\n\t\t}\n\t}\n}\nreturn maxEdge * maxEdge"}
{"src": "cmpq %fs:112,%rsp\njnb .L39\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL12:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %xmm0,%rax\nmovq %rax,-40(%rbp)\nmovss -40(%rbp),%xmm2\nmovss -36(%rbp),%xmm0\nmovss %xmm2,-48(%rbp)\nmovss %xmm0,-44(%rbp)\nmovdqa %xmm1,%xmm0\nmovq %xmm0,-56(%rbp)\nmovss -56(%rbp),%xmm1\nmovss -52(%rbp),%xmm0\nmovss %xmm1,-64(%rbp)\nmovss %xmm0,-60(%rbp)\nmovss -48(%rbp),%xmm0\nmovss %xmm0,-12(%rbp)\nmovss -44(%rbp),%xmm0\nmovss %xmm0,-16(%rbp)\nmovss -64(%rbp),%xmm0\nmovss %xmm0,-20(%rbp)\nmovss -60(%rbp),%xmm0\nmovss %xmm0,-24(%rbp)\npxor %xmm0,%xmm0\nmovss %xmm0,-8(%rbp)\npxor %xmm0,%xmm0\nmovss %xmm0,-4(%rbp)\n.LBB26:\n.LBB27:\nmovss -24(%rbp),%xmm2\nmovss -20(%rbp),%xmm1\nmovss -16(%rbp),%xmm0\nmovl -12(%rbp),%eax\nmovaps %xmm2,%xmm3\nmovaps %xmm1,%xmm2\nmovaps %xmm0,%xmm1\nmovd %eax,%xmm0\ncall <__mulsc3@PLT>\nmovq %xmm0,%rax\nmovq %rax,-72(%rbp)\nmovss -72(%rbp),%xmm1\nmovss -68(%rbp),%xmm0\nmovss %xmm1,-28(%rbp)\nmovss %xmm0,-32(%rbp)\nmovss -32(%rbp),%xmm0\nmovss -28(%rbp),%xmm1\nmovss %xmm1,-8(%rbp)\nmovss %xmm0,-4(%rbp)\nmovss -28(%rbp),%xmm1\nmovss -32(%rbp),%xmm0\nmovss %xmm1,-80(%rbp)\nmovss %xmm0,-76(%rbp)\nmovq -80(%rbp),%rax\n.LBE27:\n.LBE26:\nmovq %rax,%xmm0\nleave\nret", "tgt": "return x * y"}
{"src": ".LFB8:\ncmpq %fs:112,%rsp\njnb .L140\nmovl $56,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL8:\nret\n.L140:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovb $0,-1(%rbp)\n.LBB102:\n.LBB103:\nmovq <24>(%rbp),%rdx\nmovq <48>(%rbp),%rax\ncmpq %rax,%rdx\nje .L127\n.LBB104:\n.LBB105:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L128\n.L127:\n.LBE105:\n.LBE104:\n.LBE103:\n.LBB106:\nmovq $0,-16(%rbp)\nmovq $0,-24(%rbp)\n.LBB107:\n.LBB108:\n.LBB109:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -40(%rbp),%rcx\nmovl $0,%eax\n.LBE109:\njmp .L129\n.L139:\n.LBB110:\nnop\n.LBE110:\n.LBB111:\n.LBB112:\nmovq -40(%rbp),%rdx\ntestq %rax,%rax\njs .L130\ncmpq %rdx,%rax\njge .L130\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE112:\n.LBB113:\nmovq %rax,-16(%rbp)\nmovq %rdx,-24(%rbp)\n.LBE113:\n.LBB114:\n.LBB115:\nmovq <48>(%rbp),%rdx\ncmpq $0,-16(%rbp)\njns .L131\njmp .L132\n.L130:\n.LBE115:\n.LBE114:\n.LBB119:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L131:\n.LBE119:\n.LBB120:\n.LBB118:\ncmpq %rdx,-16(%rbp)\njl .L137\n.L132:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L137:\nmovq <40>(%rbp),%rsi\nmovq -16(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rdx\ncmpq %rdx,-24(%rbp)\nje .L134\n.LBB116:\n.LBB117:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L128\n.L134:\n.LBE117:\n.LBE116:\n.LBE118:\n.LBE120:\n.LBE111:\n.LBB121:\naddq $1,%rax\n.L129:\n.LBE121:\ncmpq %rcx,%rax\njl .L139\n.LBE108:\n.LBE107:\n.LBE106:\n.LBB122:\nmovb $1,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L128:\n.LBE122:\n.LBE102:\nleave\nret", "tgt": "if len(a) != len(b) {\n\treturn false\n}\nfor i, v := range a {\n\tif v != b[i] {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L10\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB2:\n.LBB3:\nmovq -184(%rbp),%rax\ncmpq $1,%rax\njg .L2\n.LBB4:\n.LBB5:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\njmp .L8\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -192(%rbp),%rdx\nmovq -184(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem0214.reverse>\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,-160(%rbp)\nmovq %rbx,-152(%rbp)\nleaq <.LC4>(%rip),%rcx\nmovq %rcx,-144(%rbp)\nmovq $1,-136(%rbp)\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nleaq -160(%rbp),%rcx\nleaq -112(%rbp),%rax\nmovl $3,%edx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.problem0214.getIndex>\nmovq %rax,-40(%rbp)\n.LBB6:\nmovq -184(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L4\ncmpq %rax,-40(%rbp)\njg .L4\nmovq -192(%rbp),%rdx\nmovq -184(%rbp),%rax\ncmpq %rax,-40(%rbp)\njne .L5\njmp .L9\n.L4:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L5:\nmovq -40(%rbp),%rax\njmp .L7\n.L9:\nmovl $0,%eax\n.L7:\naddq %rdx,%rax\nmovq %rax,%r12\nmovq -184(%rbp),%rax\nsubq -40(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.problem0214.reverse>\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nleaq -80(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\n.L8:\n.LBE6:\n.LBE2:\naddq $168,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "if len(s) <= 1 {\n\treturn s\n}\ni := getIndex(s + \"STR\" + reverse(s))\nreturn reverse(s[i:]) + s"}
{"src": ".LFB0:\nleaq -408(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L38\nmovl $408,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L38:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $384,%rsp\nmovq %rdi,-392(%rbp)\nmovq %rsi,-400(%rbp)\nmovq -392(%rbp),%rdx\nmovq -400(%rbp),%rax\nleaq (%rdx,%rax),%rbx\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-384(%rbp)\nmovq $0,-376(%rbp)\nmovq %rbx,-368(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-32(%rbp)\n.L31:\n.LBB2:\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -24(%rbp),%rax\ncmpq -392(%rbp),%rax\njne .L2\n.LBB6:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -344(%rbp),%rbx\nmovq <56>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L3\ncmpq %rax,-32(%rbp)\njle .L32\n.L3:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L32:\nmovq <40>(%rbp),%rdx\nmovq <56>(%rbp),%rax\ncmpq %rax,-32(%rbp)\nje .L5\nmovq -32(%rbp),%rax\nsalq $3,%rax\njmp .L6\n.L5:\nmovl $0,%eax\n.L6:\naddq %rdx,%rax\nmovq %rax,-320(%rbp)\nmovq <48>(%rbp),%rax\nsubq -32(%rbp),%rax\nmovq %rax,-312(%rbp)\nmovq <56>(%rbp),%rax\nsubq -32(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%r12\nleaq (%rbx,%r12),%rax\nmovq -336(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L7\n.LBB7:\nmovq -352(%rbp),%rsi\nleaq -160(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE7:\njmp .L8\n.L7:\n.LBB8:\nmovq -352(%rbp),%rcx\nmovq -336(%rbp),%rdx\nmovq %rcx,-384(%rbp)\nmovq %rax,-376(%rbp)\nmovq %rdx,-368(%rbp)\n.L8:\n.LBE8:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq %r12,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -320(%rbp),%rax\nmovq -352(%rbp),%rcx\nmovq %rbx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\njmp .L9\n.L2:\n.LBE6:\n.LBE5:\n.LBB9:\nmovq -32(%rbp),%rax\ncmpq -400(%rbp),%rax\njne .L10\n.LBB10:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -280(%rbp),%rbx\nmovq <32>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L11\ncmpq %rax,-24(%rbp)\njle .L33\n.L11:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L33:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq %rax,-24(%rbp)\nje .L13\nmovq -24(%rbp),%rax\nsalq $3,%rax\njmp .L14\n.L13:\nmovl $0,%eax\n.L14:\naddq %rdx,%rax\nmovq %rax,-256(%rbp)\nmovq <24>(%rbp),%rax\nsubq -24(%rbp),%rax\nmovq %rax,-248(%rbp)\nmovq <32>(%rbp),%rax\nsubq -24(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r12\nleaq (%rbx,%r12),%rax\nmovq -272(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L15\n.LBB11:\nmovq -288(%rbp),%rsi\nleaq -128(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE11:\njmp .L16\n.L15:\n.LBB12:\nmovq -288(%rbp),%rcx\nmovq -272(%rbp),%rdx\nmovq %rcx,-384(%rbp)\nmovq %rax,-376(%rbp)\nmovq %rdx,-368(%rbp)\n.L16:\n.LBE12:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq %r12,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -256(%rbp),%rax\nmovq -288(%rbp),%rcx\nmovq %rbx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\njmp .L9\n.L10:\n.LBE10:\n.LBE9:\n.LBB13:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L17\ncmpq %rax,-24(%rbp)\njl .L34\n.L17:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq <48>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L19\ncmpq %rax,-32(%rbp)\njl .L35\n.L19:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <40>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njge .L21\n.LBB14:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L22\ncmpq %rax,-24(%rbp)\njl .L36\n.L22:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L24\n.LBB15:\nmovq -224(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE15:\njmp .L25\n.L24:\n.LBB16:\nmovq -224(%rbp),%rcx\nmovq -208(%rbp),%rdx\nmovq %rcx,-384(%rbp)\nmovq %rax,-376(%rbp)\nmovq %rdx,-368(%rbp)\n.L25:\n.LBE16:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\naddq $1,-24(%rbp)\n.LBE14:\njmp .L31\n.L21:\n.LBB17:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rbx\nmovq <48>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L27\ncmpq %rax,-32(%rbp)\njl .L37\n.L27:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\nmovq <40>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -176(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L29\n.LBB18:\nmovq -192(%rbp),%rsi\nleaq -64(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE18:\njmp .L30\n.L29:\n.LBB19:\nmovq -192(%rbp),%rcx\nmovq -176(%rbp),%rdx\nmovq %rcx,-384(%rbp)\nmovq %rax,-376(%rbp)\nmovq %rdx,-368(%rbp)\n.L30:\n.LBE19:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -192(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\naddq $1,-32(%rbp)\n.LBE17:\n.LBE13:\n.LBE4:\njmp .L31\n.L9:\n.LBE3:\n.LBE2:\nmovq <24>(%rbp),%rax\nmovq -376(%rbp),%rdx\ncmpq %rax,%rdx\ncmovle %rdx,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -384(%rbp),%rcx\nmovq <16>(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memmove@PLT>\naddq $384,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "sorted := make([]int, 0, m+n)\np, q := 0, 0\nfor {\n\tif p == m {\n\t\tsorted = append(sorted, nums2[q:]...)\n\t\tbreak\n\t}\n\tif q == n {\n\t\tsorted = append(sorted, nums1[p:]...)\n\t\tbreak\n\t}\n\tif nums1[p] < nums2[q] {\n\t\tsorted = append(sorted, nums1[p])\n\t\tp++\n\t} else {\n\t\tsorted = append(sorted, nums2[q])\n\t\tq++\n\t}\n}\ncopy(nums1, sorted)"}
{"src": ".LFB0:\nleaq -552(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L53\nmovl $552,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L53:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $504,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\n.LBB2:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-56(%rbp)\n.LBB3:\nmovl $0,-60(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -520(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L48:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -520(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -528(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L40\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\naddq $1,%rbx\n.LBE10:\njmp .L6\n.L40:\n.LBB11:\nmovq -528(%rbp),%rcx\nmovq -520(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovl %ecx,%eax\n.L6:\n.LBE11:\n.LBE9:\n.LBB12:\nmovl %eax,-60(%rbp)\n.LBE12:\n.LBB13:\n.LBB14:\nmovl -60(%rbp),%eax\nmovl %eax,-420(%rbp)\nmovl -60(%rbp),%eax\nmovl %eax,-148(%rbp)\nleaq -148(%rbp),%rax\nmovl (%rax),%edx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int32.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast32@PLT>\nmovq (%rax),%rax\naddq $1,%rax\nmovq %rax,-544(%rbp)\nleaq -420(%rbp),%rax\nmovl (%rax),%edx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int32.7int>(%rip),%rdi\ncall <runtime.mapassign_fast32@PLT>\nmovq -544(%rbp),%rcx\nmovq %rcx,(%rax)\n.L2:\n.LBE14:\n.LBE13:\n.LBE8:\ncmpq -536(%rbp),%rbx\njl .L48\n.LBE5:\n.LBE4:\n.LBE3:\ncmpq $0,-56(%rbp)\nje .L9\nmovq -56(%rbp),%rax\nmovq (%rax),%rbx\njmp .L10\n.L9:\nmovl $0,%ebx\n.L10:\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <type...1go.day231.NoAdjacent.frequency>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-480(%rbp)\nmovq $0,-472(%rbp)\nmovq %rbx,-464(%rbp)\n.LBB15:\nmovl $0,-64(%rbp)\nmovq $0,-72(%rbp)\n.LBB16:\n.LBB17:\n.LBB18:\nleaq -416(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int32.7int>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE18:\njmp .L11\n.L49:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -416(%rbp),%rax\nmovl (%rax),%edx\nmovq -408(%rbp),%rax\nmovq (%rax),%rax\n.LBE21:\n.LBB22:\nmovl %edx,-64(%rbp)\nmovq %rax,-72(%rbp)\n.LBE22:\n.LBB23:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%rbx\nleaq <go.day231.NoAdjacent.go.day231..go.day231.frequency..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-288(%rbp)\nmovq -288(%rbp),%rax\nmovl -64(%rbp),%edx\nmovl %edx,(%rax)\nmovq -72(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -288(%rbp),%rax\nmovq %rax,-536(%rbp)\nleaq <1>(%rbx),%rax\nmovq -304(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L12\n.LBB24:\nmovq -320(%rbp),%rsi\nleaq -144(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...1go.day231.NoAdjacent.frequency>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-464(%rbp)\n.LBE24:\njmp .L13\n.L12:\n.LBB25:\nmovq -320(%rbp),%rcx\nmovq -304(%rbp),%rdx\nmovq %rcx,-480(%rbp)\nmovq %rax,-472(%rbp)\nmovq %rdx,-464(%rbp)\n.L13:\n.LBE25:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -320(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L14\n.LBB26:\nmovq -536(%rbp),%rsi\nmovq %rsi,(%rax)\njmp .L15\n.L14:\n.LBE26:\n.LBB27:\nmovq -536(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L15:\n.LBE27:\n.LBE23:\n.LBE20:\n.LBB28:\nleaq -416(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L11:\n.LBE28:\nmovq -416(%rbp),%rax\ntestq %rax,%rax\njne .L49\n.LBE17:\n.LBE16:\n.LBE15:\nleaq <go.day231.NoAdjacent..func1>(%rip),%rcx\nleaq -480(%rbp),%rdx\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-216(%rbp)\nmovq -216(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -216(%rbp),%rbx\nleaq <type...6.7.1go.day231.NoAdjacent.frequency>(%rip),%r12\nleaq <type...6.7.1go.day231.NoAdjacent.frequency>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L18\n.LBB29:\nmovq -280(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -256(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE29:\njmp .L19\n.L18:\n.LBB30:\nmovq -280(%rbp),%rax\nleaq -272(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.1go.day231.NoAdjacent.frequency>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L19:\n.LBE30:\nmovq -280(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nmovq $0,-512(%rbp)\nmovq $0,-504(%rbp)\nmovq $0,-496(%rbp)\nmovq $0,-488(%rbp)\n.LBB31:\n.LBB32:\njmp .L20\n.L52:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\n.LBB35:\n.LBB36:\nmovq -472(%rbp),%rax\ncmpq $1,%rax\nsete %al\ntestb %al,%al\nje .L21\n.LBB37:\nmovq -472(%rbp),%rax\ntestq %rax,%rax\njg .L22\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq -480(%rbp),%rax\nmovq (%rax),%rax\nmovq <8>(%rax),%rax\ncmpq $1,%rax\nsetg %al\n.L21:\n.LBE37:\n.LBE36:\ntestb %al,%al\nje .L23\n.LBB38:\n.LBB39:\nleaq <.LC32>(%rip),%r14\nmovl $0,%r15d\nmovq %r14,-448(%rbp)\nmovq %r15,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\njmp .L39\n.L23:\n.LBE39:\n.LBE38:\n.LBE35:\n.LBB40:\nmovq $0,-80(%rbp)\n.LBB41:\n.LBB42:\n.LBB43:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r12\nmovl $0,%ebx\n.LBE43:\njmp .L25\n.L50:\n.LBB44:\nnop\n.LBE44:\n.LBB45:\n.LBB46:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L26\ncmpq %rax,%rbx\njge .L26\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE46:\n.LBB47:\nmovq %rax,-80(%rbp)\n.LBE47:\n.LBB48:\nmovq -80(%rbp),%rax\nmovl (%rax),%edx\nleaq -112(%rbp),%rax\nleaq -512(%rbp),%rcx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <strings.Builder.WriteRune@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-160(%rbp)\n.LBB49:\nmovq -80(%rbp),%rax\nmovq <8>(%rax),%rdx\nsubq $1,%rdx\nmovq %rdx,<8>(%rax)\n.LBE49:\n.LBE48:\n.LBE45:\n.LBB51:\naddq $1,%rbx\njmp .L25\n.L26:\n.LBE51:\n.LBB52:\n.LBB50:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\n.LBE50:\n.LBE52:\ncmpq %r12,%rbx\njl .L50\n.LBE42:\n.LBE41:\n.LBE40:\n.LBB53:\n.LBB54:\njmp .L29\n.L51:\n.LBB55:\nnop\n.LBE55:\n.LBB56:\nmovq -472(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -464(%rbp),%rax\ntestq %rdi,%rdi\njs .L30\ncmpq %rax,%rdi\njg .L30\ntestq %rdi,%rdi\njns .L31\njmp .L44\n.L30:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L44:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L31:\nmovq -480(%rbp),%rdx\nmovq -464(%rbp),%rax\nmovq %rdx,-480(%rbp)\nmovq %rdi,-472(%rbp)\nmovq %rax,-464(%rbp)\n.L29:\n.LBE56:\n.LBB57:\nmovq -472(%rbp),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L33\n.LBB58:\nmovq -472(%rbp),%rax\nsubq $1,%rax\nmovq -472(%rbp),%rdx\ntestq %rax,%rax\njs .L34\ncmpq %rdx,%rax\njl .L45\n.L34:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L45:\nmovq -480(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsete %al\n.L33:\n.LBE58:\n.LBE57:\ntestb %al,%al\njne .L51\n.L20:\n.LBE54:\n.LBE53:\n.LBE34:\nmovq -472(%rbp),%rax\ntestq %rax,%rax\njne .L52\n.LBE32:\n.LBE31:\n.LBB59:\nleaq -512(%rbp),%rax\nmovq %rax,%rdi\ncall <strings.Builder.String@PLT>\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\n.L39:\n.LBE59:\n.LBE2:\naddq $504,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "freq := make(map[rune]int)\nfor _, r := range s {\n\tfreq[r]++\n}\ntype frequency struct {\n\tr     rune\n\tcount int\n}\nletters := make([]*frequency, 0, len(freq))\nfor letter, count := range freq {\n\tletters = append(letters, &frequency{letter, count})\n}\nsort.Slice(letters, func(i, j int) bool {\n\treturn letters[i].count > letters[j].count\n})\nvar sb strings.Builder\nfor len(letters) != 0 {\n\tif len(letters) == 1 && letters[0].count > 1 {\n\t\treturn \"STR\"\n\t}\n\tfor _, f := range letters {\n\t\tsb.WriteRune(f.r)\n\t\tf.count--\n\t}\n\tfor len(letters) != 0 && letters[len(letters)-1].count == 0 {\n\t\tletters = letters[:len(letters)-1]\n\t}\n}\nreturn sb.String()"}
{"src": ".LFB0:\nleaq -26760(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $26760,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\nsubq $26752,%rsp\nmovq $0,-16(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-72(%rbp)\n.LBB3:\nmovq -72(%rbp),%rax\nsubq $2,%rax\nmovq %rax,-8(%rbp)\n.LBB4:\njmp .L2\n.L15:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L3\ncmpq %rax,-8(%rbp)\njge .L3\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njns .L4\njmp .L5\n.L3:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\ncmpq %rax,-8(%rbp)\njl .L12\n.L5:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq -8(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njl .L13\n.L7:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\nmovq <16>(%rbp),%rcx\nmovq -8(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rsi\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\naddq %rcx,%rdx\nmovq %rdx,(%rax)\n.LBE6:\n.LBB7:\nsubq $1,-8(%rbp)\n.L2:\n.LBE7:\ncmpq $0,-8(%rbp)\njns .L15\n.LBE4:\n.LBE3:\nleaq -26752(%rbp),%rax\nmovl $26664,%edx\nmovl $0,%esi\nmovq %rax,%rdi\ncall <memset@PLT>\nmovq $0,-80(%rbp)\nleaq <go.problem1140.stoneGameII..func1>(%rip),%rdi\nleaq -72(%rbp),%rsi\nleaq <16>(%rbp),%r8\nleaq -26752(%rbp),%rcx\nleaq -80(%rbp),%rdx\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\nleaq -64(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\nmovq %rdi,(%rax)\nmovq %rsi,<8>(%rax)\nmovq %r8,<16>(%rax)\nmovq %rcx,<24>(%rax)\nmovq %rdx,<32>(%rax)\nmovq -24(%rbp),%rax\nmovq %rax,-80(%rbp)\n.LBB8:\nmovq -80(%rbp),%rdx\nmovq -80(%rbp),%rax\nmovq (%rax),%rax\nmovq %rdx,%r10\nmovl $1,%esi\nmovl $0,%edi\ncall *%rax\n.LVL1:\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.LBE8:\n.LBE2:\nleave\nret", "tgt": "n := len(A)\nfor i := n - 2; i >= 0; i-- {\n\tA[i] += A[i+1]\n}\nmem := [101][33]int{}\nvar dp func(int, int) int\ndp = func(i, m int) int {\n\tif i+2*m >= n {\n\t\treturn A[i]\n\t}\n\tif mem[i][m] > 0 {\n\t\treturn mem[i][m]\n\t}\n\tres := 0\n\tfor x := 1; x <= 2*m; x++ {\n\t\tres = max(\n\t\t\tres,\n\t\t\tA[i]-dp(i+x, max(m, x)),\n\t\t)\n\t}\n\tmem[i][m] = res\n\treturn res\n}\nreturn dp(0, 1)"}
{"src": ".LFB32:\ncmpq %fs:112,%rsp\njnb .L697\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL41:\nret\n.L697:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-16(%rbp)\n.LBB595:\n.LBB596:\ncmpq $2,-40(%rbp)\njg .L676\n.LBB597:\n.LBB598:\nmovq -40(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L689\n.L676:\n.LBE598:\n.LBE597:\n.LBE596:\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\n.LBB599:\nmovl $1,%edx\nmovl $2,%eax\nmovq %rdx,-32(%rbp)\nmovq %rax,-24(%rbp)\n.LBE599:\n.LBB600:\nmovq $2,-8(%rbp)\n.LBB601:\njmp .L678\n.L696:\n.LBB602:\nnop\n.LBE602:\n.LBB603:\nmovq -8(%rbp),%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\ntestq %rax,%rax\njs .L679\ncmpq $1,%rax\njle .L691\n.L679:\nmovl $2,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L691:\nmovq -8(%rbp),%rdx\nmovq %rdx,%rcx\nsarq $63,%rcx\nshrq $63,%rcx\naddq %rcx,%rdx\nandl $1,%edx\nsubq %rcx,%rdx\nmovq %rdx,%rcx\ntestq %rcx,%rcx\njs .L681\ncmpq $1,%rcx\njle .L692\n.L681:\nmovl $2,%esi\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L692:\nmovq -8(%rbp),%rdx\nsubq $1,%rdx\nmovq %rdx,%rsi\nsarq $63,%rsi\nshrq $63,%rsi\naddq %rsi,%rdx\nandl $1,%edx\nsubq %rsi,%rdx\ntestq %rdx,%rdx\njs .L683\ncmpq $1,%rdx\njle .L693\n.L683:\nmovl $2,%esi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L693:\nmovq -32(%rbp,%rcx,8),%rcx\nmovq -32(%rbp,%rdx,8),%rdx\naddq %rcx,%rdx\nmovq %rdx,-32(%rbp,%rax,8)\n.LBE603:\n.LBB604:\naddq $1,-8(%rbp)\n.L678:\n.LBE604:\nmovq -8(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L696\n.LBE601:\n.LBE600:\n.LBB605:\nmovq -40(%rbp),%rax\nsubq $1,%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\ntestq %rax,%rax\njs .L687\ncmpq $1,%rax\njle .L695\n.L687:\nmovl $2,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L695:\nmovq -32(%rbp,%rax,8),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.L689:\n.LBE605:\n.LBE595:\nleave\nret", "tgt": "if n <= 2 {\n\treturn n\n}\nvar dp [2]int\ndp[0], dp[1] = 1, 2\nfor i := 2; i < n; i++ {\n\tdp[i%2] = dp[i%2] + dp[(i-1)%2]\n}\nreturn dp[(n-1)%2]"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $200,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\n.LBB2:\nmovq -224(%rbp),%rdx\nmovq -216(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <strings.TrimSpace@PLT>\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -224(%rbp),%rdx\nmovq -216(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <strings.ToLower@PLT>\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\ncall <crypto..z2fmd5.New@PLT>\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -160(%rbp),%rax\ntestq %rax,%rax\njne .L2\nmovl $0,%eax\njmp .L3\n.L2:\nmovq -160(%rbp),%rax\nmovq (%rax),%rax\n.L3:\nmovq %rax,%rsi\nleaq <io.Writer..d>(%rip),%rdi\ncall <runtime.requireitab@PLT>\nmovq %rax,%r12\nmovq -152(%rbp),%rax\nmovq %rax,%r13\nleaq -96(%rbp),%rax\nmovq -224(%rbp),%rdx\nmovq -216(%rbp),%r8\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdi\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <io.WriteString@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -160(%rbp),%rax\nmovq <32>(%rax),%rcx\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq -152(%rbp),%rdx\nleaq -192(%rbp),%rax\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL1:\naddq $32,%rsp\nsubq $8,%rsp\npushq -176(%rbp)\npushq -184(%rbp)\npushq -192(%rbp)\ncall <encoding..z2fhex.EncodeToString@PLT>\naddq $32,%rsp\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\n.LBB3:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\n.LBE3:\n.LBE2:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "email = strings.TrimSpace(email)\nemail = strings.ToLower(email)\nh := md5.New()\nio.WriteString(h, email)\nfinalBytes := h.Sum(nil)\nfinalString := hex.EncodeToString(finalBytes)\nreturn finalString"}
{"src": ".LFB0:\nleaq -856(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $856,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $808,%rsp\nmovq %rdi,-728(%rbp)\nleaq <.LC13>(%rip),%rax\nmovl $1,%edx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nmovb $0,-672(%rbp)\nleaq <.LC14>(%rip),%rcx\nmovl $4,%ebx\nmovq %rcx,-664(%rbp)\nmovq %rbx,-656(%rbp)\nmovb $1,-648(%rbp)\nleaq <.LC15>(%rip),%r8\nmovl $3,%r9d\nmovq %r8,-640(%rbp)\nmovq %r9,-632(%rbp)\nmovb $0,-624(%rbp)\nleaq <.LC16>(%rip),%r10\nmovl $6,%r11d\nmovq %r10,-616(%rbp)\nmovq %r11,-608(%rbp)\nmovb $1,-600(%rbp)\nleaq <.LC17>(%rip),%r12\nmovl $12,%r13d\nmovq %r12,-592(%rbp)\nmovq %r13,-584(%rbp)\nmovb $1,-576(%rbp)\nleaq <.LC18>(%rip),%rax\nmovq %rax,-800(%rbp)\nmovq $12,-792(%rbp)\nmovdqa -800(%rbp),%xmm0\nmovups %xmm0,-568(%rbp)\nmovb $1,-552(%rbp)\nleaq <.LC19>(%rip),%rax\nmovq %rax,-784(%rbp)\nmovq $30,-776(%rbp)\nmovdqa -784(%rbp),%xmm1\nmovups %xmm1,-544(%rbp)\nmovb $1,-528(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-768(%rbp)\nmovq $10,-760(%rbp)\nmovdqa -768(%rbp),%xmm2\nmovups %xmm2,-520(%rbp)\nmovb $0,-504(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-752(%rbp)\nmovq $15,-744(%rbp)\nmovdqa -752(%rbp),%xmm3\nmovups %xmm3,-496(%rbp)\nmovb $1,-480(%rbp)\n.LBB2:\nmovq $0,-720(%rbp)\nmovq $0,-712(%rbp)\nmovq $0,-704(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovl $9,%r12d\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %rbx,%rbx\njs .L3\ncmpq $8,%rbx\njg .L3\nmovq %rbx,%rax\naddq %rax,%rax\naddq %rbx,%rax\nsalq $3,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -384(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-448(%rbp)\n.LBE8:\n.LBB9:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-704(%rbp)\n.LBE9:\n.LBB10:\nmovq -720(%rbp),%rdx\nmovq -712(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem459.repeatedSubstringPattern>\nmovb %al,-49(%rbp)\n.LBB11:\nmovzbl -704(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB18:\nmovl $9,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB12:\nleaq <string..d>(%rip),%rax\nmovq %rax,-848(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -184(%rbp),%rax\nmovq %rax,-840(%rbp)\nleaq <bool..d>(%rip),%r13\nmovq %r13,-832(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-824(%rbp)\nmovq %r13,-816(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -704(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,-808(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -848(%rbp),%xmm4\nmovups %xmm4,-128(%rbp)\nmovdqa -832(%rbp),%xmm5\nmovups %xmm5,-112(%rbp)\nmovdqa -816(%rbp),%xmm6\nmovups %xmm6,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB15:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE15:\njmp .L9\n.L8:\n.LBB16:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE16:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC22>(%rip),%r14\nmovl $25,%r15d\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq -728(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE17:\n.LBE19:\n.LBE7:\n.LBB20:\naddq $1,%rbx\n.L2:\n.LBE20:\ncmpq %r12,%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   \"STR\",\n\t\twant: false,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: false,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: false,\n\t}, {\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n}\nfor _, tt := range tests {\n\tgot := repeatedSubstringPattern(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": ".LFB1:\nleaq -360(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L15\nmovl $360,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $312,%rsp\nmovq %rdi,-312(%rbp)\nmovl $3,-288(%rbp)\nmovq $2,-280(%rbp)\nmovl $7,-272(%rbp)\nmovq $3,-264(%rbp)\nmovl $8,-256(%rbp)\nmovq $1,-248(%rbp)\nmovl $21845,-240(%rbp)\nmovq $8,-232(%rbp)\n.LBB4:\nmovq $0,-304(%rbp)\nmovq $0,-296(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq $4,-320(%rbp)\nmovl $0,%ebx\n.LBE7:\njmp .L5\n.L14:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\ntestq %rbx,%rbx\njs .L6\ncmpq $3,%rbx\njg .L6\nmovq %rbx,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nsubq $176,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE10:\n.LBB11:\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\n.LBE11:\n.LBB12:\nmovl -304(%rbp),%eax\nmovl %eax,%edi\ncall <go.problem191.hammingWeight>\nmovq %rax,-56(%rbp)\n.LBB13:\nmovq -296(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L7\njmp .L8\n.L6:\n.LBE13:\n.LBE12:\n.LBB18:\nmovl $4,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB14:\nleaq <uint32..d>(%rip),%rax\nmovq %rax,-352(%rbp)\nleaq <uint32..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovl -304(%rbp),%edx\nmovl %edx,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-344(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-336(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-328(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -352(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -336(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB15:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE15:\njmp .L10\n.L9:\n.LBB16:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE16:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC13>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -312(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L8:\n.LBE14:\n.LBE17:\n.LBE19:\n.LBE9:\n.LBB20:\naddq $1,%rbx\n.L5:\n.LBE20:\ncmpq -320(%rbp),%rbx\njl .L14\n.LBE6:\n.LBE5:\n.LBE4:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   3,\n\t\twant: 2,\n\t},\n\t{\n\t\tin:   7,\n\t\twant: 3,\n\t},\n\t{\n\t\tin:   8,\n\t\twant: 1,\n\t},\n\t{\n\t\tin:   0x5555,\n\t\twant: 8,\n\t},\n}\nfor _, tt := range tests {\n\tgot := hammingWeight(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": "leaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L42\nmovl $296,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL7:\nret\n.L42:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $280,%rsp\nmovq %rdi,-280(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\n.LBB34:\n.LBB35:\n.LBB36:\nleaq <.LC73>(%rip),%rax\nmovl $19,%edx\nleaq -64(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq <16+main._assetsHomeCatJpg>(%rip)\npushq <8+main._assetsHomeCatJpg>(%rip)\npushq <main._assetsHomeCatJpg>(%rip)\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <main.bindataRead>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -200(%rbp),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq %rcx,-272(%rbp)\nmovq %rbx,-264(%rbp)\n.LBE36:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-88(%rbp)\nmovq %rdx,-80(%rbp)\nmovq -280(%rbp),%rax\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -80(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.LBE35:\n.LBE34:\nmovq -280(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return bindataRead(\n\t_assetsHomeCatJpg,\n\t\"STR\",\n)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L21\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L21:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-168(%rbp)\nmovq %rsi,-176(%rbp)\nmovq -176(%rbp),%rax\nmovl $0,%edx\nmovq %rax,%rsi\nleaq <type..map.6string.7.1go.lrucache.entry>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,%rdx\nmovq -168(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L2\n.LBB2:\nmovq %rdx,(%rax)\njmp .L3\n.L2:\n.LBE2:\n.LBB3:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L3:\n.LBE3:\nmovq -176(%rbp),%rbx\nmovq %rbx,%rax\nmovq %rax,%rdx\nmovl $0,%esi\nleaq <type...1go.lrucache.entry>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -168(%rbp),%rax\naddq $16,%rax\nmovq %rdx,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq %rbx,%rdx\nmovq %rdx,-80(%rbp)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq -80(%rbp),%rdx\nmovq %rdx,-112(%rbp)\nmovq -120(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -112(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L4\n.LBB4:\nmovq -128(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L5\n.L4:\n.LBE4:\n.LBB5:\nmovq -128(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L5:\n.LBE5:\ncmpq $0,-168(%rbp)\njne .L6\ncall <runtime.panicmem@PLT>\n.L6:\nmovq -168(%rbp),%rax\naddq $40,%rax\nmovq %rax,%rdi\ncall <go.lrucache.list.Init>\ncmpq $0,-168(%rbp)\njne .L7\ncall <runtime.panicmem@PLT>\n.L7:\nmovq -168(%rbp),%rax\naddq $88,%rax\nmovq %rax,%rdi\ncall <go.lrucache.list.Init>\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.lrucache.priorityQueue>(%rip),%r14\ncmpq $0,-168(%rbp)\njne .L8\ncall <runtime.panicmem@PLT>\n.L8:\nmovq -168(%rbp),%rax\naddq $16,%rax\nmovq %rax,%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Init@PLT>\nmovq -176(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rax\nmovq %rax,%rsi\nleaq <go.lrucache..go.lrucache.entry..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-160(%rbp)\nmovq %rbx,%rax\nmovq %rax,-152(%rbp)\nmovq %rbx,%rax\nmovq %rax,-144(%rbp)\n.LBB6:\nmovq $0,-56(%rbp)\n.LBB7:\njmp .L9\n.L20:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\ntestq %rdx,%rdx\njs .L10\nmovq -56(%rbp),%rdx\ncmpq %rdx,%rax\njg .L18\n.L10:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L18:\nmovq -160(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\naddq $24,%rax\nleaq <type...1go.lrucache.entry>(%rip),%r12\nmovq -64(%rbp),%r13\nmovq %r12,%rdx\nmovq %rdx,(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L12\n.LBB10:\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\njmp .L13\n.L12:\n.LBE10:\n.LBB11:\nmovq %r13,%rdx\naddq $8,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L13:\n.LBE11:\nmovq -64(%rbp),%rax\nmovq $-1,<96>(%rax)\ncmpq $0,-64(%rbp)\njne .L14\ncall <runtime.panicmem@PLT>\n.L14:\nmovq -64(%rbp),%rax\nmovq %rax,%rdx\ncmpq $0,-168(%rbp)\njne .L15\ncall <runtime.panicmem@PLT>\n.L15:\nmovq -168(%rbp),%rax\naddq $88,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.lrucache.list.PushElementBack>\n.LBE9:\n.LBB12:\naddq $1,-56(%rbp)\n.L9:\n.LBE12:\nmovq -56(%rbp),%rax\ncmpq -176(%rbp),%rax\njb .L20\n.LBE7:\n.LBE6:\naddq $136,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "b.table = make(map[string]*entry, capacity)\nb.priorityQueue = make([]*entry, 0, capacity)\nb.lruList.Init()\nb.freeList.Init()\nheap.Init(&b.priorityQueue)\narrayOfEntries := make([]entry, capacity)\nfor i := uint(0); i < capacity; i++ {\n\te := &arrayOfEntries[i]\n\te.element.Value = e\n\te.index = -1\n\tb.freeList.PushElementBack(&e.element)\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L40\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L40:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq %rdi,-8(%rbp)\nmovq -8(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L38\n.LBB47:\nmovq $0,(%rax)\n.LBE47:\njmp .L37\n.L38:\n.LBB48:\nmovl $0,%esi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L37:\n.LBE48:\nleave\nret", "tgt": "list.rear = nil"}
{"src": "cmpq %fs:112,%rsp\njnb .L267\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL13:\nret\n.L267:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $40,%rsp\nmovq %rdi,-56(%rbp)\ncall <go.heap.newLinkedHeap>\nmovq %rax,-40(%rbp)\nleaq <pimt..interface.4Append.0func.8interface.4.5.9.8.9.2Key.0func.8interface.4.5.9.8int.9.2Left.0func.8interface.4.5.9.8interface.4.5.9.2Len.0func.8.9.8int.9.2Pop.0func.8.9.8interface.4.5.9.2Right.0func.8interface.4.5.9.8interface.4.5.9.2Swap.0func.8interface.4.5.3interface.4.5.9.8.9.2Union.0func.8interface.4.5.9.8interface.4.5.9.2Value.0func.8interface.4.5.9.8interface.4.5.9.5..go.heap.linkedHeap>(%rip),%r12\nmovq -40(%rbp),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.heap.benchmarkHeap>\naddq $40,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "h := newLinkedHeap()\nbenchmarkHeap(b, h)"}
{"src": "cmpq %fs:112,%rsp\njnb .L27\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq %rdi,-8(%rbp)\nmovq -8(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rdi\ncall <runtime.closechan@PLT>\ncmpq $0,-8(%rbp)\njne .L26\ncall <runtime.panicmem@PLT>\n.L26:\nmovq -8(%rbp),%rax\naddq $8,%rax\nmovq %rax,%rdi\ncall <sync.WaitGroup.Wait@PLT>\nleave\nret", "tgt": "close(p.work)\np.wg.Wait()"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L18\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq $0,-32(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq $1,-16(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB3:\nmovq $0,-24(%rbp)\n.LBB4:\njmp .L2\n.L17:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq -56(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L3\ncmpq %rax,-24(%rbp)\njge .L3\nmovq -64(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $40,%al\nje .L4\njmp .L15\n.L3:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB8:\nsalq -16(%rbp)\n.LBE8:\njmp .L6\n.L15:\n.LBB9:\nmovq -16(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-16(%rbp)\n.L6:\n.LBE9:\n.LBE7:\n.LBB10:\n.LBB11:\nmovq -56(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L7\ncmpq %rax,-24(%rbp)\njge .L7\nmovq -64(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $40,%al\nsete %al\ntestb %al,%al\njne .L8\njmp .L9\n.L7:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBB12:\nmovq -24(%rbp),%rax\naddq $1,%rax\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L10\ncmpq %rdx,%rax\njge .L10\nmovq -64(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $41,%al\nsete %al\njmp .L9\n.L10:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9:\n.LBE12:\n.LBE11:\ntestb %al,%al\nje .L11\n.LBB13:\nmovq -16(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\naddq %rax,-8(%rbp)\n.L11:\n.LBE13:\n.LBE10:\n.LBE6:\n.LBB14:\naddq $1,-24(%rbp)\n.L2:\n.LBE14:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L17\n.LBE4:\n.LBE3:\n.LBB15:\nmovq -8(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE15:\n.LBE2:\nleave\nret", "tgt": "res := 0\nfactor := 1\nsize := len(s)\nfor i := 0; i < size; i++ {\n\tif s[i] == '(' {\n\t\tfactor *= 2\n\t} else {\n\t\tfactor /= 2\n\t}\n\tif s[i] == '(' && s[i+1] == ')' {\n\t\tres += factor / 2\n\t}\n}\nreturn res"}
{"src": ".LFB1:\nleaq -1192(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L39\nmovl $1192,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1144,%rsp\nmovq %rdi,-1128(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-880(%rbp)\nmovq -880(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq -880(%rbp),%rax\nmovq %rax,-848(%rbp)\nmovq $2,-840(%rbp)\nmovq $2,-832(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-872(%rbp)\nmovq -872(%rbp),%rax\nmovq $-2,(%rax)\nmovq $-1,<8>(%rax)\nmovq -872(%rbp),%rax\nmovq %rax,-824(%rbp)\nmovq $2,-816(%rbp)\nmovq $2,-808(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-864(%rbp)\nmovq -864(%rbp),%rax\nmovq $-1,(%rax)\nmovq $2,<8>(%rax)\nmovq -864(%rbp),%rax\nmovq %rax,-800(%rbp)\nmovq $2,-792(%rbp)\nmovq $2,-784(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-856(%rbp)\nmovq -856(%rbp),%rax\nmovq $0,(%rax)\nmovq $2,<8>(%rax)\nmovq -856(%rbp),%rax\nmovq %rax,-776(%rbp)\nmovq $2,-768(%rbp)\nmovq $2,-760(%rbp)\nmovq $2,-752(%rbp)\nleaq -848(%rbp),%rax\nmovq %rax,-912(%rbp)\nmovq $1,-904(%rbp)\nmovq $1,-896(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC32>(%rip),%rax\nmovq %rax,-1152(%rbp)\nmovq $69,-1144(%rbp)\nleaq -208(%rbp),%rax\nmovq -1152(%rbp),%rcx\nmovq -1144(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-720(%rbp)\n.LBB59:\nleaq -1024(%rbp),%rdx\nmovl $0,%eax\nmovl $13,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB60:\n.LBB61:\n.LBB62:\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -896(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq -584(%rbp),%rax\nmovq %rax,-1152(%rbp)\nmovl $0,%ebx\n.LBE62:\njmp .L29\n.L38:\n.LBB63:\nnop\n.LBE63:\n.LBB64:\n.LBB65:\nmovq -584(%rbp),%rax\ntestq %rbx,%rbx\njs .L30\ncmpq %rax,%rbx\njge .L30\nmovq -592(%rbp),%rcx\nmovq %rbx,%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-704(%rbp)\nmovq %rdi,-696(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-688(%rbp)\nmovq %rdi,-680(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-672(%rbp)\nmovq %rdi,-664(%rbp)\nmovq <48>(%rax),%rsi\nmovq <56>(%rax),%rdi\nmovq %rsi,-656(%rbp)\nmovq %rdi,-648(%rbp)\nmovq <64>(%rax),%rsi\nmovq <72>(%rax),%rdi\nmovq %rsi,-640(%rbp)\nmovq %rdi,-632(%rbp)\nmovq <80>(%rax),%rsi\nmovq <88>(%rax),%rdi\nmovq %rsi,-624(%rbp)\nmovq %rdi,-616(%rbp)\nmovq <96>(%rax),%rax\nmovq %rax,-608(%rbp)\n.LBE65:\n.LBB66:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-1024(%rbp)\nmovq %rdx,-1016(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-1008(%rbp)\nmovq %rdx,-1000(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-992(%rbp)\nmovq %rdx,-984(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-976(%rbp)\nmovq %rdx,-968(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-960(%rbp)\nmovq %rdx,-952(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-944(%rbp)\nmovq %rdx,-936(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-928(%rbp)\n.LBE66:\n.LBB67:\nmovq -928(%rbp),%rax\nmovq %rax,-920(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-1120(%rbp)\nmovq %rdx,-1112(%rbp)\nmovq -1008(%rbp),%rax\nmovq -1000(%rbp),%rdx\nmovq %rax,-1104(%rbp)\nmovq %rdx,-1096(%rbp)\nmovq -992(%rbp),%rax\nmovq -984(%rbp),%rdx\nmovq %rax,-1088(%rbp)\nmovq %rdx,-1080(%rbp)\nmovq -976(%rbp),%rax\nmovq -968(%rbp),%rdx\nmovq %rax,-1072(%rbp)\nmovq %rdx,-1064(%rbp)\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,-1056(%rbp)\nmovq %rdx,-1048(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-1040(%rbp)\nmovq %rdx,-1032(%rbp)\npushq -1032(%rbp)\npushq -1040(%rbp)\npushq -1048(%rbp)\npushq -1056(%rbp)\npushq -1064(%rbp)\npushq -1072(%rbp)\npushq -1080(%rbp)\npushq -1088(%rbp)\npushq -1096(%rbp)\npushq -1104(%rbp)\npushq -1112(%rbp)\npushq -1120(%rbp)\ncall <go.leetcode.fourSumCount>\naddq $96,%rsp\nmovq %rax,-1136(%rbp)\nleaq <go.leetcode..go.leetcode.para454..d>(%rip),%rax\nmovq %rax,-1184(%rbp)\nleaq <go.leetcode..go.leetcode.para454..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-424(%rbp)\nmovq -1120(%rbp),%rax\nmovq -1112(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -1104(%rbp),%rax\nmovq -1096(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -1088(%rbp),%rax\nmovq -1080(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -1072(%rbp),%rax\nmovq -1064(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L31\njmp .L36\n.L30:\n.LBE67:\n.LBB70:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\n.LBE70:\n.LBB71:\n.LBB68:\nmovq -424(%rbp),%rax\nmovq -416(%rbp),%rsi\nmovq -408(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -400(%rbp),%rsi\nmovq -392(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -384(%rbp),%rsi\nmovq -376(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -368(%rbp),%rsi\nmovq -360(%rbp),%rdi\nmovq %rsi,<48>(%rax)\nmovq %rdi,<56>(%rax)\nmovq -352(%rbp),%rsi\nmovq -344(%rbp),%rdi\nmovq %rsi,<64>(%rax)\nmovq %rdi,<72>(%rax)\nmovq -336(%rbp),%rsi\nmovq -328(%rbp),%rdi\nmovq %rsi,<80>(%rax)\nmovq %rdi,<88>(%rax)\n.LBE68:\njmp .L33\n.L36:\n.LBB69:\nmovq -424(%rbp),%rax\nleaq -416(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para454..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L33:\n.LBE69:\nmovq -424(%rbp),%rax\nmovq %rax,-1176(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-1168(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -1136(%rbp),%rcx\nmovq %rcx,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-1160(%rbp)\nmovdqa -1184(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -1168(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC33>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-432(%rbp)\n.LBE71:\n.LBE64:\n.LBB72:\naddq $1,%rbx\n.L29:\n.LBE72:\ncmpq -1152(%rbp),%rbx\njl .L38\n.LBE61:\n.LBE60:\n.LBE59:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC34>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question454{\n\t{\n\t\tpara454{[]int{1, 2}, []int{-2, -1}, []int{-1, 2}, []int{0, 2}},\n\t\tans454{2},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans454, q.para454\n\tfmt.Printf(\"STR\", p, fourSumCount(p.a, p.b, p.c, p.d))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L14\nmovl $136,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $112,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\nmovq $0,-32(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <main.langs>(%rip),%rax\nmovq <8+main.langs>(%rip),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16+main.langs>(%rip),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L13:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\nmovq %rbx,-32(%rbp)\n.LBB9:\nleaq <main.Language..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovq <8+main.langs>(%rip),%rdx\ncmpq $0,-32(%rbp)\njs .L3\ncmpq %rdx,-32(%rbp)\njl .L11\n.L3:\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\nmovq <main.langs>(%rip),%rcx\nmovq -32(%rbp),%rdx\nsalq $5,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rsi\nmovq <8>(%rdx),%rdi\nmovq %rsi,-80(%rbp)\nmovq %rdi,-72(%rbp)\nmovq <16>(%rdx),%rsi\nmovq <24>(%rdx),%rdi\nmovq %rsi,-64(%rbp)\nmovq %rdi,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L5\n.LBB10:\nmovq -80(%rbp),%rsi\nmovq -72(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -64(%rbp),%rsi\nmovq -56(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\n.LBE10:\njmp .L6\n.L5:\n.LBB11:\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <main.Language..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE11:\n.LBB12:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq -40(%rbp),%rcx\nmovq (%rcx),%rdi\nmovq <8>(%rcx),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <strings.EqualFold@PLT>\ntestb %al,%al\nje .L7\n.LBB13:\n.LBB14:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L8\n.L7:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE9:\n.LBE8:\n.LBB15:\naddq $1,%rbx\n.L2:\n.LBE15:\ncmpq %r12,%rbx\njl .L13\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB16:\nmovq $0,-24(%rbp)\nmovq -24(%rbp),%rax\n.L8:\n.LBE16:\n.LBE2:\naddq $112,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "for i := range langs {\n\tlanguage := langs[i]\n\tif strings.EqualFold(language.Lang, str) {\n\t\treturn &language\n\t}\n}\nreturn nil"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $88,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $64,%rsp\nmovq $0,-40(%rbp)\n.LBB2:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\nsubq $8,%rsp\npushq <56>(%rbp)\npushq <48>(%rbp)\npushq <40>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\nmovq $0,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB3:\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L4\n.L25:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -72(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-48(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\n.LBB13:\njmp .L6\n.L5:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB20:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\n.LBE20:\n.LBB21:\n.LBB19:\n.LBB18:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\naddq $1,-24(%rbp)\n.L6:\n.LBE15:\n.LBB16:\nmovq <48>(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-24(%rbp)\nsetl %al\ntestb %al,%al\nje .L7\n.LBB17:\nmovq <48>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L8\ncmpq %rax,-24(%rbp)\njl .L19\n.L8:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq -24(%rbp),%rax\naddq $1,%rax\nmovq <48>(%rbp),%rdx\ntestq %rax,%rax\njs .L10\ncmpq %rdx,%rax\njl .L20\n.L10:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq <40>(%rbp),%rcx\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <40>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\naddq %rax,%rdx\nmovq -48(%rbp),%rax\naddq %rax,%rax\ncmpq %rax,%rdx\nsetle %al\n.L7:\n.LBE17:\n.LBE16:\ntestb %al,%al\njne .L24\n.LBE18:\n.LBE19:\nmovq <48>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L14\ncmpq %rax,-24(%rbp)\njl .L22\n.L14:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <40>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nsubq -48(%rbp),%rax\nmovq %rax,%rdi\ncall <go.problem475.absInt>\nmovq %rax,%rdx\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem475.maxInt>\nmovq %rax,-32(%rbp)\n.LBE21:\n.LBE8:\n.LBB22:\naddq $1,%rbx\n.L4:\n.LBE22:\ncmpq %r12,%rbx\njl .L25\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB23:\nmovq -32(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE23:\n.LBE2:\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "sort.Ints(houses)\nsort.Ints(heaters)\ni, ans := 0, 0\nfor _, house := range houses {\n\tfor i < len(heaters)-1 && heaters[i]+heaters[i+1] <= house*2 {\n\t\ti++\n\t}\n\tans = maxInt(ans, absInt(heaters[i]-house))\n}\nreturn ans"}
{"src": "cmpq %fs:112,%rsp\njnb .L32\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL7:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\n.LBB20:\n.LBB21:\nleaq -48(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -72(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.metainfo.Hash.FromHexString>\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\n.LBE21:\n.LBE20:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return h.FromHexString(string(b))"}
{"src": ".LFB0:\nleaq -504(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L18\nmovl $504,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $464,%rsp\nmovq %rdi,-488(%rbp)\nleaq <type...61x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-448(%rbp)\nleaq <.LC40>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-304(%rbp)\nmovq %r13,-296(%rbp)\nleaq <type...64x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-432(%rbp)\nmovq -432(%rbp),%rax\nmovq $10,(%rax)\nmovq $16,<8>(%rax)\nmovq -432(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $2,-392(%rbp)\nmovq $2,-384(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-424(%rbp)\nmovq -424(%rbp),%rax\nmovq $2,(%rax)\nmovq $8,<8>(%rax)\nmovq -424(%rbp),%rax\nmovq %rax,-376(%rbp)\nmovq $2,-368(%rbp)\nmovq $2,-360(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-416(%rbp)\nmovq -416(%rbp),%rax\nmovq $1,(%rax)\nmovq $6,<8>(%rax)\nmovq -416(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $2,-344(%rbp)\nmovq $2,-336(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-408(%rbp)\nmovq -408(%rbp),%rax\nmovq $7,(%rax)\nmovq $12,<8>(%rax)\nmovq -408(%rbp),%rax\nmovq %rax,-328(%rbp)\nmovq $2,-320(%rbp)\nmovq $2,-312(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -440(%rbp),%rax\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -440(%rbp),%rax\nleaq -400(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -440(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $4,-280(%rbp)\nmovq $4,-272(%rbp)\nmovq $2,-264(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -448(%rbp),%rax\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -448(%rbp),%rax\nleaq -304(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -448(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $1,-472(%rbp)\nmovq $1,-464(%rbp)\n.LBB6:\nmovq $0,-40(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-48(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r13\nmovl $0,%ebx\n.LBE9:\njmp .L6\n.L17:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L7\ncmpq %rax,%rbx\njge .L7\nmovq -208(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-256(%rbp)\nmovq %rdi,-248(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-240(%rbp)\nmovq %rdi,-232(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\n.LBE12:\n.LBB13:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq %rbx,-40(%rbp)\nmovq -48(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L8\njmp .L15\n.L7:\n.LBE13:\n.LBB16:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE16:\n.LBB17:\n.LBB14:\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L10\n.L15:\n.LBE14:\n.LBB15:\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE15:\n.LBE17:\n.LBB18:\nmovq -40(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -48(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-128(%rbp)\nmovq %rdi,-120(%rbp)\nleaq <.LC41>(%rip),%rcx\nmovq %rcx,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -48(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq %r14,-64(%rbp)\nmovq %r12,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L11\n.LBB19:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE19:\njmp .L12\n.L11:\n.LBB20:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L12:\n.LBE20:\nmovq -72(%rbp),%r12\nleaq -128(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -488(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE18:\n.LBE11:\n.LBB21:\naddq $1,%rbx\n.L6:\n.LBE21:\ncmpq %r13,%rbx\njl .L17\n.LBE8:\n.LBE7:\n.LBE6:\naddq $464,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs [][]int\n\texpect int\n}{\n\t{\"STR\", [][]int{\n\t\t{10, 16},\n\t\t{2, 8},\n\t\t{1, 6},\n\t\t{7, 12},\n\t}, 2},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := findMinArrowShots(c.inputs)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.inputs)\n\t\t}\n\t})\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L13\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovb $0,-9(%rbp)\n.LBB2:\n.LBB3:\ncmpq $1,-24(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovb $0,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq $2,-8(%rbp)\n.LBB7:\njmp .L4\n.L12:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\ncmpq $-1,-8(%rbp)\nje .L5\ncmpq $0,-8(%rbp)\njne .L6\ncall <runtime.panicdivide@PLT>\n.L6:\nmovq -24(%rbp),%rax\ncqto\nidivq -8(%rbp)\nmovq %rdx,%rax\ntestq %rax,%rax\nsete %al\njmp .L7\n.L5:\nmovl $1,%eax\n.L7:\ntestb %al,%al\nje .L8\n.LBB11:\n.LBB12:\nmovb $0,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L3\n.L8:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBE9:\n.LBB13:\naddq $1,-8(%rbp)\n.L4:\n.LBE13:\nmovq -8(%rbp),%rax\ncmpq -24(%rbp),%rax\njl .L12\n.LBE7:\n.LBE6:\n.LBB14:\nmovb $1,-9(%rbp)\nmovzbl -9(%rbp),%eax\n.L3:\n.LBE14:\n.LBE2:\nleave\nret", "tgt": "if n < 2 {\n\treturn false\n}\nfor i := 2; i < n; i++ {\n\tif n%i == 0 {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": ".LFB0:\nleaq -488(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L17\nmovl $488,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L17:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $440,%rsp\nmovq %rdi,-440(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-336(%rbp)\nmovq -336(%rbp),%rax\nmovq $5,(%rax)\nmovq $3,<8>(%rax)\nmovq $4,<16>(%rax)\nmovq $5,<24>(%rax)\nmovq -336(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $4,-392(%rbp)\nmovq $4,-384(%rbp)\nmovb $1,-376(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovq -328(%rbp),%rax\nmovq $2,(%rax)\nmovq $5,<8>(%rax)\nmovq $7,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq -328(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $4,-360(%rbp)\nmovq $4,-352(%rbp)\nmovb $1,-344(%rbp)\n.LBB4:\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq $2,-448(%rbp)\nmovl $0,%ebx\n.LBE7:\njmp .L5\n.L16:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\ntestq %rbx,%rbx\njs .L6\ncmpq $1,%rbx\njg .L6\nmovq %rbx,%rax\nsalq $5,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -240(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\n.LBE10:\n.LBB11:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBE11:\n.LBB12:\nsubq $8,%rsp\npushq -416(%rbp)\npushq -424(%rbp)\npushq -432(%rbp)\ncall <go.problem877.stoneGame>\naddq $32,%rsp\nmovb %al,-49(%rbp)\n.LBB13:\nmovzbl -408(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L7\njmp .L8\n.L6:\n.LBE13:\n.LBE12:\n.LBB20:\nmovl $2,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE20:\n.LBB21:\n.LBB19:\n.LBB14:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB15:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE15:\njmp .L10\n.L9:\n.LBB16:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE16:\nmovq -184(%rbp),%rax\nmovq %rax,-472(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-464(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-456(%rbp)\nleaq <bool..d>(%rip),%r14\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -408(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -480(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -464(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L11\n.LBB17:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE17:\njmp .L12\n.L11:\n.LBB18:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L12:\n.LBE18:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC15>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -440(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L8:\n.LBE14:\n.LBE19:\n.LBE21:\n.LBE9:\n.LBB22:\naddq $1,%rbx\n.L5:\n.LBE22:\ncmpq -448(%rbp),%rbx\njl .L16\n.LBE6:\n.LBE5:\n.LBE4:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   []int{5, 3, 4, 5},\n\t\twant: true,\n\t},\n\t{\n\t\tin:   []int{2, 5, 7, 3},\n\t\twant: true,\n\t},\n}\nfor _, tt := range tests {\n\tgot := stoneGame(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L47\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL10:\nret\n.L47:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-40(%rbp)\nmovq %rsi,-48(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-16(%rbp)\n.LBB34:\n.LBB35:\nmovq -48(%rbp),%rcx\nmovq <24>(%rcx),%rax\nmovq <32>(%rcx),%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq <40>(%rcx),%rax\nmovq %rax,-16(%rbp)\nmovq -40(%rbp),%rcx\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -16(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE35:\n.LBE34:\nmovq -40(%rbp),%rax\npopq %rbp\nret", "tgt": "return self.code"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\ncmpq $1,-24(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq -32(%rbp),%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\ncmpq $1,%rax\njne .L4\n.LBB7:\n.LBB8:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,%rdx\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0779.kthGrammar>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L4:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB9:\nmovq -32(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,%rdx\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0779.kthGrammar>\nmovq %rax,%rdi\ncall <go.problem0779.opposite>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L3:\n.LBE9:\n.LBE2:\nleave\nret", "tgt": "if N == 1 {\n\treturn 0\n}\nif K%2 == 1 {\n\treturn kthGrammar(N-1, (K+1)/2)\n}\nreturn opposite(kthGrammar(N-1, K/2))"}
{"src": ".LFB0:\nleaq -1032(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $1032,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $984,%rsp\nmovq %rdi,-952(%rbp)\nleaq -896(%rbp),%rax\nleaq <.LC24>(%rip),%rdx\nmovl $35,%ecx\nmovq %rax,%rdi\nmovq %rdx,%rsi\nrep movsq.LBB2:\nmovq $0,-944(%rbp)\nmovq $0,-936(%rbp)\nmovq $0,-928(%rbp)\nmovq $0,-920(%rbp)\nmovq $0,-912(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nleaq -560(%rbp),%rax\nleaq -896(%rbp),%rdx\nmovl $35,%ecx\nmovq %rax,%rdi\nmovq %rdx,%rsi\nrep movsqmovl $7,%r13d\nmovl $0,%r12d\n.LBE5:\njmp .L2\n.L15:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %r12,%r12\njs .L3\ncmpq $6,%r12\njg .L3\nmovq %r12,%rax\nsalq $2,%rax\naddq %r12,%rax\nsalq $3,%rax\nleaq -48(%rbp),%rbx\naddq %rbx,%rax\nleaq -512(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq <32>(%rcx),%rax\nmovq %rax,-576(%rbp)\n.LBE8:\n.LBB9:\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-944(%rbp)\nmovq %rdx,-936(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-928(%rbp)\nmovq %rdx,-920(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-912(%rbp)\n.LBE9:\n.LBB10:\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq -944(%rbp),%rdi\nmovq -936(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <go.problem859.buddyStrings>\nmovb %al,-49(%rbp)\n.LBB11:\nmovzbl -912(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB20:\nmovl $7,%esi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE20:\n.LBB21:\n.LBB19:\n.LBB12:\nleaq <string..d>(%rip),%rax\nmovq %rax,-1024(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -232(%rbp),%rax\nleaq -224(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -232(%rbp),%rax\nmovq %rax,-1016(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-1008(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB15:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE15:\njmp .L9\n.L8:\n.LBB16:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE16:\nmovq -200(%rbp),%rax\nmovq %rax,-1000(%rbp)\nleaq <bool..d>(%rip),%rbx\nmovq %rbx,-992(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,-984(%rbp)\nmovq %rbx,-976(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovzbl -912(%rbp),%edx\nmovb %dl,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-968(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -1024(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovdqa -1008(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nmovdqa -992(%rbp),%xmm2\nmovups %xmm2,-112(%rbp)\nmovdqa -976(%rbp),%xmm3\nmovups %xmm3,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L10\n.LBB17:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\n.LBE17:\njmp .L11\n.L10:\n.LBB18:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L11:\n.LBE18:\nmovq -152(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $4,-72(%rbp)\nmovq $4,-64(%rbp)\nleaq <.LC25>(%rip),%r14\nmovl $28,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -952(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE19:\n.LBE21:\n.LBE7:\n.LBB22:\naddq $1,%r12\n.L2:\n.LBE22:\ncmpq %r13,%r12\njl .L15\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\ta:    \"STR\",\n\t\tb:    \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\ta:    \"STR\",\n\t\tb:    \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\ta:    \"STR\",\n\t\tb:    \"STR\",\n\t\twant: false,\n\t},\n\t{\n\t\ta:    \"STR\",\n\t\tb:    \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\ta:    \"STR\",\n\t\tb:    \"STR\",\n\t\twant: false,\n\t},\n\t{\n\t\ta:    \"STR\",\n\t\tb:    \"STR\",\n\t\twant: false,\n\t},\n\t{\n\t\ta:    \"STR\",\n\t\tb:    \"STR\",\n\t\twant: false,\n\t},\n}\nfor _, tt := range tests {\n\tgot := buddyStrings(tt.a, tt.b)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.a, tt.b, got, tt.want)\n\t}\n}"}
{"src": ".LFB0:\nleaq -280(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L2\nmovl $280,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $248,%rsp\nmovq %rdi,-264(%rbp)\nmovq $2,-224(%rbp)\nmovq $2,-216(%rbp)\nmovq $3,-208(%rbp)\nmovq $3,-200(%rbp)\nleaq -224(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $2,-184(%rbp)\nmovq $2,-176(%rbp)\nleaq -208(%rbp),%rax\nmovq %rax,-168(%rbp)\nmovq $2,-160(%rbp)\nmovq $2,-152(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq $2,-248(%rbp)\nmovq $2,-240(%rbp)\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\nmovl $3,%esi\nmovl $3,%edi\ncall <go.problem598.maxCount>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "ope := [][]int{\n\t{2, 2},\n\t{3, 3}}\nfmt.Println(maxCount(3, 3, ope))"}
{"src": ".LFB0:\nleaq -824(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12\nmovl $824,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $776,%rsp\nmovq %rdi,-760(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-656(%rbp)\nmovq -656(%rbp),%rax\nmovq $3,(%rax)\nmovq $6,<8>(%rax)\nmovq $9,<16>(%rax)\nmovq $1,<24>(%rax)\nmovq -656(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $4,-616(%rbp)\nmovq $4,-608(%rbp)\nmovq $3,-600(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq $1,(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $1,-584(%rbp)\nmovq $1,-576(%rbp)\nmovq $1,-568(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-640(%rbp)\nmovq -640(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $0,-552(%rbp)\nmovq $0,-544(%rbp)\nmovq $0,-536(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nmovq -632(%rbp),%rax\nmovq $3,(%rax)\nmovq $0,<8>(%rax)\nmovq $6,<16>(%rax)\nmovq $1,<24>(%rax)\nmovq $5,<32>(%rax)\nmovq -632(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $5,-520(%rbp)\nmovq $5,-512(%rbp)\nmovq $3,-504(%rbp)\nleaq -624(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $4,-680(%rbp)\nmovq $4,-672(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC18>(%rip),%rax\nmovq %rax,-784(%rbp)\nmovq $69,-776(%rbp)\nleaq -208(%rbp),%rax\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB2:\nmovq $0,-752(%rbp)\nmovq $0,-744(%rbp)\nmovq $0,-736(%rbp)\nmovq $0,-728(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-784(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L11:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE8:\n.LBB9:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\n.LBE9:\n.LBB10:\nmovq -728(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -736(%rbp),%rax\nmovq %rax,-704(%rbp)\nsubq $8,%rsp\npushq -704(%rbp)\npushq -712(%rbp)\npushq -720(%rbp)\ncall <go.leetcode.hIndex>\naddq $32,%rsp\nmovq %rax,-768(%rbp)\nleaq <go.leetcode..go.leetcode.para274..d>(%rip),%rax\nmovq %rax,-816(%rbp)\nleaq <go.leetcode..go.leetcode.para274..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -704(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L9\n.L3:\n.LBE10:\n.LBB13:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE13:\n.LBB14:\n.LBB11:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\njmp .L6\n.L9:\n.LBB12:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para274..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -344(%rbp),%rax\nmovq %rax,-808(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-800(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -768(%rbp),%rdi\nmovq %rdi,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-792(%rbp)\nmovdqa -816(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -800(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC19>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE14:\n.LBE7:\n.LBB15:\naddq $1,%rbx\n.L2:\n.LBE15:\ncmpq -784(%rbp),%rbx\njl .L11\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC20>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question274{\n\t{\n\t\tpara274{[]int{3, 6, 9, 1}},\n\t\tans274{3},\n\t},\n\t{\n\t\tpara274{[]int{1}},\n\t\tans274{1},\n\t},\n\t{\n\t\tpara274{[]int{}},\n\t\tans274{0},\n\t},\n\t{\n\t\tpara274{[]int{3, 0, 6, 1, 5}},\n\t\tans274{3},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans274, q.para274\n\tfmt.Printf(\"STR\", p, hIndex(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $152,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\n.LBB2:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <sort.Strings@PLT>\naddq $32,%rsp\ncall <runtime.makemap_small@PLT>\nmovq %rax,-56(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\n.LBB3:\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%r14\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L19:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -88(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\n.LBE10:\n.LBB11:\nmovq -136(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB12:\n.LBB13:\ncmpq $1,-64(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\njne .L4\njmp .L5\n.L3:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB21:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE21:\n.LBB22:\n.LBB20:\n.LBB15:\n.LBB14:\nmovl $0,%eax\nmovq -64(%rbp),%rdx\nleaq -1(%rdx),%rdi\nmovq -136(%rbp),%rdx\ntestq %rdi,%rdi\njs .L6\ncmpq %rdx,%rdi\njg .L6\ntestq %rax,%rax\njns .L7\njmp .L8\n.L6:\nmovq %rdx,%rsi\ncall <runtime.goPanicSliceAlen@PLT>\n.L7:\ncmpq %rdi,%rax\njg .L8\nmovq -144(%rbp),%rdx\ncmpq %rax,%rdi\njne .L9\njmp .L17\n.L8:\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L9:\nmovq %rax,%rcx\njmp .L11\n.L17:\nmovl $0,%ecx\n.L11:\naddq %rcx,%rdx\nmovq %rdx,%r12\nsubq %rax,%rdi\nmovq %rdi,%rdx\nmovq %rdx,%r13\nmovq -56(%rbp),%rax\nmovq %r12,%rdx\nmovq %r13,%rcx\nmovq %rax,%rsi\nleaq <type..map.6string.7bool>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovzbl (%rax),%eax\n.L5:\n.LBE14:\n.LBE15:\ntestb %al,%al\nje .L12\n.LBB16:\n.LBB17:\nmovq -120(%rbp),%rax\ncmpq %rax,-64(%rbp)\njle .L13\n.LBB18:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\n.L13:\n.LBE18:\n.LBE17:\n.LBB19:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovl $1,%r15d\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7bool>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovb %r15b,(%rax)\n.L12:\n.LBE19:\n.LBE16:\n.LBE20:\n.LBE22:\n.LBE8:\n.LBB23:\naddq $1,%rbx\n.L2:\n.LBE23:\ncmpq %r14,%rbx\njl .L19\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB24:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\n.LBE24:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "sort.Strings(words)\nmp := make(map[string]bool)\nvar res string\nfor _, word := range words {\n\tsize := len(word)\n\tif size == 1 || mp[word[:size-1]] {\n\t\tif size > len(res) {\n\t\t\tres = word\n\t\t}\n\t\tmp[word] = true\n\t}\n}\nreturn res"}
{"src": "cmpq %fs:112,%rsp\njnb .L297\nmovl $104,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL17:\nret\n.L297:\npushq %rbp\nmovq %rsp,%rbp\nsubq $96,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\n.LBB224:\nmovq $0,-8(%rbp)\nmovq $0,-16(%rbp)\n.LBB225:\nmovq $0,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB226:\n.LBB227:\n.LBB228:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%rcx\nmovl $0,%eax\n.LBE228:\njmp .L281\n.L296:\n.LBB229:\nnop\n.LBE229:\n.LBB230:\n.LBB231:\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L282\ncmpq %rdx,%rax\njge .L282\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE231:\n.LBB232:\nmovq %rax,-24(%rbp)\nmovq %rdx,-32(%rbp)\n.LBE232:\n.LBB233:\n.LBB234:\nmovq -32(%rbp),%rdx\ncmpq -16(%rbp),%rdx\njg .L283\njmp .L284\n.L282:\n.LBE234:\n.LBE233:\n.LBB237:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L283:\n.LBE237:\n.LBB238:\n.LBB236:\n.LBB235:\nmovq -32(%rbp),%rdx\nmovq %rdx,-16(%rbp)\nmovq -24(%rbp),%rdx\nmovq %rdx,-8(%rbp)\n.L284:\n.LBE235:\n.LBE236:\n.LBE238:\n.LBE230:\n.LBB239:\naddq $1,%rax\n.L281:\n.LBE239:\ncmpq %rcx,%rax\njl .L296\n.LBE227:\n.LBE226:\n.LBE225:\nmovq -8(%rbp),%rax\nsubq -16(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-40(%rbp)\n.LBB240:\nmovq -40(%rbp),%rdx\nmovq -16(%rbp),%rax\nleaq (%rdx,%rax),%rdi\nmovq -88(%rbp),%rax\ntestq %rdi,%rdi\njs .L287\ncmpq %rax,%rdi\njg .L287\ncmpq $0,-40(%rbp)\njns .L288\njmp .L289\n.L287:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAlen@PLT>\n.L288:\ncmpq %rdi,-40(%rbp)\njg .L289\nmovq -96(%rbp),%rdx\ncmpq -40(%rbp),%rdi\njne .L290\njmp .L295\n.L289:\nmovq -40(%rbp),%rax\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L290:\nmovq -40(%rbp),%rax\njmp .L292\n.L295:\nmovl $0,%eax\n.L292:\naddq %rax,%rdx\nmovq %rdi,%rax\nsubq -40(%rbp),%rax\nmovq %rdx,-80(%rbp)\nmovq %rax,-72(%rbp)\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\n.LBE240:\n.LBE224:\nleave\nret", "tgt": "longestCenter, longestLength := 0, 0\nfor i, v := range P {\n\tif v > longestLength {\n\t\tlongestLength = v\n\t\tlongestCenter = i\n\t}\n}\noffset := (longestCenter - longestLength) / 2\nreturn s[offset : offset+longestLength]"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L12\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovb $0,-9(%rbp)\n.LBB2:\n.LBB3:\nmovq $1,-8(%rbp)\n.LBB4:\njmp .L2\n.L11:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\ncmpq $-1,-8(%rbp)\nje .L3\ncmpq $0,-8(%rbp)\njne .L4\ncall <runtime.panicdivide@PLT>\n.L4:\nmovq -24(%rbp),%rax\ncqto\nidivq -8(%rbp)\nmovq %rdx,%rax\ntestq %rax,%rax\nsetne %al\njmp .L5\n.L3:\nmovl $0,%eax\n.L5:\ntestb %al,%al\nje .L6\n.LBB8:\n.LBB9:\nmovb $0,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L7\n.L6:\n.LBE9:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB10:\naddq $1,-8(%rbp)\n.L2:\n.LBE10:\ncmpq $20,-8(%rbp)\njle .L11\n.LBE4:\n.LBE3:\n.LBB11:\nmovb $1,-9(%rbp)\nmovzbl -9(%rbp),%eax\n.L7:\n.LBE11:\n.LBE2:\nleave\nret", "tgt": "for j := 1; j <= 20; j++ {\n\tif num%j != 0 {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": "cmpq %fs:112,%rsp\njnb .L104\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL11:\nret\n.L104:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $88,%rsp\nmovq %rdi,-56(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq %rcx,%rax\nmovq %r8,%rcx\nmovq %rcx,%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB103:\nmovq -80(%rbp),%rax\nleaq <type...1go.binaryTree.bstElement>(%rip),%rdx\ncmpq %rdx,%rax\nje .L93\nmovq -80(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <type...1go.binaryTree.bstElement>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L93:\nmovq -72(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB104:\ncmpq $0,-32(%rbp)\njne .L94\n.LBB105:\n.LBB106:\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\njmp .L101\n.L94:\n.LBE106:\n.LBE105:\n.LBE104:\n.LBB107:\nmovq -32(%rbp),%rax\nmovq <40>(%rax),%rax\ntestq %rax,%rax\nje .L96\n.LBB108:\n.LBB109:\nleaq <type...1go.binaryTree.bstElement>(%rip),%r10\nmovq -32(%rbp),%rax\nmovq <40>(%rax),%rax\nmovq %rax,%r11\nmovq %r10,%rcx\nmovq %r11,%rbx\nmovq %r10,%rax\nmovq %r11,%rdx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.bst.Min>\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\njmp .L101\n.L96:\n.LBE109:\n.LBE108:\n.LBE107:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\n.LBB110:\n.LBB111:\njmp .L97\n.L103:\n.LBB112:\nnop\n.LBE112:\n.LBB113:\nmovq -24(%rbp),%rax\nmovq <24>(%rax),%rax\nmovq %rax,-24(%rbp)\n.L97:\n.LBE113:\n.LBB114:\nmovq -24(%rbp),%rax\nmovq <24>(%rax),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L98\n.LBB115:\nmovq -24(%rbp),%rax\nmovq <24>(%rax),%rax\nmovq <32>(%rax),%rax\ncmpq %rax,-24(%rbp)\nsetne %al\n.L98:\n.LBE115:\n.LBE114:\ntestb %al,%al\njne .L103\n.LBE111:\n.LBE110:\n.LBB116:\nmovq -24(%rbp),%rax\nmovq <24>(%rax),%rax\nleaq <type...1go.binaryTree.bstElement>(%rip),%rdx\nmovq %rdx,-48(%rbp)\nmovq %rax,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\n.L101:\n.LBE116:\n.LBE103:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "n := node.(*bstElement)\nif n == nil {\n\treturn nil\n}\nif n.right != nil {\n\treturn t.Min(n.right)\n}\ncur := n\nfor cur.parent != nil && cur.parent.left != cur {\n\tcur = cur.parent\n}\nreturn cur.parent"}
{"src": ".LFB0:\nleaq -664(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L29\nmovl $664,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $616,%rsp\nmovq %rdi,-632(%rbp)\nmovq %rsi,-640(%rbp)\nmovq %rdx,-648(%rbp)\nmovq %rcx,-656(%rbp)\nmovq $0,-528(%rbp)\nmovq $0,-520(%rbp)\nmovq $0,-512(%rbp)\n.LBB2:\nmovq $0,-560(%rbp)\nmovq $0,-552(%rbp)\nmovq $0,-544(%rbp)\n.LBB3:\nmovq -640(%rbp),%rax\nmovq %rax,-56(%rbp)\n.LBB4:\njmp .L2\n.L28:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\ncmpq $1,-656(%rbp)\njne .L3\n.LBB8:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq -488(%rbp),%rbx\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-472(%rbp)\nmovq -472(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -472(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq $1,-456(%rbp)\nmovq $1,-448(%rbp)\nleaq <1>(%rbx),%rax\nmovq -480(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L4\n.LBB9:\nmovq -496(%rbp),%rsi\nleaq -144(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-544(%rbp)\n.LBE9:\njmp .L5\n.L4:\n.LBB10:\nmovq -496(%rbp),%rcx\nmovq -480(%rbp),%rdx\nmovq %rcx,-560(%rbp)\nmovq %rax,-552(%rbp)\nmovq %rdx,-544(%rbp)\n.L5:\n.LBE10:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq -496(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -464(%rbp),%rcx\nmovq -456(%rbp),%rbx\nmovq %rcx,-432(%rbp)\nmovq %rbx,-424(%rbp)\nmovq -448(%rbp),%rdx\nmovq %rdx,-416(%rbp)\nmovq -424(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -416(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L6\n.LBB11:\nmovq -432(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE11:\njmp .L20\n.L6:\n.LBB12:\nmovq -432(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.LBE12:\njmp .L20\n.L3:\n.LBE8:\n.LBE7:\nmovq -656(%rbp),%rax\nleaq -1(%rax),%rcx\nmovq -56(%rbp),%rax\nleaq <1>(%rax),%rsi\nleaq -592(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,%rdi\ncall <main.comb>\n.LBB13:\nmovq $0,-624(%rbp)\nmovq $0,-616(%rbp)\nmovq $0,-608(%rbp)\n.LBB14:\n.LBB15:\n.LBB16:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r15\nmovl $0,%ebx\n.LBE16:\njmp .L9\n.L27:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -360(%rbp),%rax\ntestq %rbx,%rbx\njs .L10\ncmpq %rax,%rbx\njge .L10\nmovq -368(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-384(%rbp)\n.LBE19:\n.LBB20:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-608(%rbp)\n.LBE20:\n.LBB21:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%r12\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -280(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq $1,-264(%rbp)\nmovq $1,-256(%rbp)\nmovq -264(%rbp),%r13\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r14\nleaq <0>(%r13,%r14),%rax\nmovq -256(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L11\njmp .L24\n.L10:\n.LBE21:\n.LBB26:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE26:\n.LBB27:\nmovq -272(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r13,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-256(%rbp)\njmp .L13\n.L24:\nmovq -272(%rbp),%rcx\nmovq -256(%rbp),%rdx\nmovq %rcx,-272(%rbp)\nmovq %rax,-264(%rbp)\nmovq %rdx,-256(%rbp)\n.L13:\nmovq %r14,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -240(%rbp),%rax\nmovq -272(%rbp),%rcx\nmovq %r13,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <1>(%r12),%rax\nmovq -288(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L14\n.LBB22:\nmovq -304(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-544(%rbp)\n.LBE22:\njmp .L15\n.L14:\n.LBB23:\nmovq -304(%rbp),%rcx\nmovq -288(%rbp),%rdx\nmovq %rcx,-560(%rbp)\nmovq %rax,-552(%rbp)\nmovq %rdx,-544(%rbp)\n.L15:\n.LBE23:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -304(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -208(%rbp),%rsi\nmovq -200(%rbp),%rdi\nmovq %rsi,-176(%rbp)\nmovq %rdi,-168(%rbp)\nmovq -192(%rbp),%rdx\nmovq %rdx,-160(%rbp)\nmovq -168(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -160(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L16\n.LBB24:\nmovq -176(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L17\n.L16:\n.LBE24:\n.LBB25:\nmovq -176(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L17:\n.LBE25:\n.LBE27:\n.LBE18:\n.LBB28:\naddq $1,%rbx\n.L9:\n.LBE28:\ncmpq %r15,%rbx\njl .L27\n.L20:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE6:\n.LBB29:\naddq $1,-56(%rbp)\n.L2:\n.LBE29:\nmovq -56(%rbp),%rax\ncmpq -648(%rbp),%rax\njle .L28\n.LBE4:\n.LBE3:\n.LBB30:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovq -632(%rbp),%rcx\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -512(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE30:\n.LBE2:\nmovq -632(%rbp),%rax\naddq $616,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var r [][]int\nfor i := begin; i <= end; i++ {\n\tif 1 == k {\n\t\tr = append(r, []int{i})\n\t\tcontinue\n\t}\n\tsuf := comb(i+1, end, k-1)\n\tfor _, j := range suf {\n\t\tr = append(r, append([]int{i}, j...))\n\t}\n}\nreturn r"}
{"src": "leaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L166\nmovl $456,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL13:\n.LEHB15:\nret\n.L166:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $408,%rsp\n.LEHE15:\nmovq %rdi,-408(%rbp)\nmovq %rsi,-416(%rbp)\nmovq %rdx,-432(%rbp)\nmovq %rcx,-424(%rbp)\nmovb $0,-369(%rbp)\nmovq $0,-400(%rbp)\nmovq $0,-392(%rbp)\nmovb $0,-49(%rbp)\n.LBB94:\ncmpq $0,-416(%rbp)\njne .L146\n.LEHB16:\ncall <runtime.panicmem@PLT>\n.L146:\nmovq -416(%rbp),%rax\nmovq %rax,%rdi\ncall <sync.Mutex.Lock@PLT>\n.LBB95:\ncmpq $0,-416(%rbp)\njne .L147\ncall <runtime.panicmem@PLT>\n.L147:\nmovq -416(%rbp),%rax\nmovq %rax,%rdx\nmovq $0,-304(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-296(%rbp)\nmovq -296(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -296(%rbp),%rdx\nleaq <go.lrucache.go.lrucache..thunk3>(%rip),%rdi\nleaq -369(%rbp),%rsi\nleaq -368(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE95:\nmovq -416(%rbp),%rax\nmovq <8>(%rax),%rsi\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7.1go.lrucache.entry>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq (%rax),%rax\nmovq %rax,-64(%rbp)\n.LBB96:\ncmpq $0,-64(%rbp)\njne .L148\n.LBB97:\n.LBB98:\n.LBB99:\nmovl $0,%r14d\nmovl $0,%r15d\nmovl $0,%eax\nmovq %r14,-400(%rbp)\nmovq %r15,-392(%rbp)\nmovb %al,-49(%rbp)\n.LBE99:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-272(%rbp)\nmovq -408(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovl $0,%ebx\njmp .L162\n.L148:\n.LBE98:\n.LBE97:\n.LBE96:\n.LBB100:\ncmpq $0,-64(%rbp)\njne .L150\ncall <runtime.panicmem@PLT>\n.L150:\nmovq -64(%rbp),%rcx\nmovq <72>(%rcx),%rax\nmovq <80>(%rcx),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <88>(%rcx),%rax\nmovq %rax,-240(%rbp)\nleaq -256(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <time.Time.Before@PLT>\naddq $32,%rsp\ntestb %al,%al\nje .L151\n.LBB101:\n.LBB102:\n.LBB103:\nmovq -416(%rbp),%rax\nmovq <136>(%rax),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L152\n.LBB104:\ncmpq $0,-64(%rbp)\njne .L153\ncall <runtime.panicmem@PLT>\n.L153:\nmovq -64(%rbp),%rcx\nmovq <72>(%rcx),%rax\nmovq <80>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <88>(%rcx),%rax\nmovq %rax,-208(%rbp)\nleaq -224(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <time.Time.Sub@PLT>\naddq $32,%rsp\nmovq -416(%rbp),%rdx\nmovq <136>(%rdx),%rdx\ncmpq %rdx,%rax\nsetg %al\n.L152:\n.LBE104:\n.LBE103:\ntestb %al,%al\nje .L154\n.LBB105:\nmovq -64(%rbp),%rdx\nmovq -416(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.lrucache.LRUCache.removeEntry>\n.L154:\n.LBE105:\n.LBE102:\n.LBB106:\n.LBB107:\nmovl $0,%r12d\nmovl $0,%r13d\nmovl $0,%eax\nmovq %r12,-400(%rbp)\nmovq %r13,-392(%rbp)\nmovb %al,-49(%rbp)\n.LBE107:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-176(%rbp)\nmovq -408(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovl $0,%ebx\njmp .L162\n.L151:\n.LBE106:\n.LBE101:\n.LBE100:\nmovq -64(%rbp),%rdx\nmovq -416(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.lrucache.LRUCache.touchEntry>\n.LBB108:\n.LBB109:\nmovq -64(%rbp),%rax\nmovq <64>(%rax),%rdx\nmovq <56>(%rax),%rax\n.LEHE16:\nmovl $1,%ecx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovb %cl,-49(%rbp)\n.LBE109:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-144(%rbp)\nmovq -408(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovl $0,%ebx\n.L162:\n.LBE108:\n.LBE94:\nleaq -369(%rbp),%rax\nmovq %rax,%rdi\n.LEHB17:\ncall <runtime.deferreturn@PLT>\n.LEHE17:\nmovzbl -369(%rbp),%eax\ntestb %al,%al\nje .L155\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-80(%rbp)\nmovq -408(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L145\n.L155:\ncmpl $1,%ebx\nje .L157\njmp .L145\n.L163:\nleaq -369(%rbp),%rax\nmovq %rax,%rdi\n.LEHB18:\ncall <runtime.checkdefer@PLT>\n.LEHE18:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-112(%rbp)\nmovq -408(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovl $0,%ebx\njmp .L162\n.L164:\nmovq %rax,-440(%rbp)\nmovl $1,%ebx\njmp .L162\n.L157:\nmovq -440(%rbp),%rax\nmovq %rax,%rdi\n.LEHB19:\ncall <_Unwind_Resume@PLT>\n.L165:\nleaq -369(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L162\n.L145:\nmovq -408(%rbp),%rax\nleaq -40(%rbp),%rsp\n.LEHE19:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "b.lock.Lock()\ndefer b.lock.Unlock()\ne := b.table[key]\nif e == nil {\n\treturn nil, false\n}\nif e.expire.Before(now) {\n\tif b.ExpireGracePeriod == 0 || e.expire.Sub(now) > b.ExpireGracePeriod {\n\t\tb.removeEntry(e)\n\t}\n\treturn nil, false\n}\nb.touchEntry(e)\nreturn e.value, true"}
{"src": ".LFB135:\ncmpq %fs:112,%rsp\njnb .L3619\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL180:\nret\n.L3619:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq %rdx,-40(%rbp)\nmovq $0,-16(%rbp)\n.LBB2921:\n.LBB2922:\ncmpq $0,-24(%rbp)\njne .L3613\n.LBB2923:\n.LBB2924:\nmovq $0,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L3614\n.L3613:\n.LBE2924:\n.LBE2923:\n.LBE2922:\nmovq $0,-8(%rbp)\n.LBB2925:\n.LBB2926:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\nsetle %al\ntestb %al,%al\nje .L3615\n.LBB2927:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\nsetge %al\n.L3615:\n.LBE2927:\n.LBE2926:\ntestb %al,%al\nje .L3616\n.LBB2928:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\naddq %rax,-8(%rbp)\n.L3616:\n.LBE2928:\n.LBE2925:\n.LBB2929:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\njg .L3617\n.LBB2930:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rcx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.rangeSumBST>\naddq %rax,-8(%rbp)\n.L3617:\n.LBE2930:\n.LBE2929:\n.LBB2931:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\njl .L3618\n.LBB2932:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rcx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.rangeSumBST>\naddq %rax,-8(%rbp)\n.L3618:\n.LBE2932:\n.LBE2931:\n.LBB2933:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.L3614:\n.LBE2933:\n.LBE2921:\nleave\nret", "tgt": "if root == nil {\n\treturn 0\n}\nresult := 0\nif root.Val >= L && root.Val <= R {\n\tresult += root.Val\n}\nif root.Val >= L {\n\tresult += rangeSumBST(root.Left, L, R)\n}\nif root.Val <= R {\n\tresult += rangeSumBST(root.Right, L, R)\n}\nreturn result"}
{"src": ".LFB0:\nleaq -1048(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L22\nmovl $1048,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1000,%rsp\nmovq %rdi,-1016(%rbp)\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-976(%rbp)\nleaq <.LC37>(%rip),%rax\nmovq %rax,-1040(%rbp)\nmovq $9,-1032(%rbp)\nmovdqa -1040(%rbp),%xmm0\nmovups %xmm0,-416(%rbp)\nleaq <type...66x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-968(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-960(%rbp)\nmovq -960(%rbp),%rax\nmovq $1,(%rax)\nmovq $1,<8>(%rax)\nmovq -960(%rbp),%rax\nmovq %rax,-912(%rbp)\nmovq $2,-904(%rbp)\nmovq $2,-896(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-952(%rbp)\nmovq -952(%rbp),%rax\nmovq $3,(%rax)\nmovq $2,<8>(%rax)\nmovq -952(%rbp),%rax\nmovq %rax,-888(%rbp)\nmovq $2,-880(%rbp)\nmovq $2,-872(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-944(%rbp)\nmovq -944(%rbp),%rax\nmovq $5,(%rax)\nmovq $3,<8>(%rax)\nmovq -944(%rbp),%rax\nmovq %rax,-864(%rbp)\nmovq $2,-856(%rbp)\nmovq $2,-848(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-936(%rbp)\nmovq -936(%rbp),%rax\nmovq $4,(%rax)\nmovq $1,<8>(%rax)\nmovq -936(%rbp),%rax\nmovq %rax,-840(%rbp)\nmovq $2,-832(%rbp)\nmovq $2,-824(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-928(%rbp)\nmovq -928(%rbp),%rax\nmovq $2,(%rax)\nmovq $3,<8>(%rax)\nmovq -928(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq $2,-808(%rbp)\nmovq $2,-800(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-920(%rbp)\nmovq -920(%rbp),%rax\nmovq $1,(%rax)\nmovq $4,<8>(%rax)\nmovq -920(%rbp),%rax\nmovq %rax,-792(%rbp)\nmovq $2,-784(%rbp)\nmovq $2,-776(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -968(%rbp),%rax\nmovq -912(%rbp),%rcx\nmovq -904(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -896(%rbp),%rcx\nmovq -888(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -880(%rbp),%rcx\nmovq -872(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -864(%rbp),%rcx\nmovq -856(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -848(%rbp),%rcx\nmovq -840(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -832(%rbp),%rcx\nmovq -824(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -816(%rbp),%rcx\nmovq -808(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -800(%rbp),%rcx\nmovq -792(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -968(%rbp),%rax\nleaq -912(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...66x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -968(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $6,-392(%rbp)\nmovq $6,-384(%rbp)\nmovq $4,-376(%rbp)\nleaq <.LC38>(%rip),%r14\nmovl $9,%r15d\nmovq %r14,-368(%rbp)\nmovq %r15,-360(%rbp)\nleaq <type...63x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-768(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-760(%rbp)\nmovq -760(%rbp),%rax\nmovq $1,(%rax)\nmovq $1,<8>(%rax)\nmovq -760(%rbp),%rax\nmovq %rax,-736(%rbp)\nmovq $2,-728(%rbp)\nmovq $2,-720(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-752(%rbp)\nmovq -752(%rbp),%rax\nmovq $2,(%rax)\nmovq $2,<8>(%rax)\nmovq -752(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovq $2,-704(%rbp)\nmovq $2,-696(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-744(%rbp)\nmovq -744(%rbp),%rax\nmovq $3,(%rax)\nmovq $3,<8>(%rax)\nmovq -744(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $2,-680(%rbp)\nmovq $2,-672(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -768(%rbp),%rax\nmovq -736(%rbp),%rcx\nmovq -728(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -720(%rbp),%rcx\nmovq -712(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -704(%rbp),%rcx\nmovq -696(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -688(%rbp),%rcx\nmovq -680(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -672(%rbp),%rdx\nmovq %rdx,<64>(%rax)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -768(%rbp),%rax\nleaq -736(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -768(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $3,-344(%rbp)\nmovq $3,-336(%rbp)\nmovq $3,-328(%rbp)\nleaq <.LC39>(%rip),%r12\nmovl $9,%r13d\nmovq %r12,-320(%rbp)\nmovq %r13,-312(%rbp)\nleaq <type...67x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-656(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq $0,(%rax)\nmovq $0,<8>(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $2,-584(%rbp)\nmovq $2,-576(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-640(%rbp)\nmovq -640(%rbp),%rax\nmovq $4,(%rax)\nmovq $5,<8>(%rax)\nmovq -640(%rbp),%rax\nmovq %rax,-568(%rbp)\nmovq $2,-560(%rbp)\nmovq $2,-552(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nmovq -632(%rbp),%rax\nmovq $7,(%rax)\nmovq $8,<8>(%rax)\nmovq -632(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovq $2,-536(%rbp)\nmovq $2,-528(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-624(%rbp)\nmovq -624(%rbp),%rax\nmovq $8,(%rax)\nmovq $9,<8>(%rax)\nmovq -624(%rbp),%rax\nmovq %rax,-520(%rbp)\nmovq $2,-512(%rbp)\nmovq $2,-504(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-616(%rbp)\nmovq -616(%rbp),%rax\nmovq $5,(%rax)\nmovq $6,<8>(%rax)\nmovq -616(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq $2,-488(%rbp)\nmovq $2,-480(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-608(%rbp)\nmovq -608(%rbp),%rax\nmovq $3,(%rax)\nmovq $4,<8>(%rax)\nmovq -608(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq $2,-464(%rbp)\nmovq $2,-456(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq $1,(%rax)\nmovq $1,<8>(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq $2,-440(%rbp)\nmovq $2,-432(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB6:\nmovq -656(%rbp),%rax\nmovq -592(%rbp),%rcx\nmovq -584(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -576(%rbp),%rcx\nmovq -568(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -560(%rbp),%rcx\nmovq -552(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -544(%rbp),%rcx\nmovq -536(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -528(%rbp),%rcx\nmovq -520(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -512(%rbp),%rcx\nmovq -504(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -496(%rbp),%rcx\nmovq -488(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -464(%rbp),%rcx\nmovq -456(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,<144>(%rax)\nmovq %rbx,<152>(%rax)\nmovq -432(%rbp),%rdx\nmovq %rdx,<160>(%rax)\n.LBE6:\njmp .L7\n.L6:\n.LBB7:\nmovq -656(%rbp),%rax\nleaq -592(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...67x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE7:\nmovq -656(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $7,-296(%rbp)\nmovq $7,-288(%rbp)\nmovq $5,-280(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB8:\nmovq -976(%rbp),%rax\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE8:\njmp .L9\n.L8:\n.LBB9:\nmovq -976(%rbp),%rax\nleaq -416(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE9:\nmovq -976(%rbp),%rax\nmovq %rax,-1008(%rbp)\nmovq $3,-1000(%rbp)\nmovq $3,-992(%rbp)\n.LBB10:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB11:\n.LBB12:\n.LBB13:\nmovq -1008(%rbp),%rax\nmovq -1000(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -992(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r13\nmovl $0,%ebx\n.LBE13:\njmp .L10\n.L21:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\n.LBB16:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L11\ncmpq %rax,%rbx\njge .L11\nmovq -224(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-256(%rbp)\nmovq %rdi,-248(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE16:\n.LBB17:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L12\njmp .L19\n.L11:\n.LBE17:\n.LBB20:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\n.LBE20:\n.LBB21:\n.LBB18:\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L14\n.L19:\n.LBE18:\n.LBB19:\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE19:\n.LBE21:\n.LBB22:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC40>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L15\n.LBB23:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE23:\njmp .L16\n.L15:\n.LBB24:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L16:\n.LBE24:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -1016(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE22:\n.LBE15:\n.LBB25:\naddq $1,%rbx\n.L10:\n.LBE25:\ncmpq %r13,%rbx\njl .L21\n.LBE12:\n.LBE11:\n.LBE10:\naddq $1000,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs [][]int\n\texpect int\n}{\n\t{\"STR\", [][]int{{1, 1}, {3, 2}, {5, 3}, {4, 1}, {2, 3}, {1, 4}}, 4},\n\t{\"STR\", [][]int{{1, 1}, {2, 2}, {3, 3}}, 3},\n\t{\"STR\", [][]int{{0, 0}, {4, 5}, {7, 8}, {8, 9}, {5, 6}, {3, 4}, {1, 1}}, 5},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.inputs)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.inputs)\n\t\t}\n\t})\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L32\nmovl $16,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nmovq %rdi,-56(%rbp)\nmovq %rsi,-64(%rbp)\nmovq $0,-32(%rbp)\nmovb $0,-33(%rbp)\n.LBB26:\n.LBB27:\nmovq -56(%rbp),%rsi\nmovq (%rsi),%rsi\ntestq %rsi,%rsi\njne .L23\n.LBB28:\n.LBB29:\n.LBB30:\nmovl $0,%edx\nmovl $0,%eax\nmovq %rdx,-32(%rbp)\nmovb %al,-33(%rbp)\n.LBE30:\nmovq -32(%rbp),%r8\nmovb -33(%rbp),%r9b\nmovq %r8,%rax\nmovq %r9,%rdx\njmp .L24\n.L23:\n.LBE29:\n.LBE28:\n.LBE27:\nmovq -56(%rbp),%rsi\nmovq (%rsi),%rsi\nmovq %rsi,-24(%rbp)\n.LBB31:\n.LBB32:\njmp .L25\n.L31:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\n.LBB35:\nmovq -24(%rbp),%rsi\nmovq (%rsi),%rsi\ncmpq %rsi,-64(%rbp)\njne .L26\n.LBB36:\n.LBB37:\n.LBB38:\nmovq -24(%rbp),%rax\nmovl $1,%edx\nmovq %rax,-32(%rbp)\nmovb %dl,-33(%rbp)\n.LBE38:\nmovq -32(%rbp),%rcx\nmovb -33(%rbp),%bl\nmovq %rcx,%rax\nmovq %rbx,%rdx\njmp .L24\n.L26:\n.LBE37:\n.LBE36:\n.LBB39:\n.LBB40:\nmovq -24(%rbp),%rsi\nmovq (%rsi),%rsi\ncmpq %rsi,-64(%rbp)\njle .L27\n.LBB41:\nmovq -24(%rbp),%rsi\nmovq <24>(%rsi),%rsi\nmovq %rsi,-24(%rbp)\n.LBE41:\njmp .L25\n.L27:\n.LBB42:\n.LBB43:\nmovq -24(%rbp),%rsi\nmovq (%rsi),%rsi\ncmpq %rsi,-64(%rbp)\njge .L25\n.LBB44:\nmovq -24(%rbp),%rsi\nmovq <16>(%rsi),%rsi\nmovq %rsi,-24(%rbp)\n.L25:\n.LBE44:\n.LBE43:\n.LBE42:\n.LBE40:\n.LBE39:\n.LBE35:\n.LBE34:\ncmpq $0,-24(%rbp)\njne .L31\n.LBE32:\n.LBE31:\n.LBB45:\n.LBB46:\nmovl $0,%esi\nmovl $0,%ecx\nmovq %rsi,-32(%rbp)\nmovb %cl,-33(%rbp)\n.LBE46:\nmovq -32(%rbp),%rax\nmovb -33(%rbp),%dl\n.L24:\n.LBE45:\n.LBE26:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if tree.root == nil {\n\treturn nil, false\n}\ncurrentNode := tree.root\nfor currentNode != nil {\n\tif i == currentNode.data {\n\t\treturn currentNode, true\n\t} else if i > currentNode.data {\n\t\tcurrentNode = currentNode.right\n\t} else if i < currentNode.data {\n\t\tcurrentNode = currentNode.left\n\t}\n}\nreturn nil, false"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L12\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,-80(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-8(%rbp)\n.LBB3:\n.LBB4:\ncmpq $0,-8(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L6\n.LBB5:\n.LBB6:\ncmpq $1,-8(%rbp)\nsete %al\ntestb %al,%al\nje .L6\n.LBB7:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L8\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L8:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-80(%rbp)\nsetne %al\n.L6:\n.LBE7:\n.LBE6:\n.LBE5:\n.LBE4:\ntestb %al,%al\nje .L9\n.LBB8:\n.LBB9:\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovq $-1,(%rax)\nmovq $-1,<8>(%rax)\nmovq -40(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $2,-56(%rbp)\nmovq $2,-48(%rbp)\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L5\n.L9:\n.LBE9:\n.LBE8:\n.LBE3:\n.LBB10:\nmovq -8(%rbp),%rax\nleaq -1(%rax),%rsi\nleaq -32(%rbp),%rax\nmovq -80(%rbp),%rdx\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rdx\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.search_for_a_range.searchRangeI>\naddq $32,%rsp\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -16(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L5:\n.LBE10:\n.LBE2:\nmovq -72(%rbp),%rax\nleave\nret", "tgt": "length := len(nums)\nif length == 0 || length == 1 && nums[0] != target {\n\treturn []int{-1, -1}\n}\nreturn searchRangeI(nums, 0, length-1, target)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L42\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L42:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L41:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -16(%rbp),%rax\nsubq -8(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,%rdx\nmovq -8(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,-32(%rbp)\n.LBB7:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L3\ncmpq %rax,-32(%rbp)\njl .L31\n.L3:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\njne .L5\n.LBB8:\n.LBB9:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L6\n.L5:\n.LBE9:\n.LBE8:\n.LBE7:\n.LBB10:\n.LBB11:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L7\ncmpq %rax,-32(%rbp)\njl .L32\n.L7:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L9\ncmpq %rax,-8(%rbp)\njl .L33\n.L9:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetge %al\ntestb %al,%al\nje .L11\n.LBB12:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L12\ncmpq %rax,-32(%rbp)\njl .L34\n.L12:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L14\ncmpq %rax,-16(%rbp)\njl .L35\n.L14:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetg %al\n.L11:\n.LBE12:\n.LBE11:\ntestb %al,%al\nje .L16\n.LBB13:\n.LBB14:\n.LBB15:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L17\ncmpq %rax,-8(%rbp)\njl .L36\n.L17:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\nsetge %al\ntestb %al,%al\nje .L19\n.LBB16:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L20\ncmpq %rax,-32(%rbp)\njl .L37\n.L20:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\nsetl %al\n.L19:\n.LBE16:\n.LBE15:\ntestb %al,%al\nje .L22\n.LBB17:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBE17:\njmp .L2\n.L22:\n.LBB18:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq %rax,-8(%rbp)\njmp .L2\n.L16:\n.LBE18:\n.LBE14:\n.LBE13:\n.LBB19:\n.LBB20:\n.LBB21:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L23\ncmpq %rax,-32(%rbp)\njl .L38\n.L23:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\nsetg %al\ntestb %al,%al\nje .L25\n.LBB22:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L26\ncmpq %rax,-16(%rbp)\njl .L39\n.L26:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\nsetle %al\n.L25:\n.LBE22:\n.LBE21:\ntestb %al,%al\nje .L28\n.LBB23:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq %rax,-8(%rbp)\n.LBE23:\njmp .L2\n.L28:\n.LBB24:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.L2:\n.LBE24:\n.LBE20:\n.LBE19:\n.LBE10:\n.LBE6:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njle .L41\n.LBE4:\n.LBE3:\n.LBB25:\nmovq $-1,-24(%rbp)\nmovq -24(%rbp),%rax\n.L6:\n.LBE25:\n.LBE2:\nleave\nret", "tgt": "var (\n\tl int\n\tr = len(nums) - 1\n)\nfor l <= r {\n\tmid := l + (r-l)/2\n\tif target == nums[mid] {\n\t\treturn mid\n\t}\n\tif nums[mid] >= nums[l] && nums[mid] > nums[r] {\n\t\tif target >= nums[l] && target < nums[mid] {\n\t\t\tr = mid - 1\n\t\t} else {\n\t\t\tl = mid + 1\n\t\t}\n\t} else {\n\t\tif target > nums[mid] && target <= nums[r] {\n\t\t\tl = mid + 1\n\t\t} else {\n\t\t\tr = mid - 1\n\t\t}\n\t}\n}\nreturn -1"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L15\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-104(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\n.LBB3:\ncmpq $2,-104(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovq $1,-48(%rbp)\nmovq -48(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq $0,-56(%rbp)\nmovb $0,-57(%rbp)\n.LBB7:\nmovq -104(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq -88(%rbp),%rax\nmovq (%rax),%rdx\nmovq <main.memo>(%rip),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int64>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq %rax,-56(%rbp)\nmovb %dl,-57(%rbp)\n.LBE7:\ncmpb $0,-57(%rbp)\nje .L4\n.LBB8:\n.LBB9:\nmovq -56(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\njmp .L3\n.L4:\n.LBE9:\n.LBE8:\n.LBE6:\nmovq $1,-24(%rbp)\n.LBB10:\nmovq $3,-32(%rbp)\n.LBB11:\njmp .L5\n.L14:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\n.LBB14:\nmovq $0,-40(%rbp)\n.LBB15:\njmp .L6\n.L13:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\nmovq $1,-72(%rbp)\nmovq -104(%rbp),%rax\nsubq -40(%rbp),%rax\nsubq -32(%rbp),%rax\nsubq $1,%rax\nmovq %rax,%rdi\ncall <main.ways>\nmovq -72(%rbp),%rdx\nimulq %rdx,%rax\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\naddq %rax,-24(%rbp)\n.LBE17:\n.LBB18:\naddq $1,-40(%rbp)\n.L6:\n.LBE18:\nmovq -104(%rbp),%rax\nsubq -32(%rbp),%rax\ncmpq %rax,-40(%rbp)\njle .L13\n.LBE15:\n.LBE14:\n.LBE13:\n.LBB19:\naddq $1,-32(%rbp)\n.L5:\n.LBE19:\nmovq -32(%rbp),%rax\ncmpq -104(%rbp),%rax\njle .L14\n.LBE11:\n.LBE10:\n.LBB20:\nmovq -104(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -24(%rbp),%rbx\nleaq -80(%rbp),%rax\nmovq (%rax),%rdx\nmovq <main.memo>(%rip),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int64>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %rbx,(%rax)\n.LBE20:\n.LBB21:\nmovq -24(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.L3:\n.LBE21:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if squares < 3 {\n\treturn 1\n}\nif answer, ok := memo[squares]; ok {\n\treturn answer\n}\ntotal := int64(1)\nfor size := 3; size <= squares; size++ {\n\tfor start := 0; start <= squares-size; start++ {\n\t\tanswer := int64(1)\n\t\tanswer *= ways(squares - start - size - 1)\n\t\ttotal += answer\n\t}\n}\nmemo[squares] = total\nreturn total"}
{"src": ".LFB15:\ncmpq %fs:112,%rsp\njnb .L263\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL15:\nret\n.L263:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-152(%rbp)\nmovq $0,-40(%rbp)\n.LBB229:\nmovq -152(%rbp),%rbx\n.LBB230:\nmovq %rbx,%rdx\nmovq %rbx,%rax\nmovq %rax,%rsi\nleaq <type..interface.4.5>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%r13\nmovq -152(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..chan.0bool>(%rip),%rdi\ncall <runtime.makechan@PLT>\nmovq %rax,%r12\nmovq %r13,-144(%rbp)\nmovq %rbx,%rax\nmovq %rax,-136(%rbp)\nmovq %rbx,%rax\nmovq %rax,-128(%rbp)\nleaq <go.circularbuffer.CircularBuffer..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -152(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq %r12,-64(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L260\n.LBB231:\nmovq -120(%rbp),%rax\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -48(%rbp),%rdx\nmovq %rdx,<64>(%rax)\n.LBE231:\njmp .L261\n.L260:\n.LBB232:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.circularbuffer.CircularBuffer..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L261:\n.LBE232:\nmovq -120(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE230:\n.LBE229:\naddq $136,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "return &CircularBuffer{\n\tbuffer: make([]interface{}, size),\n\tsize:   size,\n\tavail:  make(chan bool, size),\n}"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovl $0,-4(%rbp)\n.LBB2:\n.LBB3:\nmovq -24(%rbp),%rax\nshrq $8,%rax\nandl $255,%eax\nmovl %eax,-4(%rbp)\nmovl -4(%rbp),%eax\n.LBE3:\n.LBE2:\npopq %rbp\nret", "tgt": "return uint32((dev >> 8) & 0xff)"}
{"src": ".LFB0:\nleaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $536,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $488,%rsp\nmovq %rdi,-472(%rbp)\nleaq <.LC13>(%rip),%r10\nmovl $3,%r11d\nmovq %r10,-432(%rbp)\nmovq %r11,-424(%rbp)\nmovq $2,-416(%rbp)\nleaq <.LC14>(%rip),%r8\nmovl $6,%r9d\nmovq %r8,-408(%rbp)\nmovq %r9,-400(%rbp)\nmovq $4,-392(%rbp)\nleaq <.LC15>(%rip),%rcx\nmovl $13,%ebx\nmovq %rcx,-384(%rbp)\nmovq %rbx,-376(%rbp)\nmovq $6,-368(%rbp)\nleaq <.LC16>(%rip),%rax\nmovl $6,%edx\nmovq %rax,-360(%rbp)\nmovq %rdx,-352(%rbp)\nmovq $6,-344(%rbp)\n.LBB2:\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovl $4,%r12d\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %rbx,%rbx\njs .L3\ncmpq $3,%rbx\njg .L3\nmovq %rbx,%rax\naddq %rax,%rax\naddq %rbx,%rax\nsalq $3,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -256(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-320(%rbp)\n.LBE8:\n.LBB9:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-448(%rbp)\n.LBE9:\n.LBB10:\nmovq -464(%rbp),%rdx\nmovq -456(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem32.longestValidParentheses>\nmovq %rax,-56(%rbp)\n.LBB11:\nmovq -448(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB18:\nmovl $4,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB12:\nleaq <string..d>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -184(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <int..d>(%rip),%r13\nmovq %r13,-512(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq %r13,-496(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -448(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -512(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovdqa -496(%rbp),%xmm2\nmovups %xmm2,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB15:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE15:\njmp .L9\n.L8:\n.LBB16:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE16:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC17>(%rip),%r14\nmovl $25,%r15d\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq -472(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE17:\n.LBE19:\n.LBE7:\n.LBB20:\naddq $1,%rbx\n.L2:\n.LBE20:\ncmpq %r12,%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   \"STR\",\n\t\twant: 2,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: 4,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: 6,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: 6,\n\t},\n}\nfor _, tt := range tests {\n\tgot := longestValidParentheses(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L46\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L46:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-168(%rbp)\nmovq %rsi,-176(%rbp)\nleaq <type...1go.graph.graph>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-80(%rbp)\nmovq -168(%rbp),%rax\nmovq %rax,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L39\n.LBB41:\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE41:\njmp .L40\n.L39:\n.LBB42:\nmovq -72(%rbp),%rax\nmovq %rax,%rdx\nmovq -80(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L40:\n.LBE42:\nmovq -80(%rbp),%rax\nmovq %rax,-40(%rbp)\nleaq <go.graph.VertexId..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nmovq -176(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -64(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\n.LBB43:\nleaq <go.graph..1go.graph.graph.GetSuccessors..func1>(%rip),%r13\nmovq -40(%rbp),%r12\nmovq -48(%rbp),%rbx\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.graph.g1.0.1.1go.graph.graph.2.go.graph.vertex2.0.1go.graph.VertexId.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq %r13,-128(%rbp)\nmovq %r12,-120(%rbp)\nmovq %rbx,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L41\n.LBB44:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE44:\njmp .L42\n.L41:\n.LBB45:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.graph.g1.0.1.1go.graph.graph.2.go.graph.vertex2.0.1go.graph.VertexId.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L42:\n.LBE45:\nmovq -136(%rbp),%rax\nmovq %rax,-56(%rbp)\n.LBB46:\nleaq <go.graph..go.graph.vertexIterableHelper..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-96(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L43\n.LBB47:\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE47:\njmp .L44\n.L43:\n.LBB48:\nmovq -88(%rbp),%rax\nmovq %rax,%rdx\nmovq -96(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L44:\n.LBE48:\nmovq -96(%rbp),%rax\nleaq <pimt..interface.4VerticesIter.0func.8.9.8.4.5chan.0go.graph.VertexId.9.5..go.graph.vertexIterableHelper>(%rip),%rdx\nmovq %rdx,-160(%rbp)\nmovq %rax,-152(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\n.LBE46:\n.LBE43:\naddq $152,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "iterator := func() <-chan VertexId {\n\tch := make(chan VertexId)\n\tgo func() {\n\t\tif connected, ok := g.edges[vertex]; ok {\n\t\t\tfor VertexId, _ := range connected {\n\t\t\t\tif g.IsEdge(vertex, VertexId) {\n\t\t\t\t\tch <- VertexId\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclose(ch)\n\t}()\n\treturn ch\n}\nreturn VerticesIterable(&vertexIterableHelper{iterFunc: iterator})"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L31\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L31:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq $0,-16(%rbp)\n.LBB24:\nmovq $0,-8(%rbp)\n.LBB25:\n.LBB26:\njmp .L23\n.L30:\n.LBB27:\nnop\n.LBE27:\n.LBB28:\nmovq -8(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\nmovq %rax,%rdi\nmovq -24(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $2,%rax\nmovq %rcx,%rsi\nsarq $63,%rsi\nsubq %rsi,%rax\nmovq %rax,%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\nsubq %rax,%rcx\nmovq %rcx,%rdx\nleaq (%rdx,%rdi),%rax\nmovq %rax,-8(%rbp)\n.LBE28:\n.LBB29:\nmovq -24(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $2,%rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\nmovq %rax,-24(%rbp)\n.L23:\n.LBE29:\ncmpq $0,-24(%rbp)\njne .L30\n.LBE26:\n.LBE25:\n.LBB30:\n.LBB31:\nmovabsq $-2147483649,%rax\ncmpq %rax,-8(%rbp)\nsetle %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L26\n.LBB32:\nmovl $2147483648,%eax\ncmpq %rax,-8(%rbp)\nsetge %al\n.L26:\n.LBE32:\n.LBE31:\ntestb %al,%al\nje .L27\n.LBB33:\n.LBB34:\nmovq $0,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L28\n.L27:\n.LBE34:\n.LBE33:\n.LBE30:\n.LBB35:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.L28:\n.LBE35:\n.LBE24:\npopq %rbp\nret", "tgt": "ans := 0\nfor ; x != 0; x /= 10 {\n\tans = ans*10 + x%10\n}\nif ans < math.MinInt32 || ans > math.MaxInt32 {\n\treturn 0\n}\nreturn ans"}
{"src": ".LFB0:\nleaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L49\nmovl $296,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L49:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $280,%rsp\nmovq %rdi,%rcx\nmovq %rsi,%rax\nmovq %rax,%rbx\nmovq %rcx,-272(%rbp)\nmovq %rbx,-264(%rbp)\nmovq %rdx,-280(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\nmovq -264(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -280(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-240(%rbp)\nmovq %rbx,-232(%rbp)\nmovq %rbx,-224(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L47:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq $0,-32(%rbp)\n.LBB8:\njmp .L3\n.L45:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -232(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L4\ncmpq %rax,-32(%rbp)\njl .L34\n.L4:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq -240(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rbx\nmovq -232(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L6\ncmpq %rax,-32(%rbp)\njl .L35\n.L6:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq -264(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L8\ncmpq %rax,-24(%rbp)\njl .L36\n.L8:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\nmovq -240(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -272(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nleaq -180(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nleaq -176(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rdx,%rcx\nmovq %rcx,<8>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L10\n.LBB11:\nmovq %rax,(%rbx)\njmp .L11\n.L10:\n.LBE11:\n.LBB12:\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L11:\n.LBE12:\naddq $1,-24(%rbp)\n.LBE10:\n.LBB13:\naddq $1,-32(%rbp)\n.L3:\n.LBE13:\n.LBB14:\nmovq -32(%rbp),%rax\ncmpq -280(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L12\n.LBB15:\nmovq -24(%rbp),%rax\ncmpq -56(%rbp),%rax\nsetl %al\n.L12:\n.LBE15:\n.LBE14:\ntestb %al,%al\njne .L45\n.LBE8:\n.LBE7:\n.LBB16:\nmovq -280(%rbp),%rax\nsubq $2,%rax\nmovq %rax,-40(%rbp)\n.LBB17:\njmp .L15\n.L46:\n.LBB18:\nnop\n.LBE18:\n.LBB19:\nmovq -232(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L16\ncmpq %rax,-40(%rbp)\njl .L38\n.L16:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq -240(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rbx\nmovq -232(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L18\ncmpq %rax,-40(%rbp)\njl .L39\n.L18:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -264(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L20\ncmpq %rax,-24(%rbp)\njl .L40\n.L20:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -240(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -272(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nleaq -132(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq -128(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rdx,%rcx\nmovq %rcx,<8>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L22\n.LBB20:\nmovq %rax,(%rbx)\njmp .L23\n.L22:\n.LBE20:\n.LBB21:\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L23:\n.LBE21:\naddq $1,-24(%rbp)\n.LBE19:\n.LBB22:\nsubq $1,-40(%rbp)\n.L15:\n.LBE22:\n.LBB23:\ncmpq $0,-40(%rbp)\nsetg %al\ntestb %al,%al\nje .L24\n.LBB24:\nmovq -24(%rbp),%rax\ncmpq -56(%rbp),%rax\nsetl %al\n.L24:\n.LBE24:\n.LBE23:\ntestb %al,%al\njne .L46\n.L2:\n.LBE17:\n.LBE16:\n.LBE6:\nmovq -24(%rbp),%rax\ncmpq -56(%rbp),%rax\njl .L47\n.LBE4:\n.LBE3:\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\n.LBB25:\nmovq $0,-48(%rbp)\n.LBB26:\njmp .L28\n.L48:\n.LBB27:\nnop\n.LBE27:\n.LBB28:\nmovq -232(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L29\ncmpq %rax,-48(%rbp)\njl .L43\n.L29:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -240(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nleaq -96(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBE28:\n.LBB29:\naddq $1,-48(%rbp)\n.L28:\n.LBE29:\nmovq -48(%rbp),%rax\ncmpq -280(%rbp),%rax\njl .L48\n.LBE26:\n.LBE25:\n.LBB30:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\n.LBE30:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "i, size := 0, len(s)\nss := make([]string, numRows)\nfor i < size {\n\tfor j := 0; j < numRows && i < size; j++ {\n\t\tss[j] += string(s[i])\n\t\ti++\n\t}\n\tfor j := numRows - 2; j > 0 && i < size; j-- {\n\t\tss[j] += string(s[i])\n\t\ti++\n\t}\n}\nvar ret string\nfor j := 0; j < numRows; j++ {\n\tret += ss[j]\n}\nreturn ret"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $176,%rsp\nmovl $0,%edi\ncall <math..z2fbig.NewInt@PLT>\nmovq %rax,-48(%rbp)\n.LBB2:\nmovq $1,-40(%rbp)\n.LBB3:\njmp .L2\n.L8:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq -40(%rbp),%rax\nmovq %rax,%rdi\ncall <math..z2fbig.NewInt@PLT>\nmovq %rax,-56(%rbp)\nmovq -40(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.pow>\nmovq %rax,%rdx\nmovq -48(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <math..z2fbig.Int.Add@PLT>\n.LBE5:\n.LBB6:\naddq $1,-40(%rbp)\n.L2:\n.LBE6:\ncmpq $1000,-40(%rbp)\njle .L8\n.LBE3:\n.LBE2:\nmovq -48(%rbp),%rax\nmovq %rax,%rdi\ncall <math..z2fbig.Int.String@PLT>\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <string..d>(%rip),%r14\nleaq <go..C6>(%rip),%r15\nleaq <string..d>(%rip),%rax\nmovq %rax,-208(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq %r12,-160(%rbp)\nmovq %r13,-152(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L5\n.LBB7:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE7:\njmp .L6\n.L5:\n.LBB8:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE8:\nmovq -168(%rbp),%rax\nmovq %rax,-200(%rbp)\nmovq %r14,-144(%rbp)\nmovq %r15,-136(%rbp)\nmovdqa -208(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-176(%rbp)\nleaq -32(%rbp),%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "sum := big.NewInt(0)\nfor i := int64(1); i <= 1000; i++ {\n\tval := big.NewInt(i)\n\tsum.Add(sum, pow(val, i))\n}\nfmt.Println(\"STR\", sum.String())"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $40,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\nmovq $0,-8(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.L14:\n.LBB4:\n.LBB5:\nmovq -8(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-32(%rbp)\n.LBB6:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L2\ncmpq %rax,-32(%rbp)\njl .L15\n.L2:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L4\ncmpq %rdx,%rax\njl .L16\n.L4:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njge .L6\n.LBB7:\nmovq -32(%rbp),%rax\nmovq %rax,-8(%rbp)\n.LBE7:\njmp .L14\n.L6:\n.LBB8:\n.LBB9:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L8\ncmpq %rdx,%rax\njl .L17\n.L8:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\nmovq <24>(%rbp),%rdx\ncmpq $0,-32(%rbp)\njs .L10\ncmpq %rdx,-32(%rbp)\njl .L18\n.L10:\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njle .L12\n.LBB10:\nmovq -32(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBE10:\njmp .L14\n.L12:\n.LBB11:\n.LBB12:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE12:\n.LBE11:\n.LBE9:\n.LBE8:\n.LBE6:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "for l, r := 0, len(A)-1; ; {\n\tm := (l + r) / 2\n\tif A[m] < A[m+1] {\n\t\tl = m\n\t} else if A[m-1] > A[m] {\n\t\tr = m\n\t} else {\n\t\treturn m\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\naddq $-128,%rsp\nmovq $1000,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $1,-32(%rbp)\n.LBB3:\njmp .L2\n.L8:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -32(%rbp),%rcx\nmovabsq $6148914691236517206,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rcx,%rsi\nsarq $63,%rsi\nmovq %rdx,%rax\nsubq %rsi,%rax\nmovq %rax,%rdx\naddq %rdx,%rdx\naddq %rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L3\n.LBB8:\nmovq -32(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nmovq %rcx,%rdx\nsarq $63,%rdx\nsubq %rdx,%rax\nmovq %rax,%rdx\nsalq $2,%rdx\naddq %rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\ntestq %rax,%rax\nsete %al\n.L3:\n.LBE8:\n.LBE7:\ntestb %al,%al\nje .L4\n.LBB9:\nmovq -32(%rbp),%rax\naddq %rax,-24(%rbp)\n.L4:\n.LBE9:\n.LBE6:\n.LBE5:\n.LBB10:\naddq $1,-32(%rbp)\n.L2:\n.LBE10:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L8\n.LBE3:\n.LBE2:\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "max := 1000\nsum := 0\nfor i := 1; i < max; i++ {\n\tif (i%3 == 0) || (i%5 == 0) {\n\t\tsum += i\n\t}\n}\nfmt.Println(sum)"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L32\nmovl $248,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $216,%rsp\nmovq %rdi,-232(%rbp)\nmovq $0,-48(%rbp)\n.LBB16:\n.LBB17:\n.LBB18:\nmovq -232(%rbp),%rax\nshrq $63,%rax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L14\n.LBB19:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\nsete %al\n.L14:\n.LBE19:\n.LBE18:\ntestb %al,%al\nje .L15\n.LBB20:\n.LBB21:\nmovq $0,-48(%rbp)\nmovq -48(%rbp),%rax\njmp .L16\n.L15:\n.LBE21:\n.LBE20:\n.LBE17:\nmovq $0,-40(%rbp)\nmovq <24>(%rbp),%rax\nmovl $0,%edx\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,-56(%rbp)\n.LBB22:\nmovq $0,-64(%rbp)\n.LBB23:\n.LBB24:\n.LBB25:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r12\nmovl $0,%ebx\n.LBE25:\njmp .L17\n.L30:\n.LBB26:\nnop\n.LBE26:\n.LBB27:\n.LBB28:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L18\ncmpq %rax,%rbx\njge .L18\nmovq -224(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE28:\n.LBB29:\nmovq %rax,-64(%rbp)\n.LBE29:\n.LBB30:\n.LBB31:\nmovq -64(%rbp),%rax\nmovq %rax,-200(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-96(%rbp)\nleaq -96(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nleaq <1>(%rax),%r13\nleaq -200(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r13,(%rax)\n.LBE31:\n.LBE30:\n.LBE27:\n.LBB33:\naddq $1,%rbx\njmp .L17\n.L18:\n.LBE33:\n.LBB34:\n.LBB32:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\n.LBE32:\n.LBE34:\ncmpq %r12,%rbx\njl .L30\n.LBE24:\n.LBE23:\n.LBE22:\n.LBB35:\nmovq $0,-72(%rbp)\n.LBB36:\n.LBB37:\n.LBB38:\nleaq -192(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE38:\njmp .L21\n.L31:\n.LBB39:\nnop\n.LBE39:\n.LBB40:\n.LBB41:\nmovq -192(%rbp),%rax\nmovq (%rax),%rax\n.LBE41:\nmovq %rax,-72(%rbp)\n.LBB42:\n.LBB43:\n.LBB44:\ncmpq $0,-232(%rbp)\nsete %al\ntestb %al,%al\nje .L22\n.LBB45:\nmovq -72(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq -88(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\ncmpq $1,%rax\nsetg %al\n.L22:\n.LBE45:\n.LBE44:\ntestb %al,%al\nje .L23\n.LBB46:\naddq $1,-40(%rbp)\njmp .L24\n.L23:\n.LBE46:\n.LBE43:\n.LBB47:\n.LBB48:\ncmpq $0,-232(%rbp)\nsetg %al\ntestb %al,%al\nje .L25\n.LBB49:\nmovq -72(%rbp),%rdx\nmovq -232(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,-80(%rbp)\nleaq -80(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\ntestq %rax,%rax\nsetg %al\n.L25:\n.LBE49:\n.LBE48:\ntestb %al,%al\nje .L24\n.LBB50:\naddq $1,-40(%rbp)\n.L24:\n.LBE50:\n.LBE47:\n.LBE42:\n.LBE40:\n.LBB51:\nleaq -192(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L21:\n.LBE51:\nmovq -192(%rbp),%rax\ntestq %rax,%rax\njne .L31\n.LBE37:\n.LBE36:\n.LBE35:\n.LBB52:\nmovq -40(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.L16:\n.LBE52:\n.LBE16:\naddq $216,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "if k < 0 || len(nums) == 0 {\n\treturn 0\n}\nvar count int\nm := make(map[int]int, len(nums))\nfor _, value := range nums {\n\tm[value]++\n}\nfor key := range m {\n\tif k == 0 && m[key] > 1 {\n\t\tcount++\n\t\tcontinue\n\t}\n\tif k > 0 && m[key+k] > 0 {\n\t\tcount++\n\t}\n}\nreturn count"}
{"src": ".LFB38:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L1054\nmovl $376,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL51:\nret\n.L1054:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $328,%rsp\nmovq $0,-64(%rbp)\n.LBB844:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-72(%rbp)\ncall <runtime.makemap_small@PLT>\nmovq %rax,-80(%rbp)\n.LBB845:\nmovq $0,-88(%rbp)\n.LBB846:\n.LBB847:\n.LBB848:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%r15\nmovl $0,%r12d\n.LBE848:\njmp .L1027\n.L1052:\n.LBB849:\nnop\n.LBE849:\n.LBB850:\n.LBB851:\nmovq -328(%rbp),%rax\ntestq %r12,%r12\njs .L1028\ncmpq %rax,%r12\njge .L1028\nmovq -336(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE851:\n.LBB852:\nmovq %rax,-88(%rbp)\n.LBE852:\n.LBB853:\n.LBB854:\nmovb $0,-97(%rbp)\n.LBB855:\nmovq -88(%rbp),%rax\nmovq %rax,-312(%rbp)\nleaq -312(%rbp),%rax\nmovq (%rax),%rdx\nmovq -72(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovl %edx,%eax\nmovb %al,-97(%rbp)\n.LBE855:\ncmpb $0,-97(%rbp)\njne .L1050\njmp .L1046\n.L1028:\n.LBE854:\n.LBE853:\n.LBB878:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1046:\n.LBE878:\n.LBB879:\n.LBB857:\nmovq -72(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq -80(%rbp),%rbx\nmovq -88(%rbp),%r13\nmovq -88(%rbp),%r14\nmovq $1,-360(%rbp)\n.LBB858:\nmovq %rdx,-304(%rbp)\nleaq -304(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r14,(%rax)\n.LBE858:\n.LBB859:\nmovq %r13,-296(%rbp)\nleaq -296(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rdx\nmovq %rbx,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq -360(%rbp),%rcx\nmovq %rcx,(%rax)\n.LBE859:\n.LBE857:\nmovq -88(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -88(%rbp),%rax\naddq $1,%rax\nmovq %rdx,-352(%rbp)\nmovq %rax,-344(%rbp)\n.LBB860:\nmovq $0,-112(%rbp)\n.LBB861:\n.LBB862:\n.LBB863:\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovl $2,%r14d\nmovl $0,%ebx\n.LBE863:\njmp .L1032\n.L1051:\n.LBB864:\nnop\n.LBE864:\n.LBB865:\n.LBB866:\ntestq %rbx,%rbx\njs .L1033\ncmpq $1,%rbx\njg .L1033\nmovq -288(%rbp,%rbx,8),%rax\n.LBE866:\n.LBB867:\nmovq %rax,-112(%rbp)\n.LBE867:\n.LBB868:\n.LBB869:\nmovb $0,-113(%rbp)\n.LBB870:\nmovq -112(%rbp),%rax\nmovq %rax,-272(%rbp)\nleaq -272(%rbp),%rax\nmovq (%rax),%rdx\nmovq -72(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovl %edx,%eax\nmovb %al,-113(%rbp)\n.LBE870:\ncmpb $0,-113(%rbp)\njne .L1034\njmp .L1035\n.L1033:\n.LBE869:\n.LBE868:\n.LBB874:\nmovl $2,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1034:\n.LBE874:\n.LBB875:\n.LBB873:\n.LBB871:\nmovq -72(%rbp),%rdx\nmovq -112(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.getParent128>\nmovq %rax,-152(%rbp)\nleaq -152(%rbp),%rax\nmovq (%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nmovq %rax,-128(%rbp)\nmovq -72(%rbp),%rdx\nmovq -88(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.getParent128>\nmovq %rax,-144(%rbp)\nleaq -144(%rbp),%rax\nmovq (%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nmovq %rax,-136(%rbp)\nmovq -72(%rbp),%rdx\nmovq -88(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.union128>\n.LBB872:\nmovq -72(%rbp),%rdx\nmovq -88(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.getParent128>\nmovq %rax,-264(%rbp)\nmovq -128(%rbp),%rdx\nmovq -136(%rbp),%rax\nleaq (%rdx,%rax),%r13\nleaq -264(%rbp),%rax\nmovq (%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r13,(%rax)\n.L1035:\n.LBE872:\n.LBE871:\n.LBE873:\n.LBE875:\n.LBE865:\n.LBB876:\naddq $1,%rbx\n.L1032:\n.LBE876:\ncmpq %r14,%rbx\njl .L1051\njmp .L1038\n.L1050:\n.LBE862:\n.LBE861:\n.LBE860:\n.LBB877:\n.LBB856:\nnop\n.L1038:\n.LBE856:\n.LBE877:\n.LBE879:\n.LBE850:\n.LBB880:\naddq $1,%r12\n.L1027:\n.LBE880:\ncmpq %r15,%r12\njl .L1052\n.LBE847:\n.LBE846:\n.LBE845:\nmovq $0,-56(%rbp)\n.LBB881:\nmovq $0,-96(%rbp)\n.LBB882:\n.LBB883:\n.LBB884:\nleaq -256(%rbp),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE884:\njmp .L1041\n.L1053:\n.LBB885:\nnop\n.LBE885:\n.LBB886:\n.LBB887:\nmovq -256(%rbp),%rax\nmovq (%rax),%rax\nmovq -248(%rbp),%rax\nmovq (%rax),%rax\n.LBE887:\n.LBB888:\nmovq %rax,-96(%rbp)\n.LBE888:\n.LBB889:\n.LBB890:\nmovq -96(%rbp),%rax\ncmpq -56(%rbp),%rax\njle .L1042\n.LBB891:\nmovq -96(%rbp),%rax\nmovq %rax,-56(%rbp)\n.L1042:\n.LBE891:\n.LBE890:\n.LBE889:\n.LBE886:\n.LBB892:\nleaq -256(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L1041:\n.LBE892:\nmovq -256(%rbp),%rax\ntestq %rax,%rax\njne .L1053\n.LBE883:\n.LBE882:\n.LBE881:\n.LBB893:\nmovq -56(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\n.LBE893:\n.LBE844:\naddq $328,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "parentMap, countMap := make(map[int]int), make(map[int]int)\nfor _, num := range nums {\n\tif _, exists := parentMap[num]; exists {\n\t\tcontinue\n\t}\n\tparentMap[num], countMap[num] = num, 1\n\tneighbors := [2]int{num - 1, num + 1}\n\tfor _, n := range neighbors {\n\t\tif _, exists := parentMap[n]; exists {\n\t\t\tcount1 := countMap[getParent128(n, parentMap)]\n\t\t\tcount2 := countMap[getParent128(num, parentMap)]\n\t\t\tunion128(n, num, parentMap)\n\t\t\tcountMap[getParent128(num, parentMap)] = count1 + count2\n\t\t}\n\t}\n}\nmax := 0\nfor _, count := range countMap {\n\tif count > max {\n\t\tmax = count\n\t}\n}\nreturn max"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L15\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-32(%rbp)\n.LBB2:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\nmovq $0,-8(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\nmovq $0,-24(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L14:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L3\ncmpq %rax,-8(%rbp)\njl .L11\n.L3:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L5\ncmpq %rax,-16(%rbp)\njl .L12\n.L5:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\naddq %rdx,%rax\ncmpq %rax,-40(%rbp)\njl .L7\n.LBB8:\naddq $1,-8(%rbp)\n.L7:\n.LBE8:\n.LBE7:\nsubq $1,-16(%rbp)\naddq $1,-24(%rbp)\n.L2:\n.LBE6:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njle .L14\n.LBE4:\n.LBE3:\n.LBB9:\nmovq -24(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE9:\n.LBE2:\nleave\nret", "tgt": "sort.Ints(people)\nthin, fat := 0, len(people)-1\nres := 0\nfor thin <= fat {\n\tif people[thin]+people[fat] <= limit {\n\t\tthin++\n\t}\n\tfat--\n\tres++\n}\nreturn res"}
{"src": ".LFB1:\nleaq -488(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L33\nmovl $488,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L33:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $440,%rsp\nmovq %rdi,-440(%rbp)\nleaq <type...69x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-336(%rbp)\nmovq -336(%rbp),%rax\nmovq $1,(%rax)\nmovq $8,<8>(%rax)\nmovq $6,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $5,<32>(%rax)\nmovq $4,<40>(%rax)\nmovq $8,<48>(%rax)\nmovq $3,<56>(%rax)\nmovq $7,<64>(%rax)\nmovq -336(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $9,-392(%rbp)\nmovq $9,-384(%rbp)\nmovq $49,-376(%rbp)\nleaq <type...69x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovq -328(%rbp),%rax\nmovq $1,(%rax)\nmovq $8,<8>(%rax)\nmovq $6,<16>(%rax)\nmovq $30,<24>(%rax)\nmovq $20,<32>(%rax)\nmovq $6,<40>(%rax)\nmovq $9,<48>(%rax)\nmovq $10,<56>(%rax)\nmovq $1,<64>(%rax)\nmovq -328(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $9,-360(%rbp)\nmovq $9,-352(%rbp)\nmovq $48,-344(%rbp)\n.LBB14:\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\n.LBB15:\n.LBB16:\n.LBB17:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq $2,-448(%rbp)\nmovl $0,%ebx\n.LBE17:\njmp .L21\n.L32:\n.LBB18:\nnop\n.LBE18:\n.LBB19:\n.LBB20:\ntestq %rbx,%rbx\njs .L22\ncmpq $1,%rbx\njg .L22\nmovq %rbx,%rax\nsalq $5,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -240(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\n.LBE20:\n.LBB21:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBE21:\n.LBB22:\nsubq $8,%rsp\npushq -416(%rbp)\npushq -424(%rbp)\npushq -432(%rbp)\ncall <go.problem11.maxArea>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\n.LBB23:\nmovq -408(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L23\njmp .L24\n.L22:\n.LBE23:\n.LBE22:\n.LBB30:\nmovl $2,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\n.LBE30:\n.LBB31:\n.LBB29:\n.LBB24:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L25\n.LBB25:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE25:\njmp .L26\n.L25:\n.LBB26:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L26:\n.LBE26:\nmovq -184(%rbp),%rax\nmovq %rax,-472(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-464(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-456(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -480(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -464(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L27\n.LBB27:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE27:\njmp .L28\n.L27:\n.LBB28:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L28:\n.LBE28:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC13>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -440(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L24:\n.LBE24:\n.LBE29:\n.LBE31:\n.LBE19:\n.LBB32:\naddq $1,%rbx\n.L21:\n.LBE32:\ncmpq -448(%rbp),%rbx\njl .L32\n.LBE16:\n.LBE15:\n.LBE14:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   []int{1, 8, 6, 2, 5, 4, 8, 3, 7},\n\t\twant: 49,\n\t},\n\t{\n\t\tin:   []int{1, 8, 6, 30, 20, 6, 9, 10, 1},\n\t\twant: 48,\n\t},\n}\nfor _, tt := range tests {\n\tgot := maxArea(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": ".LFB0:\nleaq -1144(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L49\nmovl $1144,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L49:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $1120,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-1136(%rbp)\nmovq %rdx,-1128(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\nleaq -1088(%rbp),%rdx\nmovl $0,%eax\nmovl $128,%ecx\nmovq %rdx,%rdi\nrep stosqleaq -1088(%rbp),%rax\nmovq %rax,-1120(%rbp)\nmovq $128,-1112(%rbp)\nmovq $128,-1104(%rbp)\nmovq -1128(%rbp),%rax\nleaq <3>(%rax),%rdx\ntestq %rax,%rax\ncmovs %rdx,%rax\nsarq $2,%rax\nmovq %rax,-56(%rbp)\n.LBB3:\nmovl $0,-60(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -1128(%rbp),%r12\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L46:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -1128(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njge .L3\nmovq -1136(%rbp),%rdx\nmovq %rax,%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nmovzbl %dl,%edx\ncmpl $127,%edx\njle .L4\njmp .L38\n.L3:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\naddq $1,%rax\n.LBE10:\njmp .L6\n.L38:\n.LBB11:\nmovq -1136(%rbp),%rsi\nmovq -1128(%rbp),%rcx\nmovq %rax,%rdx\nmovq %rsi,%rdi\nmovq %rcx,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovl %ecx,%edx\nmovq %rbx,%rax\n.L6:\n.LBE11:\n.LBE9:\n.LBB12:\nmovl %edx,-60(%rbp)\n.LBE12:\n.LBB13:\nmovl -60(%rbp),%edx\nmovslq %edx,%rdx\nmovq -1112(%rbp),%rcx\ntestq %rdx,%rdx\njs .L7\ncmpq %rcx,%rdx\njge .L7\nmovl -60(%rbp),%ecx\nmovslq %ecx,%rcx\nmovq -1112(%rbp),%rsi\ntestq %rcx,%rcx\njns .L8\njmp .L9\n.L7:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\ncmpq %rsi,%rcx\njl .L39\n.L9:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -1120(%rbp),%rsi\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rcx\nmovq -1120(%rbp),%rsi\nsalq $3,%rdx\naddq %rsi,%rdx\naddq $1,%rcx\nmovq %rcx,(%rdx)\n.L2:\n.LBE13:\n.LBE8:\ncmpq %r12,%rax\njl .L46\n.LBE5:\n.LBE4:\n.LBE3:\nmovq $0,-24(%rbp)\nmovq $-1,-32(%rbp)\nmovq -1128(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB14:\n.LBB15:\njmp .L13\n.L48:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\n.LBB19:\n.LBB20:\n.LBB21:\nmovq -1112(%rbp),%rax\ncmpq $81,%rax\njg .L14\nmovq %rax,%rsi\nmovl $81,%edi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq -1120(%rbp),%rax\naddq $648,%rax\nmovq (%rax),%rax\ncmpq %rax,-56(%rbp)\nsetl %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L15\n.LBB22:\nmovq -1112(%rbp),%rax\ncmpq $87,%rax\njg .L16\nmovq %rax,%rsi\nmovl $87,%edi\ncall <runtime.goPanicIndex@PLT>\n.L16:\nmovq -1120(%rbp),%rax\naddq $696,%rax\nmovq (%rax),%rax\ncmpq %rax,-56(%rbp)\nsetl %al\n.L15:\n.LBE22:\n.LBE21:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L17\n.LBB23:\nmovq -1112(%rbp),%rax\ncmpq $69,%rax\njg .L18\nmovq %rax,%rsi\nmovl $69,%edi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq -1120(%rbp),%rax\naddq $552,%rax\nmovq (%rax),%rax\ncmpq %rax,-56(%rbp)\nsetl %al\n.L17:\n.LBE23:\n.LBE20:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L19\n.LBB24:\nmovq -1112(%rbp),%rax\ncmpq $82,%rax\njg .L20\nmovq %rax,%rsi\nmovl $82,%edi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq -1120(%rbp),%rax\naddq $656,%rax\nmovq (%rax),%rax\ncmpq %rax,-56(%rbp)\nsetl %al\n.L19:\n.LBE24:\n.LBE19:\ntestb %al,%al\nje .L21\n.LBB25:\n.LBB26:\nmovq -32(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -1128(%rbp),%rax\ncmpq %rax,%rdx\njge .L47\n.LBB27:\naddq $1,-32(%rbp)\n.LBB28:\nmovq -1136(%rbp),%rcx\nmovq -1128(%rbp),%rbx\nmovq -32(%rbp),%rax\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L23\ncmpq %rdx,%rax\njge .L23\nmovq %rcx,%rsi\nmovq %rax,%rdx\naddq %rsi,%rdx\nmovzbl (%rdx),%edx\nmovq -1112(%rbp),%rsi\nmovzbl %dl,%edi\ncmpq %rdi,%rsi\njg .L24\njmp .L41\n.L23:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovzbl %dl,%eax\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L24:\nmovq %rbx,%rsi\ntestq %rax,%rax\njs .L26\ncmpq %rsi,%rax\njge .L26\naddq %rcx,%rax\nmovzbl (%rax),%eax\nmovq -1112(%rbp),%rcx\nmovzbl %al,%esi\ncmpq %rsi,%rcx\njg .L27\njmp .L42\n.L26:\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nmovzbl %al,%eax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L27:\nmovq -1120(%rbp),%rcx\nmovzbl %al,%eax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rcx\nmovq -1120(%rbp),%rsi\nmovzbl %dl,%eax\nsalq $3,%rax\naddq %rsi,%rax\nleaq -1(%rcx),%rdx\nmovq %rdx,(%rax)\n.LBE28:\n.LBE27:\njmp .L13\n.L21:\n.LBE26:\n.LBE25:\n.LBB31:\nmovq -32(%rbp),%rax\nsubq -24(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.min>\nmovq %rax,-40(%rbp)\n.LBB32:\nmovq -1136(%rbp),%rcx\nmovq -1128(%rbp),%rbx\nmovq -24(%rbp),%rax\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L30\ncmpq %rdx,%rax\njge .L30\nmovq %rcx,%rsi\nmovq %rax,%rdx\naddq %rsi,%rdx\nmovzbl (%rdx),%edx\nmovq -1112(%rbp),%rsi\nmovzbl %dl,%edi\ncmpq %rdi,%rsi\njg .L31\njmp .L43\n.L30:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovzbl %dl,%eax\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L31:\nmovq %rbx,%rsi\ntestq %rax,%rax\njs .L33\ncmpq %rsi,%rax\njge .L33\naddq %rcx,%rax\nmovzbl (%rax),%eax\nmovq -1112(%rbp),%rcx\nmovzbl %al,%esi\ncmpq %rsi,%rcx\njg .L34\njmp .L44\n.L33:\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L44:\nmovzbl %al,%eax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L34:\nmovq -1120(%rbp),%rcx\nmovzbl %al,%eax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rcx\nmovq -1120(%rbp),%rsi\nmovzbl %dl,%eax\nsalq $3,%rax\naddq %rsi,%rax\nleaq <1>(%rcx),%rdx\nmovq %rdx,(%rax)\n.LBE32:\naddq $1,-24(%rbp)\n.L13:\n.LBE31:\n.LBE18:\n.LBE17:\nmovq -1128(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L48\njmp .L29\n.L47:\n.LBB35:\n.LBB34:\n.LBB33:\n.LBB30:\n.LBB29:\nnop\n.L29:\n.LBE29:\n.LBE30:\n.LBE33:\n.LBE34:\n.LBE35:\n.LBE15:\n.LBE14:\n.LBB36:\nmovq -40(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.LBE36:\n.LBE2:\naddq $1120,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "count, k := make([]int, 128), len(s)/4\nfor _, v := range s {\n\tcount[int(v)]++\n}\nleft, right, res := 0, -1, len(s)\nfor left < len(s) {\n\tif count['Q'] > k || count['W'] > k || count['E'] > k || count['R'] > k {\n\t\tif right+1 < len(s) {\n\t\t\tright++\n\t\t\tcount[s[right]]--\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t} else {\n\t\tres = min(res, right-left+1)\n\t\tcount[s[left]]++\n\t\tleft++\n\t}\n}\nreturn res"}
{"src": ".LFB9:\ncmpq %fs:112,%rsp\njnb .L2\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $8,%rsp\nleaq <.LC3>(%rip),%rax\nmovl $1,%edx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nleaq <go.hello.handler..f>(%rip),%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <net..z2fhttp.HandleFunc@PLT>\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "http.HandleFunc(\"STR\", handler)"}
{"src": ".LFB135:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L2002\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL140:\nret\n.L2002:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-264(%rbp)\nmovq $15,-240(%rbp)\nmovq $26,-232(%rbp)\nmovq $1000,-224(%rbp)\nmovq $1366,-216(%rbp)\n.LBB1615:\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\n.LBB1616:\n.LBB1617:\n.LBB1618:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq $2,-272(%rbp)\nmovl $0,%ebx\n.LBE1618:\njmp .L1991\n.L2001:\n.LBB1619:\nnop\n.LBE1619:\n.LBB1620:\n.LBB1621:\ntestq %rbx,%rbx\njs .L1992\ncmpq $1,%rbx\njg .L1992\nmovq %rbx,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nsubq $160,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE1621:\n.LBB1622:\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBE1622:\n.LBB1623:\nmovq -256(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB1624:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <main.p16>\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\ncmpq -64(%rbp),%rax\nje .L1994\njmp .L1999\n.L1992:\n.LBE1624:\n.LBE1623:\n.LBB1629:\nmovl $2,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1999:\n.LBE1629:\n.LBB1630:\n.LBB1628:\n.LBB1625:\nleaq <int..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-288(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,-280(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovdqa -288(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1995\n.LBB1626:\nmovq -152(%rbp),%rax\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE1626:\njmp .L1996\n.L1995:\n.LBB1627:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1996:\n.LBE1627:\nmovq -152(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq $3,-80(%rbp)\nleaq <.LC103>(%rip),%r12\nmovl $26,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -264(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L1994:\n.LBE1625:\n.LBE1628:\n.LBE1630:\n.LBE1620:\n.LBB1631:\naddq $1,%rbx\n.L1991:\n.LBE1631:\ncmpq -272(%rbp),%rbx\njl .L2001\n.LBE1617:\n.LBE1616:\n.LBE1615:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "pairs := [...][2]int{{15, 26}, {1000, 1366}}\nfor _, pair := range pairs {\n\tin, out := pair[0], pair[1]\n\tif x := p16(in); x != out {\n\t\tt.Errorf(\"STR\", in, x, out)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L30\nmovl $184,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L30:\npushq %rbp\nmovq %rsp,%rbp\nsubq $176,%rsp\nmovq %rdi,-168(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq <16>(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\ntestq %rax,%rax\njg .L3\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L3:\nmovq -160(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L4\ncmpq %rdx,%rax\njl .L22\n.L4:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <16>(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-112(%rbp)\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq -120(%rbp),%rdx\ntestq %rax,%rax\njs .L6\ncmpq %rdx,%rax\njge .L6\nmovq -128(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-16(%rbp)\n.LBB3:\n.LBB4:\njmp .L7\n.L6:\n.LBE4:\n.LBE3:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\n.LBB22:\n.LBB21:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -8(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-64(%rbp)\nmovq $0,-24(%rbp)\n.LBB7:\nmovq $0,-32(%rbp)\n.LBB8:\njmp .L8\n.L28:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-40(%rbp)\n.LBB11:\n.LBB12:\njmp .L9\n.L27:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\nsubq $1,-40(%rbp)\n.L9:\n.LBE14:\n.LBB15:\nmovq -40(%rbp),%rax\nnotq %rax\nshrq $63,%rax\ntestb %al,%al\nje .L10\n.LBB16:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L11\ncmpq %rax,-32(%rbp)\njl .L23\n.L11:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L13\ncmpq %rax,-40(%rbp)\njge .L13\nmovq -96(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-64(%rbp)\nsetl %al\njmp .L10\n.L13:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L10:\n.LBE16:\n.LBE15:\ntestb %al,%al\njne .L27\n.LBE12:\n.LBE11:\nmovq -40(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\naddq $1,%rax\nmovq %rax,-24(%rbp)\n.LBE10:\n.LBB17:\naddq $1,-32(%rbp)\n.L8:\n.LBE17:\nmovq -32(%rbp),%rax\ncmpq -56(%rbp),%rax\njl .L28\n.LBE8:\n.LBE7:\n.LBB18:\nmovq -24(%rbp),%rax\ncmpq -168(%rbp),%rax\njge .L18\n.LBB19:\nmovq -64(%rbp),%rax\naddq $1,%rax\nmovq %rax,-8(%rbp)\n.LBE19:\njmp .L7\n.L18:\n.LBB20:\nmovq -64(%rbp),%rax\nmovq %rax,-16(%rbp)\n.L7:\n.LBE20:\n.LBE18:\n.LBE6:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njl .L29\n.LBE21:\n.LBE22:\n.LBB23:\nmovq -8(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.LBE23:\n.LBE2:\nleave\nret", "tgt": "n := len(matrix)\nl, r := matrix[0][0], matrix[n-1][n-1]\nfor l < r {\n\tm := (l + r) / 2\n\tcount := 0\n\tfor i := 0; i < n; i++ {\n\t\tj := n - 1\n\t\tfor j >= 0 && matrix[i][j] > m {\n\t\t\tj--\n\t\t}\n\t\tcount += j + 1\n\t}\n\tif count < k {\n\t\tl = m + 1\n\t} else {\n\t\tr = m\n\t}\n}\nreturn l"}
{"src": ".LFB0:\nleaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12\nmovl $536,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $488,%rsp\nmovq %rdi,-488(%rbp)\nmovq $2,-384(%rbp)\nmovq $2,-376(%rbp)\nmovq $3,-368(%rbp)\nmovq $3,-360(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $2,-344(%rbp)\nmovq $2,-336(%rbp)\nleaq -368(%rbp),%rax\nmovq %rax,-328(%rbp)\nmovq $2,-320(%rbp)\nmovq $2,-312(%rbp)\nmovq $3,-432(%rbp)\nmovq $3,-424(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq $2,-408(%rbp)\nmovq $2,-400(%rbp)\nmovq $4,-392(%rbp)\n.LBB2:\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq $1,-496(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L11:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %rbx,%rbx\njs .L3\ntestq %rbx,%rbx\njg .L3\nmovq %rbx,%rax\naddq %rax,%rax\naddq %rbx,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nsubq $208,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-288(%rbp)\nmovq %rdi,-280(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\n.LBE8:\n.LBB9:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE9:\n.LBB10:\nmovq -472(%rbp),%rdx\nmovq -480(%rbp),%rax\nsubq $8,%rsp\npushq -448(%rbp)\npushq -456(%rbp)\npushq -464(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem598.maxCount>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\n.LBB11:\nmovq -440(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB16:\nmovl $1,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE16:\n.LBB17:\n.LBB15:\n.LBB12:\nleaq <int..d>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovq -480(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -512(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC15>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -488(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE15:\n.LBE17:\n.LBE7:\n.LBB18:\naddq $1,%rbx\n.L2:\n.LBE18:\ncmpq -496(%rbp),%rbx\njl .L11\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tm: 3,\n\t\tn: 3,\n\t\tops: [][]int{\n\t\t\t{2, 2},\n\t\t\t{3, 3},\n\t\t},\n\t\twant: 4,\n\t},\n}\nfor _, tt := range tests {\n\tgot := maxCount(tt.m, tt.n, tt.ops)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.m, got, tt.want)\n\t}\n}"}
{"src": ".LFB3:\ncmpq %fs:112,%rsp\njnb .L42\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L42:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB41:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB42:\n.LBB43:\n.LBB44:\nmovq <go.day207.testcases>(%rip),%rax\nmovq <8+go.day207.testcases>(%rip),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16+go.day207.testcases>(%rip),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovl $0,%ebx\n.LBE44:\njmp .L32\n.L41:\n.LBB45:\nnop\n.LBE45:\n.LBB46:\n.LBB47:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L33\ncmpq %rax,%rbx\njge .L33\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE47:\n.LBB48:\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\n.LBE48:\n.LBB49:\n.LBB50:\nmovq -176(%rbp),%rax\nmovq %rax,%rdi\ncall <go.day207.IsBipartiteGraph>\nmovb %al,-49(%rbp)\nmovzbl -168(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L34\njmp .L35\n.L33:\n.LBE50:\n.LBE49:\n.LBB55:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\n.LBE55:\n.LBB56:\n.LBB54:\n.LBB51:\nleaq <bool..d>(%rip),%rax\nmovq %rax,-208(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovzbl -168(%rbp),%edx\nmovb %dl,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-200(%rbp)\nleaq <bool..d>(%rip),%r14\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -208(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L36\n.LBB52:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE52:\njmp .L37\n.L36:\n.LBB53:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L37:\n.LBE53:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC43>(%rip),%r12\nmovl $19,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -184(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L35:\n.LBE51:\n.LBE54:\n.LBE56:\n.LBE46:\n.LBB57:\naddq $1,%rbx\n.L32:\n.LBE57:\ncmpq -192(%rbp),%rbx\njl .L41\n.LBE43:\n.LBE42:\n.LBE41:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif isPartite := IsBipartiteGraph(tc.g); isPartite != tc.isPartite {\n\t\tt.Errorf(\"STR\", tc.isPartite, isPartite)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L47\nmovl $136,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L47:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $120,%rsp\nmovq $0,-24(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB2:\ncmpq $1,-40(%rbp)\njle .L43\n.LBE2:\n.LBB4:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-24(%rbp)\n.LBB5:\njmp .L4\n.L45:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L5\ncmpq %rax,-24(%rbp)\njl .L32\n.L5:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njl .L33\n.L7:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njg .L44\n.LBE8:\n.LBE7:\n.LBB11:\nsubq $1,-24(%rbp)\n.L4:\n.LBE11:\ncmpq $0,-24(%rbp)\njg .L45\njmp .L10\n.L44:\n.LBB12:\n.LBB10:\n.LBB9:\nnop\n.L10:\n.LBE9:\n.LBE10:\n.LBE12:\n.LBE5:\n.LBE4:\n.LBB13:\ncmpq $0,-24(%rbp)\njle .L12\n.LBB14:\nmovq <32>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L13\ncmpq %rax,-24(%rbp)\njle .L35\n.L13:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L35:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq %rax,-24(%rbp)\nje .L15\nmovq -24(%rbp),%rax\nsalq $3,%rax\njmp .L16\n.L15:\nmovl $0,%eax\n.L16:\naddq %rdx,%rax\nmovq %rax,-64(%rbp)\nmovq <24>(%rbp),%rax\nsubq -24(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq <32>(%rbp),%rax\nsubq -24(%rbp),%rax\nmovq %rax,-48(%rbp)\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\n.LBB15:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-32(%rbp)\n.LBB16:\njmp .L17\n.L46:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L18\ncmpq %rax,-32(%rbp)\njl .L36\n.L18:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L20\ncmpq %rdx,%rax\njl .L37\n.L20:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njle .L22\n.LBB20:\n.LBB21:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -24(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -32(%rbp),%rax\nmovq <24>(%rbp),%rcx\ncmpq $0,-32(%rbp)\njs .L23\ncmpq %rcx,-32(%rbp)\njl .L38\n.L23:\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq <16>(%rbp),%rsi\nmovq -32(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq -24(%rbp),%rcx\nsubq $1,%rcx\nmovq <24>(%rbp),%rsi\ntestq %rcx,%rcx\njs .L25\ncmpq %rsi,%rcx\njl .L39\n.L25:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq <16>(%rbp),%rsi\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -120(%rbp),%rcx\ntestq %rdx,%rdx\njs .L27\ncmpq %rcx,%rdx\njl .L40\n.L27:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -128(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq %rdi,(%rdx)\nmovq -88(%rbp),%rdx\ntestq %rax,%rax\njs .L29\ncmpq %rdx,%rax\njl .L41\n.L29:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -96(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE21:\njmp .L1\n.L22:\n.LBE20:\n.LBE19:\n.LBE18:\n.LBB22:\naddq $1,-32(%rbp)\n.L17:\n.LBE22:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L46\n.L12:\n.LBE16:\n.LBE15:\n.LBE14:\n.LBE13:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\njmp .L1\n.L43:\n.LBB23:\n.LBB3:\nnop\n.L1:\n.LBE3:\n.LBE23:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "var i int\nlength := len(nums)\nif length <= 1 {\n\treturn\n}\nfor i = length - 1; i >= 1; i-- {\n\tif nums[i] > nums[i-1] {\n\t\tbreak\n\t}\n}\nif i > 0 {\n\tsort.Ints(nums[i:])\n\tfor j := i - 1; j < length; j++ {\n\t\tif nums[j] > nums[i-1] {\n\t\t\tnums[i-1], nums[j] = nums[j], nums[i-1]\n\t\t\treturn\n\t\t}\n\t}\n}\nsort.Ints(nums)"}
{"src": "cmpq %fs:112,%rsp\njnb .L108\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL24:\nret\n.L108:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq $0,-8(%rbp)\n.LBB32:\n.LBB33:\ncmpq $0,-24(%rbp)\njne .L106\ncall <runtime.panicmem@PLT>\n.L106:\nmovq -24(%rbp),%rax\nmovq %rax,%rdi\ncall <go.volatile.LoadUint64@PLT>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE33:\n.LBE32:\nleave\nret", "tgt": "return LoadUint64(&r.Reg)"}
{"src": ".LFB1:\nleaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L45\nmovl $520,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L45:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nmovq %rdi,-472(%rbp)\nmovq $1,-384(%rbp)\nleaq <.LC9>(%rip),%r8\nmovl $1,%r9d\nmovq %r8,-376(%rbp)\nmovq %r9,-368(%rbp)\nmovq $28,-360(%rbp)\nleaq <.LC10>(%rip),%rcx\nmovl $2,%ebx\nmovq %rcx,-352(%rbp)\nmovq %rbx,-344(%rbp)\nmovq $701,-336(%rbp)\nleaq <.LC11>(%rip),%rax\nmovl $2,%edx\nmovq %rax,-328(%rbp)\nmovq %rdx,-320(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq $3,-408(%rbp)\nmovq $3,-400(%rbp)\n.LBB17:\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\n.LBB18:\n.LBB19:\n.LBB20:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovl $0,%ebx\n.LBE20:\njmp .L29\n.L44:\n.LBB21:\nnop\n.LBE21:\n.LBB22:\n.LBB23:\nmovq -264(%rbp),%rax\ntestq %rbx,%rbx\njs .L30\ncmpq %rax,%rbx\njge .L30\nmovq -272(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-288(%rbp)\n.LBE23:\n.LBB24:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-432(%rbp)\n.LBE24:\n.LBB25:\nmovq -448(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.convertToTitle>\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\n.LBB26:\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq -456(%rbp),%rcx\nmovq %rdx,%rsi\ncmpq %rsi,%rcx\njne .L31\njmp .L42\n.L30:\n.LBE26:\n.LBE25:\n.LBB35:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\n.LBE35:\n.LBB36:\n.LBB34:\nmovq -464(%rbp),%rcx\nmovq %rax,%rsi\ncmpq %rsi,%rcx\nje .L33\nmovq %rdx,%rcx\nmovq %rcx,%rsi\nmovq %rax,%rcx\nmovq -464(%rbp),%rax\nmovq %rsi,%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L33\n.L31:\n.LBB27:\nleaq <int..d>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-208(%rbp)\nmovq -208(%rbp),%rax\nmovq -448(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -208(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L34\n.LBB28:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE28:\njmp .L35\n.L34:\n.LBB29:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L35:\n.LBE29:\nmovq -200(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <string..d>(%rip),%r14\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L36\n.LBB30:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE30:\njmp .L37\n.L36:\n.LBB31:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L37:\n.LBE31:\nmovq -168(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -512(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -496(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L38\n.LBB32:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE32:\njmp .L39\n.L38:\n.LBB33:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L39:\n.LBE33:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC12>(%rip),%r12\nmovl $37,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -472(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L33:\n.LBE27:\n.LBE34:\n.LBE36:\n.LBE22:\n.LBB37:\naddq $1,%rbx\n.L29:\n.LBE37:\ncmpq -480(%rbp),%rbx\njl .L44\n.LBE19:\n.LBE18:\n.LBE17:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var tests = []struct {\n\tnumber int\n\ttitle  string\n}{\n\t{1, \"STR\"},\n\t{28, \"STR\"},\n\t{701, \"STR\"},\n}\nfor _, tt := range tests {\n\ttitle := convertToTitle(tt.number)\n\tif title != tt.title {\n\t\tt.Errorf(\"STR\", tt.number, title, tt.title)\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L67\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L67:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $176,%rsp\nmovq %rdi,-184(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\n.LBB46:\nmovq $0,-24(%rbp)\n.LBB47:\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-128(%rbp)\n.LBB48:\n.LBB49:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r12\nmovl $0,%ebx\n.LBE49:\njmp .L54\n.L66:\n.LBB50:\nnop\n.LBE50:\n.LBB51:\nmovq %rbx,-24(%rbp)\n.LBB52:\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L55\ncmpq %rax,-24(%rbp)\njl .L63\n.L55:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\nmovq -184(%rbp),%rax\nmovq <24>(%rax),%rsi\nmovq -80(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $5,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7uint32>(%rip),%rdi\ncall <runtime.mapdelete_faststr@PLT>\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-32(%rbp)\nmovq -40(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L57\ncmpq %rax,-24(%rbp)\njge .L57\nmovq -48(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $5,%rax\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L58\njmp .L64\n.L57:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\n.LBB53:\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\njmp .L60\n.L64:\n.LBE53:\n.LBB54:\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.spacesaving..go.spacesaving.countBucket..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L60:\n.LBE54:\n.LBE52:\n.LBE51:\n.LBB55:\naddq $1,%rbx\n.L54:\n.LBE55:\ncmpq %r12,%rbx\njl .L66\n.LBE48:\n.LBE47:\n.LBE46:\naddq $176,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "empty := countBucket{}\nfor i, _ := range ss.olist {\n\tdelete(ss.hash, ss.olist[i].key)\n\tss.olist[i] = empty\n}"}
{"src": ".LFB3:\nleaq -712(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L58\nmovl $712,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L58:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $664,%rsp\nmovq %rdi,-632(%rbp)\nmovq -632(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB23:\nleaq -624(%rbp),%rdx\nmovl $0,%eax\nmovl $11,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB24:\n.LBB25:\n.LBB26:\nmovq <go.day328.testcases>(%rip),%rax\nmovq <8+go.day328.testcases>(%rip),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq <16+go.day328.testcases>(%rip),%rax\nmovq %rax,-384(%rbp)\nmovq -392(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovl $0,%r12d\n.LBE26:\njmp .L30\n.L57:\n.LBB27:\nnop\n.LBE27:\n.LBB28:\n.LBB29:\nmovq -392(%rbp),%rax\ntestq %r12,%r12\njs .L31\ncmpq %rax,%r12\njge .L31\nmovq -400(%rbp),%rcx\nmovq %r12,%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <48>(%rcx),%rax\nmovq <56>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq <64>(%rcx),%rax\nmovq <72>(%rcx),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq <80>(%rcx),%rax\nmovq %rax,-416(%rbp)\n.LBE29:\n.LBB30:\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-544(%rbp)\n.LBE30:\n.LBB31:\nmovq -600(%rbp),%rdx\nleaq -528(%rbp),%rax\npushq -576(%rbp)\npushq -584(%rbp)\npushq -592(%rbp)\npushq -608(%rbp)\npushq -616(%rbp)\npushq -624(%rbp)\nmovq %rdx,%xmm0\nmovq %rax,%rdi\ncall <go.day328.EloGames>\naddq $48,%rsp\n.LBB32:\nmovq $0,-56(%rbp)\n.LBB33:\n.LBB34:\n.LBB35:\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%r13\nmovl $0,%ebx\n.LBE35:\njmp .L32\n.L31:\n.LBE34:\n.LBE33:\n.LBE32:\n.LBE31:\n.LBB55:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L56:\n.LBE55:\n.LBB56:\n.LBB42:\n.LBB41:\n.LBB40:\n.LBB36:\nnop\n.LBE36:\n.LBB37:\nmovq %rbx,-56(%rbp)\n.LBB38:\nmovq -520(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L33\ncmpq %rdx,-56(%rbp)\njl .L52\n.L33:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L52:\nmovq -528(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovsd (%rax),%xmm1\nmovsd -544(%rbp),%xmm0\nmulsd %xmm0,%xmm1\nmovq %xmm1,%rax\nmovq %rax,%xmm0\ncall <math.Round@PLT>\nmovq %xmm0,%rcx\nmovq -520(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L35\ncmpq %rdx,-56(%rbp)\njl .L53\n.L35:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L53:\nmovsd -544(%rbp),%xmm1\nmovq -528(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rcx,%xmm0\ndivsd %xmm1,%xmm0\nmovsd %xmm0,(%rax)\n.LBE38:\n.LBE37:\n.LBB39:\naddq $1,%rbx\n.L32:\n.LBE39:\ncmpq %r13,%rbx\njl .L56\n.LBE40:\n.LBE41:\n.LBE42:\n.LBB43:\nleaq <type...6.7float64>(%rip),%rax\nmovq %rax,-672(%rbp)\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L39\n.LBB44:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE44:\njmp .L40\n.L39:\n.LBB45:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L40:\n.LBE45:\nmovq -216(%rbp),%rax\nmovq %rax,-664(%rbp)\nleaq <type...6.7float64>(%rip),%rax\nmovq %rax,-656(%rbp)\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -568(%rbp),%rax\nmovq -560(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -552(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L41\n.LBB46:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE46:\njmp .L42\n.L41:\n.LBB47:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L42:\n.LBE47:\nmovq -248(%rbp),%rax\nmovq %rax,-648(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -672(%rbp),%rdx\nmovq -664(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L43\n.LBB48:\nleaq <type...6.7float64>(%rip),%rax\nmovq %rax,-704(%rbp)\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -568(%rbp),%rax\nmovq -560(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -552(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L44\n.LBB49:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE49:\njmp .L45\n.L44:\n.LBB50:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L45:\n.LBE50:\nmovq -184(%rbp),%rax\nmovq %rax,-696(%rbp)\nleaq <type...6.7float64>(%rip),%rax\nmovq %rax,-688(%rbp)\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L46\n.LBB51:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE51:\njmp .L47\n.L46:\n.LBB52:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7float64>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L47:\n.LBE52:\nmovq -152(%rbp),%rax\nmovq %rax,-680(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -704(%rbp),%xmm2\nmovups %xmm2,-112(%rbp)\nmovdqa -688(%rbp),%xmm3\nmovups %xmm3,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L48\n.LBB53:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE53:\njmp .L49\n.L48:\n.LBB54:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L49:\n.LBE54:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC19>(%rip),%r14\nmovl $19,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -632(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L43:\n.LBE48:\n.LBE43:\n.LBE56:\n.LBE28:\n.LBB57:\naddq $1,%r12\n.L30:\n.LBE57:\ncmpq -640(%rbp),%r12\njl .L57\n.LBE25:\n.LBE24:\n.LBE23:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tresult := EloGames(tc.scores, tc.kFactor, tc.matches)\n\tfor i := range result {\n\t\tresult[i] = math.Round(result[i]*tc.tolerance) / tc.tolerance\n\t}\n\tif !reflect.DeepEqual(tc.expected, result) {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L636\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL67:\nret\n.L636:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq %rdi,-8(%rbp)\nmovq %rsi,-16(%rbp)\ncmpq $0,-8(%rbp)\njne .L635\ncall <runtime.panicmem@PLT>\n.L635:\nmovq -8(%rbp),%rax\nleaq <8>(%rax),%rdx\nmovq -16(%rbp),%rcx\nmovq -8(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.heap.fibHeapElementList.insert>\nleave\nret", "tgt": "l.insert(e, &l.root)"}
{"src": ".LFB6:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-40(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,%rdi\ncall <go.leetcode.height>\nmovq %rax,-8(%rbp)\n.LBB6:\nmovq -40(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,%rdi\ncall <go.leetcode.height>\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\ncmpq -8(%rbp),%rax\njle .L4\n.LBB7:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\n.L4:\n.LBE7:\n.LBE6:\n.LBB8:\nmovq -8(%rbp),%rax\naddq $1,%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.L3:\n.LBE8:\n.LBE2:\nleave\nret", "tgt": "if root == nil {\n\treturn 0\n}\nmax := height(root.Left)\nif h := height(root.Right); h > max {\n\tmax = h\n}\nreturn max + 1"}
{"src": ".LFB0:\nleaq -872(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $872,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $824,%rsp\nmovq %rdi,-808(%rbp)\nmovq $3,-592(%rbp)\nmovq $3,-584(%rbp)\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-664(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-656(%rbp)\nmovq -656(%rbp),%rax\nmovq $2,(%rax)\nmovq $2,<8>(%rax)\nmovq -656(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq $2,-632(%rbp)\nmovq $2,-624(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq $3,(%rax)\nmovq $3,<8>(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq $2,-608(%rbp)\nmovq $2,-600(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -664(%rbp),%rax\nmovq -640(%rbp),%rcx\nmovq -632(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -624(%rbp),%rcx\nmovq -616(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -608(%rbp),%rcx\nmovq -600(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -664(%rbp),%rax\nleaq -640(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -664(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq $2,-568(%rbp)\nmovq $2,-560(%rbp)\nmovq $4,-552(%rbp)\nleaq -592(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $1,-680(%rbp)\nmovq $1,-672(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-832(%rbp)\nmovq $69,-824(%rbp)\nleaq -208(%rbp),%rax\nmovq -832(%rbp),%rcx\nmovq -824(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB4:\nmovq $0,-752(%rbp)\nmovq $0,-744(%rbp)\nmovq $0,-736(%rbp)\nmovq $0,-728(%rbp)\nmovq $0,-720(%rbp)\nmovq $0,-712(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,-832(%rbp)\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L13:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -456(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -464(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-512(%rbp)\nmovq %rdi,-504(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-496(%rbp)\nmovq %rdi,-488(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBE10:\n.LBB11:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\n.LBE11:\n.LBB12:\nmovq -712(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovq -720(%rbp),%rax\nmovq %rax,-768(%rbp)\nmovq -792(%rbp),%rdx\nmovq -800(%rbp),%rax\nsubq $8,%rsp\npushq -768(%rbp)\npushq -776(%rbp)\npushq -784(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.maxCount>\naddq $32,%rsp\nmovq %rax,-816(%rbp)\nleaq <go.leetcode..go.leetcode.para598..d>(%rip),%rax\nmovq %rax,-864(%rbp)\nleaq <go.leetcode..go.leetcode.para598..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -784(%rbp),%rax\nmovq -776(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -768(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L6\njmp .L11\n.L5:\n.LBE12:\n.LBB15:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE15:\n.LBB16:\n.LBB13:\nmovq -360(%rbp),%rax\nmovq -352(%rbp),%rsi\nmovq -344(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -336(%rbp),%rsi\nmovq -328(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -320(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.LBE13:\njmp .L8\n.L11:\n.LBB14:\nmovq -360(%rbp),%rax\nleaq -352(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para598..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE14:\nmovq -360(%rbp),%rax\nmovq %rax,-856(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-848(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -816(%rbp),%rdi\nmovq %rdi,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-840(%rbp)\nmovdqa -864(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -848(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC21>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE16:\n.LBE9:\n.LBB17:\naddq $1,%rbx\n.L4:\n.LBE17:\ncmpq -832(%rbp),%rbx\njl .L13\n.LBE6:\n.LBE5:\n.LBE4:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC22>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question598{\n\t{\n\t\tpara598{3, 3, [][]int{{2, 2}, {3, 3}}},\n\t\tans598{4},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans598, q.para598\n\tfmt.Printf(\"STR\", p, maxCount(p.m, p.n, p.ops))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB1:\nleaq -984(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L36\nmovl $984,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L36:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $936,%rsp\nmovq %rdi,-872(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-744(%rbp)\nmovq -744(%rbp),%rax\nmovq $2,(%rax)\nmovq $7,<8>(%rax)\nmovq $11,<16>(%rax)\nmovq $15,<24>(%rax)\nmovq -744(%rbp),%rax\nmovq %rax,-704(%rbp)\nmovq $4,-696(%rbp)\nmovq $4,-688(%rbp)\nmovq $9,-680(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-736(%rbp)\nmovq -736(%rbp),%rax\nmovq $0,(%rax)\nmovq $1,<8>(%rax)\nmovq -736(%rbp),%rax\nmovq %rax,-672(%rbp)\nmovq $2,-664(%rbp)\nmovq $2,-656(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-728(%rbp)\nmovq -728(%rbp),%rax\nmovq $2,(%rax)\nmovq $3,<8>(%rax)\nmovq $4,<16>(%rax)\nmovq $6,<24>(%rax)\nmovq -728(%rbp),%rax\nmovq %rax,-648(%rbp)\nmovq $4,-640(%rbp)\nmovq $4,-632(%rbp)\nmovq $6,-624(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-720(%rbp)\nmovq -720(%rbp),%rax\nmovq $0,(%rax)\nmovq $2,<8>(%rax)\nmovq -720(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq $2,-608(%rbp)\nmovq $2,-600(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-712(%rbp)\nmovq -712(%rbp),%rax\nmovq $2,(%rax)\nmovq $3,<8>(%rax)\nmovq $4,<16>(%rax)\nmovq $7,<24>(%rax)\nmovq -712(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $4,-584(%rbp)\nmovq $4,-576(%rbp)\nmovq $8,-568(%rbp)\nmovq $0,-560(%rbp)\nmovq $0,-552(%rbp)\nmovq $0,-544(%rbp)\nmovq $0,-536(%rbp)\nmovq $0,-528(%rbp)\nmovq $0,-520(%rbp)\nmovq $8,-512(%rbp)\nmovq $0,-504(%rbp)\nmovq $0,-496(%rbp)\nmovq $0,-488(%rbp)\nleaq -704(%rbp),%rax\nmovq %rax,-768(%rbp)\nmovq $4,-760(%rbp)\nmovq $4,-752(%rbp)\n.LBB22:\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\nmovq $0,-840(%rbp)\nmovq $0,-832(%rbp)\nmovq $0,-824(%rbp)\nmovq $0,-816(%rbp)\n.LBB23:\n.LBB24:\n.LBB25:\nmovq -768(%rbp),%rax\nmovq -760(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -752(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq -408(%rbp),%r13\nmovl $0,%r12d\n.LBE25:\njmp .L15\n.L35:\n.LBB26:\nnop\n.LBE26:\n.LBB27:\n.LBB28:\nmovq -408(%rbp),%rax\ntestq %r12,%r12\njs .L16\ncmpq %rax,%r12\njge .L16\nmovq -416(%rbp),%rcx\nmovq %r12,%rdx\nmovq %rdx,%rax\nsalq $3,%rax\nsubq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq <48>(%rcx),%rax\nmovq %rax,-432(%rbp)\n.LBE28:\n.LBB29:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -432(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,-816(%rbp)\n.LBE29:\n.LBB30:\nmovq -840(%rbp),%rdx\nleaq -800(%rbp),%rax\nsubq $8,%rsp\npushq -848(%rbp)\npushq -856(%rbp)\npushq -864(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.twoSum>\naddq $32,%rsp\n.LBB31:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-912(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -816(%rbp),%rax\nmovq %rax,-272(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L17\njmp .L33\n.L16:\n.LBE31:\n.LBE30:\n.LBB46:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\n.LBE46:\n.LBB47:\n.LBB45:\n.LBB32:\nmovq -296(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE32:\njmp .L19\n.L33:\n.LBB33:\nmovq -296(%rbp),%rcx\nleaq -288(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L19:\n.LBE33:\nmovq -296(%rbp),%rax\nmovq %rax,-904(%rbp)\nleaq <type...6.7int>(%rip),%r14\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-304(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L20\n.LBB34:\nmovq -328(%rbp),%rcx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -304(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE34:\njmp .L21\n.L20:\n.LBB35:\nmovq -328(%rbp),%rcx\nleaq -320(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L21:\n.LBE35:\nmovq -328(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -912(%rbp),%rdx\nmovq -904(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L22\n.LBB36:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-976(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-240(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L23\n.LBB37:\nmovq -264(%rbp),%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -240(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE37:\njmp .L24\n.L23:\n.LBB38:\nmovq -264(%rbp),%rcx\nleaq -256(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L24:\n.LBE38:\nmovq -264(%rbp),%rax\nmovq %rax,-968(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-960(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-224(%rbp)\nmovq -224(%rbp),%rdx\nmovq -840(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -224(%rbp),%rax\nmovq %rax,-952(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-944(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L25\n.LBB39:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE39:\njmp .L26\n.L25:\n.LBB40:\nmovq -216(%rbp),%rcx\nleaq -208(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L26:\n.LBE40:\nmovq -216(%rbp),%rax\nmovq %rax,-936(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-928(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -816(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L27\n.LBB41:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE41:\njmp .L28\n.L27:\n.LBB42:\nmovq -184(%rbp),%rcx\nleaq -176(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L28:\n.LBE42:\nmovq -184(%rbp),%rax\nmovq %rax,-920(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -976(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovdqa -960(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nmovdqa -944(%rbp),%xmm2\nmovups %xmm2,-112(%rbp)\nmovdqa -928(%rbp),%xmm3\nmovups %xmm3,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L29\n.LBB43:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\n.LBE43:\njmp .L30\n.L29:\n.LBB44:\nmovq -152(%rbp),%rcx\nleaq -144(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L30:\n.LBE44:\nmovq -152(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $4,-72(%rbp)\nmovq $4,-64(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-896(%rbp)\nmovq $33,-888(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -872(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L22:\n.LBE36:\n.LBE45:\n.LBE47:\n.LBE27:\n.LBB48:\naddq $1,%r12\n.L15:\n.LBE48:\ncmpq %r13,%r12\njl .L35\n.LBE24:\n.LBE23:\n.LBE22:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var tests = []struct {\n\tnums    []int\n\ttarget  int\n\tindices []int\n}{\n\t{[]int{2, 7, 11, 15}, 9, []int{0, 1}},\n\t{[]int{2, 3, 4, 6}, 6, []int{0, 2}},\n\t{[]int{2, 3, 4, 7}, 8, nil},\n\t{nil, 8, nil},\n}\nfor _, tt := range tests {\n\tindices := twoSum(tt.nums, tt.target)\n\tif reflect.DeepEqual(indices, tt.indices) == false {\n\t\tt.Errorf(\"STR\", tt.nums, tt.target, indices, tt.indices)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L17\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L17:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\n.LBB3:\nmovq -24(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode0279.isSquare>\ntestb %al,%al\nje .L4\n.LBB4:\n.LBB5:\nmovq $1,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L3\n.L15:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\n.LBB7:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -24(%rbp),%rax\nleaq <3>(%rax),%rdx\ntestq %rax,%rax\ncmovs %rdx,%rax\nsarq $2,%rax\nmovq %rax,-24(%rbp)\n.L4:\n.LBE9:\nmovq -24(%rbp),%rax\nandl $3,%eax\ntestq %rax,%rax\nje .L15\n.LBE7:\n.LBE6:\n.LBB10:\nmovq -24(%rbp),%rax\ncqto\nshrq $61,%rdx\naddq %rdx,%rax\nandl $7,%eax\nsubq %rdx,%rax\ncmpq $7,%rax\njne .L7\n.LBB11:\n.LBB12:\nmovq $4,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L3\n.L7:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB13:\nmovq $1,-8(%rbp)\n.LBB14:\njmp .L8\n.L16:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\n.LBB17:\nmovq -8(%rbp),%rax\nimulq %rax,%rax\nmovq %rax,%rdx\nmovq -24(%rbp),%rax\nsubq %rdx,%rax\nmovq %rax,%rdi\ncall <go.leetcode0279.isSquare>\ntestb %al,%al\nje .L9\n.LBB18:\n.LBB19:\nmovq $2,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L3\n.L9:\n.LBE19:\n.LBE18:\n.LBE17:\n.LBE16:\n.LBB20:\naddq $1,-8(%rbp)\n.L8:\n.LBE20:\nmovq -24(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode0279.mySqrt>\ncmpq %rax,-8(%rbp)\njle .L16\n.LBE14:\n.LBE13:\n.LBB21:\nmovq $3,-16(%rbp)\nmovq -16(%rbp),%rax\n.L3:\n.LBE21:\n.LBE2:\nleave\nret", "tgt": "if isSquare(n) {\n\treturn 1\n}\nfor n%4 == 0 {\n\tn /= 4\n}\nif n%8 == 7 {\n\treturn 4\n}\nfor i := 1; i <= mySqrt(n); i++ {\n\tif isSquare(n - i*i) {\n\t\treturn 2\n\t}\n}\nreturn 3"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L34\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L34:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-168(%rbp)\nmovq $0,-32(%rbp)\n.LBB2:\n.LBB3:\ncmpq $2,-168(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovq -168(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L26\n.L2:\n.LBE5:\n.LBE4:\n.LBB6:\n.LBB7:\ncmpq $3,-168(%rbp)\njne .L4\n.LBB8:\n.LBB9:\nmovq $5,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L26\n.L4:\n.LBE9:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBE3:\nmovq $1000000007,-40(%rbp)\nmovq -168(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-160(%rbp)\nmovq %rbx,-152(%rbp)\nmovq %rbx,-144(%rbp)\n.LBB10:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovl $1,%esi\nmovl $2,%ecx\nmovl $5,%edx\nmovq -120(%rbp),%rax\ncmpq $1,%rax\njg .L5\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L5:\nmovq -128(%rbp),%rax\naddq $8,%rax\nmovq %rsi,(%rax)\nmovq -88(%rbp),%rax\ncmpq $2,%rax\njg .L6\nmovq %rax,%rsi\nmovl $2,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6:\nmovq -96(%rbp),%rax\naddq $16,%rax\nmovq %rcx,(%rax)\nmovq -56(%rbp),%rax\ncmpq $3,%rax\njg .L7\nmovq %rax,%rsi\nmovl $3,%edi\ncall <runtime.goPanicIndex@PLT>\n.L7:\nmovq -64(%rbp),%rax\naddq $24,%rax\nmovq %rdx,(%rax)\n.LBE10:\n.LBB11:\nmovq $4,-24(%rbp)\n.LBB12:\njmp .L8\n.L33:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\nmovq -152(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L9\ncmpq %rax,-24(%rbp)\njl .L27\n.L9:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq -24(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -152(%rbp),%rax\ntestq %rdx,%rdx\njs .L11\ncmpq %rax,%rdx\njl .L28\n.L11:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq -24(%rbp),%rax\nsubq $3,%rax\nmovq -152(%rbp),%rcx\ntestq %rax,%rax\njs .L13\ncmpq %rcx,%rax\njl .L29\n.L13:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq -160(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nleaq (%rdx,%rdx),%rsi\nmovq -160(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -160(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\naddq %rsi,%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L15\ncmpq %rax,-24(%rbp)\njge .L15\nmovq -152(%rbp),%rax\ncmpq $0,-24(%rbp)\njns .L16\njmp .L17\n.L15:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\ncmpq %rax,-24(%rbp)\njl .L30\n.L17:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq -160(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq $-1,-40(%rbp)\njne .L19\nmovl $0,%edx\njmp .L20\n.L19:\ncmpq $0,-40(%rbp)\njne .L21\ncall <runtime.panicdivide@PLT>\n.L21:\ncqto\nidivq -40(%rbp)\n.L20:\nmovq -160(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rdx,(%rax)\n.LBE14:\n.LBB15:\naddq $1,-24(%rbp)\n.L8:\n.LBE15:\nmovq -24(%rbp),%rax\ncmpq -168(%rbp),%rax\njle .L33\n.LBE12:\n.LBE11:\n.LBB16:\nmovq -152(%rbp),%rax\ncmpq $0,-168(%rbp)\njs .L24\ncmpq %rax,-168(%rbp)\njl .L32\n.L24:\nmovq -168(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq -160(%rbp),%rdx\nmovq -168(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.L26:\n.LBE16:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if N < 3 {\n\treturn N\n} else if N == 3 {\n\treturn 5\n}\nmod := 1000000007\ndp := make([]int, N+1)\ndp[1], dp[2], dp[3] = 1, 2, 5\nfor i := 4; i <= N; i++ {\n\tdp[i] = 2*dp[i-1] + dp[i-3]\n\tdp[i] %= mod\n}\nreturn dp[N]"}
{"src": ".LFB0:\nleaq -264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L39\nmovl $264,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $216,%rsp\nmovq %rdi,%rcx\nmovq %rsi,%rax\nmovq %rax,%rbx\nmovq %rcx,-224(%rbp)\nmovq %rbx,-216(%rbp)\nmovq %rdx,-232(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\n.LBB2:\nleaq <type...60x.7uint8>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq $0,-176(%rbp)\n.LBB3:\nmovq $0,-56(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -216(%rbp),%rax\nmovq %rax,-248(%rbp)\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L38:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -224(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L31\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\nleaq <1>(%rbx),%rax\nmovq %rax,-240(%rbp)\n.LBE10:\njmp .L6\n.L31:\n.LBB11:\nmovq -224(%rbp),%rcx\nmovq -216(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rdx,-240(%rbp)\n.L6:\n.LBE11:\n.LBE9:\nmovq %rbx,-56(%rbp)\n.LBB12:\nmovq -216(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L7\ncmpq %rax,-56(%rbp)\njge .L7\nmovq -224(%rbp),%rdx\nmovq -56(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovb %al,-57(%rbp)\n.LBB13:\n.LBB14:\njmp .L8\n.L7:\n.LBE14:\n.LBE13:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\n.LBB22:\n.LBB21:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\nmovq -184(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -176(%rbp),%rax\ntestq %rdi,%rdi\njs .L9\ncmpq %rax,%rdi\njg .L9\ntestq %rdi,%rdi\njns .L10\njmp .L32\n.L9:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L32:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L10:\nmovq -192(%rbp),%rdx\nmovq -176(%rbp),%rax\nmovq %rdx,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq %rax,-176(%rbp)\nsubq $1,-232(%rbp)\n.L8:\n.LBE16:\n.LBB17:\n.LBB18:\ncmpq $0,-232(%rbp)\nsetg %al\ntestb %al,%al\nje .L12\n.LBB19:\nmovq -184(%rbp),%rax\ntestq %rax,%rax\nsetg %al\n.L12:\n.LBE19:\n.LBE18:\ntestb %al,%al\nje .L13\n.LBB20:\nmovq -184(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L14\ncmpq %rdx,%rax\njl .L33\n.L14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq -192(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb %al,-57(%rbp)\nsetb %al\n.L13:\n.LBE20:\n.LBE17:\ntestb %al,%al\njne .L37\n.LBE21:\n.LBE22:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L18\n.LBB23:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <uint8..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-176(%rbp)\n.LBE23:\njmp .L19\n.L18:\n.LBB24:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-192(%rbp)\nmovq %rax,-184(%rbp)\nmovq %rdx,-176(%rbp)\n.L19:\n.LBE24:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\naddq %rax,%rdx\nmovzbl -57(%rbp),%eax\nmovb %al,(%rdx)\n.LBE12:\n.LBE8:\n.LBB25:\nmovq -240(%rbp),%rbx\n.L2:\n.LBE25:\ncmpq -248(%rbp),%rbx\njl .L38\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -184(%rbp),%rax\nsubq -232(%rbp),%rax\nmovq %rax,%rdi\nmovq -176(%rbp),%rax\ntestq %rdi,%rdi\njs .L22\ncmpq %rax,%rdi\njg .L22\ntestq %rdi,%rdi\njns .L23\njmp .L36\n.L22:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L36:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L23:\nmovq -192(%rbp),%rdx\nmovq -176(%rbp),%rax\nmovq %rdx,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq %rax,-176(%rbp)\nleaq <.LC6>(%rip),%r12\nmovl $1,%r13d\nsubq $8,%rsp\npushq -176(%rbp)\npushq -184(%rbp)\npushq -192(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %r12,%rdx\nmovq %r13,%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <strings.TrimLeft@PLT>\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\n.LBB26:\nmovq -200(%rbp),%rax\ntestq %rax,%rax\njne .L25\nmovq -208(%rbp),%rax\nleaq <.LC7>(%rip),%rdx\ncmpq %rdx,%rax\njne .L26\nmovl $1,%eax\njmp .L28\n.L26:\nmovl $1,%eax\njmp .L28\n.L25:\nmovl $0,%eax\n.L28:\ntestb %al,%al\nje .L29\n.LBB27:\nleaq <.LC6>(%rip),%r14\nmovl $1,%r15d\nmovq %r14,-208(%rbp)\nmovq %r15,-200(%rbp)\n.L29:\n.LBE27:\n.LBE26:\n.LBB28:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\n.LBE28:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "stack := []byte{}\nfor i := range num {\n\tdigit := num[i]\n\tfor k > 0 && len(stack) > 0 && digit < stack[len(stack)-1] {\n\t\tstack = stack[:len(stack)-1]\n\t\tk--\n\t}\n\tstack = append(stack, digit)\n}\nstack = stack[:len(stack)-k]\nans := strings.TrimLeft(string(stack), \"STR\")\nif ans == \"STR\" {\n\tans = \"STR\"\n}\nreturn ans"}
{"src": "cmpq %fs:112,%rsp\njnb .L76\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL6:\nret\n.L76:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $56,%rsp\nmovq %rdi,-88(%rbp)\nmovq %rsi,-96(%rbp)\n.LBB52:\nmovq -96(%rbp),%rcx\nmovq <16>(%rcx),%rcx\ncmpq $0,-88(%rbp)\njne .L65\ncall <runtime.panicmem@PLT>\n.L65:\nmovq -88(%rbp),%rsi\naddq $88,%rsi\ncmpq %rsi,%rcx\nje .L66\n.LBB53:\nleaq <string..d>(%rip),%rax\nleaq <go..C362>(%rip),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L66:\n.LBE53:\n.LBE52:\n.LBB54:\ncmpq $0,-96(%rbp)\njne .L67\ncall <runtime.panicmem@PLT>\n.L67:\nmovq -96(%rbp),%rcx\nmovq <72>(%rcx),%rax\nmovq <80>(%rcx),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <88>(%rcx),%rax\nmovq %rax,-64(%rbp)\nleaq -80(%rbp),%rax\nmovq %rax,%rdi\ncall <time.Time.IsZero@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L68\n.LBB55:\nleaq <type...1go.lrucache.entry>(%rip),%r14\nmovq -96(%rbp),%r15\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.lrucache.priorityQueue>(%rip),%r12\ncmpq $0,-88(%rbp)\njne .L69\ncall <runtime.panicmem@PLT>\n.L69:\nmovq -88(%rbp),%rax\naddq $16,%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %r14,%rdx\nmovq %r15,%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\n.L68:\n.LBE55:\n.LBE54:\ncmpq $0,-96(%rbp)\njne .L70\ncall <runtime.panicmem@PLT>\n.L70:\nmovq -96(%rbp),%rax\nmovq %rax,%rdx\ncmpq $0,-88(%rbp)\njne .L71\ncall <runtime.panicmem@PLT>\n.L71:\nmovq -88(%rbp),%rax\naddq $88,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.lrucache.list.Remove>\ncmpq $0,-96(%rbp)\njne .L72\ncall <runtime.panicmem@PLT>\n.L72:\nmovq -96(%rbp),%rax\nmovq %rax,%rdx\ncmpq $0,-88(%rbp)\njne .L73\ncall <runtime.panicmem@PLT>\n.L73:\nmovq -88(%rbp),%rax\naddq $40,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.lrucache.list.PushElementFront>\n.LBB56:\nmovq -88(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq <48>(%rax),%rdx\nmovq <40>(%rax),%rax\nmovq -96(%rbp),%rbx\nmovq <8>(%rcx),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7.1go.lrucache.entry>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L74\n.LBB57:\nmovq %rbx,(%rax)\n.LBE57:\njmp .L64\n.L74:\n.LBB58:\nmovq %rbx,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L64:\n.LBE58:\n.LBE56:\naddq $56,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "if e.element.list != &b.freeList {\n\tpanic(\"STR\")\n}\nif !e.expire.IsZero() {\n\theap.Push(&b.priorityQueue, e)\n}\nb.freeList.Remove(&e.element)\nb.lruList.PushElementFront(&e.element)\nb.table[e.key] = e"}
{"src": ".LFB20:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L360\nmovl $312,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL27:\nret\n.L360:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $296,%rsp\nmovq %rdi,-296(%rbp)\nmovq $0,-32(%rbp)\n.LBB317:\nmovq -296(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-224(%rbp)\nmovq %rbx,-216(%rbp)\nmovq %rbx,-208(%rbp)\nmovq -296(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-256(%rbp)\nmovq %rbx,-248(%rbp)\nmovq %rbx,-240(%rbp)\n.LBB318:\nmovq $0,-288(%rbp)\nmovq $0,-280(%rbp)\nmovq $0,-272(%rbp)\n.LBB319:\n.LBB320:\n.LBB321:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rdi\nmovl $0,%eax\n.LBE321:\njmp .L321\n.L358:\n.LBB322:\nnop\n.LBE322:\n.LBB323:\n.LBB324:\nmovq -152(%rbp),%rdx\ntestq %rax,%rax\njs .L322\ncmpq %rdx,%rax\njge .L322\nmovq -160(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rsi,%rdx\naddq %rdx,%rdx\naddq %rsi,%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\nmovq %rcx,-192(%rbp)\nmovq %rbx,-184(%rbp)\nmovq <16>(%rdx),%rdx\nmovq %rdx,-176(%rbp)\n.LBE324:\n.LBB325:\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq -176(%rbp),%rdx\nmovq %rdx,-112(%rbp)\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rbx\nmovq %rcx,-288(%rbp)\nmovq %rbx,-280(%rbp)\nmovq -112(%rbp),%rdx\nmovq %rdx,-272(%rbp)\n.LBE325:\n.LBB326:\n.LBB327:\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq -272(%rbp),%rdx\nmovq %rdx,-80(%rbp)\nmovq -88(%rbp),%rdx\ntestq %rdx,%rdx\njg .L323\njmp .L349\n.L322:\n.LBE327:\n.LBE326:\n.LBB330:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L349:\n.LBE330:\n.LBB331:\n.LBB328:\nmovq %rdx,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L323:\nmovq -96(%rbp),%rdx\nmovq (%rdx),%rdx\nsubq $1,%rdx\nmovq -248(%rbp),%rcx\ntestq %rdx,%rdx\njs .L325\ncmpq %rcx,%rdx\njl .L350\n.L325:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L350:\nmovq -88(%rbp),%rcx\ntestq %rcx,%rcx\njg .L327\nmovq %rcx,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L327:\nmovq -96(%rbp),%rcx\nmovq (%rcx),%rcx\nsubq $1,%rcx\nmovq -248(%rbp),%rsi\ntestq %rcx,%rcx\njs .L328\ncmpq %rsi,%rcx\njl .L351\n.L328:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L351:\nmovq -256(%rbp),%rsi\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rcx\nmovq -256(%rbp),%rsi\nsalq $3,%rdx\naddq %rsi,%rdx\naddq $1,%rcx\nmovq %rcx,(%rdx)\n.LBE328:\n.LBB329:\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -272(%rbp),%rdx\nmovq %rdx,-48(%rbp)\nmovq -56(%rbp),%rdx\ncmpq $1,%rdx\njg .L330\nmovq %rdx,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L330:\nmovq -64(%rbp),%rdx\naddq $8,%rdx\nmovq (%rdx),%rdx\nsubq $1,%rdx\nmovq -216(%rbp),%rcx\ntestq %rdx,%rdx\njs .L331\ncmpq %rcx,%rdx\njl .L352\n.L331:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L352:\nmovq -56(%rbp),%rcx\ncmpq $1,%rcx\njg .L333\nmovq %rcx,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L333:\nmovq -64(%rbp),%rcx\naddq $8,%rcx\nmovq (%rcx),%rcx\nsubq $1,%rcx\nmovq -216(%rbp),%rsi\ntestq %rcx,%rcx\njs .L334\ncmpq %rsi,%rcx\njl .L353\n.L334:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L353:\nmovq -224(%rbp),%rsi\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rcx\nmovq -224(%rbp),%rsi\nsalq $3,%rdx\naddq %rsi,%rdx\naddq $1,%rcx\nmovq %rcx,(%rdx)\n.LBE329:\n.LBE331:\n.LBE323:\n.LBB332:\naddq $1,%rax\n.L321:\n.LBE332:\ncmpq %rdi,%rax\njl .L358\n.LBE320:\n.LBE319:\n.LBE318:\n.LBB333:\nmovq $0,-24(%rbp)\n.LBB334:\njmp .L338\n.L359:\n.LBB335:\nnop\n.LBE335:\n.LBB336:\n.LBB337:\n.LBB338:\nmovq -216(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L339\ncmpq %rax,-24(%rbp)\njl .L355\n.L339:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L355:\nmovq -224(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -296(%rbp),%rdx\nsubq $1,%rdx\ncmpq %rdx,%rax\nsete %al\ntestb %al,%al\nje .L341\n.LBB339:\nmovq -248(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L342\ncmpq %rax,-24(%rbp)\njl .L356\n.L342:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L356:\nmovq -256(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\nsete %al\n.L341:\n.LBE339:\n.LBE338:\ntestb %al,%al\nje .L344\n.LBB340:\n.LBB341:\nmovq -24(%rbp),%rax\naddq $1,%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L348\n.L344:\n.LBE341:\n.LBE340:\n.LBE337:\n.LBE336:\n.LBB342:\naddq $1,-24(%rbp)\n.L338:\n.LBE342:\nmovq -24(%rbp),%rax\ncmpq -296(%rbp),%rax\njl .L359\n.LBE334:\n.LBE333:\n.LBB343:\nmovq $-1,-32(%rbp)\nmovq -32(%rbp),%rax\n.L348:\n.LBE343:\n.LBE317:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "in := make([]int, N)\nout := make([]int, N)\nfor _, pair := range trust {\n\tout[pair[0]-1]++\n\tin[pair[1]-1]++\n}\nfor i := 0; i < N; i++ {\n\tif in[i] == N-1 && out[i] == 0 {\n\t\treturn i + 1\n\t}\n}\nreturn -1"}
{"src": ".LFB0:\nleaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $456,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $408,%rsp\nmovq %rdi,-408(%rbp)\nleaq <type...64x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $8,-440(%rbp)\nmovdqa -448(%rbp),%xmm0\nmovups %xmm0,-368(%rbp)\nmovq $2,-352(%rbp)\nmovq $1,-344(%rbp)\nmovq %rax,-432(%rbp)\nmovq $8,-424(%rbp)\nmovdqa -432(%rbp),%xmm1\nmovups %xmm1,-336(%rbp)\nmovq $3,-320(%rbp)\nmovq $2,-312(%rbp)\nleaq <.LC21>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-304(%rbp)\nmovq %r15,-296(%rbp)\nmovq $4,-288(%rbp)\nmovq $3,-280(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-272(%rbp)\nmovq %r13,-264(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -376(%rbp),%rax\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -256(%rbp),%rcx\nmovq -248(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -376(%rbp),%rax\nleaq -368(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -376(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $4,-392(%rbp)\nmovq $4,-384(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\n.LBE10:\n.LBB11:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC22>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -408(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $408,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs int\n\texpect int\n}{\n\t{\"STR\", 2, 1},\n\t{\"STR\", 3, 2},\n\t{\"STR\", 4, 3},\n\t{\"STR\", 0, 0},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.inputs)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.inputs)\n\t\t}\n\t})\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L18\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $144,%rsp\nmovq %rdi,-168(%rbp)\nmovq %rsi,-176(%rbp)\ncmpq $0,-176(%rbp)\njne .L14\ncall <runtime.panicmem@PLT>\n.L14:\nmovq -176(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-40(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\n.LBB10:\n.LBB11:\n.LBB12:\nleaq <time.Time..d>(%rip),%r12\nleaq <time.Time..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nleaq -112(%rbp),%rax\nmovq -40(%rbp),%rcx\nmovl $0,%edx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <time.Unix@PLT>\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L15\n.LBB13:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE13:\njmp .L16\n.L15:\n.LBB14:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <time.Time..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L16:\n.LBE14:\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovl $0,%r14d\nmovl $0,%r15d\nmovq %r12,-144(%rbp)\nmovq %r13,-136(%rbp)\nmovq %r14,-160(%rbp)\nmovq %r15,-152(%rbp)\n.LBE12:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -168(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE11:\n.LBE10:\nmovq -168(%rbp),%rax\naddq $144,%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "return xtime.Unix(int64(jt), 0), nil"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L44\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L44:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-48(%rbp)\nmovq %rdi,-40(%rbp)\nmovq %rdx,-64(%rbp)\nmovq %rcx,-56(%rbp)\nmovb $0,-17(%rbp)\n.LBB16:\n.LBB17:\n.LBB18:\nmovq -40(%rbp),%rax\ntestq %rax,%rax\nsete %al\ntestb %al,%al\nje .L14\n.LBB19:\nmovq -56(%rbp),%rax\ntestq %rax,%rax\nsete %al\n.L14:\n.LBE19:\n.LBE18:\ntestb %al,%al\nje .L15\n.LBB20:\n.LBB21:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L16\n.L15:\n.LBE21:\n.LBE20:\n.LBE17:\n.LBB22:\n.LBB23:\n.LBB24:\nmovq -40(%rbp),%rax\ntestq %rax,%rax\nsete %al\ntestb %al,%al\nje .L17\n.LBB25:\nmovq -56(%rbp),%rax\ntestq %rax,%rax\nsetne %al\n.L17:\n.LBE25:\n.LBE24:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L18\n.LBB26:\n.LBB27:\nmovq -40(%rbp),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L18\n.LBB28:\nmovq -56(%rbp),%rax\ntestq %rax,%rax\nsete %al\n.L18:\n.LBE28:\n.LBE27:\n.LBE26:\n.LBE23:\ntestb %al,%al\nje .L20\n.LBB29:\n.LBB30:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L16\n.L20:\n.LBE30:\n.LBE29:\n.LBE22:\nmovq $0,-8(%rbp)\n.LBB31:\nmovq $0,-16(%rbp)\n.LBB32:\njmp .L21\n.L43:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\n.LBB35:\n.LBB36:\nmovq -56(%rbp),%rax\ncmpq %rax,-8(%rbp)\nsetl %al\ntestb %al,%al\nje .L22\n.LBB37:\nmovq -40(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L23\ncmpq %rax,-16(%rbp)\njl .L38\n.L23:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq -56(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L25\ncmpq %rax,-8(%rbp)\njl .L39\n.L25:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -48(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -64(%rbp),%rcx\nmovq -8(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nsete %al\n.L22:\n.LBE37:\n.LBE36:\ntestb %al,%al\nje .L27\n.LBB38:\naddq $1,-8(%rbp)\njmp .L28\n.L27:\n.LBE38:\n.LBB39:\n.LBB40:\n.LBB41:\n.LBB42:\ncmpq $0,-16(%rbp)\nsetg %al\ntestb %al,%al\nje .L29\n.LBB43:\nmovq -56(%rbp),%rax\ncmpq %rax,-8(%rbp)\nsetl %al\n.L29:\n.LBE43:\n.LBE42:\ntestb %al,%al\nje .L30\n.LBB44:\nmovq -16(%rbp),%rax\nsubq $1,%rax\nmovq -40(%rbp),%rdx\ntestq %rax,%rax\njs .L31\ncmpq %rdx,%rax\njl .L40\n.L31:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -56(%rbp),%rdx\ncmpq $0,-8(%rbp)\njs .L33\ncmpq %rdx,-8(%rbp)\njl .L41\n.L33:\nmovq -8(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -48(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -64(%rbp),%rcx\nmovq -8(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nsete %al\n.L30:\n.LBE44:\n.LBE41:\ntestb %al,%al\nje .L35\n.LBB45:\naddq $1,-8(%rbp)\nsubq $1,-16(%rbp)\n.LBE45:\njmp .L28\n.L35:\n.LBB46:\n.LBB47:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L16\n.L28:\n.LBE47:\n.LBE46:\n.LBE40:\n.LBE39:\n.LBE35:\n.LBE34:\n.LBB48:\naddq $1,-16(%rbp)\n.L21:\n.LBE48:\nmovq -40(%rbp),%rax\ncmpq %rax,-16(%rbp)\njl .L43\n.LBE32:\n.LBE31:\n.LBB49:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L16:\n.LBE49:\n.LBE16:\nleave\nret", "tgt": "if len(name) == 0 && len(typed) == 0 {\n\treturn true\n}\nif (len(name) == 0 && len(typed) != 0) || (len(name) != 0 && len(typed) == 0) {\n\treturn false\n}\nj := 0\nfor i := 0; i < len(name); i++ {\n\tif j < len(typed) && name[i] == typed[j] {\n\t\tj++\n\t\tcontinue\n\t} else {\n\t\tif i > 0 && j < len(typed) && name[i-1] == typed[j] {\n\t\t\tj++\n\t\t\ti--\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n}\nreturn true"}
{"src": "cmpq %fs:112,%rsp\njnb .L286\nmovl $72,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL21:\nret\n.L286:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\n.LBB243:\nmovq $0,-8(%rbp)\nmovq $0,-16(%rbp)\nmovq $0,-24(%rbp)\n.LBB244:\nmovq $1,-8(%rbp)\n.LBB245:\njmp .L259\n.L285:\n.LBB246:\nnop\n.LBE246:\n.LBB247:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L260\ncmpq %rax,-8(%rbp)\njl .L277\n.L260:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L277:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-24(%rbp)\n.LBB248:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB249:\njmp .L262\n.L284:\n.LBB250:\nnop\n.LBE250:\n.LBB251:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L263\ncmpq %rax,-16(%rbp)\njl .L278\n.L263:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L278:\nmovq -16(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L265\ncmpq %rdx,%rax\njl .L279\n.L265:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L279:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq <16>(%rbp),%rcx\nmovq -16(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\n.LBE251:\n.LBB252:\nsubq $1,-16(%rbp)\n.L262:\n.LBE252:\n.LBB253:\ncmpq $0,-16(%rbp)\nsetg %al\ntestb %al,%al\nje .L267\n.LBB254:\nmovq -16(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L268\ncmpq %rdx,%rax\njl .L280\n.L268:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L280:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-24(%rbp)\nsetl %al\n.L267:\n.LBE254:\n.LBE253:\ntestb %al,%al\njne .L284\n.LBE249:\n.LBE248:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L272\ncmpq %rax,-16(%rbp)\njl .L282\n.L272:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L282:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rax,%rdx\nmovq -24(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE247:\n.LBB255:\naddq $1,-8(%rbp)\n.L259:\n.LBE255:\nmovq <24>(%rbp),%rax\ncmpq %rax,-8(%rbp)\njl .L285\n.LBE245:\n.LBE244:\n.LBB256:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -56(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -32(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE256:\n.LBE243:\nmovq -56(%rbp),%rax\nleave\nret", "tgt": "var i, j, tmp int\nfor i = 1; i < len(arr); i++ {\n\ttmp = arr[i]\n\tfor j = i; j > 0 && arr[j-1] > tmp; j-- {\n\t\tarr[j] = arr[j-1]\n\t}\n\tarr[j] = tmp\n}\nreturn arr"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-120(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\n.LBB2:\nleaq <main.res>(%rip),%rbx\nleaq <type...60x.7.6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -64(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -80(%rbp),%rax\nmovq %rax,(%rbx)\njmp .L3\n.L2:\n.LBE3:\n.LBB4:\nmovq -80(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L3:\n.LBE4:\n.LBB5:\nmovq -136(%rbp),%rax\ntestq %rax,%rax\njg .L4\n.LBB6:\n.LBB7:\nmovq <main.res>(%rip),%rax\nmovq <8+main.res>(%rip),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16+main.res>(%rip),%rax\nmovq %rax,-96(%rbp)\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L4:\n.LBE7:\n.LBE6:\n.LBE5:\nleaq <type...60x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rax\nsubq $8,%rsp\npushq -32(%rbp)\npushq -40(%rbp)\npushq -48(%rbp)\nmovl $0,%edx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <main.helper>\naddq $32,%rsp\n.LBB8:\nmovq <main.res>(%rip),%rax\nmovq <8+main.res>(%rip),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16+main.res>(%rip),%rax\nmovq %rax,-96(%rbp)\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE8:\n.LBE2:\nmovq -120(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "res = [][]string{}\nif len(s) < 1 {\n\treturn res\n}\nhelper(s, 0, []string{})\nreturn res"}
{"src": "cmpq %fs:112,%rsp\njnb .L235\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL23:\nret\n.L235:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-152(%rbp)\nmovq %rsi,-160(%rbp)\nmovq %rdx,-168(%rbp)\nmovq %rcx,-176(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\n.LBB297:\n.LBB298:\nmovq -160(%rbp),%rax\ncmpq -168(%rbp),%rax\njne .L227\n.LBB299:\n.LBB300:\nleaq <.LC153>(%rip),%r8\nmovl $20,%r9d\nmovq %r8,%rcx\nmovq %r9,%rbx\nmovq %r8,%rax\nmovq %r9,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\njmp .L234\n.L227:\n.LBE300:\n.LBE299:\n.LBE298:\n.LBB301:\n.LBB302:\nmovq -160(%rbp),%rdx\nmovq -152(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.graph.graph.CheckVertex>\nxorl $1,%eax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L229\n.LBB303:\nmovq -168(%rbp),%rdx\nmovq -152(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.graph.graph.CheckVertex>\nxorl $1,%eax\n.L229:\n.LBE303:\n.LBE302:\ntestb %al,%al\nje .L230\n.LBB304:\n.LBB305:\nleaq <.LC154>(%rip),%r14\nmovl $20,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\njmp .L234\n.L230:\n.LBE305:\n.LBE304:\n.LBE301:\nmovq $0,-56(%rbp)\n.LBB306:\nmovq -168(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-96(%rbp)\nleaq -96(%rbp),%rax\nmovq (%rax),%rdx\nmovq -152(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nleaq -128(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovq (%rax),%rax\nmovq %rax,-56(%rbp)\n.LBE306:\nmovq $0,-64(%rbp)\n.LBB307:\nmovq -160(%rbp),%rax\nmovq %rax,-120(%rbp)\nmovq -168(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq -88(%rbp),%rax\nmovq (%rax),%rdx\nmovq -152(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nleaq -120(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovq (%rax),%rax\nmovq %rax,-64(%rbp)\n.LBE307:\n.LBB308:\n.LBB309:\ncmpq $0,-56(%rbp)\nsetg %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L231\n.LBB310:\ncmpq $0,-64(%rbp)\nsetg %al\n.L231:\n.LBE310:\n.LBE309:\ntestb %al,%al\nje .L232\n.LBB311:\n.LBB312:\nleaq <.LC155>(%rip),%r12\nmovl $20,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\njmp .L234\n.L232:\n.LBE312:\n.LBE311:\n.LBE308:\nmovq -160(%rbp),%rdx\nmovq -152(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.graph.graph.TouchVertex>\nmovq -168(%rbp),%rdx\nmovq -152(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.graph.graph.TouchVertex>\n.LBB313:\nmovq -152(%rbp),%rax\nmovq (%rax),%rax\nmovq -160(%rbp),%rdx\nmovq -168(%rbp),%rcx\nmovq %rcx,-112(%rbp)\nmovq -176(%rbp),%rbx\nmovq %rdx,-80(%rbp)\nleaq -80(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nleaq -112(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %rbx,(%rax)\n.LBE313:\n.LBB314:\nmovq -152(%rbp),%rax\nmovzbl <16>(%rax),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L233\n.LBB315:\n.LBB316:\nmovq -152(%rbp),%rax\nmovq (%rax),%rax\nmovq -168(%rbp),%rdx\nmovq -160(%rbp),%rcx\nmovq %rcx,-104(%rbp)\nmovq -176(%rbp),%rbx\nmovq %rdx,-72(%rbp)\nleaq -72(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nleaq -104(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.graph.VertexId.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %rbx,(%rax)\n.L233:\n.LBE316:\n.LBE315:\n.LBE314:\n.LBB317:\nmovq -152(%rbp),%rax\nmovq <8>(%rax),%rdx\naddq $1,%rdx\nmovq %rdx,<8>(%rax)\n.LBE317:\n.LBB318:\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\n.L234:\n.LBE318:\n.LBE297:\naddq $136,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "if from == to {\n\treturn errors.New(\"STR\")\n}\nif !g.CheckVertex(from) || !g.CheckVertex(to) {\n\treturn errors.New(\"STR\")\n}\ni, _ := g.edges[from][to]\nj, _ := g.edges[to][from]\nif i > 0 || j > 0 {\n\treturn errors.New(\"STR\")\n}\ng.TouchVertex(from)\ng.TouchVertex(to)\ng.edges[from][to] = weight\nif !g.isDirected {\n\tg.edges[to][from] = weight\n}\ng.edgesCount++\nreturn nil"}
{"src": ".LFB0:\nleaq -824(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L13\nmovl $824,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\n.LEHB0:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $776,%rsp\n.LEHE0:\nmovb $0,-721(%rbp)\n.LBB2:\nmovq $0,-56(%rbp)\n.LBB3:\nleaq <string..d>(%rip),%rbx\nmovq %rbx,-800(%rbp)\nleaq <go..C6>(%rip),%rax\nmovq %rax,-792(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-784(%rbp)\nleaq <int..d>(%rip),%rdi\n.LEHB1:\ncall <runtime.newobject@PLT>\nmovq %rax,-696(%rbp)\nmovq -696(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -696(%rbp),%rax\nmovq %rax,-776(%rbp)\nmovdqa -800(%rbp),%xmm0\nmovups %xmm0,-688(%rbp)\nmovdqa -784(%rbp),%xmm1\nmovups %xmm1,-672(%rbp)\nleaq -688(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq $2,-648(%rbp)\nmovq $2,-640(%rbp)\nmovq $0,-560(%rbp)\nmovq $0,-552(%rbp)\nmovq $0,-544(%rbp)\nleaq -560(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovq -536(%rbp),%rcx\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -640(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovq -536(%rbp),%rdx\nleaq <main.main..thunk0>(%rip),%rdi\nleaq -721(%rbp),%rsi\nleaq -624(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE3:\n.LBB4:\nmovq %rbx,-768(%rbp)\nleaq <go..C12>(%rip),%rsi\nmovq %rsi,-760(%rbp)\nmovdqa -768(%rbp),%xmm2\nmovups %xmm2,-496(%rbp)\nleaq -496(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $1,-472(%rbp)\nmovq $1,-464(%rbp)\nmovq $0,-384(%rbp)\nmovq $0,-376(%rbp)\nmovq $0,-368(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-360(%rbp)\nmovq -360(%rbp),%rcx\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -464(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovq -360(%rbp),%rdx\nleaq <main.main..thunk1>(%rip),%rdi\nleaq -721(%rbp),%rsi\nleaq -448(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE4:\n.LBB5:\nleaq <string..d>(%rip),%r14\nleaq <go..C13>(%rip),%r15\nmovq %r14,-320(%rbp)\nmovq %r15,-312(%rbp)\nleaq -320(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $1,-296(%rbp)\nmovq $1,-288(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nleaq -208(%rbp),%rax\nmovq %rax,-184(%rbp)\nmovq -184(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -288(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovq -184(%rbp),%rdx\nleaq <main.main..thunk2>(%rip),%rdi\nleaq -721(%rbp),%rsi\nleaq -272(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE5:\naddq $1,-56(%rbp)\nleaq <string..d>(%rip),%r12\nleaq <go..C14>(%rip),%r13\nleaq <int..d>(%rip),%rax\nmovq %rax,-752(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-744(%rbp)\nmovq %r12,-144(%rbp)\nmovq %r13,-136(%rbp)\nmovdqa -752(%rbp),%xmm3\nmovups %xmm3,-128(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\n.LEHE1:\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-160(%rbp)\n.L4:\n.LBE2:\nmovl $1,%ebx\n.L8:\nleaq -721(%rbp),%rax\nmovq %rax,%rdi\n.LEHB2:\ncall <runtime.deferreturn@PLT>\n.LEHE2:\ncmpl $1,%ebx\njne .L2\njmp .L12\n.L9:\nleaq -721(%rbp),%rax\nmovq %rax,%rdi\n.LEHB3:\ncall <runtime.checkdefer@PLT>\n.LEHE3:\njmp .L4\n.L10:\nmovq %rax,-808(%rbp)\nmovl $0,%ebx\njmp .L8\n.L2:\nmovq -808(%rbp),%rax\nmovq %rax,%rdi\n.LEHB4:\ncall <_Unwind_Resume@PLT>\n.L11:\nleaq -721(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L8\n.L12:\nleaq -40(%rbp),%rsp\n.LEHE4:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "i := 0\ndefer fmt.Println(\"STR\", i)\ndefer fmt.Println(\"STR\")\ndefer fmt.Println(\"STR\")\ni++\nfmt.Println(\"STR\", i)"}
{"src": ".LFB0:\nleaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L39\nmovl $456,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $416,%rsp\nmovq %rdi,-424(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\n.LBB2:\nleaq -416(%rbp),%rdx\nmovl $0,%eax\nmovl $26,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB3:\nmovq $0,-56(%rbp)\nmovl $0,-60(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -440(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L37:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -440(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -448(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L30\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\nleaq <1>(%rbx),%rdx\n.LBE10:\njmp .L6\n.L30:\n.LBB11:\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovl %esi,%eax\nmovq %rdi,%rdx\n.L6:\n.LBE11:\n.LBE9:\n.LBB12:\nmovq %rbx,-56(%rbp)\nmovl %eax,-60(%rbp)\n.LBE12:\n.LBB13:\nmovl -60(%rbp),%eax\nsubl $97,%eax\ntestl %eax,%eax\njs .L7\ncmpl $25,%eax\njg .L7\ncltq\nmovq -56(%rbp),%rcx\nmovq %rcx,-416(%rbp,%rax,8)\n.LBE13:\n.LBE8:\n.LBB15:\nmovq %rdx,%rbx\njmp .L2\n.L7:\n.LBE15:\n.LBB16:\n.LBB14:\ncltq\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE14:\n.LBE16:\ncmpq %r12,%rbx\njl .L37\n.LBE5:\n.LBE4:\n.LBE3:\nmovq $0,-40(%rbp)\nmovq -440(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L10\ncmpq %rax,-40(%rbp)\njge .L10\nmovq -448(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nsubl $97,%eax\ncmpb $25,%al\njbe .L11\njmp .L32\n.L10:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovzbl %al,%eax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L11:\nmovzbl %al,%eax\nmovq -416(%rbp,%rax,8),%rax\nmovq %rax,-48(%rbp)\nmovq -440(%rbp),%rbx\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq %rbx,-192(%rbp)\n.LBB17:\nmovq $0,-72(%rbp)\nmovl $0,-76(%rbp)\n.LBB18:\n.LBB19:\n.LBB20:\nmovq -440(%rbp),%r13\nmovl $0,%ebx\n.LBE20:\njmp .L13\n.L38:\n.LBB21:\nnop\n.LBE21:\n.LBB22:\n.LBB23:\nmovq -440(%rbp),%rax\ntestq %rbx,%rbx\njs .L14\ncmpq %rax,%rbx\njge .L14\nmovq -448(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L15\njmp .L33\n.L14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\n.LBB24:\nleaq <1>(%rbx),%r12\n.LBE24:\njmp .L17\n.L33:\n.LBB25:\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovl %esi,%eax\nmovq %rdi,%r12\n.L17:\n.LBE25:\n.LBE23:\n.LBB26:\nmovq %rbx,-72(%rbp)\nmovl %eax,-76(%rbp)\n.LBE26:\n.LBB27:\n.LBB28:\nmovq -72(%rbp),%rax\ncmpq -48(%rbp),%rax\njge .L18\n.LBB29:\nmovl -76(%rbp),%eax\nsubl $97,%eax\ntestl %eax,%eax\njs .L19\ncmpl $25,%eax\njle .L34\n.L19:\ncltq\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\ncltq\nmovq -416(%rbp,%rax,8),%rdx\nmovq -48(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0763.max>\nmovq %rax,-48(%rbp)\njmp .L21\n.L18:\n.LBE29:\n.LBE28:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rbx\nmovq -72(%rbp),%rax\nsubq -40(%rbp),%rax\nleaq <1>(%rax),%r14\nleaq <1>(%rbx),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L22\n.LBB30:\nmovq -144(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE30:\njmp .L23\n.L22:\n.LBB31:\nmovq -144(%rbp),%rcx\nmovq -128(%rbp),%rdx\nmovq %rcx,-208(%rbp)\nmovq %rax,-200(%rbp)\nmovq %rdx,-192(%rbp)\n.L23:\n.LBE31:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r14,(%rax)\nmovq -72(%rbp),%rax\naddq $1,%rax\nmovq %rax,-40(%rbp)\n.LBB32:\nmovq -440(%rbp),%rax\ncmpq %rax,-40(%rbp)\njge .L21\n.LBB33:\nmovq -440(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L24\ncmpq %rax,-40(%rbp)\njge .L24\nmovq -448(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nsubl $97,%eax\ncmpb $25,%al\njbe .L25\njmp .L35\n.L24:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovzbl %al,%eax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L25:\nmovzbl %al,%eax\nmovq -416(%rbp,%rax,8),%rax\nmovq %rax,-48(%rbp)\n.L21:\n.LBE33:\n.LBE32:\n.LBE27:\n.LBE22:\n.LBB34:\nmovq %r12,%rbx\n.L13:\n.LBE34:\ncmpq %r13,%rbx\njl .L38\n.LBE19:\n.LBE18:\n.LBE17:\n.LBB35:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -424(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE35:\n.LBE2:\nmovq -424(%rbp),%rax\naddq $416,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "maxIndex := [26]int{}\nfor i, b := range S {\n\tmaxIndex[b-'a'] = i\n}\nbegin := 0\nend := maxIndex[S[begin]-'a']\nres := make([]int, 0, len(S))\nfor i, b := range S {\n\tif i < end {\n\t\tend = max(end, maxIndex[b-'a'])\n\t\tcontinue\n\t}\n\tres = append(res, i-begin+1)\n\tbegin = i + 1\n\tif begin < len(S) {\n\t\tend = maxIndex[S[begin]-'a']\n\t}\n}\nreturn res"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L8\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $192,%rsp\nmovq $1,-40(%rbp)\nmovq $2,-48(%rbp)\nmovq $0,-56(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB2:\n.LBB3:\njmp .L2\n.L7:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq -40(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,-56(%rbp)\n.LBB6:\nmovq -56(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\njne .L3\n.LBB7:\nmovq -56(%rbp),%rax\naddq %rax,-64(%rbp)\n.L3:\n.LBE7:\n.LBE6:\nmovq -48(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-48(%rbp)\n.L2:\n.LBE5:\ncmpq $3999999,-56(%rbp)\njle .L7\n.LBE3:\n.LBE2:\nleaq <string..d>(%rip),%r14\nleaq <go..C6>(%rip),%r15\nleaq <int..d>(%rip),%rax\nmovq %rax,-224(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -184(%rbp),%rax\nmovq %rax,-216(%rbp)\nleaq <string..d>(%rip),%r12\nleaq <go..C12>(%rip),%r13\nmovq %r14,-176(%rbp)\nmovq %r15,-168(%rbp)\nmovdqa -224(%rbp),%xmm0\nmovups %xmm0,-160(%rbp)\nmovq %r12,-144(%rbp)\nmovq %r13,-136(%rbp)\nleaq -176(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $3,-120(%rbp)\nmovq $3,-112(%rbp)\nleaq -96(%rbp),%rax\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq -32(%rbp),%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "FirstNumber := 1\nSecondNumber := 2\nnextNumber := 0\nsum := SecondNumber\nfor nextNumber < 4000000 {\n\tnextNumber = FirstNumber + SecondNumber\n\tif nextNumber%2 == 0 {\n\t\tsum = sum + nextNumber\n\t}\n\tFirstNumber = SecondNumber\n\tSecondNumber = nextNumber\n}\nfmt.Println(\"STR\", sum, \"STR\")"}
{"src": ".LFB0:\nleaq -600(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L20\nmovl $600,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $552,%rsp\nmovq %rdi,-584(%rbp)\nleaq <type...62x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-544(%rbp)\nleaq <.LC26>(%rip),%r14\nmovl $11,%r15d\nmovq %r14,-320(%rbp)\nmovq %r15,-312(%rbp)\nleaq <type...64x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-536(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-528(%rbp)\nmovq -528(%rbp),%rax\nmovq $2,(%rax)\nmovq -528(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq $1,-488(%rbp)\nmovq $1,-480(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-520(%rbp)\nmovq -520(%rbp),%rax\nmovq $3,(%rax)\nmovq $4,<8>(%rax)\nmovq -520(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq $2,-464(%rbp)\nmovq $2,-456(%rbp)\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-512(%rbp)\nmovq -512(%rbp),%rax\nmovq $6,(%rax)\nmovq $5,<8>(%rax)\nmovq $7,<16>(%rax)\nmovq -512(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq $3,-440(%rbp)\nmovq $3,-432(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-504(%rbp)\nmovq -504(%rbp),%rax\nmovq $4,(%rax)\nmovq $1,<8>(%rax)\nmovq $8,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq -504(%rbp),%rax\nmovq %rax,-424(%rbp)\nmovq $4,-416(%rbp)\nmovq $4,-408(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -536(%rbp),%rax\nmovq -496(%rbp),%rcx\nmovq -488(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -464(%rbp),%rcx\nmovq -456(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -432(%rbp),%rcx\nmovq -424(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -536(%rbp),%rax\nleaq -496(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -536(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $4,-296(%rbp)\nmovq $4,-288(%rbp)\nmovq $11,-280(%rbp)\nleaq <.LC27>(%rip),%r12\nmovl $11,%r13d\nmovq %r12,-272(%rbp)\nmovq %r13,-264(%rbp)\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-384(%rbp)\nmovq -384(%rbp),%rax\nmovq $1,(%rax)\nmovq -384(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $1,-360(%rbp)\nmovq $1,-352(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -376(%rbp),%rax\nmovq $2,(%rax)\nmovq $3,<8>(%rax)\nmovq -376(%rbp),%rax\nmovq %rax,-344(%rbp)\nmovq $2,-336(%rbp)\nmovq $2,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -392(%rbp),%rax\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -392(%rbp),%rax\nleaq -368(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -392(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq $2,-248(%rbp)\nmovq $2,-240(%rbp)\nmovq $3,-232(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB6:\nmovq -544(%rbp),%rax\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -256(%rbp),%rcx\nmovq -248(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -240(%rbp),%rcx\nmovq -232(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\n.LBE6:\njmp .L7\n.L6:\n.LBB7:\nmovq -544(%rbp),%rax\nleaq -320(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE7:\nmovq -544(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq $2,-568(%rbp)\nmovq $2,-560(%rbp)\n.LBB8:\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\n.LBB9:\n.LBB10:\n.LBB11:\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -560(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r13\nmovl $0,%ebx\n.LBE11:\njmp .L8\n.L19:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\n.LBB14:\nmovq -168(%rbp),%rax\ntestq %rbx,%rbx\njs .L9\ncmpq %rax,%rbx\njge .L9\nmovq -176(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-224(%rbp)\nmovq %rdi,-216(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-208(%rbp)\nmovq %rdi,-200(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBE14:\n.LBB15:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -56(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L10\njmp .L17\n.L9:\n.LBE15:\n.LBB18:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L10:\n.LBE18:\n.LBB19:\n.LBB16:\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L12\n.L17:\n.LBE16:\n.LBB17:\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L12:\n.LBE17:\n.LBE19:\n.LBB20:\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -56(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB21:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE21:\njmp .L14\n.L13:\n.LBB22:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE22:\nmovq -88(%rbp),%rcx\nmovq -56(%rbp),%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdx\nmovq -584(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE20:\n.LBE13:\n.LBB23:\naddq $1,%rbx\n.L8:\n.LBE23:\ncmpq %r13,%rbx\njl .L19\n.LBE10:\n.LBE9:\n.LBE8:\naddq $552,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs [][]int\n\texpect int\n}{\n\t{\"STR\",\n\t\t[][]int{\n\t\t\t{2},\n\t\t\t{3, 4},\n\t\t\t{6, 5, 7},\n\t\t\t{4, 1, 8, 3},\n\t\t},\n\t\t11},\n\t{\"STR\",\n\t\t[][]int{\n\t\t\t{1},\n\t\t\t{2, 3},\n\t\t},\n\t\t3},\n}\nfor _, c := range cases {\n\tt.Run(c.name, func(t *testing.T) {\n\t\tgot := minimumTotal(c.inputs)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.inputs)\n\t\t}\n\t})\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L44\nmovl $40,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL8:\nret\n.L44:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\npxor %xmm0,%xmm0\nmovsd %xmm0,-8(%rbp)\n.LBB36:\nsubq $8,%rsp\nmovq -24(%rbp),%rax\npushq <16>(%rax)\npushq <8>(%rax)\npushq (%rax)\nleaq <16>(%rbp),%rdi\ncall <time.Time.Sub@PLT>\naddq $32,%rsp\nmovq %rax,-16(%rbp)\n.LBB37:\nleaq -16(%rbp),%rax\nmovq %rax,%rdi\ncall <time.Duration.Nanoseconds@PLT>\npxor %xmm1,%xmm1\ncvtsi 2sdq%rax,%xmm1\nmovsd <.LC58>(%rip),%xmm0\ndivsd %xmm1,%xmm0\nmovq %xmm0,%rax\ncmpq $0,-24(%rbp)\njne .L42\ncall <runtime.panicmem@PLT>\n.L42:\nmovq -24(%rbp),%rdx\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%xmm0\nmovq %rdx,%rdi\ncall <go.ewma.Ewma.Update>\naddq $32,%rsp\nmovq %xmm0,%rax\nmovq %rax,-8(%rbp)\nmovsd -8(%rbp),%xmm0\nmovq %xmm0,%rax\n.LBE37:\n.LBE36:\nmovq %rax,%xmm0\nleave\nret", "tgt": "timeDelta := now.Sub(r.lastTimestamp)\nreturn r.Ewma.Update(nanosec/float64(timeDelta.Nanoseconds()), now)"}
{"src": "cmpq %fs:112,%rsp\njnb .L37\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovb $0,-9(%rbp)\n.LBB22:\n.LBB23:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ntestq %rax,%rax\njne .L24\n.LBB24:\n.LBB25:\nmovb $0,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L25\n.L24:\n.LBE25:\n.LBE24:\n.LBE23:\n.LBB26:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\njne .L26\n.LBB27:\nmovq -24(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq <8>(%rdx),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L27\n.LBB28:\nmovq %rdx,(%rax)\n.LBE28:\njmp .L28\n.L27:\n.LBB29:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L28:\n.LBE29:\n.LBB30:\nmovb $1,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L25\n.L26:\n.LBE30:\n.LBE27:\n.LBE26:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\n.LBB31:\n.LBB32:\njmp .L29\n.L36:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\n.LBB35:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\njne .L30\n.LBB36:\nmovq -8(%rbp),%rax\naddq $8,%rax\nmovq -8(%rbp),%rdx\nmovq <8>(%rdx),%rdx\nmovq <8>(%rdx),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L31\n.LBB37:\nmovq %rdx,(%rax)\n.LBE37:\njmp .L32\n.L31:\n.LBB38:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L32:\n.LBE38:\n.LBB39:\nmovb $1,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L25\n.L30:\n.LBE39:\n.LBE36:\n.LBE35:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-8(%rbp)\n.L29:\n.LBE34:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\njne .L36\n.LBE32:\n.LBE31:\n.LBB40:\nmovb $0,-9(%rbp)\nmovzbl -9(%rbp),%eax\n.L25:\n.LBE40:\n.LBE22:\nleave\nret", "tgt": "if list.head == nil {\n\treturn false\n}\nif list.head.data == i {\n\tlist.head = list.head.next\n\treturn true\n}\ncurrent := list.head\nfor current.next != nil {\n\tif current.next.data == i {\n\t\tcurrent.next = current.next.next\n\t\treturn true\n\t}\n\tcurrent = current.next\n}\nreturn false"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L16\nmovl $104,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $72,%rsp\nmovq $0,-40(%rbp)\n.LBB2:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-48(%rbp)\n.LBB3:\nmovq $0,-56(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L4\n.L15:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -88(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-56(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -56(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-64(%rbp)\nleaq -64(%rbp),%rax\nmovq (%rax),%rdx\nmovq -48(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nleaq <1>(%rax),%r13\nleaq -72(%rbp),%rax\nmovq (%rax),%rdx\nmovq -48(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r13,(%rax)\n.LBE12:\n.LBE11:\n.LBE8:\n.LBB14:\naddq $1,%rbx\njmp .L4\n.L5:\n.LBE14:\n.LBB15:\n.LBB13:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE13:\n.LBE15:\ncmpq %r12,%rbx\njl .L15\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB16:\ncmpq $0,-48(%rbp)\nje .L8\nmovq -48(%rbp),%rax\nmovq (%rax),%rax\njmp .L9\n.L8:\nmovl $0,%eax\n.L9:\nmovq <24>(%rbp),%rdx\nmovq %rdx,%rcx\nshrq $63,%rcx\naddq %rcx,%rdx\nsarq %rdx\ncmpq %rax,%rdx\njg .L10\n.LBB17:\n.LBB18:\nmovq <24>(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L11\n.L10:\n.LBE18:\n.LBE17:\n.LBE16:\n.LBB19:\ncmpq $0,-48(%rbp)\nje .L12\nmovq -48(%rbp),%rax\nmovq (%rax),%rax\njmp .L13\n.L12:\nmovl $0,%eax\n.L13:\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.L11:\n.LBE19:\n.LBE2:\naddq $72,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "mySet := make(map[int]int, 0)\nfor _, v := range candies {\n\tmySet[v]++\n}\nif len(mySet) >= len(candies)/2 {\n\treturn len(candies) / 2\n}\nreturn len(mySet)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nleaq <type...66x.7float64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovsd <.LC48>(%rip),%xmm0\nmovsd %xmm0,(%rax)\nmovsd <.LC49>(%rip),%xmm0\nmovsd %xmm0,<8>(%rax)\nmovsd <.LC50>(%rip),%xmm0\nmovsd %xmm0,<16>(%rax)\nmovsd <.LC51>(%rip),%xmm0\nmovsd %xmm0,<24>(%rax)\nmovsd <.LC52>(%rip),%xmm0\nmovsd %xmm0,<32>(%rax)\nmovsd <.LC53>(%rip),%xmm0\nmovsd %xmm0,<40>(%rax)\nmovq -40(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $6,-56(%rbp)\nmovq $6,-48(%rbp)\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\nmovl $2,%esi\nmovl $3,%edi\ncall <go.matrix.MakeMatrix>\naddq $32,%rsp\nmovq %rax,-8(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\ncmpq $2,%rax\nsetne %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\nmovq -8(%rbp),%rax\nmovq (%rax),%rax\ncmpq $3,%rax\nsetne %al\n.L2:\n.LBE5:\n.LBE4:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L3\n.LBB6:\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\nmovq -8(%rbp),%rax\npushq <32>(%rax)\npushq <24>(%rax)\npushq <16>(%rax)\ncall <go.matrix.FloatArrayEquals>\naddq $48,%rsp\nxorl $1,%eax\n.L3:\n.LBE6:\n.LBE3:\ntestb %al,%al\nje .L1\n.LBB7:\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-16(%rbp)\nmovq -72(%rbp),%rax\nsubq $8,%rsp\npushq -16(%rbp)\npushq -24(%rbp)\npushq -32(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Error..stub@PLT>\naddq $32,%rsp\n.L1:\n.LBE7:\n.LBE2:\nleave\nret", "tgt": "a := []float64{1, 2, 3, 4, 5, 6}\nA := MakeMatrix(a, 3, 2)\nif A.cols != 2 ||\n\tA.rows != 3 ||\n\t!FloatArrayEquals(A.Elements, a) {\n\tt.Error()\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L18\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $32,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovb $0,-25(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\n.LBB3:\nmovl $0,-32(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -40(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L17:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -40(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -48(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L15\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\naddq $1,%rbx\n.LBE10:\njmp .L6\n.L15:\n.LBB11:\nmovq -48(%rbp),%rcx\nmovq -40(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovl %ecx,%eax\n.L6:\n.LBE11:\n.LBE9:\n.LBB12:\nmovl %eax,-32(%rbp)\n.LBE12:\n.LBB13:\n.LBB14:\nmovl -32(%rbp),%eax\nmovl %eax,%edi\ncall <unicode.IsUpper@PLT>\ntestb %al,%al\nje .L2\n.LBB15:\naddq $1,-24(%rbp)\n.L2:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE8:\ncmpq %r12,%rbx\njl .L17\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB16:\n.LBB17:\n.LBB18:\ncmpq $0,-24(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L10\n.LBB19:\nmovq -40(%rbp),%rax\ncmpq %rax,-24(%rbp)\nsete %al\n.L10:\n.LBE19:\n.LBE18:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L11\n.LBB20:\n.LBB21:\ncmpq $1,-24(%rbp)\nsete %al\ntestb %al,%al\nje .L11\n.LBB22:\nmovl $0,%eax\nmovq -40(%rbp),%rdx\ntestq %rax,%rax\njs .L13\ncmpq %rdx,%rax\njge .L13\nmovq -48(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\nmovl %eax,%edi\ncall <unicode.IsUpper@PLT>\njmp .L11\n.L13:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE22:\n.LBE21:\n.LBE20:\n.LBE17:\nmovb %al,-25(%rbp)\nmovzbl -25(%rbp),%eax\n.LBE16:\n.LBE2:\naddq $32,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "count := 0\nfor _, c := range word {\n\tif unicode.IsUpper(c) {\n\t\tcount++\n\t}\n}\nreturn count == 0 || count == len(word) || (count == 1 && unicode.IsUpper(rune(word[0])))"}
{"src": "cmpq %fs:112,%rsp\njnb .L23\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq $0,-8(%rbp)\n.LBB17:\ncmpq $0,-24(%rbp)\njne .L20\ncall <runtime.panicmem@PLT>\n.L20:\nmovq -24(%rbp),%rax\naddq $44,%rax\nmovq %rax,%rdi\ncall <sync.Mutex.Lock@PLT>\nmovq -24(%rbp),%rax\nmovq <72>(%rax),%rax\nmovq %rax,-16(%rbp)\ncmpq $0,-24(%rbp)\njne .L21\ncall <runtime.panicmem@PLT>\n.L21:\nmovq -24(%rbp),%rax\naddq $44,%rax\nmovq %rax,%rdi\ncall <sync.Mutex.Unlock@PLT>\n.LBB18:\nmovq -16(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE18:\n.LBE17:\nleave\nret", "tgt": "p.mu.Lock()\nactive := p.active\np.mu.Unlock()\nreturn active"}
{"src": "leaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $520,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nmovq %rdi,-440(%rbp)\nmovq %rsi,-448(%rbp)\nmovq $0,-400(%rbp)\nmovq $0,-392(%rbp)\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\n.LBB11:\n.LBB12:\nmovq -448(%rbp),%rax\nmovq <8>(%rax),%rax\nleaq -353(%rbp),%rcx\nleaq -384(%rbp),%rdi\nmovq %rax,%rdx\nmovq %rcx,%rsi\ncall <runtime.selectnbrecv2@PLT>\ntestb %al,%al\nje .L9\n.LBB13:\n.LBB14:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovzbl -353(%rbp),%eax\nmovb %al,-49(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <go..C61>(%rip),%rbx\nmovq %rbx,-504(%rbp)\nmovq %rax,-496(%rbp)\nleaq <go..C62>(%rip),%rax\nmovq %rax,-488(%rbp)\nmovdqa -512(%rbp),%xmm0\nmovups %xmm0,-352(%rbp)\nmovdqa -496(%rbp),%xmm1\nmovups %xmm1,-336(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $2,-152(%rbp)\nmovq $2,-144(%rbp)\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\ncall <log.Println@PLT>\naddq $32,%rsp\n.LBB15:\nmovzbl -49(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L10\n.LBB16:\n.LBB17:\n.LBB18:\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\nmovq <go.pool.ErrPoolClosed>(%rip),%rax\nmovq <8+go.pool.ErrPoolClosed>(%rip),%rdx\nmovdqa -480(%rbp),%xmm2\nmovups %xmm2,-400(%rbp)\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBE18:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -440(%rbp),%rcx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\njmp .L8\n.L10:\n.LBE17:\n.LBE16:\n.LBE15:\n.LBB19:\n.LBB20:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovdqa -464(%rbp),%xmm3\nmovups %xmm3,-416(%rbp)\n.LBE20:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -440(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\njmp .L8\n.L9:\n.LBE19:\n.LBE14:\n.LBE13:\n.LBB21:\nleaq <string..d>(%rip),%r14\nleaq <go..C63>(%rip),%r15\nleaq <string..d>(%rip),%r12\nleaq <go..C64>(%rip),%r13\nmovq %r14,-256(%rbp)\nmovq %r15,-248(%rbp)\nmovq %r12,-240(%rbp)\nmovq %r13,-232(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $2,-120(%rbp)\nmovq $2,-112(%rbp)\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\ncall <log.Println@PLT>\naddq $32,%rsp\n.LBB22:\n.LBB23:\nmovq -448(%rbp),%rax\nmovq <16>(%rax),%rdx\nmovq -448(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nleaq -96(%rbp),%rax\nmovq %rdx,%r10\nmovq %rax,%rdi\ncall *%rcx\n.LVL2:\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rcx,-400(%rbp)\nmovq %rbx,-392(%rbp)\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBE23:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -440(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.L8:\n.LBE22:\n.LBE21:\n.LBE12:\n.LBE11:\nmovq -440(%rbp),%rax\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "select {\ncase r, ok := <-p.resources:\n\tlog.Println(\"STR\", \"STR\")\n\tif !ok {\n\t\treturn nil, ErrPoolClosed\n\t}\n\treturn r, nil\ndefault:\n\tlog.Println(\"STR\", \"STR\")\n\treturn p.factory()\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L79\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL9:\nret\n.L79:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $160,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-160(%rbp)\nmovq %rdi,-152(%rbp)\nmovq %rdx,-176(%rbp)\nmovq %rcx,-168(%rbp)\nleaq -80(%rbp),%rdi\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nleaq -128(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicebyte@PLT>\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovl $493,%edx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <io..z2fioutil.WriteFile@PLT>\naddq $32,%rsp\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\n.LBB50:\nmovq -144(%rbp),%rax\ntestq %rax,%rax\nje .L75\n.LBB51:\nmovq -144(%rbp),%rax\ntestq %rax,%rax\njne .L77\nmovl $0,%eax\njmp .L78\n.L77:\nmovq -144(%rbp),%rax\nmovq (%rax),%rax\n.L78:\nmovq %rax,%r12\nmovq -136(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-96(%rbp)\nmovq %r13,-88(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq $1,-40(%rbp)\nmovq $1,-32(%rbp)\nsubq $8,%rsp\npushq -32(%rbp)\npushq -40(%rbp)\npushq -48(%rbp)\ncall <log.Fatal@PLT>\naddq $32,%rsp\n.L75:\n.LBE51:\n.LBE50:\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "err := ioutil.WriteFile(path, []byte(content), 0755)\nif err != nil {\n\tlog.Fatal(err)\n}"}
{"src": "leaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L13\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-216(%rbp)\nleaq <go.binaryTree.compare..f>(%rip),%rax\nmovq %rax,%rdi\ncall <go.binaryTree.New>\nmovq %rax,-56(%rbp)\nleaq <int..d>(%rip),%r12\nleaq <go..C8>(%rip),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.BinaryTree.Insert>\nleaq <int..d>(%rip),%r13\nmovq %r13,-272(%rbp)\nleaq <go..C9>(%rip),%rax\nmovq %rax,-264(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.BinaryTree.Insert>\nmovq %r13,-256(%rbp)\nleaq <go..C10>(%rip),%rax\nmovq %rax,-248(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.BinaryTree.Insert>\nmovq %r13,-240(%rbp)\nleaq <go..C11>(%rip),%rax\nmovq %rax,-232(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.BinaryTree.Search>\nmovq %rax,-64(%rbp)\n.LBB4:\nmovl $2,%eax\nmovq %rax,-136(%rbp)\nleaq -136(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rax\nmovq %rdx,%rcx\nleaq <int..d>(%rip),%rdx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L7\n.LBB5:\nleaq <string..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <go..C17>(%rip),%rax\nmovq %rax,-296(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB6:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE6:\njmp .L9\n.L8:\n.LBB7:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE7:\nmovq -200(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq $1,-112(%rbp)\nmovq -216(%rbp),%rax\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Error..stub@PLT>\naddq $32,%rsp\n.L7:\n.LBE5:\n.LBE4:\nleaq <int..d>(%rip),%r14\nleaq <go..C20>(%rip),%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.BinaryTree.Search>\nmovq %rax,-72(%rbp)\n.LBB8:\ncmpq $0,-72(%rbp)\nje .L6\n.LBB9:\nleaq <string..d>(%rip),%rax\nmovq %rax,-288(%rbp)\nleaq <go..C21>(%rip),%rax\nmovq %rax,-280(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovdqa -288(%rbp),%xmm1\nmovups %xmm1,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L11\n.LBB10:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE10:\njmp .L12\n.L11:\n.LBB11:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L12:\n.LBE11:\nmovq -168(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nmovq -216(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Error..stub@PLT>\naddq $32,%rsp\n.L6:\n.LBE9:\n.LBE8:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tree := New(compare)\ntree.Insert(1)\ntree.Insert(2)\ntree.Insert(3)\nfindTree := tree.Search(2)\nif findTree.node != 2 {\n\tt.Error(\"STR\")\n}\nfindNilTree := tree.Search(100)\nif findNilTree != nil {\n\tt.Error(\"STR\")\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L42\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L42:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-104(%rbp)\nmovq %rsi,-112(%rbp)\nmovq $0,-40(%rbp)\n.LBB30:\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB31:\n.LBB32:\njmp .L27\n.L41:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\nmovq -24(%rbp),%rax\nleaq <8>(%rax),%rbx\nleaq <go.leetcode.ListNode..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L28\n.LBB35:\nmovq %rax,(%rbx)\n.LBE35:\njmp .L29\n.L28:\n.LBB36:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L29:\n.LBE36:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-24(%rbp)\n.LBB37:\ncmpq $0,-104(%rbp)\nje .L30\n.LBB38:\nmovq -104(%rbp),%rax\nmovq (%rax),%rax\naddq %rax,-32(%rbp)\nmovq -104(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-104(%rbp)\n.L30:\n.LBE38:\n.LBE37:\n.LBB39:\ncmpq $0,-112(%rbp)\nje .L31\n.LBB40:\nmovq -112(%rbp),%rax\nmovq (%rax),%rax\naddq %rax,-32(%rbp)\nmovq -112(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-112(%rbp)\n.L31:\n.LBE40:\n.LBE39:\nmovq -32(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $2,%rax\nmovq %rcx,%rsi\nsarq $63,%rsi\nsubq %rsi,%rax\nmovq %rax,%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\nsubq %rax,%rcx\nmovq %rcx,%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -32(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $2,%rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\nmovq %rax,-32(%rbp)\n.L27:\n.LBE34:\n.LBB41:\ncmpq $0,-104(%rbp)\nsetne %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L32\n.LBB42:\ncmpq $0,-112(%rbp)\nsetne %al\n.L32:\n.LBE42:\n.LBE41:\ntestb %al,%al\njne .L41\n.LBE32:\n.LBE31:\n.LBB43:\ncmpq $0,-32(%rbp)\njle .L35\n.LBB44:\nmovq -24(%rbp),%rax\nleaq <8>(%rax),%rbx\nleaq <go.leetcode.ListNode..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $0,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L36\n.LBB45:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE45:\njmp .L37\n.L36:\n.LBB46:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode.ListNode..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L37:\n.LBE46:\nmovq -72(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L38\n.LBB47:\nmovq %rax,(%rbx)\n.LBE47:\njmp .L35\n.L38:\n.LBB48:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L35:\n.LBE48:\n.LBE44:\n.LBE43:\n.LBB49:\nmovq -48(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE49:\n.LBE30:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "l := new(ListNode)\nn := l\nvar extra int\nfor l1 != nil || l2 != nil {\n\tn.Next = new(ListNode)\n\tn = n.Next\n\tif l1 != nil {\n\t\textra += l1.Val\n\t\tl1 = l1.Next\n\t}\n\tif l2 != nil {\n\t\textra += l2.Val\n\t\tl2 = l2.Next\n\t}\n\tn.Val = extra % 10\n\textra /= 10\n}\nif extra > 0 {\n\tn.Next = &ListNode{Val: extra}\n}\nreturn l.Next"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $104,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $80,%rsp\nmovq %rdi,-88(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\nmovabsq $-9223372036854775808,%rax\nmovq %rax,-32(%rbp)\n.LBB3:\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L8:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -72(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-48(%rbp)\n.LBE10:\n.LBB11:\nmovq -24(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -32(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rax,%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0714.max>\nmovq %rax,-24(%rbp)\nmovq -56(%rbp),%rax\nsubq -48(%rbp),%rax\nsubq -88(%rbp),%rax\nmovq %rax,%rdx\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0714.max>\nmovq %rax,-32(%rbp)\n.LBE11:\n.LBE8:\n.LBB13:\naddq $1,%rbx\njmp .L2\n.L3:\n.LBE13:\n.LBB14:\n.LBB12:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE12:\n.LBE14:\ncmpq %r12,%rbx\njl .L8\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB15:\nmovq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE15:\n.LBE2:\naddq $80,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "empty := 0\nhold := -1 << 63\nfor _, p := range prices {\n\ttemp := empty\n\tempty = max(empty, hold+p)\n\thold = max(hold, temp-p-fee)\n}\nreturn empty"}
{"src": ".LFB0:\nleaq -280(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $280,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $240,%rsp\nmovq %rdi,-264(%rbp)\n.LBB2:\nleaq <type..struct.4.go.problem0835.name.0string.2.go.problem0835.args.0go.problem0835.args.2.go.problem0835.want.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq <go.problem0835.tests>(%rip),%rax\nmovq <8+go.problem0835.tests>(%rip),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <16+go.problem0835.tests>(%rip),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r13\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -168(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -176(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-256(%rbp)\nmovq %rdi,-248(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-240(%rbp)\nmovq %rdi,-232(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-224(%rbp)\nmovq %rdi,-216(%rbp)\nmovq <48>(%rax),%rsi\nmovq <56>(%rax),%rdi\nmovq %rsi,-208(%rbp)\nmovq %rdi,-200(%rbp)\nmovq <64>(%rax),%rax\nmovq %rax,-192(%rbp)\n.LBE8:\n.LBB9:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -40(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L4\njmp .L11\n.L3:\n.LBE9:\n.LBB12:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE12:\n.LBB13:\n.LBB10:\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<48>(%rax)\nmovq %rdi,<56>(%rax)\nmovq -80(%rbp),%rdx\nmovq %rdx,<64>(%rax)\n.LBE10:\njmp .L6\n.L11:\n.LBB11:\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.problem0835.name.0string.2.go.problem0835.args.0go.problem0835.args.2.go.problem0835.want.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE11:\n.LBE13:\n.LBB14:\nleaq <go.problem0835.Test_largestOverlap..func1>(%rip),%r14\nmovq -40(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.problem0835.tt1.0.1struct.4.go.problem0835.name.0string.2.go.problem0835.args.0go.problem0835.args.2.go.problem0835.want.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq %r14,-64(%rbp)\nmovq %r12,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB15:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE15:\njmp .L8\n.L7:\n.LBB16:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.problem0835.tt1.0.1struct.4.go.problem0835.name.0string.2.go.problem0835.args.0go.problem0835.args.2.go.problem0835.want.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE16:\nmovq -72(%rbp),%rcx\nmovq -40(%rbp),%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdx\nmovq -264(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE14:\n.LBE7:\n.LBB17:\naddq $1,%rbx\n.L2:\n.LBE17:\ncmpq %r13,%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\naddq $240,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "for _, tt := range tests {\n\tt.Run(tt.name, func(t *testing.T) {\n\t\tif got := largestOverlap(tt.args.A, tt.args.B); got != tt.want {\n\t\t\tt.Errorf(\"STR\", got, tt.want)\n\t\t}\n\t})\n}"}
{"src": ".LFB1:\nleaq -360(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L22\nmovl $360,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $312,%rsp\nmovq %rdi,-312(%rbp)\nmovq $5,-288(%rbp)\nmovq $2,-280(%rbp)\nmovq $7,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $10,-256(%rbp)\nmovq $5,-248(%rbp)\nmovq $0,-240(%rbp)\nmovq $1,-232(%rbp)\n.LBB14:\nmovq $0,-304(%rbp)\nmovq $0,-296(%rbp)\n.LBB15:\n.LBB16:\n.LBB17:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq $4,-320(%rbp)\nmovl $0,%ebx\n.LBE17:\njmp .L12\n.L21:\n.LBB18:\nnop\n.LBE18:\n.LBB19:\n.LBB20:\ntestq %rbx,%rbx\njs .L13\ncmpq $3,%rbx\njg .L13\nmovq %rbx,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nsubq $176,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE20:\n.LBB21:\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\n.LBE21:\n.LBB22:\nmovq -304(%rbp),%rax\nmovq %rax,%rdi\ncall <go.problem1009.bitwiseComplement>\nmovq %rax,-56(%rbp)\n.LBB23:\nmovq -296(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L14\njmp .L15\n.L13:\n.LBE23:\n.LBE22:\n.LBB28:\nmovl $4,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L14:\n.LBE28:\n.LBB29:\n.LBB27:\n.LBB24:\nleaq <int..d>(%rip),%rax\nmovq %rax,-352(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovq -304(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-344(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-336(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-328(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -352(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -336(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L16\n.LBB25:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE25:\njmp .L17\n.L16:\n.LBB26:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L17:\n.LBE26:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC11>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -312(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L15:\n.LBE24:\n.LBE27:\n.LBE29:\n.LBE19:\n.LBB30:\naddq $1,%rbx\n.L12:\n.LBE30:\ncmpq -320(%rbp),%rbx\njl .L21\n.LBE16:\n.LBE15:\n.LBE14:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   5,\n\t\twant: 2,\n\t},\n\t{\n\t\tin:   7,\n\t\twant: 0,\n\t},\n\t{\n\t\tin:   10,\n\t\twant: 5,\n\t},\n\t{\n\t\tin:   0,\n\t\twant: 1,\n\t},\n}\nfor _, tt := range tests {\n\tgot := bitwiseComplement(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L6\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L6:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq %rdi,-8(%rbp)\nmovq -8(%rbp),%rax\nmovq %rax,%rdi\ncall <syscall.Exit@PLT>\nleave\nret", "tgt": "syscall.Exit(code)"}
{"src": ".LFB7:\ncmpq %fs:112,%rsp\njnb .L96\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL7:\nret\n.L96:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $208,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovb $0,-25(%rbp)\n.LBB43:\n.LBB44:\nmovq -216(%rbp),%rax\ntestq %rax,%rax\njne .L51\n.LBB45:\n.LBB46:\nmovb $1,-25(%rbp)\nmovzbl -25(%rbp),%eax\njmp .L89\n.L51:\n.LBE46:\n.LBE45:\n.LBE44:\n.LBB47:\nmovq -216(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\nje .L53\n.LBB48:\n.LBB49:\nmovb $0,-25(%rbp)\nmovzbl -25(%rbp),%eax\njmp .L89\n.L53:\n.LBE49:\n.LBE48:\n.LBE47:\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq $0,-176(%rbp)\n.LBB50:\nmovq $0,-24(%rbp)\n.LBB51:\njmp .L54\n.L95:\n.LBB52:\nnop\n.LBE52:\n.LBB53:\n.LBB54:\n.LBB55:\n.LBB56:\nmovq -216(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L55\ncmpq %rax,-24(%rbp)\njge .L55\nmovq -224(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $40,%al\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\njne .L56\njmp .L57\n.L55:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L56:\n.LBB57:\nmovq -216(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L58\ncmpq %rax,-24(%rbp)\njge .L58\nmovq -224(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $123,%al\nsete %al\njmp .L57\n.L58:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L57:\n.LBE57:\n.LBE56:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L59\n.LBB58:\nmovq -216(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L60\ncmpq %rax,-24(%rbp)\njge .L60\nmovq -224(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $91,%al\nsete %al\njmp .L59\n.L60:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L59:\n.LBE58:\n.LBE55:\ntestb %al,%al\nje .L61\n.LBB59:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rbx\nmovq -216(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L62\ncmpq %rax,-24(%rbp)\njge .L62\nmovq -224(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%r12d\nleaq <1>(%rbx),%rax\nmovq -144(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L63\njmp .L90\n.L62:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\n.LBB60:\nmovq -160(%rbp),%rsi\nleaq -64(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <uint8..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-176(%rbp)\n.LBE60:\njmp .L65\n.L90:\n.LBB61:\nmovq -160(%rbp),%rcx\nmovq -144(%rbp),%rdx\nmovq %rcx,-192(%rbp)\nmovq %rax,-184(%rbp)\nmovq %rdx,-176(%rbp)\n.L65:\n.LBE61:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovb %r12b,(%rax)\n.LBE59:\njmp .L66\n.L61:\n.LBB62:\n.LBB63:\nmovq -184(%rbp),%rax\ntestq %rax,%rax\njle .L67\n.LBB64:\nmovq -184(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L68\ncmpq %rdx,%rax\njl .L91\n.L68:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L91:\nmovq -216(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L70\ncmpq %rdx,-24(%rbp)\njl .L92\n.L70:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L92:\nmovq -192(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nleaq -136(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -224(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nleaq -132(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq -128(%rbp),%rcx\nleaq -96(%rbp),%rax\nmovl $2,%edx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -184(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -176(%rbp),%rax\ntestq %rdi,%rdi\njs .L72\ncmpq %rax,%rdi\njg .L72\ntestq %rdi,%rdi\njns .L73\njmp .L93\n.L72:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L93:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L73:\nmovq -192(%rbp),%rdx\nmovq -176(%rbp),%rax\nmovq %rdx,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq %rax,-176(%rbp)\n.LBB65:\n.LBB66:\n.LBB67:\nmovq -200(%rbp),%rax\ncmpq $2,%rax\njne .L75\nmovq -208(%rbp),%rax\nleaq <.LC16>(%rip),%rdx\ncmpq %rdx,%rax\nje .L76\nmovq -208(%rbp),%rax\nmovl $2,%edx\nleaq <.LC16>(%rip),%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L76\n.L75:\nmovl $1,%eax\njmp .L77\n.L76:\nmovl $0,%eax\n.L77:\ntestb %al,%al\nje .L78\n.LBB68:\nmovq -200(%rbp),%rax\ncmpq $2,%rax\njne .L79\nmovq -208(%rbp),%rax\nleaq <.LC17>(%rip),%rdx\ncmpq %rdx,%rax\nje .L80\nmovq -208(%rbp),%rax\nmovl $2,%edx\nleaq <.LC17>(%rip),%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L80\n.L79:\nmovl $1,%eax\njmp .L78\n.L80:\nmovl $0,%eax\n.L78:\n.LBE68:\n.LBE67:\ntestb %al,%al\nje .L82\n.LBB69:\nmovq -200(%rbp),%rax\ncmpq $2,%rax\njne .L83\nmovq -208(%rbp),%rax\nleaq <.LC18>(%rip),%rdx\ncmpq %rdx,%rax\nje .L84\nmovq -208(%rbp),%rax\nmovl $2,%edx\nleaq <.LC18>(%rip),%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L84\n.L83:\nmovl $1,%eax\njmp .L82\n.L84:\nmovl $0,%eax\n.L82:\n.LBE69:\n.LBE66:\ntestb %al,%al\nje .L66\n.LBB70:\n.LBB71:\nmovb $0,-25(%rbp)\nmovzbl -25(%rbp),%eax\njmp .L89\n.L67:\n.LBE71:\n.LBE70:\n.LBE65:\n.LBE64:\n.LBB72:\n.LBB73:\nmovb $0,-25(%rbp)\nmovzbl -25(%rbp),%eax\njmp .L89\n.L66:\n.LBE73:\n.LBE72:\n.LBE63:\n.LBE62:\n.LBE54:\n.LBE53:\n.LBB74:\naddq $1,-24(%rbp)\n.L54:\n.LBE74:\nmovq -216(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L95\n.LBE51:\n.LBE50:\n.LBB75:\nmovq -184(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovb %al,-25(%rbp)\nmovzbl -25(%rbp),%eax\n.L89:\n.LBE75:\n.LBE43:\naddq $208,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "if len(input) == 0 {\n\treturn true\n}\nif len(input)%2 != 0 {\n\treturn false\n}\nvar stack []byte\nfor i := 0; i < len(input); i++ {\n\tif input[i] == \"STR\" || input[i] == \"STR\" || input[i] == \"STR\" {\n\t\tstack = append(stack, input[i])\n\t} else {\n\t\tif len(stack) > 0 {\n\t\t\tpair := string(stack[len(stack)-1]) + string(input[i])\n\t\t\tstack = stack[:len(stack)-1]\n\t\t\tif pair != \"STR\" && pair != \"STR\" && pair != \"STR\" {\n\t\t\t\treturn false\n\t\t\t}\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n}\nreturn len(stack) == 0"}
{"src": ".LFB1:\nleaq -1096(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L48\nmovl $1096,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L48:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1048,%rsp\nmovq %rdi,-936(%rbp)\nleaq <.LC18>(%rip),%rax\nmovl $4,%edx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nleaq <.LC19>(%rip),%rcx\nmovl $4,%ebx\nmovq %rcx,-768(%rbp)\nmovq %rbx,-760(%rbp)\nmovq $3,-752(%rbp)\nmovq $3,-744(%rbp)\nleaq <.LC18>(%rip),%r8\nmovl $4,%r9d\nmovq %r8,-736(%rbp)\nmovq %r9,-728(%rbp)\nleaq <.LC20>(%rip),%r12\nmovl $4,%r13d\nmovq %r12,-720(%rbp)\nmovq %r13,-712(%rbp)\nmovq $3,-704(%rbp)\nmovq $1,-696(%rbp)\nleaq <.LC18>(%rip),%r14\nmovl $4,%r15d\nmovq %r14,-688(%rbp)\nmovq %r15,-680(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-1056(%rbp)\nmovq $4,-1048(%rbp)\nmovdqa -1056(%rbp),%xmm0\nmovups %xmm0,-672(%rbp)\nmovq $0,-656(%rbp)\nmovq $1,-648(%rbp)\nleaq <.LC22>(%rip),%rax\nmovq %rax,-1040(%rbp)\nmovq $9,-1032(%rbp)\nmovdqa -1040(%rbp),%xmm1\nmovups %xmm1,-640(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-1024(%rbp)\nmovq $9,-1016(%rbp)\nmovdqa -1024(%rbp),%xmm2\nmovups %xmm2,-624(%rbp)\nmovq $11,-608(%rbp)\nmovq $3,-600(%rbp)\nleaq <.LC24>(%rip),%rax\nmovq %rax,-1008(%rbp)\nmovq $5,-1000(%rbp)\nmovdqa -1008(%rbp),%xmm3\nmovups %xmm3,-592(%rbp)\nleaq <.LC25>(%rip),%rax\nmovq %rax,-992(%rbp)\nmovq $5,-984(%rbp)\nmovdqa -992(%rbp),%xmm4\nmovups %xmm4,-576(%rbp)\nmovq $19,-560(%rbp)\nmovq $2,-552(%rbp)\nleaq -784(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq $5,-808(%rbp)\nmovq $5,-800(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC26>(%rip),%r10\nmovl $70,%r11d\nleaq -208(%rbp),%rax\nmovq %r10,%rsi\nmovq %r11,%rdi\nmovq %r10,%rcx\nmovq %r11,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB23:\nmovq $0,-880(%rbp)\nmovq $0,-872(%rbp)\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\nmovq $0,-840(%rbp)\n.LBB24:\n.LBB25:\n.LBB26:\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -800(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%r14\nmovl $0,%r13d\n.LBE26:\njmp .L38\n.L47:\n.LBB27:\nnop\n.LBE27:\n.LBB28:\n.LBB29:\nmovq -456(%rbp),%rax\ntestq %r13,%r13\njs .L39\ncmpq %rax,%r13\njge .L39\nmovq -464(%rbp),%rdx\nmovq %r13,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-512(%rbp)\nmovq %rbx,-504(%rbp)\nmovq <16>(%rax),%rcx\nmovq <24>(%rax),%rbx\nmovq %rcx,-496(%rbp)\nmovq %rbx,-488(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBE29:\n.LBB30:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-880(%rbp)\nmovq %rdx,-872(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\n.LBE30:\n.LBB31:\nmovq -840(%rbp),%rax\nmovq %rax,-824(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-928(%rbp)\nmovq %rdx,-920(%rbp)\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-912(%rbp)\nmovq %rdx,-904(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-896(%rbp)\nmovq -896(%rbp),%rcx\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq -928(%rbp),%rsi\nmovq -920(%rbp),%r9\nmovq %rcx,%r8\nmovq %rdx,%rcx\nmovq %rax,%rdx\nmovq %rsi,%rdi\nmovq %r9,%rsi\ncall <go.leetcode.equalSubstring>\nmovq %rax,%r12\nleaq <go.leetcode..go.leetcode.para1208..d>(%rip),%rax\nmovq %rax,-1088(%rbp)\nleaq <go.leetcode..go.leetcode.para1208..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -896(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L40\njmp .L45\n.L39:\n.LBE31:\n.LBB34:\nmovq %rax,%rsi\nmovq %r13,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\n.LBE34:\n.LBB35:\n.LBB32:\nmovq -360(%rbp),%rax\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -320(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.LBE32:\njmp .L42\n.L45:\n.LBB33:\nmovq -360(%rbp),%rax\nleaq -352(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para1208..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L42:\n.LBE33:\nmovq -360(%rbp),%rax\nmovq %rax,-1080(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-1072(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq %r12,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-1064(%rbp)\nmovdqa -1088(%rbp),%xmm5\nmovups %xmm5,-304(%rbp)\nmovdqa -1072(%rbp),%xmm6\nmovups %xmm6,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC27>(%rip),%rax\nmovq %rax,-976(%rbp)\nmovq $37,-968(%rbp)\nleaq -144(%rbp),%rax\nmovq -976(%rbp),%rcx\nmovq -968(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE35:\n.LBE28:\n.LBB36:\naddq $1,%r13\n.L38:\n.LBE36:\ncmpq %r14,%r13\njl .L47\n.LBE25:\n.LBE24:\n.LBE23:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC28>(%rip),%rax\nmovq %rax,-960(%rbp)\nmovq $3,-952(%rbp)\nleaq -80(%rbp),%rax\nmovq -960(%rbp),%rcx\nmovq -952(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1208{\n\t{\n\t\tpara1208{\"STR\", \"STR\", 3},\n\t\tans1208{3},\n\t},\n\t{\n\t\tpara1208{\"STR\", \"STR\", 3},\n\t\tans1208{1},\n\t},\n\t{\n\t\tpara1208{\"STR\", \"STR\", 0},\n\t\tans1208{1},\n\t},\n\t{\n\t\tpara1208{\"STR\", \"STR\", 11},\n\t\tans1208{3},\n\t},\n\t{\n\t\tpara1208{\"STR\", \"STR\", 19},\n\t\tans1208{2},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1208, q.para1208\n\tfmt.Printf(\"STR\", p, equalSubstring(p.s, p.t, p.maxCost))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\nleaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $520,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nmovq %rdi,-488(%rbp)\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-448(%rbp)\nleaq <.LC22>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $8,-504(%rbp)\nmovdqa -512(%rbp),%xmm0\nmovups %xmm0,-416(%rbp)\nleaq <type...69x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovq -440(%rbp),%rax\nmovq $124123,(%rax)\nmovq $13425,<8>(%rax)\nmovq $123,<16>(%rax)\nmovq $65,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq $54362,<40>(%rax)\nmovq $134,<48>(%rax)\nmovq $6543,<56>(%rax)\nmovq $213,<64>(%rax)\nmovq -440(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $9,-392(%rbp)\nmovq $9,-384(%rbp)\nmovq $3,-376(%rbp)\nleaq <.LC22>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-368(%rbp)\nmovq %r15,-360(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-432(%rbp)\nmovq -432(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nleaq <.LC22>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-320(%rbp)\nmovq %r13,-312(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-424(%rbp)\nmovq -424(%rbp),%rax\nmovl $4253626756,%ebx\nmovq %rbx,(%rax)\nmovq $3245876,<8>(%rax)\nmovq $2345897,<16>(%rax)\nmovq $23490,<24>(%rax)\nmovq -424(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $4,-296(%rbp)\nmovq $4,-288(%rbp)\nmovq $1,-280(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -448(%rbp),%rax\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -448(%rbp),%rax\nleaq -416(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -448(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $3,-472(%rbp)\nmovq $3,-464(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -224(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-256(%rbp)\nmovq %rdi,-248(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE10:\n.LBB11:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC23>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -488(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $472,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs []int\n\texpect int\n}{\n\t{\"STR\", []int{124123, 13425, 123, 65, 1, 54362, 134, 6543, 213}, 3},\n\t{\"STR\", []int{}, 0},\n\t{\"STR\", []int{4253626756, 3245876, 2345897, 23490}, 1},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.inputs)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.inputs)\n\t\t}\n\t})\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L22\nmovl $152,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $136,%rsp\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq <24>(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-32(%rbp)\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L4\ncmpq %rax,-32(%rbp)\njl .L19\n.L4:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rbx\nleaq <go.day296.BST..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq %rbx,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB6:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE6:\njmp .L7\n.L6:\n.LBB7:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.day296.BST..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE7:\nmovq -136(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq <32>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L8\ncmpq %rax,-32(%rbp)\njg .L8\ncmpq $0,-32(%rbp)\njns .L9\njmp .L20\n.L8:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L20:\nmovq -32(%rbp),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L9:\nmovq <16>(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\ncall <go.day296.SortedSliceToBST>\naddq $32,%rsp\nmovq %rax,%rdx\nmovq -40(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L11\n.LBB8:\nmovq %rdx,(%rax)\n.LBE8:\njmp .L12\n.L11:\n.LBB9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L12:\n.LBE9:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq <32>(%rbp),%rdx\ntestq %rax,%rax\njs .L13\ncmpq %rdx,%rax\njle .L21\n.L13:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L21:\nmovq <16>(%rbp),%rcx\nmovq <32>(%rbp),%rdx\ncmpq %rdx,%rax\nje .L15\nmovq %rax,%rdx\nsalq $3,%rdx\njmp .L16\n.L15:\nmovl $0,%edx\n.L16:\naddq %rcx,%rdx\nmovq %rdx,-64(%rbp)\nmovq <24>(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-56(%rbp)\nmovq <32>(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-48(%rbp)\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\ncall <go.day296.SortedSliceToBST>\naddq $32,%rsp\nmovq %rax,%rdx\nmovq -40(%rbp),%rax\naddq $16,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L17\n.LBB10:\nmovq %rdx,(%rax)\n.LBE10:\njmp .L18\n.L17:\n.LBB11:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L18:\n.LBE11:\n.LBB12:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L3:\n.LBE12:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if len(sorted) == 0 {\n\treturn nil\n}\nmid := len(sorted) / 2\nroot := &BST{Value: sorted[mid]}\nroot.Left = SortedSliceToBST(sorted[:mid])\nroot.Right = SortedSliceToBST(sorted[mid+1:])\nreturn root"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L56\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L56:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-168(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\n.LBB32:\nmovb $0,-17(%rbp)\n.LBB33:\ncmpq $0,-168(%rbp)\njns .L31\n.LBB34:\nmovb $1,-17(%rbp)\nnegq -168(%rbp)\n.L31:\n.LBE34:\n.LBE33:\nleaq <.LC30>(%rip),%rax\nmovl $0,%edx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <bytes.NewBufferString@PLT>\nmovq %rax,-48(%rbp)\n.LBB35:\n.LBB36:\njmp .L32\n.L54:\n.LBB37:\nnop\n.LBE37:\n.LBB38:\nmovq -168(%rbp),%rcx\nmovabsq $5270498306774157605,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nmovq %rcx,%rdx\nsarq $63,%rdx\nsubq %rdx,%rax\nmovq %rax,%rdx\nsalq $3,%rdx\nsubq %rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\nmovq %rax,-56(%rbp)\nmovq -168(%rbp),%rcx\nmovabsq $5270498306774157605,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\nmovq %rax,-168(%rbp)\nmovq -56(%rbp),%rax\nleal <48>(%rax),%edx\nmovq -48(%rbp),%rax\nmovl %edx,%esi\nmovq %rax,%rdi\ncall <bytes.Buffer.WriteByte@PLT>\n.L32:\n.LBE38:\ncmpq $6,-168(%rbp)\njg .L54\n.LBE36:\n.LBE35:\nmovq -168(%rbp),%rax\nleal <48>(%rax),%edx\nmovq -48(%rbp),%rax\nmovl %edx,%esi\nmovq %rax,%rdi\ncall <bytes.Buffer.WriteByte@PLT>\n.LBB39:\ncmpb $0,-17(%rbp)\nje .L35\n.LBB40:\nmovq -48(%rbp),%rax\nmovl $45,%esi\nmovq %rax,%rdi\ncall <bytes.Buffer.WriteByte@PLT>\n.L35:\n.LBE40:\n.LBE39:\nleaq -160(%rbp),%rax\nmovq -48(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <bytes.Buffer.Bytes@PLT>\n.LBB41:\nmovq $0,-32(%rbp)\nmovq -152(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-40(%rbp)\n.LBB42:\njmp .L36\n.L55:\n.LBB43:\nnop\n.LBE43:\n.LBB44:\n.LBB45:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -32(%rbp),%rdx\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,-80(%rbp)\nmovq %rbx,-72(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -40(%rbp),%rax\nmovq -152(%rbp),%rcx\ncmpq $0,-40(%rbp)\njs .L37\ncmpq %rcx,-40(%rbp)\njl .L49\n.L37:\nmovq -40(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L49:\nmovq -160(%rbp),%rsi\nmovq -40(%rbp),%rcx\naddq %rsi,%rcx\nmovzbl (%rcx),%edi\nmovq -152(%rbp),%rcx\ncmpq $0,-32(%rbp)\njs .L39\ncmpq %rcx,-32(%rbp)\njl .L50\n.L39:\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L50:\nmovq -160(%rbp),%rsi\nmovq -32(%rbp),%rcx\naddq %rsi,%rcx\nmovzbl (%rcx),%esi\nmovq -104(%rbp),%rcx\ntestq %rdx,%rdx\njs .L41\ncmpq %rcx,%rdx\njl .L51\n.L41:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L51:\nmovq -112(%rbp),%rcx\naddq %rcx,%rdx\nmovb %dil,(%rdx)\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L43\ncmpq %rdx,%rax\njl .L52\n.L43:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L52:\nmovq -80(%rbp),%rdx\naddq %rdx,%rax\nmovb %sil,(%rax)\n.LBE45:\n.LBE44:\n.LBB46:\n.LBB47:\nmovq -32(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq %rdx,-32(%rbp)\nmovq %rax,-40(%rbp)\n.L36:\n.LBE47:\n.LBE46:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L55\n.LBE42:\n.LBE41:\n.LBB48:\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\n.LBE48:\n.LBE32:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "negative := false\nif num < 0 {\n\tnegative = true\n\tnum = -num\n}\nbf := bytes.NewBufferString(\"STR\")\nfor num >= 7 {\n\tmod := num % 7\n\tnum /= 7\n\tbf.WriteByte(byte(mod) + 48)\n}\nbf.WriteByte(byte(num) + 48)\nif negative {\n\tbf.WriteByte('-')\n}\nbs := bf.Bytes()\nfor s, e := 0, len(bs)-1; s < e; s, e = s+1, e-1 {\n\tbs[s], bs[e] = bs[e], bs[s]\n}\nreturn string(bs)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L29\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovb $0,-17(%rbp)\n.LBB2:\nmovq -48(%rbp),%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <strings.ToLower@PLT>\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq $0,-8(%rbp)\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L28:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\n.LBB8:\njmp .L3\n.L26:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\naddq $1,-8(%rbp)\n.L3:\n.LBE10:\n.LBB11:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L4\n.LBB12:\nmovq -40(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L5\ncmpq %rax,-8(%rbp)\njge .L5\nmovq -48(%rbp),%rdx\nmovq -8(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovl %eax,%edi\ncall <go.leetcode0125.isChar>\nxorl $1,%eax\njmp .L4\n.L5:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE12:\n.LBE11:\ntestb %al,%al\njne .L26\n.LBE8:\n.LBE7:\n.LBB13:\n.LBB14:\njmp .L8\n.L27:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\nsubq $1,-16(%rbp)\n.L8:\n.LBE16:\n.LBB17:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L9\n.LBB18:\nmovq -40(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L10\ncmpq %rax,-16(%rbp)\njge .L10\nmovq -48(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovl %eax,%edi\ncall <go.leetcode0125.isChar>\nxorl $1,%eax\njmp .L9\n.L10:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9:\n.LBE18:\n.LBE17:\ntestb %al,%al\njne .L27\n.LBE14:\n.LBE13:\n.LBB19:\nmovq -40(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L13\ncmpq %rax,-8(%rbp)\njl .L23\n.L13:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq -40(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L15\ncmpq %rax,-16(%rbp)\njl .L24\n.L15:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq -48(%rbp),%rdx\nmovq -8(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -48(%rbp),%rcx\nmovq -16(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nje .L17\n.LBB20:\n.LBB21:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L18\n.L17:\n.LBE21:\n.LBE20:\n.LBE19:\naddq $1,-8(%rbp)\nsubq $1,-16(%rbp)\n.L2:\n.LBE6:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njl .L28\n.LBE4:\n.LBE3:\n.LBB22:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L18:\n.LBE22:\n.LBE2:\nleave\nret", "tgt": "s = strings.ToLower(s)\ni, j := 0, len(s)-1\nfor i < j {\n\tfor i < j && !isChar(s[i]) {\n\t\ti++\n\t}\n\tfor i < j && !isChar(s[j]) {\n\t\tj--\n\t}\n\tif s[i] != s[j] {\n\t\treturn false\n\t}\n\ti++\n\tj--\n}\nreturn true"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L16\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,-72(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq %rbx,-48(%rbp)\nmovq -56(%rbp),%rax\nmovq <24>(%rbp),%rdx\ncmpq %rax,%rdx\ncmovle %rdx,%rax\nleaq <0>(,%rax,8),%rdx\nmovq <16>(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memmove@PLT>\n.LBB2:\nmovq $0,-24(%rbp)\n.LBB3:\njmp .L2\n.L15:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq -24(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\ncmpq $-1,-32(%rbp)\nje .L3\ncmpq $0,-32(%rbp)\njne .L4\ncall <runtime.panicdivide@PLT>\n.L4:\ncqto\nidivq -32(%rbp)\nmovq %rdx,%rax\njmp .L5\n.L3:\nmovl $0,%eax\n.L5:\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L6\ncmpq %rdx,%rax\njl .L12\n.L6:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq -56(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L8\ncmpq %rdx,-24(%rbp)\njl .L13\n.L8:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\nmovq -64(%rbp),%rcx\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rdx,%rcx\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rax,%rdx\nmovq (%rcx),%rax\nmovq %rax,(%rdx)\n.LBE5:\n.LBB6:\naddq $1,-24(%rbp)\n.L2:\n.LBE6:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\njl .L15\n.LBE3:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "n := len(nums)\ntmp := make([]int, n)\ncopy(tmp, nums)\nfor i := 0; i < n; i++ {\n\tnums[(i+k)%n] = tmp[i]\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L44\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L44:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $176,%rsp\nmovq %rdi,-184(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,%rdi\ncall <time.Now@PLT>\nleaq -144(%rbp),%rax\nmovq %rax,%rdi\ncall <time.Time.UnixNano@PLT>\nmovq %rax,%rdi\ncall <math..z2frand.NewSource@PLT>\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <math..z2frand.New@PLT>\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\nmovl $90,%esi\nmovq %rax,%rdi\ncall <math..z2frand.Rand.Intn@PLT>\nleaq <10>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-176(%rbp)\nmovq %rbx,-168(%rbp)\nmovq %rbx,-160(%rbp)\n.LBB22:\nmovq $0,-32(%rbp)\n.LBB23:\n.LBB24:\n.LBB25:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r12\nmovl $0,%ebx\n.LBE25:\njmp .L28\n.L42:\n.LBB26:\nnop\n.LBE26:\n.LBB27:\nmovq %rbx,-32(%rbp)\n.LBB28:\nmovq -24(%rbp),%rax\nmovl $100,%esi\nmovq %rax,%rdi\ncall <math..z2frand.Rand.Intn@PLT>\nmovq %rax,%rdx\nmovq -168(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L29\ncmpq %rax,-32(%rbp)\njl .L39\n.L29:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -176(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rdx,(%rax)\n.LBE28:\n.LBE27:\n.LBB29:\naddq $1,%rbx\n.L28:\n.LBE29:\ncmpq %r12,%rbx\njl .L42\n.LBE24:\n.LBE23:\n.LBE22:\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\ncall <go.ExponentialSearch.SortArray>\naddq $32,%rsp\n.LBB30:\nmovq $0,-40(%rbp)\n.LBB31:\n.LBB32:\n.LBB33:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%r12\nmovl $0,%ebx\n.LBE33:\njmp .L33\n.L43:\n.LBB34:\nnop\n.LBE34:\n.LBB35:\n.LBB36:\nmovq -72(%rbp),%rax\ntestq %rbx,%rbx\njs .L34\ncmpq %rax,%rbx\njge .L34\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE36:\n.LBB37:\nmovq %rax,-40(%rbp)\n.LBE37:\n.LBB38:\nmovq -40(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <go.ExponentialSearch.ExponentialSearch>\naddq $32,%rsp\nmovq %rax,-48(%rbp)\n.LBB39:\ncmpq $-1,-48(%rbp)\nje .L35\njmp .L36\n.L34:\n.LBE39:\n.LBE38:\n.LBB42:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\n.LBE42:\n.LBB43:\n.LBB41:\n.LBB40:\nmovq -184(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Fail..stub@PLT>\n.L36:\n.LBE40:\n.LBE41:\n.LBE43:\n.LBE35:\n.LBB44:\naddq $1,%rbx\n.L33:\n.LBE44:\ncmpq %r12,%rbx\njl .L43\n.LBE32:\n.LBE31:\n.LBE30:\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "random := rand.New(rand.NewSource(time.Now().UnixNano()))\narray := make([]int, random.Intn(100-10)+10)\nfor i := range array {\n\tarray[i] = random.Intn(100)\n}\nSortArray(array)\nfor _, value := range array {\n\tresult := ExponentialSearch(array, value)\n\tif result == -1 {\n\t\tt.Fail()\n\t}\n}"}
{"src": ".LFB2:\nleaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L145\nmovl $536,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L145:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $488,%rsp\nmovq %rdi,-456(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB94:\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\nmovq $0,-416(%rbp)\n.LBB95:\n.LBB96:\n.LBB97:\nmovq <go.day181.testcases>(%rip),%rax\nmovq <8+go.day181.testcases>(%rip),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16+go.day181.testcases>(%rip),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%r13\nmovl $0,%r12d\n.LBE97:\njmp .L126\n.L144:\n.LBB98:\nnop\n.LBE98:\n.LBB99:\n.LBB100:\nmovq -312(%rbp),%rax\ntestq %r12,%r12\njs .L127\ncmpq %rax,%r12\njge .L127\nmovq -320(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <32>(%rcx),%rax\nmovq %rax,-336(%rbp)\n.LBE100:\n.LBB101:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-416(%rbp)\n.LBE101:\n.LBB102:\n.LBB103:\nleaq -400(%rbp),%rcx\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <go.day181.MinimumPartitionPalindrome>\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L128\njmp .L142\n.L127:\n.LBE103:\n.LBE102:\n.LBB116:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L128:\n.LBE116:\n.LBB117:\n.LBB115:\n.LBB104:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE104:\njmp .L130\n.L142:\n.LBB105:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L130:\n.LBE105:\nmovq -216(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L131\n.LBB106:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE106:\njmp .L132\n.L131:\n.LBB107:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L132:\n.LBE107:\nmovq -248(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -496(%rbp),%rdx\nmovq -488(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L133\n.LBB108:\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L134\n.LBB109:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE109:\njmp .L135\n.L134:\n.LBB110:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L135:\n.LBE110:\nmovq -184(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L136\n.LBB111:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE111:\njmp .L137\n.L136:\n.LBB112:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L137:\n.LBE112:\nmovq -152(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -512(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L138\n.LBB113:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE113:\njmp .L139\n.L138:\n.LBB114:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L139:\n.LBE114:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC24>(%rip),%r14\nmovl $19,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -456(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L133:\n.LBE108:\n.LBE115:\n.LBE117:\n.LBE99:\n.LBB118:\naddq $1,%r12\n.L126:\n.LBE118:\ncmpq %r13,%r12\njl .L144\n.LBE96:\n.LBE95:\n.LBE94:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := MinimumPartitionPalindrome(tc.input); !reflect.DeepEqual(result, tc.expected) {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": ".LFB2:\nleaq -920(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L40\nmovl $920,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L40:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $872,%rsp\nmovq %rdi,-744(%rbp)\ncall <go.leetcode.Constructor732>\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nleaq -736(%rbp),%rax\nmovl $20,%edx\nmovl $10,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyCalendarThree.Book>\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-696(%rbp)\nmovq -696(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -696(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-688(%rbp)\nmovq %r15,-680(%rbp)\nleaq -688(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq $1,-424(%rbp)\nmovq $1,-416(%rbp)\nleaq <.LC24>(%rip),%r12\nmovl $11,%r13d\nleaq -400(%rbp),%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -416(%rbp)\npushq -424(%rbp)\npushq -432(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-704(%rbp)\nleaq -736(%rbp),%rax\nmovl $60,%edx\nmovl $50,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyCalendarThree.Book>\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r15\nmovq %r15,-912(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-904(%rbp)\nmovdqa -912(%rbp),%xmm0\nmovups %xmm0,-640(%rbp)\nleaq -640(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $1,-360(%rbp)\nmovq $1,-352(%rbp)\nleaq <.LC24>(%rip),%r14\nmovq %r14,-832(%rbp)\nmovq $11,-824(%rbp)\nleaq -336(%rbp),%rdi\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -352(%rbp)\npushq -360(%rbp)\npushq -368(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-656(%rbp)\nleaq -736(%rbp),%rax\nmovl $40,%edx\nmovl $10,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyCalendarThree.Book>\nmovq %rax,%rbx\nmovq %r15,-896(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-888(%rbp)\nmovdqa -896(%rbp),%xmm1\nmovups %xmm1,-592(%rbp)\nleaq -592(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $1,-296(%rbp)\nmovq $1,-288(%rbp)\nmovq %r14,-816(%rbp)\nmovq $11,-808(%rbp)\nleaq -272(%rbp),%rdi\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -288(%rbp)\npushq -296(%rbp)\npushq -304(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-608(%rbp)\nleaq -736(%rbp),%rax\nmovl $15,%edx\nmovl $5,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyCalendarThree.Book>\nmovq %rax,%rbx\nmovq %r15,-880(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-552(%rbp)\nmovq -552(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -552(%rbp),%rax\nmovq %rax,-872(%rbp)\nmovdqa -880(%rbp),%xmm2\nmovups %xmm2,-544(%rbp)\nleaq -544(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nmovq %r14,-800(%rbp)\nmovq $11,-792(%rbp)\nleaq -208(%rbp),%rax\nmovq -800(%rbp),%rcx\nmovq -792(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-560(%rbp)\nleaq -736(%rbp),%rax\nmovl $10,%edx\nmovl $5,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyCalendarThree.Book>\nmovq %rax,%rbx\nmovq %r15,-864(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-504(%rbp)\nmovq -504(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -504(%rbp),%rax\nmovq %rax,-856(%rbp)\nmovdqa -864(%rbp),%xmm3\nmovups %xmm3,-496(%rbp)\nleaq -496(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nmovq %r14,-784(%rbp)\nmovq $11,-776(%rbp)\nleaq -144(%rbp),%rax\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-512(%rbp)\nleaq -736(%rbp),%rax\nmovl $55,%edx\nmovl $25,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyCalendarThree.Book>\nmovq %rax,%rbx\nmovq %r15,-848(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-456(%rbp)\nmovq -456(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -456(%rbp),%rax\nmovq %rax,-840(%rbp)\nmovdqa -848(%rbp),%xmm4\nmovups %xmm4,-448(%rbp)\nleaq -448(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nmovq %r14,-768(%rbp)\nmovq $11,-760(%rbp)\nleaq -80(%rbp),%rax\nmovq -768(%rbp),%rcx\nmovq -760(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-464(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "obj := Constructor732()\nfmt.Printf(\"STR\", obj.Book(10, 20))\nfmt.Printf(\"STR\", obj.Book(50, 60))\nfmt.Printf(\"STR\", obj.Book(10, 40))\nfmt.Printf(\"STR\", obj.Book(5, 15))\nfmt.Printf(\"STR\", obj.Book(5, 10))\nfmt.Printf(\"STR\", obj.Book(25, 55))"}
{"src": "cmpq %fs:112,%rsp\njnb .L93\nmovl $72,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L93:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $48,%rsp\nmovb $0,-17(%rbp)\n.LBB32:\n.LBB33:\n.LBB34:\nmovq <16>(%rbp),%rax\ntestq %rax,%rax\nsete %al\ntestb %al,%al\nje .L77\n.LBB35:\nmovq <40>(%rbp),%rax\ntestq %rax,%rax\nsete %al\n.L77:\n.LBE35:\n.LBE34:\ntestb %al,%al\nje .L78\n.LBB36:\n.LBB37:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L79\n.L78:\n.LBE37:\n.LBE36:\n.LBE33:\n.LBB38:\nmovq <24>(%rbp),%rdx\nmovq <48>(%rbp),%rax\ncmpq %rax,%rdx\nje .L80\n.LBB39:\n.LBB40:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L79\n.L80:\n.LBE40:\n.LBE39:\n.LBE38:\n.LBB41:\nmovq $0,-32(%rbp)\n.LBB42:\n.LBB43:\n.LBB44:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%r12\nmovl $0,%ebx\n.LBE44:\njmp .L81\n.L92:\n.LBB45:\nnop\n.LBE45:\n.LBB46:\nmovq %rbx,-32(%rbp)\n.LBB47:\n.LBB48:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L82\ncmpq %rax,-32(%rbp)\njl .L89\n.L82:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L89:\nmovq <48>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L84\ncmpq %rax,-32(%rbp)\njl .L90\n.L84:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L90:\nmovq <40>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $2,%rax\nleaq (%rdx,%rax),%rcx\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $2,%rax\naddq %rdx,%rax\nmovl $4,%edx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L86\n.LBB49:\n.LBB50:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L79\n.L86:\n.LBE50:\n.LBE49:\n.LBE48:\n.LBE47:\n.LBE46:\n.LBB51:\naddq $1,%rbx\n.L81:\n.LBE51:\ncmpq %r12,%rbx\njl .L92\n.LBE43:\n.LBE42:\n.LBE41:\n.LBB52:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L79:\n.LBE52:\n.LBE32:\naddq $48,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "if a == nil && b == nil {\n\treturn true\n}\nif len(a) != len(b) {\n\treturn false\n}\nfor i := range a {\n\tif a[i] != b[i] {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\nsubq $224,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB2:\nleaq <.LC0>(%rip),%rax\nmovl $1,%edx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBB3:\nmovq $1,-8(%rbp)\n.LBB4:\njmp .L2\n.L19:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq $0,-16(%rbp)\nmovb $0,-17(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\n.LBB7:\nmovq $0,-32(%rbp)\n.LBB8:\njmp .L3\n.L18:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\n.LBB11:\nmovq -184(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L4\ncmpq %rax,-32(%rbp)\njge .L4\nmovq -192(%rbp),%rdx\nmovq -32(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb %al,-17(%rbp)\nje .L5\njmp .L15\n.L4:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L5:\n.LBB12:\naddq $1,-16(%rbp)\njmp .L7\n.L15:\n.LBE12:\n.LBE11:\n.LBB13:\ncmpq $0,-16(%rbp)\nje .L8\n.LBB14:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -16(%rbp),%rax\nleaq <48>(%rax),%rdx\nleaq -152(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovzbl -17(%rbp),%edx\nleaq -148(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\n.L8:\n.LBE14:\n.LBE13:\n.LBB15:\nmovl $1,%edx\nmovq -184(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L9\ncmpq %rax,-32(%rbp)\njge .L9\nmovq -192(%rbp),%rcx\nmovq -32(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\nmovq %rdx,-16(%rbp)\nmovb %al,-17(%rbp)\njmp .L7\n.L9:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE15:\n.LBE10:\n.LBB16:\naddq $1,-32(%rbp)\n.L3:\n.LBE16:\nmovq -184(%rbp),%rax\ncmpq %rax,-32(%rbp)\njl .L18\n.LBE8:\n.LBE7:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -16(%rbp),%rax\nleaq <48>(%rax),%rdx\nleaq -88(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovzbl -17(%rbp),%edx\nleaq -84(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nleaq -80(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBE6:\n.LBB17:\naddq $1,-8(%rbp)\n.L2:\n.LBE17:\nmovq -8(%rbp),%rax\ncmpq -216(%rbp),%rax\njl .L19\n.LBE4:\n.LBE3:\n.LBB18:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\n.LBE18:\n.LBE2:\nleave\nret", "tgt": "val := \"STR\"\nfor i := 1; i < n; i++ {\n\tvar (\n\t\tc   int\n\t\tv   byte\n\t\tstr string\n\t)\n\tfor j := 0; j < len(val); j++ {\n\t\tif val[j] == v {\n\t\t\tc++\n\t\t\tcontinue\n\t\t}\n\t\tif c != 0 {\n\t\t\tstr += string(c+'0') + string(v)\n\t\t}\n\t\tc, v = 1, val[j]\n\t}\n\tval = str + string(c+'0') + string(v)\n}\nreturn val"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-56(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\ncmpq $0,-56(%rbp)\nje .L2\n.LBB4:\nmovq -56(%rbp),%rax\nnegq %rax\nandq -56(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -56(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,-32(%rbp)\nmovq -56(%rbp),%rax\nxorq -32(%rbp),%rax\nmovq %rax,-40(%rbp)\ncmpq $-1,-24(%rbp)\njne .L3\nmovq -40(%rbp),%rax\nnegq %rax\njmp .L4\n.L3:\ncmpq $0,-24(%rbp)\njne .L5\ncall <runtime.panicdivide@PLT>\n.L5:\nmovq -40(%rbp),%rax\ncqto\nidivq -24(%rbp)\n.L4:\nmovq %rax,-40(%rbp)\nsarq $2,-40(%rbp)\nmovq -32(%rbp),%rax\norq -40(%rbp),%rax\nmovq %rax,-8(%rbp)\n.L2:\n.LBE4:\n.LBE3:\n.LBB5:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.LBE5:\n.LBE2:\nleave\nret", "tgt": "res := 0\nif n != 0 {\n\trightMostBitInt := n & -n\n\tnextHigherSetBitInt := n + rightMostBitInt\n\td := n ^ nextHigherSetBitInt\n\td /= rightMostBitInt\n\td >>= 2\n\tres = nextHigherSetBitInt | d\n}\nreturn res"}
{"src": "cmpq %fs:112,%rsp\njnb .L111\nmovl $216,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L111:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $192,%rsp\nmovq %rdi,-200(%rbp)\nmovq %rsi,-208(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\n.LBB52:\n.LBB53:\n.LBB54:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L66\n.LBB55:\nmovq <24>(%rbp),%rax\ncmpq -208(%rbp),%rax\nsetl %al\n.L66:\n.LBE55:\n.LBE54:\ntestb %al,%al\nje .L67\n.LBB56:\n.LBB57:\nmovl $0,%edx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\nmovq -200(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L65\n.L67:\n.LBE57:\n.LBE56:\n.LBE53:\nmovq -208(%rbp),%rbx\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq %rbx,-144(%rbp)\nmovq <24>(%rbp),%rax\nsubq -208(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-192(%rbp)\nmovq %rbx,-184(%rbp)\nmovq %rbx,-176(%rbp)\n.LBB58:\nmovl $1,%eax\nsubq -208(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB59:\njmp .L69\n.L110:\n.LBB60:\nnop\n.LBE60:\n.LBB61:\n.LBB62:\n.LBB63:\ncmpq $0,-24(%rbp)\nsetg %al\ntestb %al,%al\nje .L70\n.LBB64:\nmovq -152(%rbp),%rax\ntestq %rax,%rax\njg .L71\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L71:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L72\ncmpq %rdx,%rax\njl .L100\n.L72:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L100:\nmovq -160(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L70:\n.LBE64:\n.LBE63:\ntestb %al,%al\nje .L78\n.LBB65:\nmovq -152(%rbp),%rdi\nmovq -144(%rbp),%rax\ntestq %rdi,%rdi\njs .L75\ncmpq %rax,%rdi\njg .L75\ntestq %rdi,%rdi\njg .L76\njmp .L101\n.L75:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L101:\nmovq %rdi,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L76:\nmovq -160(%rbp),%rdx\nmovq -144(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nleaq -1(%rdi),%rdx\nmovq -144(%rbp),%rax\nsubq $1,%rax\nmovq %rcx,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq %rax,-144(%rbp)\n.LBE65:\n.LBE62:\n.LBB66:\n.LBB67:\njmp .L78\n.L109:\n.LBB68:\nnop\n.LBE68:\n.LBB69:\nmovq -152(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -144(%rbp),%rax\ntestq %rdi,%rdi\njs .L79\ncmpq %rax,%rdi\njg .L79\ntestq %rdi,%rdi\njns .L80\njmp .L102\n.L79:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L102:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L80:\nmovq -160(%rbp),%rdx\nmovq -144(%rbp),%rax\nmovq %rdx,-160(%rbp)\nmovq %rdi,-152(%rbp)\nmovq %rax,-144(%rbp)\n.L78:\n.LBE69:\n.LBB70:\nmovq -152(%rbp),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L82\n.LBB71:\nmovq -152(%rbp),%rax\nsubq $1,%rax\nmovq -152(%rbp),%rdx\ntestq %rax,%rax\njs .L83\ncmpq %rdx,%rax\njl .L103\n.L83:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L103:\nmovq <24>(%rbp),%rdx\ncmpq $0,-32(%rbp)\njs .L85\ncmpq %rdx,-32(%rbp)\njl .L104\n.L85:\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L104:\nmovq -160(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetl %al\n.L82:\n.LBE71:\n.LBE70:\ntestb %al,%al\njne .L109\n.LBE67:\n.LBE66:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L89\ncmpq %rax,-32(%rbp)\njl .L106\n.L89:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L106:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L91\n.LBB72:\nmovq -96(%rbp),%rsi\nleaq -64(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-144(%rbp)\n.LBE72:\njmp .L92\n.L91:\n.LBB73:\nmovq -96(%rbp),%rcx\nmovq -80(%rbp),%rdx\nmovq %rcx,-160(%rbp)\nmovq %rax,-152(%rbp)\nmovq %rdx,-144(%rbp)\n.L92:\n.LBE73:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\n.LBB74:\ncmpq $0,-24(%rbp)\njs .L93\n.LBB75:\nmovq -184(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L94\ncmpq %rax,-24(%rbp)\njl .L107\n.L94:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L107:\nmovq -152(%rbp),%rax\ntestq %rax,%rax\njg .L96\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L96:\nmovq -160(%rbp),%rax\nmovq -192(%rbp),%rcx\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\n.L93:\n.LBE75:\n.LBE74:\n.LBE61:\n.LBB76:\n.LBB77:\nmovq -24(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq %rdx,-24(%rbp)\nmovq %rax,-32(%rbp)\n.L69:\n.LBE77:\n.LBE76:\nmovq <24>(%rbp),%rax\ncmpq %rax,-32(%rbp)\njl .L110\n.LBE59:\n.LBE58:\n.LBB78:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -200(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L65:\n.LBE78:\n.LBE52:\nmovq -200(%rbp),%rax\naddq $192,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "if len(nums) == 0 || len(nums) < k {\n\treturn make([]int, 0)\n}\nqueue := make([]int, 0, k)\nans := make([]int, len(nums)-k+1)\nfor left, right := 1-k, 0; right < len(nums); left, right = left+1, right+1 {\n\tif left > 0 && queue[0] == nums[left-1] {\n\t\tqueue = queue[1:len(queue)]\n\t}\n\tfor len(queue) != 0 && queue[len(queue)-1] < nums[right] {\n\t\tqueue = queue[:len(queue)-1]\n\t}\n\tqueue = append(queue, nums[right])\n\tif left >= 0 {\n\t\tans[left] = queue[0]\n\t}\n}\nreturn ans"}
{"src": ".LFB0:\nleaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L31\nmovl $456,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L31:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $408,%rsp\nmovq %rdi,-440(%rbp)\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB3:\ncmpq $0,-64(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nleaq <type...60x.7go.leetcode0056.Interval>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-336(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\nmovq -440(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L2:\n.LBE5:\n.LBE4:\n.LBB6:\n.LBB7:\ncmpq $1,-64(%rbp)\njne .L4\n.LBB8:\n.LBB9:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -440(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L4:\n.LBE9:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBE3:\nleaq <go.leetcode0056.merge..func1>(%rip),%rdx\nleaq <16>(%rbp),%rcx\nmovq $0,-288(%rbp)\nmovq $0,-280(%rbp)\nleaq -288(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -272(%rbp),%rax\nmovq %rdx,(%rax)\nmovq %rcx,<8>(%rax)\nmovq -272(%rbp),%rbx\nleaq <type...6.7go.leetcode0056.Interval>(%rip),%r12\nleaq <type...6.7go.leetcode0056.Interval>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-304(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L5\n.LBB10:\nmovq -328(%rbp),%rcx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -304(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE10:\njmp .L6\n.L5:\n.LBB11:\nmovq -328(%rbp),%rax\nleaq -320(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7go.leetcode0056.Interval>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE11:\nmovq -328(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L7\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L7:\nmovq <16>(%rbp),%rax\nmovq (%rax),%r12\nmovq <8>(%rax),%r13\nleaq <type...61x.7go.leetcode0056.Interval>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -264(%rbp),%rax\nmovq %r12,(%rax)\nmovq %r13,<8>(%rax)\nmovq -264(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $1,-392(%rbp)\nmovq $1,-384(%rbp)\n.LBB12:\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\n.LBB13:\nmovq <32>(%rbp),%rax\ntestq %rax,%rax\njg .L8\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L8:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $4,%rax\naddq %rdx,%rax\nmovq %rax,-256(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-248(%rbp)\nmovq <32>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-240(%rbp)\n.LBB14:\n.LBB15:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r13\nmovl $0,%ebx\n.LBE15:\njmp .L9\n.L30:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L10\ncmpq %rax,%rbx\njge .L10\nmovq -224(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE18:\n.LBB19:\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBE19:\n.LBB20:\nmovq -392(%rbp),%rax\nsubq $1,%rax\nmovq -392(%rbp),%rdx\ntestq %rax,%rax\njns .L11\njmp .L12\n.L10:\n.LBE20:\n.LBB28:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE28:\n.LBB29:\ncmpq %rdx,%rax\njl .L27\n.L12:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq -400(%rbp),%rdx\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\n.LBB21:\nmovq -416(%rbp),%rdx\nmovq -424(%rbp),%rax\ncmpq %rax,%rdx\njg .L14\n.LBB22:\nmovq -424(%rbp),%rax\nmovq %rax,-56(%rbp)\n.LBB23:\nmovq -408(%rbp),%rax\ncmpq %rax,-56(%rbp)\njge .L15\n.LBB24:\nmovq -408(%rbp),%rax\nmovq %rax,-56(%rbp)\n.L15:\n.LBE24:\n.LBE23:\nmovq -392(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -384(%rbp),%rax\ntestq %rdi,%rdi\njs .L16\ncmpq %rax,%rdi\njg .L16\ntestq %rdi,%rdi\njns .L17\njmp .L28\n.L16:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L28:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L17:\nmovq -432(%rbp),%rdx\nmovq -400(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%r12\nmovq %rdx,%r14\nmovq -56(%rbp),%r15\nleaq <1>(%r12),%rax\nmovq -176(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L19\nmovq -192(%rbp),%rsi\nleaq -128(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <go.leetcode0056.Interval..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-176(%rbp)\njmp .L20\n.L19:\nmovq -192(%rbp),%rcx\nmovq -176(%rbp),%rdx\nmovq %rcx,-192(%rbp)\nmovq %rax,-184(%rbp)\nmovq %rdx,-176(%rbp)\n.L20:\nmovq -192(%rbp),%rax\nmovq %r12,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r14,(%rax)\nmovq %r15,<8>(%rax)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE22:\njmp .L21\n.L14:\n.LBB25:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -144(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L22\n.LBB26:\nmovq -160(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <go.leetcode0056.Interval..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE26:\njmp .L23\n.L22:\n.LBB27:\nmovq -160(%rbp),%rcx\nmovq -144(%rbp),%rdx\nmovq %rcx,-400(%rbp)\nmovq %rax,-392(%rbp)\nmovq %rdx,-384(%rbp)\n.L23:\n.LBE27:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -160(%rbp),%rax\nmovq %r12,%rdx\nsalq $4,%rdx\nleaq (%rax,%rdx),%rcx\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.L21:\n.LBE25:\n.LBE21:\n.LBE29:\n.LBE17:\n.LBB30:\naddq $1,%rbx\n.L9:\n.LBE30:\ncmpq %r13,%rbx\njl .L30\n.LBE14:\n.LBE13:\n.LBE12:\n.LBB31:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -440(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE31:\n.LBE2:\nmovq -440(%rbp),%rax\naddq $408,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "n := len(intervals)\nif n == 0 {\n\treturn []Interval{}\n} else if n == 1 {\n\treturn intervals\n}\nsort.Slice(intervals, func(i, j int) bool {\n\treturn intervals[i].Start < intervals[j].Start\n})\nres := []Interval{intervals[0]}\nfor _, cur := range intervals[1:] {\n\tprevious := res[len(res)-1]\n\tif cur.Start <= previous.End {\n\t\tend := previous.End\n\t\tif cur.End > end {\n\t\t\tend = cur.End\n\t\t}\n\t\tres = append(res[:len(res)-1], Interval{Start: previous.Start, End: end})\n\t} else {\n\t\tres = append(res, cur)\n\t}\n}\nreturn res"}
{"src": ".LFB12:\ncmpq %fs:112,%rsp\njnb .L257\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL13:\nret\n.L257:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $176,%rsp\nmovq $9999,-56(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB160:\nmovq -56(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB161:\njmp .L245\n.L256:\n.LBB162:\nnop\n.LBE162:\n.LBB163:\nmovq -40(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB164:\nmovq $1,-48(%rbp)\n.LBB165:\njmp .L246\n.L255:\n.LBB166:\nnop\n.LBE166:\n.LBB167:\nmovq -48(%rbp),%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.algo.concatenMultiplication>\nmovq %rax,-32(%rbp)\n.LBB168:\n.LBB169:\nmovq -32(%rbp),%rax\nmovq %rax,%rdi\ncall <go.algo.IsPandigital>\ntestb %al,%al\nje .L247\n.LBB170:\nmovq -32(%rbp),%rax\ncmpq -24(%rbp),%rax\nsetg %al\n.L247:\n.LBE170:\n.LBE169:\ntestb %al,%al\nje .L248\n.LBB171:\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-160(%rbp)\nmovq %r13,-152(%rbp)\nleaq -160(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\n.L248:\n.LBE171:\n.LBE168:\n.LBE167:\n.LBB172:\naddq $1,-48(%rbp)\n.L246:\n.LBE172:\nleaq -144(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.algo.digits>\nmovq -136(%rbp),%rax\ncmpq $9,%rax\njle .L255\n.LBE165:\n.LBE164:\n.LBE163:\n.LBB173:\nsubq $1,-40(%rbp)\n.L245:\n.LBE173:\ncmpq $0,-40(%rbp)\njg .L256\n.LBE161:\n.LBE160:\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "max := 9999\nbiggestPandigital := 0\nvar numberMultiplied int\nfor i := max; i > 0; i-- {\n\tnumberMultiplied = i\n\tfor j := 1; len(digits(numberMultiplied)) <= 9; j++ {\n\t\tnumberMultiplied = concatenMultiplication(i, j)\n\t\tif IsPandigital(numberMultiplied) && numberMultiplied > biggestPandigital {\n\t\t\tfmt.Println(numberMultiplied)\n\t\t\tbiggestPandigital = numberMultiplied\n\t\t}\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L29\nmovl $200,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $168,%rsp\nmovb $0,-41(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rbx\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq %rbx,-176(%rbp)\nmovq $0,-40(%rbp)\n.LBB3:\nmovq $0,-64(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%r13\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L28:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-64(%rbp)\n.LBE10:\n.LBB11:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L4\njmp .L21\n.L3:\n.LBE11:\n.LBB20:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE20:\n.LBB21:\n.LBB12:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-176(%rbp)\n.LBE12:\njmp .L6\n.L21:\n.LBB13:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-192(%rbp)\nmovq %rax,-184(%rbp)\nmovq %rdx,-176(%rbp)\n.L6:\n.LBE13:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -64(%rbp),%rax\nmovq %rax,(%rdx)\n.LBB14:\n.LBB15:\njmp .L7\n.L27:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\nmovq -184(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -176(%rbp),%rax\ntestq %rdi,%rdi\njs .L8\ncmpq %rax,%rdi\njg .L8\ntestq %rdi,%rdi\njns .L9\njmp .L22\n.L8:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L22:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L9:\nmovq -192(%rbp),%rdx\nmovq -176(%rbp),%rax\nmovq %rdx,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq %rax,-176(%rbp)\naddq $1,-40(%rbp)\n.L7:\n.LBE17:\n.LBB18:\nmovq -184(%rbp),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L11\n.LBB19:\nmovq -184(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L12\ncmpq %rdx,%rax\njl .L23\n.L12:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq <48>(%rbp),%rdx\ncmpq $0,-40(%rbp)\njs .L14\ncmpq %rdx,-40(%rbp)\njl .L24\n.L14:\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq -192(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <40>(%rbp),%rcx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L11:\n.LBE19:\n.LBE18:\ntestb %al,%al\njne .L27\n.LBE15:\n.LBE14:\n.LBE21:\n.LBE8:\n.LBB22:\naddq $1,%rbx\n.L2:\n.LBE22:\ncmpq %r13,%rbx\njl .L28\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB23:\nmovq -40(%rbp),%rax\ncmpq -56(%rbp),%rax\nsete %al\nmovb %al,-41(%rbp)\nmovzbl -41(%rbp),%eax\n.LBE23:\n.LBE2:\naddq $168,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "n := len(pushed)\ns := make([]int, 0, n)\ni := 0\nfor _, x := range pushed {\n\ts = append(s, x)\n\tfor len(s) != 0 && s[len(s)-1] == popped[i] {\n\t\ts = s[:len(s)-1]\n\t\ti++\n\t}\n}\nreturn i == n"}
{"src": ".LFB1:\nleaq -632(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L32\nmovl $632,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $584,%rsp\nmovq %rdi,-600(%rbp)\nmovq $1,-464(%rbp)\nmovq $2,-456(%rbp)\nmovq $3,-448(%rbp)\nmovq $1,-440(%rbp)\nmovq $1,-432(%rbp)\nmovq $0,-424(%rbp)\nmovq $1,-416(%rbp)\nmovq $1,-408(%rbp)\nmovq $1,-400(%rbp)\nmovq $2,-392(%rbp)\nmovq $3,-384(%rbp)\nmovq $1,-376(%rbp)\nmovq $2,-368(%rbp)\nmovq $3,-360(%rbp)\nleaq -464(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $4,-344(%rbp)\nmovq $4,-336(%rbp)\nleaq -432(%rbp),%rax\nmovq %rax,-328(%rbp)\nmovq $4,-320(%rbp)\nmovq $4,-312(%rbp)\nleaq -400(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $6,-296(%rbp)\nmovq $6,-288(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq $3,-488(%rbp)\nmovq $3,-480(%rbp)\nmovq $3,-272(%rbp)\nmovq $1,-264(%rbp)\nmovq $2,-256(%rbp)\nleaq -272(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $3,-520(%rbp)\nmovq $3,-512(%rbp)\nmovb $1,-243(%rbp)\nmovb $1,-242(%rbp)\nmovb $0,-241(%rbp)\nleaq -243(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $3,-552(%rbp)\nmovq $3,-544(%rbp)\n.LBB26:\nmovq $0,-56(%rbp)\nmovq $0,-592(%rbp)\nmovq $0,-584(%rbp)\nmovq $0,-576(%rbp)\n.LBB27:\n.LBB28:\n.LBB29:\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\nmovq %rax,-608(%rbp)\nmovl $0,%ebx\n.LBE29:\njmp .L13\n.L31:\n.LBB30:\nnop\n.LBE30:\n.LBB31:\n.LBB32:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L14\ncmpq %rax,%rbx\njge .L14\nmovq -208(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-224(%rbp)\n.LBE32:\n.LBB33:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-576(%rbp)\n.LBE33:\n.LBB34:\n.LBB35:\nmovq -520(%rbp),%rax\ncmpq $0,-56(%rbp)\njns .L15\njmp .L16\n.L14:\n.LBE35:\n.LBE34:\n.LBB40:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\n.LBE40:\n.LBB41:\n.LBB39:\ncmpq %rax,-56(%rbp)\njl .L27\n.L16:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq -528(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nsubq $8,%rsp\npushq -576(%rbp)\npushq -584(%rbp)\npushq -592(%rbp)\nmovq %rax,%rdi\ncall <go.cond.containsNearbyDuplicate>\naddq $32,%rsp\nmovb %al,-57(%rbp)\nmovq -552(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L18\ncmpq %rax,-56(%rbp)\njl .L28\n.L18:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq -560(%rbp),%rdx\nmovq -56(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb %al,-57(%rbp)\nje .L20\n.LBB36:\nmovq -552(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L21\ncmpq %rax,-56(%rbp)\njl .L29\n.L21:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nleaq <bool..d>(%rip),%rax\nmovq %rax,-624(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -560(%rbp),%rdx\nmovq -56(%rbp),%rax\naddq %rax,%rdx\nmovq -152(%rbp),%rax\nmovzbl (%rdx),%edx\nmovb %dl,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-616(%rbp)\nleaq <bool..d>(%rip),%r14\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -57(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -624(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L23\n.LBB37:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE37:\njmp .L24\n.L23:\n.LBB38:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L24:\n.LBE38:\nmovq -136(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $19,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -600(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L20:\n.LBE36:\n.LBE39:\n.LBE41:\n.LBE31:\n.LBB42:\naddq $1,%rbx\n.L13:\n.LBE42:\ncmpq -608(%rbp),%rbx\njl .L31\n.LBE28:\n.LBE27:\n.LBE26:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "testCases := [][]int{\n\t{1, 2, 3, 1},\n\t{1, 0, 1, 1},\n\t{1, 2, 3, 1, 2, 3},\n}\nks := []int{3, 1, 2}\nexpected := []bool{true, true, false}\nfor index, nums := range testCases {\n\tif res := containsNearbyDuplicate(nums, ks[index]); res != expected[index] {\n\t\tt.Errorf(\"STR\", expected[index], res)\n\t}\n}"}
{"src": "leaq -440(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L29\nmovl $440,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $392,%rsp\nmovq %rdi,-328(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq %rcx,-336(%rbp)\nmovq -328(%rbp),%rax\nmovq %rax,-56(%rbp)\n.LBB19:\nmovq -336(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,%rdi\ncall <net..z2furl.URL.Query@PLT>\nmovq %rax,%rdi\nleaq <.LC37>(%rip),%r12\nmovl $4,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <net..z2furl.Values.Get@PLT>\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\n.LBB20:\nmovq $0,-64(%rbp)\nmovb $0,-65(%rbp)\n.LBB21:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq %rax,-64(%rbp)\nmovb %dl,-65(%rbp)\n.LBE21:\ncmpb $0,-65(%rbp)\nje .L21\n.LBB22:\nleaq <int..d>(%rip),%rax\nmovq %rax,-432(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -280(%rbp),%rax\nmovq %rax,-424(%rbp)\nmovdqa -432(%rbp),%xmm0\nmovups %xmm0,-272(%rbp)\nleaq -272(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $1,-184(%rbp)\nmovq $1,-176(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-400(%rbp)\nmovq $4,-392(%rbp)\nmovq -352(%rbp),%rax\ntestq %rax,%rax\njne .L22\nmovl $0,%eax\njmp .L23\n.L22:\nmovq -352(%rbp),%rax\nmovq (%rax),%rax\n.L23:\nmovq %rax,%rsi\nleaq <io.Writer..d>(%rip),%rdi\ncall <runtime.requireitab@PLT>\nmovq %rax,-384(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,-376(%rbp)\nleaq -160(%rbp),%rax\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rsi,%r8\nmovq %rbx,%r9\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -176(%rbp)\npushq -184(%rbp)\npushq -192(%rbp)\nmovq %r8,%rcx\nmovq %r9,%r8\nmovq %rax,%rdi\ncall <fmt.Fprintf@PLT>\naddq $32,%rsp\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-288(%rbp)\n.LBE22:\njmp .L20\n.L21:\n.LBB23:\nmovq -352(%rbp),%rax\nmovq <24>(%rax),%rdx\nmovq -344(%rbp),%rax\nmovl $404,%esi\nmovq %rax,%rdi\ncall *%rdx\n.LVL3:\nleaq <string..d>(%rip),%rax\nmovq %rax,-416(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L25\n.LBB24:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE24:\njmp .L26\n.L25:\n.LBB25:\nmovq -232(%rbp),%rax\nleaq -224(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L26:\n.LBE25:\nmovq -232(%rbp),%rax\nmovq %rax,-408(%rbp)\nmovdqa -416(%rbp),%xmm1\nmovups %xmm1,-208(%rbp)\nleaq -208(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq $1,-112(%rbp)\nleaq <.LC39>(%rip),%r14\nmovl $17,%r15d\nmovq -352(%rbp),%rax\ntestq %rax,%rax\njne .L27\nmovl $0,%eax\njmp .L28\n.L27:\nmovq -352(%rbp),%rax\nmovq (%rax),%rax\n.L28:\nmovq %rax,%rsi\nleaq <io.Writer..d>(%rip),%rdi\ncall <runtime.requireitab@PLT>\nmovq %rax,-368(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq -96(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rsi,%r8\nmovq %rbx,%r9\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %r8,%rcx\nmovq %r9,%r8\nmovq %rax,%rdi\ncall <fmt.Fprintf@PLT>\naddq $32,%rsp\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-240(%rbp)\n.L20:\n.LBE23:\n.LBE20:\n.LBE19:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "item := req.URL.Query().Get(\"STR\")\nif price, ok := db[item]; ok {\n\tfmt.Fprintf(w, \"STR\", price)\n} else {\n\tw.WriteHeader(http.StatusNotFound)\n\tfmt.Fprintf(w, \"STR\", item)\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $120,%rsp\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\n.LBB2:\nleaq <go.leetcode0295..go.leetcode0295.maxHeap..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode0295..go.leetcode0295.maxHeap..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -136(%rbp),%rax\nmovq %rax,-56(%rbp)\nleaq <go.leetcode0295..go.leetcode0295.minHeap..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-104(%rbp)\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB5:\nmovq -104(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE5:\njmp .L5\n.L4:\n.LBB6:\nmovq -104(%rbp),%rax\nleaq -96(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode0295..go.leetcode0295.minHeap..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE6:\nmovq -104(%rbp),%rax\nmovq %rax,-64(%rbp)\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.leetcode0295.maxHeap>(%rip),%r14\nmovq -56(%rbp),%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Init@PLT>\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.leetcode0295.minHeap>(%rip),%r12\nmovq -64(%rbp),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Init@PLT>\n.LBB7:\nmovq -56(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-152(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\n.LBE7:\n.LBE2:\naddq $120,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "l, r := &maxHeap{}, &minHeap{}\nheap.Init(l)\nheap.Init(r)\nreturn MedianFinder{l, r}"}
{"src": "cmpq %fs:112,%rsp\njnb .L24\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L24:\npushq %rbp\nmovq %rsp,%rbp\nsubq $96,%rsp\nmovq %rdi,-88(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB7:\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $31,-8(%rbp)\n.LBB8:\n.LBB9:\njmp .L7\n.L23:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\ncmpq $0,-8(%rbp)\njs .L8\ncmpq $31,-8(%rbp)\njle .L19\n.L8:\nmovq -8(%rbp),%rax\nmovl $32,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq -88(%rbp),%rcx\nmovabsq $-3689348814741910323,%rdx\nmovq %rcx,%rax\nmulq %rdx\nshrq $3,%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\nsubq %rax,%rcx\nmovq %rcx,%rdx\nmovl %edx,%eax\nleal <48>(%rax),%edx\nleaq -80(%rbp),%rcx\nmovq -8(%rbp),%rax\naddq %rcx,%rax\nmovb %dl,(%rax)\nsubq $1,-8(%rbp)\nmovq -88(%rbp),%rax\nmovabsq $-3689348814741910323,%rdx\nmulq %rdx\nmovq %rdx,%rax\nshrq $3,%rax\nmovq %rax,-88(%rbp)\n.L7:\n.LBE11:\ncmpq $9,-88(%rbp)\nja .L23\n.LBE9:\n.LBE8:\ncmpq $0,-8(%rbp)\njs .L12\ncmpq $31,-8(%rbp)\njle .L21\n.L12:\nmovq -8(%rbp),%rax\nmovl $32,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -88(%rbp),%rax\nleal <48>(%rax),%edx\nleaq -80(%rbp),%rcx\nmovq -8(%rbp),%rax\naddq %rcx,%rax\nmovb %dl,(%rax)\n.LBB12:\ncmpq $0,-8(%rbp)\njs .L14\ncmpq $32,-8(%rbp)\njg .L14\ncmpq $32,-8(%rbp)\njne .L15\njmp .L22\n.L14:\nmovq -8(%rbp),%rax\nmovl $32,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L15:\nmovq -8(%rbp),%rax\njmp .L17\n.L22:\nmovl $0,%eax\n.L17:\nleaq -80(%rbp),%rdx\naddq %rdx,%rax\nmovq %rax,-32(%rbp)\nmovl $32,%eax\nsubq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovl $32,%eax\nsubq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nsubq $8,%rsp\npushq -16(%rbp)\npushq -24(%rbp)\npushq -32(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\n.LBE12:\n.LBE7:\nleave\nret", "tgt": "var buf [32]byte\ni := len(buf) - 1\nfor val >= 10 {\n\tbuf[i] = byte(val%10 + \"STR\")\n\ti--\n\tval /= 10\n}\nbuf[i] = byte(val + \"STR\")\nreturn string(buf[i:])"}
{"src": ".LFB1:\nleaq -344(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L69\nmovl $344,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L69:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $304,%rsp\nmovq %rdi,-328(%rbp)\nmovq $0,-288(%rbp)\nmovq $0,-280(%rbp)\nmovq $0,-272(%rbp)\n.LBB42:\n.LBB43:\n.LBB44:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L36\n.LBB45:\nmovq <48>(%rbp),%rax\ntestq %rax,%rax\nsete %al\n.L36:\n.LBE45:\n.LBE44:\ntestb %al,%al\nje .L37\n.LBB46:\n.LBB47:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -264(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $0,-280(%rbp)\nmovq $0,-272(%rbp)\nmovq -328(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L35\n.L37:\n.LBE47:\n.LBE46:\n.LBE43:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-40(%rbp)\n.LBB48:\nmovq $0,-48(%rbp)\n.LBB49:\n.LBB50:\n.LBB51:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r12\nmovl $0,%ebx\n.LBE51:\njmp .L39\n.L67:\n.LBB52:\nnop\n.LBE52:\n.LBB53:\nmovq %rbx,-48(%rbp)\n.LBB54:\n.LBB55:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -48(%rbp),%rax\nmovq -216(%rbp),%rdx\ntestq %rax,%rax\njs .L40\ncmpq %rdx,%rax\njl .L60\n.L40:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L60:\nmovq -224(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-200(%rbp)\nmovl $1,%r13d\nleaq -200(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovb %r13b,(%rax)\n.LBE55:\n.LBE54:\n.LBE53:\n.LBB56:\naddq $1,%rbx\n.L39:\n.LBE56:\ncmpq %r12,%rbx\njl .L67\n.LBE50:\n.LBE49:\n.LBE48:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-56(%rbp)\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\nmovq $0,-304(%rbp)\n.LBB57:\nmovq $0,-64(%rbp)\n.LBB58:\n.LBB59:\n.LBB60:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%r14\nmovl $0,%ebx\n.LBE60:\njmp .L44\n.L68:\n.LBB61:\nnop\n.LBE61:\n.LBB62:\nmovq %rbx,-64(%rbp)\n.LBB63:\n.LBB64:\nmovb $0,-65(%rbp)\n.LBB65:\nmovq <48>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L45\ncmpq %rax,-64(%rbp)\njl .L62\n.L45:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\nmovq <40>(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-168(%rbp)\nleaq -168(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovl %edx,%eax\nmovb %al,-65(%rbp)\n.LBE65:\n.LBB66:\nmovzbl -65(%rbp),%eax\ntestb %al,%al\nje .L47\n.LBB67:\nmovq <48>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L48\ncmpq %rax,-64(%rbp)\njl .L63\n.L48:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\nmovq <40>(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-104(%rbp)\nleaq -104(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovzbl (%rax),%eax\nxorl $1,%eax\n.L47:\n.LBE67:\n.LBE66:\ntestb %al,%al\nje .L50\n.LBB68:\n.LBB69:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -64(%rbp),%rax\nmovq -152(%rbp),%rdx\ntestq %rax,%rax\njs .L51\ncmpq %rdx,%rax\njl .L64\n.L51:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq -160(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-136(%rbp)\nmovl $1,%r12d\nleaq -136(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovb %r12b,(%rax)\n.LBE69:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r12\nmovq <48>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L53\ncmpq %rax,-64(%rbp)\njl .L65\n.L53:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L65:\nmovq <40>(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r13\nleaq <1>(%r12),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L55\n.LBB70:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-304(%rbp)\n.LBE70:\njmp .L56\n.L55:\n.LBB71:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-320(%rbp)\nmovq %rax,-312(%rbp)\nmovq %rdx,-304(%rbp)\n.L56:\n.LBE71:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r13,(%rax)\n.L50:\n.LBE68:\n.LBE64:\n.LBE63:\n.LBE62:\n.LBB72:\naddq $1,%rbx\n.L44:\n.LBE72:\ncmpq %r14,%rbx\njl .L68\n.LBE59:\n.LBE58:\n.LBE57:\n.LBB73:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -328(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L35:\n.LBE73:\n.LBE42:\nmovq -328(%rbp),%rax\naddq $304,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "if len(nums1) == 0 || len(nums2) == 0 {\n\treturn []int{}\n}\nnum1Map := make(map[int]bool)\nfor i := range nums1 {\n\tnum1Map[nums1[i]] = true\n}\nnum2Map := make(map[int]bool)\nvar res []int\nfor i := range nums2 {\n\tif _, ok1 := num1Map[nums2[i]]; ok1 && !num2Map[nums2[i]] {\n\t\tnum2Map[nums2[i]] = true\n\t\tres = append(res, nums2[i])\n\t}\n}\nreturn res"}
{"src": ".LFB0:\nleaq -552(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L27\nmovl $552,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $504,%rsp\nmovq %rdi,-520(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\nmovq $0,-464(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-416(%rbp)\nmovq -416(%rbp),%rax\nmovq $-1,(%rax)\nmovq $0,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $-1,<32>(%rax)\nmovq $-4,<40>(%rax)\nmovq -416(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $6,-472(%rbp)\nmovq $6,-464(%rbp)\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-408(%rbp)\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-400(%rbp)\nmovq -400(%rbp),%rax\nmovq $-1,(%rax)\nmovq $-1,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq -400(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq $3,-376(%rbp)\nmovq $3,-368(%rbp)\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nmovq -392(%rbp),%rax\nmovq $-1,(%rax)\nmovq $0,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq -392(%rbp),%rax\nmovq %rax,-360(%rbp)\nmovq $3,-352(%rbp)\nmovq $3,-344(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -408(%rbp),%rax\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -408(%rbp),%rax\nleaq -384(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -408(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq $2,-440(%rbp)\nmovq $2,-432(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nmovq $0,-512(%rbp)\nmovq $0,-504(%rbp)\nmovq $0,-496(%rbp)\n.LBB5:\nleaq -336(%rbp),%rax\nsubq $8,%rsp\npushq -464(%rbp)\npushq -472(%rbp)\npushq -480(%rbp)\nmovq %rax,%rdi\ncall <go.leetcode.threeSum>\naddq $32,%rsp\n.LBB6:\n.LBB7:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L26:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -264(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -272(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-288(%rbp)\n.LBE10:\n.LBB11:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-496(%rbp)\n.LBE11:\n.LBB12:\n.LBB13:\nmovq $0,-64(%rbp)\nmovq $0,-72(%rbp)\n.LBB14:\n.LBB15:\n.LBB16:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -496(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovl $0,%r12d\n.LBE16:\njmp .L6\n.L5:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBB35:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\n.LBE35:\n.LBB36:\n.LBB34:\n.LBB33:\n.LBB32:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -200(%rbp),%rax\ntestq %r12,%r12\njs .L7\ncmpq %rax,%r12\njge .L7\nmovq -208(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE19:\n.LBB20:\nmovq %r12,-64(%rbp)\nmovq %rax,-72(%rbp)\n.LBE20:\n.LBB21:\n.LBB22:\nmovq -440(%rbp),%rax\ncmpq $0,-56(%rbp)\njns .L8\njmp .L9\n.L7:\n.LBE22:\n.LBE21:\n.LBB29:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE29:\n.LBB30:\n.LBB28:\ncmpq %rax,-56(%rbp)\njl .L22\n.L9:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq -448(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L11\ncmpq %rax,-64(%rbp)\njge .L11\nmovq -176(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-72(%rbp)\njne .L12\njmp .L13\n.L11:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\n.LBB23:\nleaq <type...6.7.6.7int>(%rip),%rax\nmovq %rax,-544(%rbp)\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -432(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L14\n.LBB24:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE24:\njmp .L15\n.L14:\n.LBB25:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L15:\n.LBE25:\nmovq -152(%rbp),%rax\nmovq %rax,-536(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -544(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L16\n.LBB26:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE26:\njmp .L17\n.L16:\n.LBB27:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L17:\n.LBE27:\nmovq -120(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq <.LC28>(%rip),%r14\nmovl $14,%r15d\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq -520(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L13:\n.LBE23:\n.LBE28:\n.LBE30:\n.LBE18:\n.LBB31:\naddq $1,%r12\n.L6:\n.LBE31:\ncmpq -528(%rbp),%r12\njl .L25\n.LBE32:\n.LBE33:\n.LBE34:\n.LBE36:\n.LBE9:\n.LBB37:\naddq $1,%rbx\n.L4:\n.LBE37:\ncmpq %r13,%rbx\njl .L26\n.LBE6:\n.LBE5:\n.LBE4:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var ret [][]int\nvar nums []int\nnums = []int{-1, 0, 1, 2, -1, -4}\nret = [][]int{{-1, -1, 2}, {-1, 0, 1}}\nfor k, num := range threeSum(nums) {\n\tfor i, v := range num {\n\t\tif v != ret[k][i] {\n\t\t\tt.Fatalf(\"STR\", ret)\n\t\t}\n\t}\n}"}
{"src": ".LFB0:\nleaq -264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L61\nmovl $264,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L61:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $248,%rsp\nmovq %rdi,-248(%rbp)\nmovq %rsi,-256(%rbp)\nmovq $0,-56(%rbp)\n.LBB2:\nmovq -248(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-208(%rbp)\nmovq %rbx,-200(%rbp)\nmovq %rbx,-192(%rbp)\n.LBB3:\nmovq $0,-32(%rbp)\n.LBB4:\njmp .L2\n.L57:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -200(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L3\ncmpq %rax,-32(%rbp)\njl .L43\n.L3:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq -208(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq $2147483647,(%rax)\n.LBE6:\n.LBB7:\naddq $1,-32(%rbp)\n.L2:\n.LBE7:\nmovq -200(%rbp),%rax\ncmpq %rax,-32(%rbp)\njl .L57\n.LBE4:\n.LBE3:\nmovq -200(%rbp),%rax\ncmpq $0,-256(%rbp)\njs .L7\ncmpq %rax,-256(%rbp)\njl .L45\n.L7:\nmovq -256(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L45:\nmovq -208(%rbp),%rdx\nmovq -256(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq $0,(%rax)\n.LBB8:\nmovq $0,-40(%rbp)\n.LBB9:\njmp .L9\n.L59:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\n.LBB13:\n.LBB14:\n.LBB15:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rsi\nmovl $0,%eax\n.LBE15:\njmp .L10\n.L58:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -136(%rbp),%rdx\ntestq %rax,%rax\njs .L11\ncmpq %rdx,%rax\njge .L11\nmovq -144(%rbp),%rcx\nmovq %rax,%rdi\nmovq %rdi,%rdx\naddq %rdx,%rdx\naddq %rdi,%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\nmovq %rcx,-176(%rbp)\nmovq %rbx,-168(%rbp)\nmovq <16>(%rdx),%rdx\nmovq %rdx,-160(%rbp)\n.LBE18:\n.LBB19:\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,-112(%rbp)\nmovq %rbx,-104(%rbp)\nmovq -160(%rbp),%rdx\nmovq %rdx,-96(%rbp)\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,-240(%rbp)\nmovq %rbx,-232(%rbp)\nmovq -96(%rbp),%rdx\nmovq %rdx,-224(%rbp)\n.LBE19:\n.LBB20:\nmovq -232(%rbp),%rdx\ntestq %rdx,%rdx\njg .L12\njmp .L46\n.L11:\n.LBE20:\n.LBB25:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L46:\n.LBE25:\n.LBB26:\nmovq %rdx,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq -240(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rdx,-64(%rbp)\nmovq -232(%rbp),%rdx\ncmpq $1,%rdx\njg .L14\nmovq %rdx,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq -240(%rbp),%rdx\nmovq <8>(%rdx),%rdx\nmovq %rdx,-72(%rbp)\nmovq -232(%rbp),%rdx\ncmpq $2,%rdx\njg .L15\nmovq %rdx,%rsi\nmovl $2,%edi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq -240(%rbp),%rdx\nmovq <16>(%rdx),%rdx\nmovq %rdx,-80(%rbp)\n.LBB21:\n.LBB22:\nmovq -200(%rbp),%rdx\ncmpq $0,-64(%rbp)\njs .L16\ncmpq %rdx,-64(%rbp)\njl .L47\n.L16:\nmovq -64(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L47:\nmovq -208(%rbp),%rcx\nmovq -64(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\ncmpq $2147483647,%rdx\nsetne %dl\ntestb %dl,%dl\nje .L18\n.LBB23:\nmovq -200(%rbp),%rdx\ncmpq $0,-72(%rbp)\njs .L19\ncmpq %rdx,-72(%rbp)\njl .L48\n.L19:\nmovq -72(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L48:\nmovq -200(%rbp),%rdx\ncmpq $0,-64(%rbp)\njs .L21\ncmpq %rdx,-64(%rbp)\njl .L49\n.L21:\nmovq -64(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L49:\nmovq -208(%rbp),%rcx\nmovq -72(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq -208(%rbp),%rdi\nmovq -64(%rbp),%rcx\nsalq $3,%rcx\naddq %rdi,%rcx\nmovq (%rcx),%rdi\nmovq -80(%rbp),%rcx\naddq %rdi,%rcx\ncmpq %rcx,%rdx\nsetg %dl\n.L18:\n.LBE23:\n.LBE22:\ntestb %dl,%dl\nje .L23\n.LBB24:\nmovq -200(%rbp),%rdx\ncmpq $0,-72(%rbp)\njs .L24\ncmpq %rdx,-72(%rbp)\njl .L50\n.L24:\nmovq -72(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L50:\nmovq -200(%rbp),%rdx\ncmpq $0,-64(%rbp)\njs .L26\ncmpq %rdx,-64(%rbp)\njl .L51\n.L26:\nmovq -64(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L51:\nmovq -208(%rbp),%rcx\nmovq -64(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdi\nmovq -208(%rbp),%rcx\nmovq -72(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq -80(%rbp),%rcx\naddq %rdi,%rcx\nmovq %rcx,(%rdx)\n.L23:\n.LBE24:\n.LBE21:\n.LBE26:\n.LBE17:\n.LBB27:\naddq $1,%rax\n.L10:\n.LBE27:\ncmpq %rsi,%rax\njl .L58\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB28:\naddq $1,-40(%rbp)\n.L9:\n.LBE28:\nmovq -40(%rbp),%rax\ncmpq -248(%rbp),%rax\njl .L59\n.LBE9:\n.LBE8:\nmovq $0,-24(%rbp)\n.LBB29:\nmovq $1,-48(%rbp)\n.LBB30:\njmp .L32\n.L60:\n.LBB31:\nnop\n.LBE31:\n.LBB32:\n.LBB33:\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L33\ncmpq %rax,-48(%rbp)\njl .L54\n.L33:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\nmovq -208(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-24(%rbp)\njge .L35\n.LBB34:\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L36\ncmpq %rax,-48(%rbp)\njl .L55\n.L36:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\nmovq -208(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-24(%rbp)\n.L35:\n.LBE34:\n.LBE33:\n.LBE32:\n.LBB35:\naddq $1,-48(%rbp)\n.L32:\n.LBE35:\nmovq -48(%rbp),%rax\ncmpq -248(%rbp),%rax\njle .L60\n.LBE30:\n.LBE29:\n.LBB36:\ncmpq $2147483647,-24(%rbp)\njne .L40\n.LBB37:\n.LBB38:\nmovq $-1,-56(%rbp)\nmovq -56(%rbp),%rax\njmp .L42\n.L40:\n.LBE38:\n.LBE37:\n.LBE36:\n.LBB39:\nmovq -24(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\n.L42:\n.LBE39:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "dist := make([]int, N+1)\nfor i := 0; i < len(dist); i++ {\n\tdist[i] = math.MaxInt32\n}\ndist[K] = 0\nfor i := 0; i < N; i++ {\n\tfor _, t := range times {\n\t\tu, v, w := t[0], t[1], t[2]\n\t\tif dist[u] != math.MaxInt32 && dist[v] > dist[u]+w {\n\t\t\tdist[v] = dist[u] + w\n\t\t}\n\t}\n}\nmx := 0\nfor i := 1; i <= N; i++ {\n\tif mx < dist[i] {\n\t\tmx = dist[i]\n\t}\n}\nif mx == math.MaxInt32 {\n\treturn -1\n}\nreturn mx"}
{"src": ".LFB74:\nleaq -504(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L1342\nmovl $504,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL75:\nret\n.L1342:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $456,%rsp\nleaq <.LC52>(%rip),%rax\nmovl $12,%edx\nleaq -176(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <io..z2fioutil.ReadFile@PLT>\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -312(%rbp),%rax\nmovq -304(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\n.LBB1003:\nmovq -384(%rbp),%rax\ntestq %rax,%rax\nje .L1333\n.LBB1004:\nmovq -384(%rbp),%rax\ntestq %rax,%rax\njne .L1334\nmovl $0,%eax\njmp .L1335\n.L1334:\nmovq -384(%rbp),%rax\nmovq (%rax),%rax\n.L1335:\nmovq %rax,%r14\nmovq -376(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L1333:\n.LBE1004:\n.LBE1003:\nsubq $8,%rsp\npushq -352(%rbp)\npushq -360(%rbp)\npushq -368(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-480(%rbp)\nmovq $0,-472(%rbp)\nleaq <.LC41>(%rip),%rax\nmovq %rax,-464(%rbp)\nmovq $1,-456(%rbp)\nmovq -400(%rbp),%rsi\nmovq -392(%rbp),%rax\nsubq $8,%rsp\npushq $-1\nmovq -480(%rbp),%r8\nmovq -472(%rbp),%r9\nmovq -464(%rbp),%rdx\nmovq -456(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <strings.Replace@PLT>\naddq $16,%rsp\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nleaq <.LC42>(%rip),%r12\nmovl $1,%r13d\nleaq -432(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rsi,%rdi\nmovq %rbx,%r8\nmovq -400(%rbp),%rsi\nmovq -392(%rbp),%rdx\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <strings.Split@PLT>\nsubq $8,%rsp\npushq -416(%rbp)\npushq -424(%rbp)\npushq -432(%rbp)\ncall <sort.Strings@PLT>\naddq $32,%rsp\nmovq $0,-56(%rbp)\n.LBB1005:\nmovq $0,-64(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\n.LBB1006:\n.LBB1007:\n.LBB1008:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r12\nmovl $0,%ebx\n.LBE1008:\njmp .L1336\n.L1341:\n.LBB1009:\nnop\n.LBE1009:\n.LBB1010:\n.LBB1011:\nmovq -248(%rbp),%rax\ntestq %rbx,%rbx\njs .L1337\ncmpq %rax,%rbx\njge .L1337\nmovq -256(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE1011:\n.LBB1012:\nmovq %rbx,-64(%rbp)\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE1012:\n.LBB1013:\nmovq -448(%rbp),%rdx\nmovq -440(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.algo.nameScore>\nmovq -64(%rbp),%rdx\naddq $1,%rdx\nimulq %rdx,%rax\naddq %rax,-56(%rbp)\n.LBE1013:\n.LBE1010:\n.LBB1015:\naddq $1,%rbx\njmp .L1336\n.L1337:\n.LBE1015:\n.LBB1016:\n.LBB1014:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1336:\n.LBE1014:\n.LBE1016:\ncmpq %r12,%rbx\njl .L1341\n.LBE1007:\n.LBE1006:\n.LBE1005:\nleaq <int..d>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -200(%rbp),%rax\nmovq %rax,-488(%rbp)\nmovdqa -496(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq $1,-112(%rbp)\nleaq -96(%rbp),%rax\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-208(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "dat, err := ioutil.ReadFile(\"STR\")\nif err != nil {\n\tpanic(err)\n}\nnamesList := string(dat)\nnamesList = strings.Replace(namesList, \"STR\", \"STR\", -1)\nnames := strings.Split(namesList, \"STR\")\nsort.Strings(names)\nnamesScore := 0\nfor index, name := range names {\n\tnamesScore += nameScore(name) * (index + 1)\n}\nfmt.Println(namesScore)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L2\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\nsubq $224,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nmovq $1,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $3,-160(%rbp)\nmovq $4,-144(%rbp)\nmovq $5,-136(%rbp)\nmovq $6,-128(%rbp)\nmovq $7,-112(%rbp)\nmovq $8,-104(%rbp)\nmovq $9,-96(%rbp)\nleaq -176(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq $3,-48(%rbp)\nmovq $3,-40(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq $3,-24(%rbp)\nmovq $3,-16(%rbp)\nleaq -80(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $3,-200(%rbp)\nmovq $3,-192(%rbp)\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\ncall <go.leetcode.rotate>\naddq $32,%rsp\nleave\nret", "tgt": "var matrix [][]int\nmatrix = [][]int{\n\t{1, 2, 3},\n\t{4, 5, 6},\n\t{7, 8, 9},\n}\nrotate(matrix)"}
{"src": "cmpq %fs:112,%rsp\njnb .L62\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L62:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB53:\nmovl $0,-52(%rbp)\n.LBB54:\n.LBB55:\n.LBB56:\nmovq -88(%rbp),%r13\nmovl $0,%ebx\n.LBE56:\njmp .L50\n.L61:\n.LBB57:\nnop\n.LBE57:\n.LBB58:\n.LBB59:\nmovq -88(%rbp),%rax\ntestq %rbx,%rbx\njs .L51\ncmpq %rax,%rbx\njge .L51\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L52\njmp .L59\n.L51:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L52:\n.LBB60:\naddq $1,%rbx\n.LBE60:\njmp .L54\n.L59:\n.LBB61:\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovl %ecx,%eax\n.L54:\n.LBE61:\n.LBE59:\n.LBB62:\nmovl %eax,-52(%rbp)\n.LBE62:\n.LBB63:\nmovq $0,-48(%rbp)\nmovb $0,-53(%rbp)\n.LBB64:\nmovl -52(%rbp),%eax\nmovl %eax,-64(%rbp)\nleaq -64(%rbp),%rax\nmovl (%rax),%edx\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6int32.7.1go.trie.Node>(%rip),%rdi\ncall <runtime.mapaccess2_fast32@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq %rax,-48(%rbp)\nmovb %dl,-53(%rbp)\n.LBE64:\n.LBB65:\nmovzbl -53(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L55\n.LBB66:\ncall <go.trie.NewNode>\nmovq %rax,-48(%rbp)\n.LBB67:\nmovq -40(%rbp),%rax\nmovl -52(%rbp),%edx\nmovl %edx,-60(%rbp)\nmovq -48(%rbp),%r12\nleaq -60(%rbp),%rdx\nmovl (%rdx),%edx\nmovq (%rax),%rax\nmovq %rax,%rsi\nleaq <type..map.6int32.7.1go.trie.Node>(%rip),%rdi\ncall <runtime.mapassign_fast32@PLT>\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L56\n.LBB68:\nmovq %r12,(%rax)\n.LBE68:\njmp .L55\n.L56:\n.LBB69:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L55:\n.LBE69:\n.LBE67:\n.LBE66:\n.LBE65:\nmovq -48(%rbp),%rax\nmovq %rax,-40(%rbp)\n.L50:\n.LBE63:\n.LBE58:\ncmpq %r13,%rbx\njl .L61\n.LBE55:\n.LBE54:\n.LBE53:\nmovq -40(%rbp),%rax\nmovb $1,<8>(%rax)\naddq $72,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "curr := n\nfor _, c := range s {\n\tnext, ok := curr.children[c]\n\tif !ok {\n\t\tnext = NewNode()\n\t\tcurr.children[c] = next\n\t}\n\tcurr = next\n}\ncurr.isLeaf = true"}
{"src": ".LFB2:\nleaq -552(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L66\nmovl $552,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L66:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $504,%rsp\nmovq %rdi,-472(%rbp)\nmovq -472(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB21:\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\n.LBB22:\n.LBB23:\n.LBB24:\nmovq <go.day463.testcases>(%rip),%rax\nmovq <8+go.day463.testcases>(%rip),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16+go.day463.testcases>(%rip),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%r13\nmovl $0,%r12d\n.LBE24:\njmp .L47\n.L65:\n.LBB25:\nnop\n.LBE25:\n.LBB26:\n.LBB27:\nmovq -328(%rbp),%rax\ntestq %r12,%r12\njs .L48\ncmpq %rax,%r12\njge .L48\nmovq -336(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\n.LBE27:\n.LBB28:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\n.LBE28:\n.LBB29:\n.LBB30:\nleaq -416(%rbp),%rax\nsubq $8,%rsp\npushq -448(%rbp)\npushq -456(%rbp)\npushq -464(%rbp)\nmovq %rax,%rdi\ncall <go.day463.MinimizeQux>\naddq $32,%rsp\nleaq <type...6.7int32>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L49\njmp .L63\n.L48:\n.LBE30:\n.LBE29:\n.LBB43:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L49:\n.LBE43:\n.LBB44:\n.LBB42:\n.LBB31:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE31:\njmp .L51\n.L63:\n.LBB32:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L51:\n.LBE32:\nmovq -216(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <type...6.7int32>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L52\n.LBB33:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE33:\njmp .L53\n.L52:\n.LBB34:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L53:\n.LBE34:\nmovq -248(%rbp),%rax\nmovq %rax,-488(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -512(%rbp),%rdx\nmovq -504(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L54\n.LBB35:\nleaq <type...6.7int32>(%rip),%rax\nmovq %rax,-544(%rbp)\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L55\n.LBB36:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE36:\njmp .L56\n.L55:\n.LBB37:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L56:\n.LBE37:\nmovq -184(%rbp),%rax\nmovq %rax,-536(%rbp)\nleaq <type...6.7int32>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L57\n.LBB38:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE38:\njmp .L58\n.L57:\n.LBB39:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int32>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L58:\n.LBE39:\nmovq -152(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -544(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -528(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L59\n.LBB40:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE40:\njmp .L60\n.L59:\n.LBB41:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L60:\n.LBE41:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC7>(%rip),%r14\nmovl $19,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -472(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L54:\n.LBE35:\n.LBE42:\n.LBE44:\n.LBE26:\n.LBB45:\naddq $1,%r12\n.L47:\n.LBE45:\ncmpq %r13,%r12\njl .L65\n.LBE23:\n.LBE22:\n.LBE21:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := MinimizeQux(tc.input); !reflect.DeepEqual(tc.expected, result) {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\nmovq $2,-16(%rbp)\n.LBB4:\njmp .L2\n.L8:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq -16(%rbp),%rax\nmovq %rax,%rdi\ncall <go.probs.isSumOfFivePowerOfDigitsEqualToNumber>\ntestb %al,%al\nje .L3\n.LBB8:\nmovq -16(%rbp),%rax\naddq %rax,-8(%rbp)\n.L3:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB9:\naddq $1,-16(%rbp)\n.L2:\n.LBE9:\ncmpq $999998,-16(%rbp)\njle .L8\n.LBE4:\n.LBE3:\n.LBB10:\nmovq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE10:\n.LBE2:\nleave\nret", "tgt": "sum := 0\nfor i := 2; i < 999999; i++ {\n\tif isSumOfFivePowerOfDigitsEqualToNumber(i) {\n\t\tsum += i\n\t}\n}\nreturn sum"}
{"src": ".LFB7:\ncmpq %fs:112,%rsp\njnb .L88\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL8:\nret\n.L88:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-56(%rbp)\nmovq %rsi,-64(%rbp)\nmovq $0,-16(%rbp)\n.LBB72:\n.LBB73:\ncmpq $0,-56(%rbp)\njne .L79\n.LBB74:\n.LBB75:\nmovq -64(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L80\n.L79:\n.LBE75:\n.LBE74:\n.LBE73:\n.LBB76:\ncmpq $0,-64(%rbp)\njne .L81\n.LBB77:\n.LBB78:\nmovq -56(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L80\n.L81:\n.LBE78:\n.LBE77:\n.LBE76:\nleaq <go.leetcode.ListNode..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L82\n.LBB79:\nmovq -40(%rbp),%rcx\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE79:\njmp .L83\n.L82:\n.LBB80:\nmovq -40(%rbp),%rax\nleaq -32(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode.ListNode..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L83:\n.LBE80:\nmovq -40(%rbp),%rax\nmovq %rax,-8(%rbp)\n.LBB81:\nmovq -56(%rbp),%rax\nmovq (%rax),%rdx\nmovq -64(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njg .L84\n.LBB82:\nmovq -56(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.mergeTwoLists1>\nmovq %rax,%rdx\nmovq -8(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L85\n.LBB83:\nmovq %rdx,(%rax)\n.LBE83:\njmp .L86\n.L85:\n.LBB84:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L86\n.L84:\n.LBE84:\n.LBE82:\n.LBB85:\nmovq -64(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -64(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.mergeTwoLists1>\nmovq %rax,%rdx\nmovq -8(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L87\n.LBB86:\nmovq %rdx,(%rax)\n.LBE86:\njmp .L86\n.L87:\n.LBB87:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L86:\n.LBE87:\n.LBE85:\n.LBE81:\n.LBB88:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.L80:\n.LBE88:\n.LBE72:\nleave\nret", "tgt": "if l1 == nil {\n\treturn l2\n}\nif l2 == nil {\n\treturn l1\n}\nret := &ListNode{}\nif l1.Val <= l2.Val {\n\tret = l1\n\tret.Next = mergeTwoLists1(l1.Next, l2)\n} else {\n\tret = l2\n\tret.Next = mergeTwoLists1(l1, l2.Next)\n}\nreturn ret"}
{"src": "cmpq %fs:112,%rsp\njnb .L18\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $56,%rsp\nmovq %rdi,-56(%rbp)\nmovq $0,-40(%rbp)\n.LBB6:\npxor %xmm1,%xmm1\ncvtsi 2sdq-56(%rbp),%xmm1\nmovq %xmm1,%rax\nmovq %rax,%xmm0\ncall <math.Log10@PLT>\ncvttsd 2siq%xmm0,%rax\naddq $1,%rax\nmovq %rax,-48(%rbp)\nmovq $0,-24(%rbp)\n.LBB7:\nmovq $1,-32(%rbp)\n.LBB8:\njmp .L12\n.L17:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -32(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.digit>\nmovq %rax,%rbx\nmovq -48(%rbp),%rax\nsubq -32(%rbp),%rax\nmovq %rax,%rdi\ncall <math.Pow10@PLT>\ncvttsd 2siq%xmm0,%rax\nimulq %rbx,%rax\naddq %rax,-24(%rbp)\n.LBE10:\n.LBB11:\naddq $1,-32(%rbp)\n.L12:\n.LBE11:\nmovq -32(%rbp),%rax\ncmpq -48(%rbp),%rax\njle .L17\n.LBE8:\n.LBE7:\n.LBB12:\nmovq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE12:\n.LBE6:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "a := int(math.Log10(float64(number))) + 1\nresult := 0\nfor i := 1; i <= a; i++ {\n\tresult += digit(number, i) * int(math.Pow10(a-i))\n}\nreturn result"}
{"src": ".LFB7:\ncmpq %fs:112,%rsp\njnb .L132\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL12:\nret\n.L132:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq $0,-40(%rbp)\n.LBB61:\nmovq $0,-24(%rbp)\nmovq -72(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq %rbx,-48(%rbp)\n.LBB62:\nmovq $1,-32(%rbp)\n.LBB63:\njmp .L76\n.L131:\n.LBB64:\nnop\n.LBE64:\n.LBB65:\n.LBB66:\nmovq -72(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L77\ncmpq %rax,-32(%rbp)\njge .L77\nmovq -80(%rbp),%rdx\nmovq -32(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $41,%al\nje .L78\n.LBB67:\n.LBB68:\n.LBB69:\n.LBB70:\n.LBB71:\n.LBB72:\njmp .L79\n.L77:\n.LBE72:\n.LBE71:\n.LBE70:\n.LBE69:\n.LBE68:\n.LBE67:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L78:\n.LBB86:\n.LBB85:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L80\ncmpq %rdx,%rax\njge .L80\nmovq -80(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $40,%al\nje .L81\njmp .L116\n.L80:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L81:\n.LBB80:\n.LBB81:\ncmpq $1,-32(%rbp)\njle .L83\n.LBB82:\nmovq -56(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L84\ncmpq %rax,-32(%rbp)\njl .L117\n.L84:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L117:\nmovq -32(%rbp),%rax\nsubq $2,%rax\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L86\ncmpq %rdx,%rax\njl .L118\n.L86:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L118:\nmovq -64(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -64(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\naddq $2,%rdx\nmovq %rdx,(%rax)\n.LBE82:\njmp .L79\n.L83:\n.LBB83:\nmovq -56(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L88\ncmpq %rax,-32(%rbp)\njl .L119\n.L88:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L119:\nmovq -64(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq $2,(%rax)\njmp .L79\n.L116:\n.LBE83:\n.LBE81:\n.LBE80:\n.LBB84:\n.LBB79:\n.LBB76:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L90\ncmpq %rdx,%rax\njl .L120\n.L90:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L120:\nmovq -64(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -32(%rbp),%rax\nsubq %rdx,%rax\ntestq %rax,%rax\nsetg %al\ntestb %al,%al\nje .L92\n.LBB77:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L93\ncmpq %rdx,%rax\njl .L121\n.L93:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L121:\nmovq -64(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -32(%rbp),%rax\nsubq %rdx,%rax\nsubq $1,%rax\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L95\ncmpq %rdx,%rax\njge .L95\nmovq -80(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $40,%al\nsete %al\njmp .L92\n.L95:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L92:\n.LBE77:\n.LBE76:\ntestb %al,%al\nje .L79\n.LBB78:\n.LBB75:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L96\ncmpq %rdx,%rax\njl .L122\n.L96:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L122:\nmovq -64(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -32(%rbp),%rax\nsubq %rdx,%rax\ncmpq $1,%rax\njle .L98\n.LBB73:\nmovq -56(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L99\ncmpq %rax,-32(%rbp)\njl .L123\n.L99:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L123:\nmovq -32(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -56(%rbp),%rax\ntestq %rdx,%rdx\njs .L101\ncmpq %rax,%rdx\njl .L124\n.L101:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L124:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq -56(%rbp),%rcx\ntestq %rax,%rax\njs .L103\ncmpq %rcx,%rax\njl .L125\n.L103:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L125:\nmovq -64(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rcx\nmovq -32(%rbp),%rax\nsubq %rcx,%rax\nsubq $2,%rax\nmovq -56(%rbp),%rcx\ntestq %rax,%rax\njs .L105\ncmpq %rcx,%rax\njl .L126\n.L105:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L126:\nmovq -64(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq -64(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\naddq %rax,%rdx\nmovq -64(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\naddq $2,%rdx\nmovq %rdx,(%rax)\n.LBE73:\njmp .L79\n.L98:\n.LBB74:\nmovq -56(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L107\ncmpq %rax,-32(%rbp)\njl .L127\n.L107:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L127:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L109\ncmpq %rdx,%rax\njl .L128\n.L109:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L128:\nmovq -64(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -64(%rbp),%rcx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\naddq $2,%rdx\nmovq %rdx,(%rax)\n.L79:\n.LBE74:\n.LBE75:\n.LBE78:\n.LBE79:\n.LBE84:\n.LBE85:\n.LBE86:\n.LBE66:\nmovq -56(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L111\ncmpq %rax,-32(%rbp)\njl .L129\n.L111:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L129:\nmovq -64(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.Solution.Max>\nmovq %rax,-24(%rbp)\n.LBE65:\n.LBB87:\naddq $1,-32(%rbp)\n.L76:\n.LBE87:\nmovq -72(%rbp),%rax\ncmpq %rax,-32(%rbp)\njl .L131\n.LBE63:\n.LBE62:\n.LBB88:\nmovq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE88:\n.LBE61:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "maxans := 0\ndp := make([]int, len(s))\nfor i := 1; i < len(s); i++ {\n\tif s[i] == \"STR\" {\n\t\tif s[i-1] == \"STR\" {\n\t\t\tif i >= 2 {\n\t\t\t\tdp[i] = dp[i-2] + 2\n\t\t\t} else {\n\t\t\t\tdp[i] = 2\n\t\t\t}\n\t\t} else if i-dp[i-1] > 0 && s[i-dp[i-1]-1] == \"STR\" {\n\t\t\tif i-dp[i-1] >= 2 {\n\t\t\t\tdp[i] = dp[i-1] + dp[i-dp[i-1]-2] + 2\n\t\t\t} else {\n\t\t\t\tdp[i] = dp[i-1] + 2\n\t\t\t}\n\t\t}\n\t}\n\tmaxans = Max(maxans, dp[i])\n}\nreturn maxans"}
{"src": "leaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L121\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\n.LEHB5:\nret\n.L121:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $328,%rsp\n.LEHE5:\nmovq %rdi,-344(%rbp)\nmovq %rsi,-352(%rbp)\nmovb $0,-305(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\n.LBB78:\ncmpq $0,-352(%rbp)\njne .L100\n.LEHB6:\ncall <runtime.panicmem@PLT>\n.L100:\nmovq -352(%rbp),%rax\nmovq %rax,%rdi\ncall <sync.Mutex.Lock@PLT>\n.LBB79:\ncmpq $0,-352(%rbp)\njne .L101\ncall <runtime.panicmem@PLT>\n.L101:\nmovq -352(%rbp),%rax\nmovq %rax,%rdx\nmovq $0,-240(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-232(%rbp)\nmovq -232(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -232(%rbp),%rdx\nleaq <go.Solution.go.Solution..thunk1>(%rip),%rdi\nleaq -305(%rbp),%rsi\nleaq -304(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE79:\nmovq -352(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-64(%rbp)\n.LBB80:\ncmpq $0,-64(%rbp)\njne .L102\n.LBB81:\n.LBB82:\n.LBB83:\nmovl $0,%r14d\nleaq <.LC42>(%rip),%r12\nmovl $5,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %r14,-56(%rbp)\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\n.LBE83:\nmovq -56(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-216(%rbp)\nmovq %rdx,-208(%rbp)\nmovq -344(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovl $0,%ebx\njmp .L114\n.L102:\n.LBE82:\n.LBE81:\n.LBE80:\nmovq -352(%rbp),%rcx\nmovq <8>(%rcx),%rax\nmovq <16>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <24>(%rcx),%rax\nmovq %rax,-176(%rbp)\nmovq -64(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L104\ncmpq %rdx,%rax\njge .L104\nmovq -192(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-72(%rbp)\nmovq -352(%rbp),%rcx\nmovq <8>(%rcx),%rax\nmovq <16>(%rcx),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <24>(%rcx),%rax\nmovq %rax,-144(%rbp)\nmovq -64(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -144(%rbp),%rax\ntestq %rdi,%rdi\njs .L106\njmp .L118\n.L104:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L118:\ncmpq %rax,%rdi\njg .L106\ntestq %rdi,%rdi\njns .L107\njmp .L119\n.L106:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L119:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L107:\nmovq -160(%rbp),%rcx\nmovq -144(%rbp),%rdx\nmovq -352(%rbp),%rax\nmovq %rcx,<8>(%rax)\nmovq -352(%rbp),%rax\nmovq %rdi,<16>(%rax)\nmovq -352(%rbp),%rax\nmovq %rdx,<24>(%rax)\n.LEHE6:\n.LBB84:\n.LBB85:\nmovq -72(%rbp),%rax\nmovl $0,%r14d\nmovl $0,%r15d\nmovq %rax,-56(%rbp)\nmovq %r14,-336(%rbp)\nmovq %r15,-328(%rbp)\n.LBE85:\nmovq -56(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-120(%rbp)\nmovq %rdx,-112(%rbp)\nmovq -344(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovl $0,%ebx\n.L114:\n.LBE84:\n.LBE78:\nleaq -305(%rbp),%rax\nmovq %rax,%rdi\n.LEHB7:\ncall <runtime.deferreturn@PLT>\n.LEHE7:\ncmpl $1,%ebx\nje .L109\njmp .L120\n.L115:\nleaq -305(%rbp),%rax\nmovq %rax,%rdi\n.LEHB8:\ncall <runtime.checkdefer@PLT>\n.LEHE8:\nmovq -56(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-88(%rbp)\nmovq %rdx,-80(%rbp)\nmovq -344(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\nmovl $0,%ebx\njmp .L114\n.L116:\nmovq %rax,-360(%rbp)\nmovl $1,%ebx\njmp .L114\n.L109:\nmovq -360(%rbp),%rax\nmovq %rax,%rdi\n.LEHB9:\ncall <_Unwind_Resume@PLT>\n.L117:\nleaq -305(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L114\n.L120:\nmovq -344(%rbp),%rax\naddq $328,%rsp\n.LEHE9:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "s.lock.Lock()\ndefer s.lock.Unlock()\nl := len(s.nodes)\nif l == 0 {\n\treturn nil, errors.New(\"STR\")\n}\nnode := s.nodes[l-1]\ns.nodes = s.nodes[:l-1]\nreturn node, nil"}
{"src": "cmpq %fs:112,%rsp\njnb .L87\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL8:\nret\n.L87:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq $0,-48(%rbp)\n.LBB57:\nmovq $-1001,-8(%rbp)\nmovq $-1001,-16(%rbp)\nmovq $-1001,-24(%rbp)\nmovq $1001,-32(%rbp)\nmovq $1001,-40(%rbp)\n.LBB58:\nmovq $0,-56(%rbp)\n.LBB59:\n.LBB60:\n.LBB61:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rcx\nmovl $0,%eax\n.LBE61:\njmp .L73\n.L86:\n.LBB62:\nnop\n.LBE62:\n.LBB63:\n.LBB64:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L74\ncmpq %rdx,%rax\njge .L74\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE64:\n.LBB65:\nmovq %rdx,-56(%rbp)\n.LBE65:\n.LBB66:\n.LBB67:\nmovq -56(%rbp),%rdx\ncmpq -8(%rbp),%rdx\njg .L75\njmp .L84\n.L74:\n.LBE67:\n.LBE66:\n.LBB81:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L75:\n.LBE81:\n.LBB82:\n.LBB75:\n.LBB68:\nmovq -16(%rbp),%rdx\nmovq %rdx,-24(%rbp)\nmovq -8(%rbp),%rdx\nmovq %rdx,-16(%rbp)\nmovq -56(%rbp),%rdx\nmovq %rdx,-8(%rbp)\n.LBE68:\njmp .L77\n.L84:\n.LBB69:\n.LBB70:\nmovq -56(%rbp),%rdx\ncmpq -16(%rbp),%rdx\njle .L78\n.LBB71:\nmovq -16(%rbp),%rdx\nmovq %rdx,-24(%rbp)\nmovq -56(%rbp),%rdx\nmovq %rdx,-16(%rbp)\n.LBE71:\njmp .L77\n.L78:\n.LBB72:\n.LBB73:\nmovq -56(%rbp),%rdx\ncmpq -24(%rbp),%rdx\njle .L77\n.LBB74:\nmovq -56(%rbp),%rdx\nmovq %rdx,-24(%rbp)\n.L77:\n.LBE74:\n.LBE73:\n.LBE72:\n.LBE70:\n.LBE69:\n.LBE75:\n.LBB76:\nmovq -56(%rbp),%rdx\ncmpq -32(%rbp),%rdx\njge .L79\n.LBB77:\nmovq -32(%rbp),%rdx\nmovq %rdx,-40(%rbp)\nmovq -56(%rbp),%rdx\nmovq %rdx,-32(%rbp)\n.LBE77:\njmp .L80\n.L79:\n.LBB78:\n.LBB79:\nmovq -56(%rbp),%rdx\ncmpq -40(%rbp),%rdx\njge .L80\n.LBB80:\nmovq -56(%rbp),%rdx\nmovq %rdx,-40(%rbp)\n.L80:\n.LBE80:\n.LBE79:\n.LBE78:\n.LBE76:\n.LBE82:\n.LBE63:\n.LBB83:\naddq $1,%rax\n.L73:\n.LBE83:\ncmpq %rcx,%rax\njl .L86\n.LBE60:\n.LBE59:\n.LBE58:\n.LBB84:\nmovq -8(%rbp),%rax\nimulq -16(%rbp),%rax\nimulq -24(%rbp),%rax\nmovq %rax,%rdx\nmovq -8(%rbp),%rax\nimulq -32(%rbp),%rax\nimulq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.Solution.max>\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.LBE84:\n.LBE57:\nleave\nret", "tgt": "max1, max2, max3, min1, min2 := -1001, -1001, -1001, 1001, 1001\nfor _, v := range nums {\n\tif v > max1 {\n\t\tmax3 = max2\n\t\tmax2 = max1\n\t\tmax1 = v\n\t} else if v > max2 {\n\t\tmax3 = max2\n\t\tmax2 = v\n\t} else if v > max3 {\n\t\tmax3 = v\n\t}\n\tif v < min1 {\n\t\tmin2 = min1\n\t\tmin1 = v\n\t} else if v < min2 {\n\t\tmin2 = v\n\t}\n}\nreturn max(max1*min1*min2, max1*max2*max3)"}
{"src": "cmpq %fs:112,%rsp\njnb .L71\nmovl $248,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL9:\nret\n.L71:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $216,%rsp\nmovq %rdi,-216(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq $0,-40(%rbp)\n.LBB57:\ncall <hash..z2ffnv.New64a@PLT>\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\n.LBB58:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nleaq -160(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $1,-136(%rbp)\nmovq $1,-128(%rbp)\nleaq <.LC52>(%rip),%r12\nmovl $2,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <fmt.Sprintf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rcx\nmovq <48>(%rcx),%rbx\nleaq -112(%rbp),%rdi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nmovl $0,%esi\ncall <runtime.stringtoslicebyte@PLT>\nmovq -200(%rbp),%rdx\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rbx\n.LVL10:\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-176(%rbp)\n.LBE58:\nmovq -208(%rbp),%rax\nmovq <40>(%rax),%rdx\nmovq -200(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL11:\nmovq %rax,-48(%rbp)\n.LBB59:\nmovq -216(%rbp),%rax\nmovq (%rax),%rax\nleaq -1(%rax),%rdx\nmovq -48(%rbp),%rax\nshrq $16,%rax\nxorq -48(%rbp),%rax\nandq %rdx,%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE59:\n.LBE57:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "h := fnv.New64a()\n_, _ = h.Write([]byte(fmt.Sprintf(\"STR\", key)))\nhashValue := h.Sum64()\nreturn (hm.capacity - 1) & (hashValue ^ (hashValue >> 16))"}
{"src": "cmpq %fs:112,%rsp\njnb .L18\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $64,%rsp\nmovq %rdi,-72(%rbp)\nmovq $0,-32(%rbp)\n.LBB9:\nmovq -72(%rbp),%rax\nleaq <1>(%rax),%r12\nmovq -72(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %r12,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-64(%rbp)\nmovq %r12,-56(%rbp)\nmovq %rbx,-48(%rbp)\nmovq -56(%rbp),%rax\ntestq %rax,%rax\njg .L7\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L7:\nmovq -64(%rbp),%rax\nmovq $0,(%rax)\nmovq -56(%rbp),%rax\ncmpq $1,%rax\njg .L8\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L8:\nmovq -64(%rbp),%rax\naddq $8,%rax\nmovq $1,(%rax)\n.LBB10:\nmovq $2,-24(%rbp)\n.LBB11:\njmp .L9\n.L17:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\nmovq -56(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L10\ncmpq %rax,-24(%rbp)\njl .L15\n.L10:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq -64(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq $-1,(%rax)\n.LBE13:\n.LBB14:\naddq $1,-24(%rbp)\n.L9:\n.LBE14:\nmovq -24(%rbp),%rax\ncmpq -72(%rbp),%rax\njle .L17\n.LBE11:\n.LBE10:\n.LBB15:\nmovq -72(%rbp),%rax\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\nmovq %rax,%rdi\ncall <go.mathematic.fibonacciDyamic>\naddq $32,%rsp\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE15:\n.LBE9:\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "arr := make([]int, n+1, n+1)\narr[0] = 0\narr[1] = 1\nfor x := 2; x <= n; x++ {\n\tarr[x] = -1\n}\nreturn fibonacciDyamic(n, arr)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $96,%rsp\nmovq %rdi,-104(%rbp)\nmovq %rsi,-112(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq -112(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <go.spacesaving..go.spacesaving.countBucket..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%r12\nmovq -112(%rbp),%rax\nmovl $0,%edx\nmovq %rax,%rsi\nleaq <type..map.6string.7uint32>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,%rdx\nmovq -104(%rbp),%rax\nmovq %r12,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq %rbx,-80(%rbp)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -80(%rbp),%rcx\nmovq %rcx,-48(%rbp)\nmovq %rdx,-40(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L2\n.LBB3:\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -48(%rbp),%rcx\nmovq -40(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.spacesaving.Count..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\n.LBB5:\nmovq -104(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE5:\n.LBE2:\naddq $96,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "*ss = Count{\n\tolist: make([]countBucket, size),\n\thash:  make(map[string]uint32, size),\n}\nreturn ss"}
{"src": ".LFB37:\ncmpq %fs:112,%rsp\njnb .L1021\nmovl $104,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL47:\nret\n.L1021:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $88,%rsp\nmovq $0,-32(%rbp)\n.LBB825:\n.LBB826:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njne .L992\n.LBB827:\n.LBB828:\nmovq $0,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L1012\n.L992:\n.LBE828:\n.LBE827:\n.LBB829:\n.LBB830:\nmovq <24>(%rbp),%rax\ncmpq $1,%rax\njne .L994\n.LBB831:\n.LBB832:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L995\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L995:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L1012\n.L994:\n.LBE832:\n.LBE831:\n.LBE830:\n.LBE829:\n.LBE826:\nleaq <go.leetcode.rob..func1..f>(%rip),%rax\nmovq %rax,-40(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L996\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L996:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L997\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L997:\nmovq <24>(%rbp),%rax\ncmpq $1,%rax\njg .L998\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L998:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rbx\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq <16>(%rbp),%rax\naddq $8,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq -40(%rbp),%r10\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL48:\nmovq %rbx,-64(%rbp)\nmovq %rax,-56(%rbp)\nleaq -64(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\n.LBB833:\nmovq $2,-24(%rbp)\n.LBB834:\njmp .L999\n.L1020:\n.LBB835:\nnop\n.LBE835:\n.LBB836:\nmovq -24(%rbp),%rax\nsubq $1,%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\nmovq -88(%rbp),%rdx\ntestq %rax,%rax\njs .L1000\ncmpq %rdx,%rax\njl .L1014\n.L1000:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1014:\nmovq <24>(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L1002\ncmpq %rdx,-24(%rbp)\njl .L1015\n.L1002:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1015:\nmovq -24(%rbp),%rdx\nmovq %rdx,%rcx\nsarq $63,%rcx\nshrq $63,%rcx\naddq %rcx,%rdx\nandl $1,%edx\nsubq %rcx,%rdx\nmovq -88(%rbp),%rcx\ntestq %rdx,%rdx\njs .L1004\ncmpq %rcx,%rdx\njl .L1016\n.L1004:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1016:\nmovq -40(%rbp),%rcx\nmovq (%rcx),%rcx\nmovq %rcx,%r8\nmovq <16>(%rbp),%rsi\nmovq -24(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rcx\nmovq -96(%rbp),%rsi\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rdx\naddq %rcx,%rdx\nmovq -96(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq -40(%rbp),%r10\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%r8\n.LVL49:\nmovq %rax,%rcx\nmovq -24(%rbp),%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\nmovq -88(%rbp),%rdx\ntestq %rax,%rax\njs .L1006\ncmpq %rdx,%rax\njl .L1017\n.L1006:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1017:\nmovq -96(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rcx,(%rax)\n.LBE836:\n.LBB837:\naddq $1,-24(%rbp)\n.L999:\n.LBE837:\nmovq <24>(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L1020\n.LBE834:\n.LBE833:\n.LBB838:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\nmovq -88(%rbp),%rdx\ntestq %rax,%rax\njs .L1010\ncmpq %rdx,%rax\njl .L1019\n.L1010:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1019:\nmovq -96(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.L1012:\n.LBE838:\n.LBE825:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if len(nums) == 0 {\n\treturn 0\n} else if len(nums) == 1 {\n\treturn nums[0]\n}\nmax := func(m, n int) int {\n\tif m > n {\n\t\treturn m\n\t}\n\treturn n\n}\ndp := []int{nums[0], max(nums[0], nums[1])}\nfor i := 2; i < len(nums); i++ {\n\tdp[i%2] = max(dp[(i-1)%2], nums[i]+dp[i%2])\n}\nreturn dp[(len(nums)-1)%2]"}
{"src": ".LFB1:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L30\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L30:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $328,%rsp\nmovq %rdi,-328(%rbp)\nmovq -328(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB12:\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\nmovq $0,-304(%rbp)\nmovq $0,-296(%rbp)\n.LBB13:\n.LBB14:\n.LBB15:\nmovq <go.day106.testcases>(%rip),%rax\nmovq <8+go.day106.testcases>(%rip),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16+go.day106.testcases>(%rip),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovl $0,%ebx\n.LBE15:\njmp .L18\n.L29:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -248(%rbp),%rax\ntestq %rbx,%rbx\njs .L19\ncmpq %rax,%rbx\njge .L19\nmovq -256(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\n.LBE18:\n.LBB19:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\n.LBE19:\n.LBB20:\n.LBB21:\nsubq $8,%rsp\npushq -304(%rbp)\npushq -312(%rbp)\npushq -320(%rbp)\ncall <go.day106.CanHopToEnd>\naddq $32,%rsp\nmovb %al,-49(%rbp)\nmovzbl -296(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L20\njmp .L21\n.L19:\n.LBE21:\n.LBE20:\n.LBB28:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\n.LBE28:\n.LBB29:\n.LBB27:\n.LBB22:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-368(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L22\n.LBB23:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE23:\njmp .L23\n.L22:\n.LBB24:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L23:\n.LBE24:\nmovq -184(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-352(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovzbl -296(%rbp),%edx\nmovb %dl,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-344(%rbp)\nleaq <bool..d>(%rip),%r14\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -368(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -352(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L24\n.LBB25:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE25:\njmp .L25\n.L24:\n.LBB26:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L25:\n.LBE26:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC8>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L21:\n.LBE22:\n.LBE27:\n.LBE29:\n.LBE17:\n.LBB30:\naddq $1,%rbx\n.L18:\n.LBE30:\ncmpq -336(%rbp),%rbx\njl .L29\n.LBE14:\n.LBE13:\n.LBE12:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := CanHopToEnd(tc.hops); result != tc.expected {\n\t\tt.Errorf(\"STR\", tc.hops, tc.expected, result)\n\t}\n}"}
{"src": ".LFB0:\nleaq -1048(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L32\nmovl $1048,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1000,%rsp\nmovq %rdi,-824(%rbp)\ncall <go.trie.NewNode>\nmovq %rax,-56(%rbp)\nleaq <.LC45>(%rip),%rax\nmovq %rax,-784(%rbp)\nmovq $6,-776(%rbp)\nleaq <.LC46>(%rip),%rax\nmovq %rax,-768(%rbp)\nmovq $5,-760(%rbp)\nleaq <.LC47>(%rip),%r12\nmovl $6,%r13d\nmovq %r12,-752(%rbp)\nmovq %r13,-744(%rbp)\nmovb $0,-736(%rbp)\nleaq <.LC48>(%rip),%r14\nmovl $6,%r15d\nmovq %r14,-728(%rbp)\nmovq %r15,-720(%rbp)\nmovb $0,-712(%rbp)\nleaq <.LC45>(%rip),%rax\nmovq %rax,-960(%rbp)\nmovq $6,-952(%rbp)\nmovdqa -960(%rbp),%xmm0\nmovups %xmm0,-704(%rbp)\nmovb $1,-688(%rbp)\nleaq -752(%rbp),%rax\nmovq %rax,%r8\nmovl $16,%ecx\nmovl $24,%edx\nmovl $3,%esi\nleaq <type..map.6string.7bool>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-64(%rbp)\n.LBB2:\nmovq $0,-800(%rbp)\nmovq $0,-792(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -784(%rbp),%rax\nmovq -776(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -768(%rbp),%rax\nmovq -760(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovl $2,%r13d\nmovl $0,%r12d\n.LBE5:\njmp .L2\n.L30:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %r12,%r12\njs .L3\ncmpq $1,%r12\njg .L3\nmovq %r12,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rbx\naddq %rbx,%rax\nsubq $624,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE8:\n.LBB9:\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\n.LBE9:\n.LBB10:\nmovq -800(%rbp),%rcx\nmovq -792(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.trie.Node.Insert>\nleaq <string..d>(%rip),%rax\nmovq %rax,-1040(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L27\n.L3:\n.LBE10:\n.LBB15:\nmovl $2,%esi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE15:\n.LBB16:\n.LBB11:\nmovq -632(%rbp),%rcx\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE11:\njmp .L6\n.L27:\n.LBB12:\nmovq -632(%rbp),%rcx\nleaq -624(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -632(%rbp),%rax\nmovq %rax,-1032(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovdqa -1040(%rbp),%xmm1\nmovups %xmm1,-592(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB13:\nmovq -600(%rbp),%rcx\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE13:\njmp .L8\n.L7:\n.LBB14:\nmovq -600(%rbp),%rcx\nleaq -592(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE14:\nmovq -600(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $1,-152(%rbp)\nmovq $1,-144(%rbp)\nleaq <.LC49>(%rip),%rax\nmovq %rax,-944(%rbp)\nmovq $23,-936(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -824(%rbp),%rax\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Logf..stub@PLT>\naddq $32,%rsp\n.LBE16:\n.LBE7:\n.LBB17:\naddq $1,%r12\n.L2:\n.LBE17:\ncmpq %r13,%r12\njl .L30\n.LBE4:\n.LBE3:\n.LBE2:\n.LBB18:\nmovq $0,-816(%rbp)\nmovq $0,-808(%rbp)\nmovb $0,-65(%rbp)\n.LBB19:\n.LBB20:\n.LBB21:\nleaq -576(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6string.7bool>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE21:\njmp .L11\n.L31:\n.LBB22:\nnop\n.LBE22:\n.LBB23:\n.LBB24:\nmovq -576(%rbp),%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq -568(%rbp),%rax\nmovzbl (%rax),%esi\n.LBE24:\n.LBB25:\nmovq %rcx,%rax\nmovq %rbx,%rdx\nmovq %rax,-816(%rbp)\nmovq %rdx,-808(%rbp)\nmovb %sil,-65(%rbp)\n.LBE25:\n.LBB26:\nmovq -816(%rbp),%rcx\nmovq -808(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.trie.Node.Find>\nmovb %al,-66(%rbp)\n.LBB27:\nmovzbl -66(%rbp),%eax\ncmpb -65(%rbp),%al\nje .L12\n.LBB28:\nmovb $1,-480(%rbp)\nleaq <.LC50>(%rip),%rax\nmovq %rax,-928(%rbp)\nmovq $0,-920(%rbp)\nmovdqa -928(%rbp),%xmm2\nmovups %xmm2,-472(%rbp)\nmovb $0,-456(%rbp)\nleaq <.LC51>(%rip),%rax\nmovq %rax,-912(%rbp)\nmovq $4,-904(%rbp)\nmovdqa -912(%rbp),%xmm3\nmovups %xmm3,-448(%rbp)\nmovzbl -65(%rbp),%eax\nmovb %al,-129(%rbp)\nleaq -480(%rbp),%rax\nmovq %rax,%r8\nmovl $8,%ecx\nmovl $24,%edx\nmovl $2,%esi\nleaq <type..map.6bool.7string>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,%rcx\nleaq -129(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type..map.6bool.7string>(%rip),%rdi\ncall <runtime.mapaccess1@PLT>\nmovq %rax,%rbx\nleaq <string..d>(%rip),%rax\nmovq %rax,-1024(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-424(%rbp)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB29:\nmovq -424(%rbp),%rcx\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE29:\njmp .L14\n.L13:\n.LBB30:\nmovq -424(%rbp),%rcx\nleaq -416(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE30:\nmovq -424(%rbp),%rax\nmovq %rax,-1016(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-1008(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nmovq (%rbx),%rax\nmovq <8>(%rbx),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L15\n.LBB31:\nmovq -392(%rbp),%rcx\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE31:\njmp .L16\n.L15:\n.LBB32:\nmovq -392(%rbp),%rcx\nleaq -384(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L16:\n.LBE32:\nmovq -392(%rbp),%rax\nmovq %rax,-1000(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovdqa -1024(%rbp),%xmm4\nmovups %xmm4,-352(%rbp)\nmovdqa -1008(%rbp),%xmm5\nmovups %xmm5,-336(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L17\n.LBB33:\nmovq -360(%rbp),%rcx\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE33:\njmp .L18\n.L17:\n.LBB34:\nmovq -360(%rbp),%rcx\nleaq -352(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L18:\n.LBE34:\nmovq -360(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $2,-120(%rbp)\nmovq $2,-112(%rbp)\nleaq <.LC52>(%rip),%rax\nmovq %rax,-896(%rbp)\nmovq $37,-888(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -824(%rbp),%rax\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L12:\n.LBE28:\n.LBE27:\nmovb $1,-320(%rbp)\nleaq <.LC50>(%rip),%rax\nmovq %rax,-880(%rbp)\nmovq $0,-872(%rbp)\nmovdqa -880(%rbp),%xmm6\nmovups %xmm6,-312(%rbp)\nmovb $0,-296(%rbp)\nleaq <.LC51>(%rip),%rax\nmovq %rax,-864(%rbp)\nmovq $4,-856(%rbp)\nmovdqa -864(%rbp),%xmm7\nmovups %xmm7,-288(%rbp)\nmovzbl -66(%rbp),%eax\nmovb %al,-97(%rbp)\nleaq -320(%rbp),%rax\nmovq %rax,%r8\nmovl $8,%ecx\nmovl $24,%edx\nmovl $2,%esi\nleaq <type..map.6bool.7string>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,%rcx\nleaq -97(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type..map.6bool.7string>(%rip),%rdi\ncall <runtime.mapaccess1@PLT>\nmovq %rax,%rbx\nleaq <string..d>(%rip),%rax\nmovq %rax,-992(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L19\n.LBB35:\nmovq -264(%rbp),%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE35:\njmp .L20\n.L19:\n.LBB36:\nmovq -264(%rbp),%rcx\nleaq -256(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L20:\n.LBE36:\nmovq -264(%rbp),%rax\nmovq %rax,-984(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-976(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq (%rbx),%rax\nmovq <8>(%rbx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L21\n.LBB37:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE37:\njmp .L22\n.L21:\n.LBB38:\nmovq -232(%rbp),%rcx\nleaq -224(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L22:\n.LBE38:\nmovq -232(%rbp),%rax\nmovq %rax,-968(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovdqa -992(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nmovdqa -976(%rbp),%xmm1\nmovups %xmm1,-176(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L23\n.LBB39:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE39:\njmp .L24\n.L23:\n.LBB40:\nmovq -200(%rbp),%rcx\nleaq -192(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L24:\n.LBE40:\nmovq -200(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\nleaq <.LC53>(%rip),%rax\nmovq %rax,-848(%rbp)\nmovq $22,-840(%rbp)\nmovq -848(%rbp),%rax\nmovq -840(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -824(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Logf..stub@PLT>\naddq $32,%rsp\n.LBE26:\n.LBE23:\n.LBB41:\nleaq -576(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L11:\n.LBE41:\nmovq -576(%rbp),%rax\ntestq %rax,%rax\njne .L31\n.LBE20:\n.LBE19:\n.LBE18:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "n := NewNode()\ninsertWords := [...]string{\n\t\"STR\",\n\t\"STR\",\n}\ncheckWords := map[string]bool{\n\t\"STR\": false,\n\t\"STR\": false,\n\t\"STR\": true,\n}\nfor _, w := range insertWords {\n\tn.Insert(w)\n\tt.Logf(\n\t\t\"STR\",\n\t\tw,\n\t)\n}\nfor k, v := range checkWords {\n\tok := n.Find(k)\n\tif ok != v {\n\t\tt.Fatalf(\n\t\t\t\"STR\",\n\t\t\tk,\n\t\t\tmap[bool]string{true: \"STR\"}[v],\n\t\t)\n\t}\n\tt.Logf(\n\t\t\"STR\",\n\t\tk,\n\t\tmap[bool]string{true: \"STR\"}[ok],\n\t)\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L590\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL44:\nret\n.L590:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq %rsi,-48(%rbp)\n.LBB536:\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\ntestq %rax,%rax\njle .L567\n.LBB537:\n.LBB538:\ncmpq $0,-48(%rbp)\njns .L569\n.LBB539:\nmovq -40(%rbp),%rax\nmovq (%rax),%rsi\nmovq -40(%rbp),%rax\nmovq (%rax),%rcx\ncmpq $-1,%rsi\njne .L570\nmovq -48(%rbp),%rax\nnegq %rax\nmovq %rax,%rdx\njmp .L571\n.L570:\ntestq %rsi,%rsi\njne .L572\ncall <runtime.panicdivide@PLT>\n.L572:\nmovq -48(%rbp),%rax\ncqto\nidivq %rsi\nmovq %rax,%rdx\n.L571:\nmovq %rcx,%rax\nsubq %rdx,%rax\nsubq $1,%rax\nmovq %rax,-24(%rbp)\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\nimulq -24(%rbp),%rax\naddq %rax,-48(%rbp)\n.L569:\n.LBE539:\n.LBE538:\nmovq -40(%rbp),%rax\nmovq (%rax),%rdi\ncmpq $-1,%rdi\njne .L573\nmovl $0,%eax\njmp .L574\n.L573:\ntestq %rdi,%rdi\njne .L575\ncall <runtime.panicdivide@PLT>\n.L575:\nmovq -48(%rbp),%rax\ncqto\nidivq %rdi\nmovq %rdx,%rcx\nmovq %rcx,%rax\n.L574:\nmovq %rax,-48(%rbp)\n.LBB540:\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\ncmpq -48(%rbp),%rax\njge .L576\n.LBB541:\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\nsubq -48(%rbp),%rax\nmovq %rax,-48(%rbp)\n.LBB542:\nmovq $0,-8(%rbp)\n.LBB543:\njmp .L577\n.L586:\n.LBB544:\nmovq -40(%rbp),%rax\naddq $8,%rax\nmovq -40(%rbp),%rdx\nmovq <8>(%rdx),%rdx\nmovq <16>(%rdx),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L578\n.LBB545:\nmovq %rdx,(%rax)\n.LBE545:\njmp .L579\n.L578:\n.LBB546:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L579:\n.LBE546:\n.LBE544:\n.LBB547:\naddq $1,-8(%rbp)\n.L577:\n.LBE547:\nmovq -8(%rbp),%rax\ncmpq -48(%rbp),%rax\njge .L567\n.LBB548:\njmp .L586\n.L576:\n.LBE548:\n.LBE543:\n.LBE542:\n.LBE541:\n.LBB549:\n.LBB550:\ncmpq $0,-48(%rbp)\nje .L588\n.LBB551:\n.LBB552:\nmovq $0,-16(%rbp)\n.LBB553:\njmp .L582\n.L589:\n.LBB554:\nnop\n.LBE554:\n.LBB555:\nmovq -40(%rbp),%rax\naddq $8,%rax\nmovq -40(%rbp),%rdx\nmovq <8>(%rdx),%rdx\nmovq <24>(%rdx),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L583\n.LBB556:\nmovq %rdx,(%rax)\n.LBE556:\njmp .L584\n.L583:\n.LBB557:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L584:\n.LBE557:\n.LBE555:\n.LBB558:\naddq $1,-16(%rbp)\n.L582:\n.LBE558:\nmovq -16(%rbp),%rax\ncmpq -48(%rbp),%rax\njl .L589\njmp .L567\n.L588:\n.LBE553:\n.LBE552:\n.LBE551:\n.LBB559:\nnop\n.L567:\n.LBE559:\n.LBE550:\n.LBE549:\n.LBE540:\n.LBE537:\n.LBE536:\nleave\nret", "tgt": "if cl.Size > 0 {\n\tif places < 0 {\n\t\tmultiple := cl.Size - 1 - places/cl.Size\n\t\tplaces += multiple * cl.Size\n\t}\n\tplaces %= cl.Size\n\tif places > cl.Size/2 {\n\t\tplaces = cl.Size - places\n\t\tfor i := 0; i < places; i++ {\n\t\t\tcl.Head = cl.Head.Prev\n\t\t}\n\t} else if places == 0 {\n\t\treturn\n\t} else {\n\t\tfor i := 0; i < places; i++ {\n\t\t\tcl.Head = cl.Head.Next\n\t\t}\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L22\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\n.LEHB0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\n.LEHE0:\nmovq %rdi,-152(%rbp)\nmovb $0,-129(%rbp)\nmovq $0,-40(%rbp)\n.LBB8:\ncmpq $0,-152(%rbp)\njne .L9\n.LEHB1:\ncall <runtime.panicmem@PLT>\n.L9:\nmovq -152(%rbp),%rax\naddq $32,%rax\nmovq %rax,%rdi\ncall <sync.Mutex.Lock@PLT>\n.LBB9:\ncmpq $0,-152(%rbp)\njne .L10\ncall <runtime.panicmem@PLT>\n.L10:\nmovq -152(%rbp),%rax\nleaq <32>(%rax),%rdx\nmovq $0,-56(%rbp)\nleaq -56(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -48(%rbp),%rdx\nleaq <go.stack.go.stack..thunk0>(%rip),%rdi\nleaq -129(%rbp),%rsi\nleaq -128(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE9:\n.LBB10:\nmovq -152(%rbp),%rax\nmovq <24>(%rax),%rax\n.LEHE1:\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rbx\nmovl $0,%r12d\n.L17:\n.LBE10:\n.LBE8:\nleaq -129(%rbp),%rax\nmovq %rax,%rdi\n.LEHB2:\ncall <runtime.deferreturn@PLT>\n.LEHE2:\ncmpl $1,%r12d\nje .L11\nmovq %rbx,%rax\njmp .L21\n.L18:\nleaq -129(%rbp),%rax\nmovq %rax,%rdi\n.LEHB3:\ncall <runtime.checkdefer@PLT>\n.LEHE3:\nmovq -40(%rbp),%rbx\nmovl $0,%r12d\njmp .L17\n.L19:\nmovq %rax,%r13\nmovl $1,%r12d\njmp .L17\n.L11:\nmovq %r13,%rax\nmovq %rax,%rdi\n.LEHB4:\ncall <_Unwind_Resume@PLT>\n.L20:\nleaq -129(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L17\n.L21:\naddq $136,%rsp\n.LEHE4:\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "s.lock.Lock()\ndefer s.lock.Unlock()\nreturn s.len"}
{"src": "cmpq %fs:112,%rsp\njnb .L1620\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL166:\nret\n.L1620:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-184(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB1617:\n.LBB1618:\nleaq <string..d>(%rip),%rax\nmovq %rax,-208(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -184(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1617\n.LBB1619:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1619:\njmp .L1618\n.L1617:\n.LBB1620:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1618:\n.LBE1620:\nmovq -152(%rbp),%rax\nmovq %rax,-200(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq <16>(%rdx),%rdx\nmovq %rdx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r15\nmovdqa -208(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC578>(%rip),%r12\nmovl $6,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <fmt.Sprintf@PLT>\naddq $32,%rsp\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\n.LBE1618:\n.LBE1617:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "return fmt.Sprintf(\"STR\", p.Name, p.Age)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L24\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L24:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-136(%rbp)\nmovq $0,-32(%rbp)\n.LBB2:\n.LBB3:\ncmpq $1,-136(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovq $1,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L17\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -136(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq %rbx,-112(%rbp)\n.LBB6:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovl $1,%ecx\nmovl $1,%edx\nmovq -88(%rbp),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L4:\nmovq -96(%rbp),%rax\nmovq %rcx,(%rax)\nmovq -56(%rbp),%rax\ncmpq $1,%rax\njg .L5\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L5:\nmovq -64(%rbp),%rax\naddq $8,%rax\nmovq %rdx,(%rax)\n.LBE6:\n.LBB7:\nmovq $2,-24(%rbp)\n.LBB8:\njmp .L6\n.L23:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -120(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L7\ncmpq %rax,-24(%rbp)\njl .L18\n.L7:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq -24(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -120(%rbp),%rax\ntestq %rdx,%rdx\njs .L9\ncmpq %rax,%rdx\njl .L19\n.L9:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq -24(%rbp),%rax\nsubq $2,%rax\nmovq -120(%rbp),%rcx\ntestq %rax,%rax\njs .L11\ncmpq %rcx,%rax\njl .L20\n.L11:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq -128(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq -128(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -128(%rbp),%rsi\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\naddq %rcx,%rdx\nmovq %rdx,(%rax)\n.LBE10:\n.LBB11:\naddq $1,-24(%rbp)\n.L6:\n.LBE11:\nmovq -24(%rbp),%rax\ncmpq -136(%rbp),%rax\njle .L23\n.LBE8:\n.LBE7:\n.LBB12:\nmovq -120(%rbp),%rax\ncmpq $0,-136(%rbp)\njs .L15\ncmpq %rax,-136(%rbp)\njl .L22\n.L15:\nmovq -136(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq -128(%rbp),%rdx\nmovq -136(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.L17:\n.LBE12:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if n < 2 {\n\treturn 1\n}\nrec := make([]int, n+1)\nrec[0], rec[1] = 1, 1\nfor i := 2; i <= n; i++ {\n\trec[i] = rec[i-1] + rec[i-2]\n}\nreturn rec[n]"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L21\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L21:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq $0,-32(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB3:\ncmpq $0,-40(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\ncmpq $1,-40(%rbp)\njne .L4\n.LBB7:\n.LBB8:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L5\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L5:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L3\n.L4:\n.LBE8:\n.LBE7:\n.LBE6:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L6\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB9:\nmovq $1,-24(%rbp)\n.LBB10:\njmp .L7\n.L20:\n.LBB11:\nnop\n.LBE11:\n.LBB12:\n.LBB13:\ncmpq $0,-8(%rbp)\njns .L8\n.LBB14:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L9\ncmpq %rax,-24(%rbp)\njl .L17\n.L9:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\n.LBE14:\njmp .L11\n.L8:\n.LBB15:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L12\ncmpq %rax,-24(%rbp)\njl .L18\n.L12:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\naddq %rax,-8(%rbp)\n.L11:\n.LBE15:\n.LBE13:\n.LBB16:\nmovq -16(%rbp),%rax\ncmpq -8(%rbp),%rax\njge .L14\n.LBB17:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\n.L14:\n.LBE17:\n.LBE16:\n.LBE12:\n.LBB18:\naddq $1,-24(%rbp)\n.L7:\n.LBE18:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L20\n.LBE10:\n.LBE9:\n.LBB19:\nmovq -16(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.L3:\n.LBE19:\n.LBE2:\nleave\nret", "tgt": "n := len(nums)\nif n == 0 {\n\treturn 0\n}\nif n == 1 {\n\treturn nums[0]\n}\ntmp := nums[0]\nmax := tmp\nfor i := 1; i < n; i++ {\n\tif tmp < 0 {\n\t\ttmp = nums[i]\n\t} else {\n\t\ttmp += nums[i]\n\t}\n\tif max < tmp {\n\t\tmax = tmp\n\t}\n}\nreturn max"}
{"src": "cmpq %fs:112,%rsp\njnb .L15\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq $0,-8(%rbp)\n.LBB8:\n.LBB9:\ncall <syscall.Getgid@PLT>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE9:\n.LBE8:\nleave\nret", "tgt": "return syscall.Getgid()"}
{"src": ".LFB0:\nleaq -696(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $696,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $648,%rsp\nmovq %rdi,-664(%rbp)\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.arr1.0.6.7int.2.go.Solution.arr2.0.6.7int.2.go.Solution.d.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nleaq <.LC25>(%rip),%rax\nmovq %rax,-688(%rbp)\nmovq $8,-680(%rbp)\nmovdqa -688(%rbp),%xmm0\nmovups %xmm0,-576(%rbp)\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-624(%rbp)\nmovq -624(%rbp),%rax\nmovq $4,(%rax)\nmovq $5,<8>(%rax)\nmovq $8,<16>(%rax)\nmovq -624(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $3,-552(%rbp)\nmovq $3,-544(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-616(%rbp)\nmovq -616(%rbp),%rax\nmovq $10,(%rax)\nmovq $9,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $8,<24>(%rax)\nmovq -616(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovq $4,-528(%rbp)\nmovq $4,-520(%rbp)\nmovq $2,-512(%rbp)\nmovq $2,-504(%rbp)\nleaq <.LC25>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-496(%rbp)\nmovq %r15,-488(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-608(%rbp)\nmovq -608(%rbp),%rax\nmovq $1,(%rax)\nmovq $4,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq -608(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $4,-472(%rbp)\nmovq $4,-464(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq $-4,(%rax)\nmovq $-3,<8>(%rax)\nmovq $6,<16>(%rax)\nmovq $10,<24>(%rax)\nmovq $20,<32>(%rax)\nmovq $30,<40>(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovq $6,-448(%rbp)\nmovq $6,-440(%rbp)\nmovq $3,-432(%rbp)\nmovq $2,-424(%rbp)\nleaq <.LC25>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-416(%rbp)\nmovq %r13,-408(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-592(%rbp)\nmovq -592(%rbp),%rax\nmovq $2,(%rax)\nmovq $1,<8>(%rax)\nmovq $100,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq -592(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $4,-392(%rbp)\nmovq $4,-384(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-584(%rbp)\nmovq -584(%rbp),%rax\nmovq $-5,(%rax)\nmovq $-2,<8>(%rax)\nmovq $10,<16>(%rax)\nmovq $-3,<24>(%rax)\nmovq $7,<32>(%rax)\nmovq -584(%rbp),%rax\nmovq %rax,-376(%rbp)\nmovq $5,-368(%rbp)\nmovq $5,-360(%rbp)\nmovq $6,-352(%rbp)\nmovq $1,-344(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -632(%rbp),%rax\nmovq -576(%rbp),%rcx\nmovq -568(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -560(%rbp),%rcx\nmovq -552(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -544(%rbp),%rcx\nmovq -536(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -528(%rbp),%rcx\nmovq -520(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -512(%rbp),%rcx\nmovq -504(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -496(%rbp),%rcx\nmovq -488(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -464(%rbp),%rcx\nmovq -456(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\nmovq -432(%rbp),%rcx\nmovq -424(%rbp),%rbx\nmovq %rcx,<144>(%rax)\nmovq %rbx,<152>(%rax)\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,<160>(%rax)\nmovq %rbx,<168>(%rax)\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,<176>(%rax)\nmovq %rbx,<184>(%rax)\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,<192>(%rax)\nmovq %rbx,<200>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<208>(%rax)\nmovq %rbx,<216>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<224>(%rax)\nmovq %rbx,<232>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -632(%rbp),%rax\nleaq -576(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.arr1.0.6.7int.2.go.Solution.arr2.0.6.7int.2.go.Solution.d.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -632(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq $3,-648(%rbp)\nmovq $3,-640(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.arr1.0.6.7int.2.go.Solution.arr2.0.6.7int.2.go.Solution.d.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -640(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -248(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -256(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-336(%rbp)\nmovq %rdi,-328(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-320(%rbp)\nmovq %rdi,-312(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <48>(%rax),%rsi\nmovq <56>(%rax),%rdi\nmovq %rsi,-288(%rbp)\nmovq %rdi,-280(%rbp)\nmovq <72>(%rax),%rdx\nmovq <64>(%rax),%rax\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\n.LBE10:\n.LBB11:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -224(%rbp),%rsi\nmovq -216(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -208(%rbp),%rsi\nmovq -200(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<48>(%rax)\nmovq %rdi,<56>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<64>(%rax)\nmovq %rdi,<72>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -224(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.arr1.0.6.7int.2.go.Solution.arr2.0.6.7int.2.go.Solution.d.0int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC26>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.arr1.0.6.7int.2.go.Solution.arr2.0.6.7int.2.go.Solution.d.0int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.arr1.0.6.7int.2.go.Solution.arr2.0.6.7int.2.go.Solution.d.0int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -664(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $648,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tarr1   []int\n\tarr2   []int\n\td      int\n\texpect int\n}{\n\t{\"STR\", []int{4, 5, 8}, []int{10, 9, 1, 8}, 2, 2},\n\t{\"STR\", []int{1, 4, 2, 3}, []int{-4, -3, 6, 10, 20, 30}, 3, 2},\n\t{\"STR\", []int{2, 1, 100, 3}, []int{-5, -2, 10, -3, 7}, 6, 1},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.arr1, c.arr2, c.d)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.arr1, c.arr2, c.d)\n\t\t}\n\t})\n}"}
{"src": "leaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L235\nmovl $296,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL43:\nret\n.L235:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-264(%rbp)\nmovq %rsi,-272(%rbp)\nmovq %rdx,-288(%rbp)\nmovq %rcx,-280(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovb $0,-41(%rbp)\n.LBB203:\n.LBB204:\nmovq -272(%rbp),%rax\nmovl <4>(%rax),%eax\ntestl %eax,%eax\nje .L222\n.LBB205:\n.LBB206:\nmovq $0,-40(%rbp)\n.LBB207:\njmp .L223\n.L234:\n.LBB208:\nnop\n.LBE208:\n.LBB209:\nmovq -40(%rbp),%rax\nmovl %eax,%ecx\nmovq -288(%rbp),%rsi\nmovq -280(%rbp),%rdx\nmovq -272(%rbp),%rax\nmovq %rax,%rdi\ncall <go.hashMap.openHashMap.hash>\nmovl %eax,-48(%rbp)\n.LBB210:\n.LBB211:\nmovq -272(%rbp),%rcx\nmovq <40>(%rcx),%rax\nmovq <48>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <56>(%rcx),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rax\nmovl -48(%rbp),%edx\ncmpq %rdx,%rax\njg .L224\nmovl -48(%rbp),%edx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L224:\nmovq -240(%rbp),%rdx\nmovl -48(%rbp),%eax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L225\n.LBB212:\nmovq -272(%rbp),%rcx\nmovq <40>(%rcx),%rax\nmovq <48>(%rcx),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <56>(%rcx),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\nmovl -48(%rbp),%edx\ncmpq %rdx,%rax\njg .L226\nmovl -48(%rbp),%edx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L226:\nmovq -208(%rbp),%rdx\nmovl -48(%rbp),%eax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq (%rcx),%rdi\nmovq <8>(%rcx),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.efaceeq@PLT>\n.L225:\n.LBE212:\n.LBE211:\ntestb %al,%al\nje .L227\n.LBB213:\n.LBB214:\n.LBB215:\nmovq -272(%rbp),%rcx\nmovq <40>(%rcx),%rax\nmovq <48>(%rcx),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <56>(%rcx),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%rax\nmovl -48(%rbp),%edx\ncmpq %rdx,%rax\njg .L228\nmovl -48(%rbp),%edx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L228:\nmovq -176(%rbp),%rdx\nmovl -48(%rbp),%eax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq <24>(%rax),%rdx\nmovq <16>(%rax),%rax\nmovq -272(%rbp),%rsi\nmovq <40>(%rsi),%rcx\nmovq <48>(%rsi),%rbx\nmovq %rcx,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq <56>(%rsi),%rcx\nmovq %rcx,-128(%rbp)\nmovq -136(%rbp),%rcx\nmovl -48(%rbp),%esi\ncmpq %rsi,%rcx\njg .L229\nmovl -48(%rbp),%eax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L229:\nmovq -144(%rbp),%rsi\nmovl -48(%rbp),%ecx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rcx\nmovzbl <32>(%rcx),%ecx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovb %cl,-41(%rbp)\n.LBE215:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovzbl -41(%rbp),%eax\nmovb %al,-96(%rbp)\nmovq -264(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L221\n.L227:\n.LBE214:\n.LBE213:\n.LBE210:\n.LBE209:\n.LBB216:\naddq $1,-40(%rbp)\n.L223:\n.LBE216:\nmovq -272(%rbp),%rax\nmovl (%rax),%eax\nmovl %eax,%eax\ncmpq %rax,-40(%rbp)\njl .L234\n.L222:\n.LBE207:\n.LBE206:\n.LBE205:\n.LBE204:\n.LBB217:\n.LBB218:\nmovl $0,%r12d\nmovl $0,%r13d\nmovl $0,%eax\nmovq %r12,-256(%rbp)\nmovq %r13,-248(%rbp)\nmovb %al,-41(%rbp)\n.LBE218:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovzbl -41(%rbp),%eax\nmovb %al,-64(%rbp)\nmovq -264(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -64(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L221:\n.LBE217:\n.LBE203:\nmovq -264(%rbp),%rax\naddq $264,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "if h.Count != 0 {\n\tfor i := 0; i < int(h.Cap); i++ {\n\t\thashValue := h.hash(key, uint32(i))\n\t\tif h.backets[hashValue] != nil && h.backets[hashValue].Key == key {\n\t\t\treturn h.backets[hashValue].Value, h.backets[hashValue].exist\n\t\t}\n\t}\n}\nreturn nil, false"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L35\nmovl $152,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L35:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $136,%rsp\nmovq <24>(%rbp),%rax\nmovq %rax,-48(%rbp)\n.LBB2:\ncmpq $0,-48(%rbp)\nje .L30\n.LBE2:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L4:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-56(%rbp)\n.LBB4:\ncmpq $0,-56(%rbp)\nje .L31\n.LBE4:\nmovq -48(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7bool>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq %rbx,-128(%rbp)\n.LBB6:\nmovq $0,-24(%rbp)\n.LBB7:\njmp .L6\n.L32:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -56(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <bool..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -136(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L7\ncmpq %rax,-24(%rbp)\njl .L25\n.L7:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq -144(%rbp),%rsi\nmovq -24(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq %rdx,-112(%rbp)\nmovq %rbx,-104(%rbp)\nmovq %rbx,-96(%rbp)\nmovq -104(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -96(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L9\n.LBB10:\nmovq -112(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L10\n.L9:\n.LBE10:\n.LBB11:\nmovq -112(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L10:\n.LBE11:\n.LBE9:\n.LBB12:\naddq $1,-24(%rbp)\n.L6:\n.LBE12:\nmovq -24(%rbp),%rax\ncmpq -48(%rbp),%rax\njl .L32\n.LBE7:\n.LBE6:\n.LBB13:\nmovq $0,-32(%rbp)\n.LBB14:\njmp .L13\n.L34:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\n.LBB17:\nmovq $0,-40(%rbp)\n.LBB18:\njmp .L14\n.L33:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -136(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L15\ncmpq %rax,-32(%rbp)\njl .L27\n.L15:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq -144(%rbp),%rcx\nmovq -32(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L17\ncmpq %rax,-40(%rbp)\njge .L17\nmovq -80(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nxorl $1,%eax\ntestb %al,%al\njne .L18\njmp .L19\n.L17:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\n.LBB22:\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rax\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.helper>\naddq $48,%rsp\n.L19:\n.LBE22:\n.LBE21:\n.LBE20:\n.LBB23:\naddq $1,-40(%rbp)\n.L14:\n.LBE23:\nmovq -40(%rbp),%rax\ncmpq -56(%rbp),%rax\njl .L33\n.LBE18:\n.LBE17:\n.LBE16:\n.LBB24:\naddq $1,-32(%rbp)\n.L13:\n.LBE24:\nmovq -32(%rbp),%rax\ncmpq -48(%rbp),%rax\njl .L34\njmp .L1\n.L30:\n.LBE14:\n.LBE13:\n.LBB25:\n.LBB3:\nnop\njmp .L1\n.L31:\n.LBE3:\n.LBE25:\n.LBB26:\n.LBB5:\nnop\n.L1:\n.LBE5:\n.LBE26:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "l1 := len(board)\nif l1 == 0 {\n\treturn\n}\nl2 := len(board[0])\nif l2 == 0 {\n\treturn\n}\nvisit := make([][]bool, l1)\nfor i := 0; i < l1; i++ {\n\tvisit[i] = make([]bool, l2)\n}\nfor i := 0; i < l1; i++ {\n\tfor j := 0; j < l2; j++ {\n\t\tif !visit[i][j] {\n\t\t\thelper(board, visit, i, j)\n\t\t}\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L15\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\ncmpq $0,-40(%rbp)\njne .L8\ncall <runtime.panicmem@PLT>\n.L8:\nmovq -40(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-16(%rbp)\nmovb $0,-1(%rbp)\n.LBB6:\n.LBB7:\nmovq -24(%rbp),%rax\ntestq %rax,%rax\njg .L9\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9:\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rdx,%rcx\ncmpq $1,%rcx\njne .L10\nmovq %rax,%rsi\nleaq <.LC25>(%rip),%rcx\ncmpq %rcx,%rsi\njne .L11\nmovl $1,%eax\njmp .L13\n.L11:\nmovzbl (%rax),%eax\nmovzbl %al,%eax\nleaq <.LC25>(%rip),%rdx\nmovzbl (%rdx),%edx\nmovzbl %dl,%edx\nsubl %edx,%eax\ntestl %eax,%eax\nsete %al\njmp .L13\n.L10:\nmovl $0,%eax\n.L13:\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE7:\n.LBE6:\nleave\nret", "tgt": "return me[0] == \"STR\""}
{"src": ".LFB233:\nleaq -472(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L6137\nmovl $472,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL294:\nret\n.L6137:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $440,%rsp\nmovq %rdi,-456(%rbp)\nmovq $0,-384(%rbp)\nmovq $0,-376(%rbp)\nmovq $0,-368(%rbp)\n.LBB5007:\n.LBB5008:\nmovq <24>(%rbp),%rax\ncmpq $1,%rax\njg .L6102\n.LBB5009:\n.LBB5010:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -456(%rbp),%rcx\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -368(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L6101\n.L6102:\n.LBE5010:\n.LBE5009:\n.LBE5008:\nleaq <go.leetcode.merge..func1>(%rip),%rdx\nleaq <16>(%rbp),%rcx\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\nleaq -320(%rbp),%rax\nmovq %rax,-296(%rbp)\nmovq -296(%rbp),%rax\nmovq %rdx,(%rax)\nmovq %rcx,<8>(%rax)\nmovq -296(%rbp),%rbx\nleaq <type...6.7.6.7int>(%rip),%r12\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-336(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6104\n.LBB5011:\nmovq -360(%rbp),%rcx\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -336(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE5011:\njmp .L6105\n.L6104:\n.LBB5012:\nmovq -360(%rbp),%rax\nleaq -352(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6105:\n.LBE5012:\nmovq -360(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nmovl $0,%edx\nmovl $0,%esi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-416(%rbp)\nmovq $0,-408(%rbp)\nmovq $0,-400(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L6106\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6106:\nmovq <16>(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-432(%rbp)\n.LBB5013:\nmovq $1,-40(%rbp)\n.LBB5014:\njmp .L6107\n.L6136:\n.LBB5015:\nnop\n.LBE5015:\n.LBB5016:\n.LBB5017:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L6108\ncmpq %rax,-40(%rbp)\njl .L6132\n.L6108:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6132:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-272(%rbp)\nmovq -280(%rbp),%rax\ntestq %rax,%rax\njg .L6110\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6110:\nmovq -440(%rbp),%rax\ncmpq $1,%rax\njg .L6111\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6111:\nmovq -288(%rbp),%rax\nmovq (%rax),%rdx\nmovq -448(%rbp),%rax\naddq $8,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njle .L6112\n.LBB5018:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -240(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L6113\n.LBB5019:\nmovq -256(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBE5019:\njmp .L6114\n.L6113:\n.LBB5020:\nmovq -256(%rbp),%rcx\nmovq -240(%rbp),%rdx\nmovq %rcx,-416(%rbp)\nmovq %rax,-408(%rbp)\nmovq %rdx,-400(%rbp)\n.L6114:\n.LBE5020:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -256(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,-224(%rbp)\nmovq %rbx,-216(%rbp)\nmovq -432(%rbp),%rdx\nmovq %rdx,-208(%rbp)\nmovq -216(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -208(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L6115\n.LBB5021:\nmovq -224(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L6116\n.L6115:\n.LBE5021:\n.LBB5022:\nmovq -224(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L6116:\n.LBE5022:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L6117\ncmpq %rax,-40(%rbp)\njl .L6133\n.L6117:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6133:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-432(%rbp)\n.LBE5018:\njmp .L6119\n.L6112:\n.LBB5023:\nmovq -440(%rbp),%rax\ncmpq $1,%rax\njg .L6120\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6120:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L6121\ncmpq %rax,-40(%rbp)\njl .L6134\n.L6121:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6134:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\ncmpq $1,%rax\njg .L6123\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6123:\nmovq -192(%rbp),%rax\naddq $8,%rax\nmovq (%rax),%rax\npxor %xmm0,%xmm0\ncvtsi 2sdq%rax,%xmm0\nmovq -448(%rbp),%rax\naddq $8,%rax\nmovq (%rax),%rax\npxor %xmm2,%xmm2\ncvtsi 2sdq%rax,%xmm2\nmovq %xmm2,%rax\nmovapd %xmm0,%xmm1\nmovq %rax,%xmm0\ncall <math.Max@PLT>\nmovq -440(%rbp),%rax\ncmpq $1,%rax\njg .L6124\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6124:\nmovq -448(%rbp),%rax\nleaq <8>(%rax),%rdx\ncvttsd 2siq%xmm0,%rax\nmovq %rax,(%rdx)\n.L6119:\n.LBE5023:\n.LBE5017:\n.LBE5016:\n.LBB5024:\naddq $1,-40(%rbp)\n.L6107:\n.LBE5024:\nmovq <24>(%rbp),%rax\ncmpq %rax,-40(%rbp)\njl .L6136\n.LBE5014:\n.LBE5013:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -144(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L6127\n.LBB5025:\nmovq -160(%rbp),%rsi\nleaq -64(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBE5025:\njmp .L6128\n.L6127:\n.LBB5026:\nmovq -160(%rbp),%rcx\nmovq -144(%rbp),%rdx\nmovq %rcx,-416(%rbp)\nmovq %rax,-408(%rbp)\nmovq %rdx,-400(%rbp)\n.L6128:\n.LBE5026:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -160(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq -432(%rbp),%rdx\nmovq %rdx,-112(%rbp)\nmovq -120(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -112(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L6129\n.LBB5027:\nmovq -128(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L6130\n.L6129:\n.LBE5027:\n.LBB5028:\nmovq -128(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L6130:\n.LBE5028:\n.LBB5029:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -456(%rbp),%rcx\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -368(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L6101:\n.LBE5029:\n.LBE5007:\nmovq -456(%rbp),%rax\naddq $440,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "if len(intervals) <= 1 {\n\treturn intervals\n}\nsort.Slice(intervals, func(i, j int) bool {\n\treturn intervals[i][0] <= intervals[j][0]\n})\nresult := make([][]int, 0)\ncur := intervals[0]\nfor i := 1; i < len(intervals); i++ {\n\tif intervals[i][0] > cur[1] {\n\t\tresult = append(result, cur)\n\t\tcur = intervals[i]\n\t} else {\n\t\tcur[1] = int(math.Max(float64(cur[1]), float64(intervals[i][1])))\n\t}\n}\nresult = append(result, cur)\nreturn result"}
{"src": "cmpq %fs:112,%rsp\njnb .L6\nmovl $80,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L6:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $64,%rsp\nmovq %rdi,-184(%rbp)\nmovq %rsi,-192(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\nmovb $0,-17(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nmovl $0,%ecx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovb %cl,-17(%rbp)\n.LBE6:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovzbl -17(%rbp),%eax\nmovb %al,-40(%rbp)\nmovq -184(%rbp),%rax\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -48(%rbp),%rcx\nmovq -40(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE5:\n.LBE4:\nmovq -184(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return Frame{}, false"}
{"src": ".LFB0:\nleaq -5144(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L52\nmovl $5144,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L52:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $5128,%rsp\nmovq %rdi,-5096(%rbp)\nmovq %rsi,-5104(%rbp)\nmovq %rdx,-5112(%rbp)\nmovq %rcx,-5120(%rbp)\nmovq %r8,-5128(%rbp)\nmovq $0,-288(%rbp)\nmovq $0,-280(%rbp)\nmovq $0,-272(%rbp)\n.LBB2:\nleaq -5088(%rbp),%rdx\nmovl $0,%eax\nmovl $600,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB3:\nmovq $0,-32(%rbp)\n.LBB4:\njmp .L2\n.L50:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq $0,-40(%rbp)\n.LBB8:\njmp .L3\n.L49:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -32(%rbp),%rax\nsubq -5120(%rbp),%rax\nmovq %rax,%rdi\ncall <go.problem1030.abs>\nmovq %rax,%rbx\nmovq -40(%rbp),%rax\nsubq -5128(%rbp),%rax\nmovq %rax,%rdi\ncall <go.problem1030.abs>\naddq %rbx,%rax\nmovq %rax,-64(%rbp)\ncmpq $0,-64(%rbp)\njs .L4\ncmpq $199,-64(%rbp)\njle .L39\n.L4:\nmovq -64(%rbp),%rax\nmovl $200,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -64(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rbx\naddq %rbx,%rax\nleaq -5072(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rbx\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq -232(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -40(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -232(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq $2,-216(%rbp)\nmovq $2,-208(%rbp)\nleaq <1>(%rbx),%rdx\nmovq -240(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rcx\ncmpq %rcx,%rsi\njbe .L6\n.LBB11:\ncmpq $0,-64(%rbp)\njs .L7\ncmpq $199,-64(%rbp)\njle .L40\n.L7:\nmovq -64(%rbp),%rax\nmovl $200,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -256(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rdx,%r9\nmovq %rax,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -64(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rsi\naddq %rsi,%rax\nleaq -5072(%rax),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L9\n.L6:\n.LBE11:\n.LBB12:\ncmpq $0,-64(%rbp)\njs .L10\ncmpq $199,-64(%rbp)\njle .L41\n.L10:\nmovq -64(%rbp),%rax\nmovl $200,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -256(%rbp),%rsi\nmovq -240(%rbp),%rcx\nmovq -64(%rbp),%rdi\nmovq %rdi,%rax\naddq %rax,%rax\naddq %rdi,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rdi\naddq %rdi,%rax\nsubq $5072,%rax\nmovq %rsi,(%rax)\nmovq -64(%rbp),%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rsi\naddq %rsi,%rax\nsubq $5064,%rax\nmovq %rdx,(%rax)\nmovq -64(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rsi\naddq %rsi,%rax\nsubq $5056,%rax\nmovq %rcx,(%rax)\n.L9:\n.LBE12:\ncmpq $0,-64(%rbp)\njs .L12\ncmpq $199,-64(%rbp)\njle .L42\n.L12:\nmovq -64(%rbp),%rax\nmovl $200,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nmovq -64(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rdi\naddq %rdi,%rax\nleaq -5072(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-240(%rbp)\nmovq -256(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -224(%rbp),%rcx\nmovq -216(%rbp),%rbx\nmovq %rcx,-192(%rbp)\nmovq %rbx,-184(%rbp)\nmovq -208(%rbp),%rdx\nmovq %rdx,-176(%rbp)\nmovq -184(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -176(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L14\n.LBB13:\nmovq -192(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L15\n.L14:\n.LBE13:\n.LBB14:\nmovq -192(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L15:\n.LBE14:\n.LBE10:\n.LBB15:\naddq $1,-40(%rbp)\n.L3:\n.LBE15:\nmovq -40(%rbp),%rax\ncmpq -5112(%rbp),%rax\njl .L49\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB16:\naddq $1,-32(%rbp)\n.L2:\n.LBE16:\nmovq -32(%rbp),%rax\ncmpq -5104(%rbp),%rax\njl .L50\n.LBE4:\n.LBE3:\nmovq $0,-56(%rbp)\nmovq $0,-24(%rbp)\n.LBB17:\nmovq $0,-48(%rbp)\n.LBB18:\njmp .L20\n.L51:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -24(%rbp),%rdx\ncmpq $0,-48(%rbp)\njs .L21\ncmpq $199,-48(%rbp)\njg .L21\nmovq -48(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rbx\naddq %rbx,%rax\nsubq $5064,%rax\nmovq (%rax),%rcx\nmovq -24(%rbp),%rax\naddq %rcx,%rax\nmovq %rdx,-56(%rbp)\nmovq %rax,-24(%rbp)\n.LBE21:\ncmpq $0,-24(%rbp)\njns .L22\njmp .L23\n.L21:\n.LBB22:\nmovq -48(%rbp),%rax\nmovl $200,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\n.LBE22:\ncmpq $10000,-24(%rbp)\njg .L23\ncmpq $0,-56(%rbp)\njns .L24\njmp .L25\n.L23:\nmovq -24(%rbp),%rax\nmovl $10000,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceAlen@PLT>\n.L24:\nmovq -56(%rbp),%rax\ncmpq -24(%rbp),%rax\njle .L45\n.L25:\nmovq -24(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L45:\ncmpq $0,-48(%rbp)\njs .L27\ncmpq $199,-48(%rbp)\njle .L46\n.L27:\nmovq -48(%rbp),%rax\nmovl $200,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L46:\ncmpq $10000,-56(%rbp)\nje .L29\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nmovq %rax,%rdx\nleaq <go.problem1030.res>(%rip),%rax\naddq %rdx,%rax\njmp .L30\n.L29:\nleaq <go.problem1030.res>(%rip),%rax\n.L30:\nmovq %rax,-160(%rbp)\nmovq -24(%rbp),%rax\nsubq -56(%rbp),%rax\nmovq %rax,-152(%rbp)\nmovl $10000,%eax\nsubq -56(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rbx\naddq %rbx,%rax\nleaq -5072(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-112(%rbp)\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedslicecopy@PLT>\naddq $48,%rsp\n.LBE20:\n.LBB23:\naddq $1,-48(%rbp)\n.L20:\n.LBE23:\ncmpq $0,-48(%rbp)\njs .L31\ncmpq $199,-48(%rbp)\njg .L31\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq -16(%rbp),%rbx\naddq %rbx,%rax\nsubq $5064,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\njg .L51\njmp .L47\n.L31:\nmovq -48(%rbp),%rax\nmovl $200,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L47:\n.LBE18:\n.LBE17:\n.LBB24:\ncmpq $0,-24(%rbp)\njs .L35\ncmpq $10000,-24(%rbp)\njg .L35\ncmpq $0,-24(%rbp)\njns .L36\njmp .L48\n.L35:\nmovq -24(%rbp),%rax\nmovl $10000,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceAlen@PLT>\n.L48:\nmovq -24(%rbp),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L36:\nleaq <go.problem1030.res>(%rip),%rax\nmovq %rax,-288(%rbp)\nmovq -24(%rbp),%rax\nmovq %rax,-280(%rbp)\nmovq $10000,-272(%rbp)\nmovq -5096(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE24:\n.LBE2:\nmovq -5096(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "dist := [200][][]int{}\nfor r := 0; r < R; r++ {\n\tfor c := 0; c < C; c++ {\n\t\td := abs(r-r0) + abs(c-c0)\n\t\tdist[d] = append(dist[d], []int{r, c})\n\t}\n}\nbegin, end := 0, 0\nfor d := 0; len(dist[d]) > 0; d++ {\n\tbegin, end = end, end+len(dist[d])\n\tcopy(res[begin:end], dist[d])\n}\nreturn res[:end]"}
{"src": "cmpq %fs:112,%rsp\njnb .L39\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL7:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $136,%rsp\nmovq %rdi,-152(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\n.LBB37:\nleaq <pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..go.streamingreadseeker.Reader>(%rip),%r12\nmovq -152(%rbp),%r13\nmovq -176(%rbp),%rax\ntestq %rax,%rax\njne .L33\nmovl $0,%eax\njmp .L34\n.L33:\nmovq -176(%rbp),%rax\nmovq (%rax),%rax\n.L34:\nmovq %rax,%rsi\nleaq <io.Writer..d>(%rip),%rdi\ncall <runtime.requireitab@PLT>\nmovq %rax,%r14\nmovq -168(%rbp),%rax\nmovq %rax,%r15\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rsi,%r8\nmovq %rbx,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nmovq %r8,%rcx\nmovq %r9,%r8\nmovq %rax,%rdi\ncall <io.Copy@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -104(%rbp),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\n.LBB38:\nmovq -144(%rbp),%rax\ntestq %rax,%rax\nje .L35\n.LBB39:\n.LBB40:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\njmp .L38\n.L35:\n.LBE40:\n.LBE39:\n.LBE38:\n.LBB41:\nmovq <go.streamingreadseeker.fSize>(%rip),%rax\ncmpq %rax,-56(%rbp)\nje .L37\n.LBB42:\n.LBB43:\nmovq <go.streamingreadseeker.errReadSizeMismatch>(%rip),%rax\nmovq <8+go.streamingreadseeker.errReadSizeMismatch>(%rip),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\njmp .L38\n.L37:\n.LBE43:\n.LBE42:\n.LBE41:\n.LBB44:\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\n.L38:\n.LBE44:\n.LBE37:\naddq $136,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "n, err := io.Copy(h, r)\nif err != nil {\n\treturn err\n}\nif n != fSize {\n\treturn errReadSizeMismatch\n}\nreturn nil"}
{"src": "leaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L71\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L71:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $280,%rsp\nmovq %rdi,-280(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq %rcx,-288(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\n.LBB59:\n.LBB60:\nmovq -288(%rbp),%rax\nmovq %rax,%rdi\ncall <math..z2fbig.Int.Sign@PLT>\ntestq %rax,%rax\njg .L59\n.LBB61:\nleaq <string..d>(%rip),%r12\nleaq <go..C12>(%rip),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L59:\n.LBE61:\n.LBE60:\nleaq <math..z2fbig.Int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\nmovl $1,%esi\nmovq %rax,%rdi\ncall <math..z2fbig.Int.SetUint64@PLT>\nmovq %rax,%rdx\nmovq -288(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <math..z2fbig.Int.Sub@PLT>\nmovq -48(%rbp),%rax\nmovq %rax,%rdi\ncall <math..z2fbig.Int.BitLen@PLT>\nmovq %rax,-56(%rbp)\n.LBB62:\ncmpq $0,-56(%rbp)\njne .L60\n.LBB63:\nmovq -48(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-216(%rbp)\nmovq %rdx,-208(%rbp)\nmovq -280(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L58\n.L60:\n.LBE63:\n.LBE62:\nmovq -56(%rbp),%rax\naddq $7,%rax\nleaq <7>(%rax),%rdx\ntestq %rax,%rax\ncmovs %rdx,%rax\nsarq $3,%rax\nmovq %rax,-64(%rbp)\nmovq -56(%rbp),%rax\ncqto\nshrq $61,%rdx\naddq %rdx,%rax\nandl $7,%eax\nsubq %rdx,%rax\nmovq %rax,-40(%rbp)\n.LBB64:\ncmpq $0,-40(%rbp)\njne .L62\n.LBB65:\nmovq $8,-40(%rbp)\n.L62:\n.LBE65:\n.LBE64:\nmovq -64(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <uint8..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-272(%rbp)\nmovq %rbx,-264(%rbp)\nmovq %rbx,-256(%rbp)\n.L69:\n.LBB66:\n.LBB67:\n.LBB68:\n.LBB69:\nleaq -96(%rbp),%rax\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rdx\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <io.ReadFull@PLT>\naddq $32,%rsp\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\nmovq -176(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE69:\n.LBB70:\nmovq -240(%rbp),%rax\ntestq %rax,%rax\nje .L63\n.LBB71:\n.LBB72:\n.LBB73:\nmovl $0,%ecx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rcx,-48(%rbp)\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE73:\nmovq -48(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-152(%rbp)\nmovq %rdx,-144(%rbp)\nmovq -280(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L58\n.L63:\n.LBE72:\n.LBE71:\n.LBE70:\nmovq -264(%rbp),%rax\ntestq %rax,%rax\njg .L64\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq -264(%rbp),%rax\ntestq %rax,%rax\njg .L65\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L65:\nmovq -272(%rbp),%rax\nmovzbl (%rax),%edx\ncmpq $63,-40(%rbp)\nja .L66\nmovq -40(%rbp),%rax\nmovl $1,%esi\nmovl %eax,%ecx\nsalq %cl,%rsi\nmovq %rsi,%rax\nsubl $1,%eax\nmovl %eax,%ecx\njmp .L67\n.L66:\nmovl $-1,%ecx\n.L67:\nmovq -272(%rbp),%rax\nandl %ecx,%edx\nmovb %dl,(%rax)\nmovq -48(%rbp),%rax\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\nmovq %rax,%rdi\ncall <math..z2fbig.Int.SetBytes@PLT>\naddq $32,%rsp\n.LBB74:\nmovq -288(%rbp),%rdx\nmovq -48(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <math..z2fbig.Int.Cmp@PLT>\ntestq %rax,%rax\njns .L69\n.LBB75:\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-120(%rbp)\nmovq %rdx,-112(%rbp)\nmovq -280(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L58:\n.LBE75:\n.LBE74:\n.LBE68:\n.LBE67:\n.LBE66:\n.LBE59:\nmovq -280(%rbp),%rax\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "if max.Sign() <= 0 {\n\tpanic(\"STR\")\n}\nn = new(big.Int)\nn.Sub(max, n.SetUint64(1))\nbitLen := n.BitLen()\nif bitLen == 0 {\n\treturn\n}\nk := (bitLen + 7) / 8\nb := uint(bitLen % 8)\nif b == 0 {\n\tb = 8\n}\nbytes := make([]byte, k)\nfor {\n\t_, err = io.ReadFull(rand, bytes)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tbytes[0] &= uint8(int(1<<b) - 1)\n\tn.SetBytes(bytes)\n\tif n.Cmp(max) < 0 {\n\t\treturn\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $160,%rsp\nmovq %rdi,-184(%rbp)\nleaq <.LC2>(%rip),%rax\nmovl $7,%edx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%rdx\nmovq -168(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem344.reverseString>\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <string..d>(%rip),%r14\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq %r12,-128(%rbp)\nmovq %r13,-120(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -136(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq -32(%rbp),%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "s := \"STR\"\nfmt.Println(reverseString(s))"}
{"src": ".LFB0:\nleaq -712(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $712,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $664,%rsp\nmovq %rdi,-632(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-456(%rbp)\nmovq -456(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $1,<24>(%rax)\nmovq -456(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq $4,-568(%rbp)\nmovq $4,-560(%rbp)\nmovq $3,-552(%rbp)\nmovb $1,-544(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-448(%rbp)\nmovq -448(%rbp),%rax\nmovq $1,(%rax)\nmovq $0,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $1,<24>(%rax)\nmovq -448(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovq $4,-528(%rbp)\nmovq $4,-520(%rbp)\nmovq $1,-512(%rbp)\nmovb $1,-504(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovq -440(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $1,<24>(%rax)\nmovq $2,<32>(%rax)\nmovq $3,<40>(%rax)\nmovq -440(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq $6,-488(%rbp)\nmovq $6,-480(%rbp)\nmovq $2,-472(%rbp)\nmovb $0,-464(%rbp)\n.LBB2:\nmovq $0,-624(%rbp)\nmovq $0,-616(%rbp)\nmovq $0,-608(%rbp)\nmovq $0,-600(%rbp)\nmovq $0,-592(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovl $3,%r13d\nmovl $0,%r12d\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %r12,%r12\njs .L3\ncmpq $2,%r12\njg .L3\nmovq %r12,%rax\nsalq $2,%rax\naddq %r12,%rax\nsalq $3,%rax\nleaq -48(%rbp),%rsi\naddq %rsi,%rax\nleaq -336(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq <32>(%rcx),%rax\nmovq %rax,-400(%rbp)\n.LBE8:\n.LBB9:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-592(%rbp)\n.LBE9:\n.LBB10:\nmovq -600(%rbp),%rax\nsubq $8,%rsp\npushq -608(%rbp)\npushq -616(%rbp)\npushq -624(%rbp)\nmovq %rax,%rdi\ncall <go.problem219.containsNearbyDuplicate>\naddq $32,%rsp\nmovb %al,-49(%rbp)\n.LBB11:\nmovzbl -592(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB18:\nmovl $3,%esi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB12:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-704(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -216(%rbp),%rax\nmovq %rax,-696(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-688(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-680(%rbp)\nleaq <bool..d>(%rip),%rbx\nmovq %rbx,-672(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,-664(%rbp)\nmovq %rbx,-656(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovzbl -592(%rbp),%edx\nmovb %dl,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-648(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -704(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovdqa -688(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nmovdqa -672(%rbp),%xmm2\nmovups %xmm2,-112(%rbp)\nmovdqa -656(%rbp),%xmm3\nmovups %xmm3,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB15:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\n.LBE15:\njmp .L9\n.L8:\n.LBB16:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE16:\nmovq -152(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $4,-72(%rbp)\nmovq $4,-64(%rbp)\nleaq <.LC30>(%rip),%r14\nmovl $28,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -632(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE17:\n.LBE19:\n.LBE7:\n.LBB20:\naddq $1,%r12\n.L2:\n.LBE20:\ncmpq %r13,%r12\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tnums: []int{1, 2, 3, 1},\n\t\tk:    3,\n\t\twant: true,\n\t},\n\t{\n\t\tnums: []int{1, 0, 1, 1},\n\t\tk:    1,\n\t\twant: true,\n\t},\n\t{\n\t\tnums: []int{1, 2, 3, 1, 2, 3},\n\t\tk:    2,\n\t\twant: false,\n\t},\n}\nfor _, tt := range tests {\n\tgot := containsNearbyDuplicate(tt.nums, tt.k)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.nums, tt.k, got, tt.want)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L14\nmovl $72,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-40(%rbp)\nmovq %rsi,-48(%rbp)\nmovq %rdx,-56(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\njmp .L2\n.L13:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nsubq $1,-48(%rbp)\n.LBB7:\n.LBB8:\nmovq -56(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <go.problem0756.isDroppedLeft>\naddq $32,%rsp\nxorl $1,%eax\ntestb %al,%al\nje .L3\n.LBB9:\nmovq -56(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <go.problem0756.isDroppedRight>\naddq $32,%rsp\nxorl $1,%eax\n.L3:\n.LBE9:\n.LBE8:\ntestb %al,%al\nje .L2\n.LBB10:\nmovq <24>(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L4\ncmpq %rax,-56(%rbp)\njge .L4\nmovq <24>(%rbp),%rax\ncmpq $0,-56(%rbp)\njns .L5\njmp .L6\n.L4:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L5:\ncmpq %rax,-56(%rbp)\njl .L11\n.L6:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\nmovq <16>(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\naddq $1,%rdx\nmovq %rdx,(%rax)\n.L2:\n.LBE10:\n.LBE7:\n.LBE6:\ncmpq $0,-48(%rbp)\njg .L13\n.LBE4:\n.LBE3:\n.LBB11:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -40(%rbp),%rcx\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -16(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\n.LBE2:\nmovq -40(%rbp),%rax\nleave\nret", "tgt": "for V > 0 {\n\tV--\n\tif !isDroppedLeft(heights, K) && !isDroppedRight(heights, K) {\n\t\theights[K]++\n\t}\n}\nreturn heights"}
{"src": ".LFB0:\nleaq -600(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $600,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $552,%rsp\nmovq %rdi,-536(%rbp)\nmovq $1,-464(%rbp)\nmovb $1,-456(%rbp)\nmovq $16,-448(%rbp)\nmovb $1,-440(%rbp)\nmovq $218,-432(%rbp)\nmovb $0,-424(%rbp)\nleaq -464(%rbp),%rcx\nmovq %rcx,-496(%rbp)\nmovq $3,-488(%rbp)\nmovq $3,-480(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC30>(%rip),%rax\nmovl $69,%edx\nleaq -208(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBB2:\nmovq $0,-512(%rbp)\nmovq $0,-504(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L7:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -376(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -384(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE8:\n.LBB9:\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\n.LBE9:\n.LBB10:\nmovzbl -504(%rbp),%eax\nmovb %al,-513(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.isPowerOfTwo>\nmovb %al,-577(%rbp)\nleaq <go.leetcode..go.leetcode.para231..d>(%rip),%rcx\nmovq %rcx,-576(%rbp)\nleaq <go.leetcode..go.leetcode.para231..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-320(%rbp)\nmovq -320(%rbp),%rax\nmovq -528(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -320(%rbp),%rax\nmovq %rax,-568(%rbp)\nleaq <bool..d>(%rip),%rdi\nmovq %rdi,-560(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovzbl -577(%rbp),%ecx\nmovb %cl,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovdqa -576(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -560(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC31>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-336(%rbp)\n.LBE10:\n.LBE7:\n.LBB12:\naddq $1,%rbx\njmp .L2\n.L3:\n.LBE12:\n.LBB13:\n.LBB11:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE11:\n.LBE13:\ncmpq -544(%rbp),%rbx\njl .L7\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC32>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question231{\n\t{\n\t\tpara231{1},\n\t\tans231{true},\n\t},\n\t{\n\t\tpara231{16},\n\t\tans231{true},\n\t},\n\t{\n\t\tpara231{218},\n\t\tans231{false},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans231, q.para231\n\tfmt.Printf(\"STR\", p, isPowerOfTwo(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L35\nmovl $216,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L35:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $176,%rsp\nmovq $0,-56(%rbp)\n.LBB2:\nmovl $0,%r8d\nmovl $16,%ecx\nmovl $24,%edx\nmovl $0,%esi\nleaq <type..map.6string.7struct.4.5>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-64(%rbp)\n.LBB3:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%r14\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L34:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\n.LBE10:\n.LBB11:\nmovq -200(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovb $0,-33(%rbp)\n.LBB12:\nmovq $0,-48(%rbp)\n.LBB13:\njmp .L4\n.L3:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB29:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\n.LBE29:\n.LBB30:\n.LBB27:\n.LBB26:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\n.LBB16:\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L5\ncmpq %rax,-48(%rbp)\njge .L5\nmovq -208(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $64,%al\nje .L6\njmp .L27\n.L5:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBB17:\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L8\ncmpq %rax,-48(%rbp)\njg .L8\nmovq -208(%rbp),%rdx\nmovq -200(%rbp),%rax\ncmpq %rax,-48(%rbp)\njne .L9\njmp .L28\n.L8:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L9:\nmovq -48(%rbp),%rax\njmp .L11\n.L28:\nmovl $0,%eax\n.L11:\naddq %rdx,%rax\nmovq %rax,%r12\nmovq -200(%rbp),%rax\nsubq -48(%rbp),%rax\nmovq %rax,%r13\nleaq -96(%rbp),%rax\nleaq -192(%rbp),%rsi\nmovq %r12,%rdx\nmovq %r13,%rcx\nmovq %rax,%rdi\ncall <strings.Builder.WriteString@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-112(%rbp)\njmp .L12\n.L27:\n.LBE17:\n.LBE16:\n.LBB18:\n.LBB19:\nmovzbl -33(%rbp),%eax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L13\n.LBB20:\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L14\ncmpq %rax,-48(%rbp)\njge .L14\nmovq -208(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $46,%al\nsete %al\njmp .L13\n.L14:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\n.LBE20:\n.LBE19:\ntestb %al,%al\njne .L32\n.LBE18:\n.LBB22:\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L17\ncmpq %rax,-48(%rbp)\njge .L17\nmovq -208(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $43,%al\nje .L18\njmp .L29\n.L17:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\n.LBB23:\nmovb $1,-33(%rbp)\njmp .L16\n.L29:\n.LBE23:\n.LBE22:\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L20\ncmpq %rax,-48(%rbp)\njge .L20\nmovq -208(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nleaq -192(%rbp),%rax\nmovl %edx,%esi\nmovq %rax,%rdi\ncall <strings.Builder.WriteByte@PLT>\njmp .L16\n.L20:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\n.LBB24:\n.LBB21:\nnop\n.L16:\n.LBE21:\n.LBE24:\n.LBE15:\n.LBB25:\naddq $1,-48(%rbp)\n.L4:\n.LBE25:\nmovq -48(%rbp),%rax\ncmpq -72(%rbp),%rax\njl .L33\n.L12:\n.LBE26:\n.LBE27:\n.LBB28:\nleaq -192(%rbp),%rax\nmovq %rax,%rdi\ncall <strings.Builder.String@PLT>\nmovq -64(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7struct.4.5>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\n.LBE28:\n.LBE30:\n.LBE8:\n.LBB31:\naddq $1,%rbx\n.L2:\n.LBE31:\ncmpq %r14,%rbx\njl .L34\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB32:\ncmpq $0,-64(%rbp)\nje .L24\nmovq -64(%rbp),%rax\nmovq (%rax),%rax\njmp .L25\n.L24:\nmovl $0,%eax\n.L25:\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\n.LBE32:\n.LBE2:\naddq $176,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "m := map[string]struct{}{}\nfor _, email := range emails {\n\tn := len(email)\n\tbs := strings.Builder{}\n\tignore := false\n\tfor i := 0; i < n; i++ {\n\t\tif email[i] == '@' {\n\t\t\tbs.WriteString(email[i:])\n\t\t\tbreak\n\t\t}\n\t\tif ignore || email[i] == '.' {\n\t\t\tcontinue\n\t\t}\n\t\tif email[i] == '+' {\n\t\t\tignore = true\n\t\t\tcontinue\n\t\t}\n\t\tbs.WriteByte(email[i])\n\t}\n\tm[bs.String()] = struct{}{}\n}\nreturn len(m)"}
{"src": "leaq -744(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L41\nmovl $744,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L41:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $696,%rsp\nmovq %rdi,-568(%rbp)\nleaq <type...64x.7struct.4.go.Solution.name.0string.2.go.Solution.input1.0string.2.go.Solution.input2.0string.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-536(%rbp)\nleaq <.LC39>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-528(%rbp)\nmovq %r13,-520(%rbp)\nleaq <.LC40>(%rip),%r14\nmovl $1,%r15d\nmovq %r14,-512(%rbp)\nmovq %r15,-504(%rbp)\nleaq <.LC41>(%rip),%rax\nmovq %rax,-736(%rbp)\nmovq $1,-728(%rbp)\nmovdqa -736(%rbp),%xmm0\nmovups %xmm0,-496(%rbp)\nmovb $0,-480(%rbp)\nleaq <.LC39>(%rip),%rax\nmovq %rax,-720(%rbp)\nmovq $8,-712(%rbp)\nmovdqa -720(%rbp),%xmm1\nmovups %xmm1,-472(%rbp)\nleaq <.LC42>(%rip),%rbx\nmovq %rbx,-704(%rbp)\nmovq $2,-696(%rbp)\nmovdqa -704(%rbp),%xmm2\nmovups %xmm2,-456(%rbp)\nleaq <.LC43>(%rip),%rdi\nmovq %rdi,-688(%rbp)\nmovq $2,-680(%rbp)\nmovdqa -688(%rbp),%xmm3\nmovups %xmm3,-440(%rbp)\nmovb $0,-424(%rbp)\nmovq %rax,-672(%rbp)\nmovq $8,-664(%rbp)\nmovdqa -672(%rbp),%xmm4\nmovups %xmm4,-416(%rbp)\nmovq %rbx,-656(%rbp)\nmovq $2,-648(%rbp)\nmovdqa -656(%rbp),%xmm5\nmovups %xmm5,-400(%rbp)\nleaq <.LC44>(%rip),%rdi\nmovq %rdi,-640(%rbp)\nmovq $3,-632(%rbp)\nmovdqa -640(%rbp),%xmm6\nmovups %xmm6,-384(%rbp)\nmovb $1,-368(%rbp)\nmovq %rax,-624(%rbp)\nmovq $8,-616(%rbp)\nmovdqa -624(%rbp),%xmm7\nmovups %xmm7,-360(%rbp)\nmovq %rdi,-608(%rbp)\nmovq $3,-600(%rbp)\nmovdqa -608(%rbp),%xmm0\nmovups %xmm0,-344(%rbp)\nleaq <.LC45>(%rip),%rax\nmovq %rax,-592(%rbp)\nmovq $3,-584(%rbp)\nmovdqa -592(%rbp),%xmm1\nmovups %xmm1,-328(%rbp)\nmovb $1,-312(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L27\n.LBB28:\nmovq -536(%rbp),%rax\nmovq -528(%rbp),%rcx\nmovq -520(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -512(%rbp),%rcx\nmovq -504(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -496(%rbp),%rcx\nmovq -488(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -464(%rbp),%rcx\nmovq -456(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -432(%rbp),%rcx\nmovq -424(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,<144>(%rax)\nmovq %rbx,<152>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<160>(%rax)\nmovq %rbx,<168>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<176>(%rax)\nmovq %rbx,<184>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<192>(%rax)\nmovq %rbx,<200>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<208>(%rax)\nmovq %rbx,<216>(%rax)\n.LBE28:\njmp .L28\n.L27:\n.LBB29:\nmovq -536(%rbp),%rax\nleaq -528(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7struct.4.go.Solution.name.0string.2.go.Solution.input1.0string.2.go.Solution.input2.0string.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L28:\n.LBE29:\nmovq -536(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $4,-552(%rbp)\nmovq $4,-544(%rbp)\n.LBB30:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.input1.0string.2.go.Solution.input2.0string.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB31:\n.LBB32:\n.LBB33:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r13\nmovl $0,%ebx\n.LBE33:\njmp .L29\n.L40:\n.LBB34:\nnop\n.LBE34:\n.LBB35:\n.LBB36:\nmovq -232(%rbp),%rax\ntestq %rbx,%rbx\njs .L30\ncmpq %rax,%rbx\njge .L30\nmovq -240(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $3,%rax\nsubq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-288(%rbp)\nmovq %rdi,-280(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq <48>(%rax),%rax\nmovq %rax,-256(%rbp)\n.LBE36:\n.LBB37:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L31\njmp .L38\n.L30:\n.LBE37:\n.LBB40:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\n.LBE40:\n.LBB41:\n.LBB38:\nmovq -208(%rbp),%rsi\nmovq -200(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -160(%rbp),%rdx\nmovq %rdx,<48>(%rax)\njmp .L33\n.L38:\n.LBE38:\n.LBB39:\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.input1.0string.2.go.Solution.input2.0string.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L33:\n.LBE39:\n.LBE41:\n.LBB42:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC46>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution2..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.input1.0string.2.go.Solution.input2.0string.2.go.Solution.expect.0bool.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L34\n.LBB43:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE43:\njmp .L35\n.L34:\n.LBB44:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.input1.0string.2.go.Solution.input2.0string.2.go.Solution.expect.0bool.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L35:\n.LBE44:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -568(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE42:\n.LBE35:\n.LBB45:\naddq $1,%rbx\n.L29:\n.LBE45:\ncmpq %r13,%rbx\njl .L40\n.LBE32:\n.LBE31:\n.LBE30:\naddq $696,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinput1 string\n\tinput2 string\n\texpect bool\n}{\n\t{\"STR\", \"STR\", \"STR\", false},\n\t{\"STR\", \"STR\", \"STR\", false},\n\t{\"STR\", \"STR\", \"STR\", true},\n\t{\"STR\", \"STR\", \"STR\", true},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := canConstruct2(c.input1, c.input2)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.input1, c.input2)\n\t\t}\n\t})\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L683\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL58:\nret\n.L683:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $40,%rsp\nmovq %rdi,-56(%rbp)\nmovq $0,-40(%rbp)\n.L678:\n.LBB639:\n.LBB640:\n.LBB641:\n.LBB642:\n.LBB643:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.httprange.lexer.next>\nmovl %eax,-44(%rbp)\n.LBB644:\nmovl $1,%ebx\nmovl -44(%rbp),%eax\nmovl %eax,%edi\ncall <unicode.IsNumber@PLT>\ncmpb %al,%bl\nje .L672\n.LBB645:\nnop\n.LBE645:\ncmpl $44,-44(%rbp)\nsete %al\ncmpb %al,%bl\njne .L681\n.LBB646:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.httprange.lexer.backup>\nmovq -56(%rbp),%rax\nmovl $4,%esi\nmovq %rax,%rdi\ncall <go.httprange.lexer.emit>\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.httprange.lexer.chomp>\n.LBB647:\nleaq <go.httprange.byteRangeSet..f>(%rip),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L675\n.L681:\n.LBE647:\n.LBE646:\n.LBB648:\nnop\n.LBE648:\ncmpl $0,-44(%rbp)\nsete %al\ncmpb %al,%bl\njne .L682\n.LBB649:\nmovq -56(%rbp),%rax\nmovl $4,%esi\nmovq %rax,%rdi\ncall <go.httprange.lexer.emit>\n.LBB650:\nleaq <go.httprange.byteRangeSet..f>(%rip),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L675\n.L682:\n.LBE650:\n.LBE649:\n.LBB651:\nnop\n.LBE651:\n.LBB652:\n.LBB653:\nleaq <.LC263>(%rip),%r12\nmovl $32,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.httprange.lexer.error>\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L675\n.L672:\n.LBE653:\n.LBE652:\n.LBE644:\n.LBE643:\n.LBE642:\njmp .L678\n.L675:\n.LBE641:\n.LBE640:\n.LBE639:\naddq $40,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "for {\n\tswitch r := l.next(); {\n\tcase unicode.IsNumber(r):\n\tcase r == \"STR\":\n\t\tl.backup()\n\t\tl.emit(itemEnd)\n\t\tl.chomp()\n\t\treturn byteRangeSet\n\tcase r == eof:\n\t\tl.emit(itemEnd)\n\t\treturn byteRangeSet\n\tdefault:\n\t\treturn l.error(\"STR\")\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L15\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-48(%rbp)\nmovq %rdi,-40(%rbp)\nmovq %rdx,-64(%rbp)\nmovq %rcx,-56(%rbp)\nmovb $0,-25(%rbp)\n.LBB2:\nmovb $0,-1(%rbp)\n.LBB3:\nmovq $0,-16(%rbp)\n.LBB4:\njmp .L2\n.L13:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -40(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L3\ncmpq %rax,-16(%rbp)\njge .L3\nmovq -48(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nxorb %al,-1(%rbp)\n.LBE6:\n.LBB7:\naddq $1,-16(%rbp)\njmp .L2\n.L3:\n.LBE7:\n.LBB8:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE8:\nmovq -40(%rbp),%rax\ncmpq %rax,-16(%rbp)\njl .L13\n.LBE4:\n.LBE3:\n.LBB9:\nmovq $0,-24(%rbp)\n.LBB10:\njmp .L6\n.L14:\n.LBB11:\nnop\n.LBE11:\n.LBB12:\nmovq -56(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L7\ncmpq %rax,-24(%rbp)\njge .L7\nmovq -64(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nxorb %al,-1(%rbp)\n.LBE12:\n.LBB13:\naddq $1,-24(%rbp)\njmp .L6\n.L7:\n.LBE13:\n.LBB14:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\nmovq -56(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L14\n.LBE10:\n.LBE9:\n.LBB15:\nmovzbl -1(%rbp),%eax\nmovb %al,-25(%rbp)\nmovzbl -25(%rbp),%eax\n.LBE15:\n.LBE2:\nleave\nret", "tgt": "var res byte\nfor i := 0; i < len(s); i++ {\n\tres ^= s[i]\n}\nfor i := 0; i < len(t); i++ {\n\tres ^= t[i]\n}\nreturn res"}
{"src": "cmpq %fs:112,%rsp\njnb .L995\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL81:\nret\n.L995:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $96,%rsp\nmovq %rdi,-104(%rbp)\nmovq $0,-32(%rbp)\n.LBB778:\nmovq $0,-24(%rbp)\n.LBB779:\nmovq $0,-40(%rbp)\n.LBB780:\nmovq -104(%rbp),%rcx\nmovq <8>(%rcx),%rax\nmovq <16>(%rcx),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <24>(%rcx),%rax\nmovq %rax,-80(%rbp)\n.LBB781:\n.LBB782:\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%r12\nmovl $0,%ebx\n.LBE782:\njmp .L988\n.L994:\n.LBB783:\nnop\n.LBE783:\n.LBB784:\n.LBB785:\nmovq -56(%rbp),%rax\ntestq %rbx,%rbx\njs .L989\ncmpq %rax,%rbx\njge .L989\nmovq -64(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE785:\n.LBB786:\nmovq %rax,-40(%rbp)\n.LBE786:\n.LBB787:\nmovq -40(%rbp),%rax\nmovq %rax,%rdi\ncall <go.lrucache.LRUCache.Expire>\naddq %rax,-24(%rbp)\n.LBE787:\n.LBE784:\n.LBB789:\naddq $1,%rbx\njmp .L988\n.L989:\n.LBE789:\n.LBB790:\n.LBB788:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L988:\n.LBE788:\n.LBE790:\ncmpq %r12,%rbx\njl .L994\n.LBE781:\n.LBE780:\n.LBE779:\n.LBB791:\nmovq -24(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE791:\n.LBE778:\naddq $96,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "var s int\nfor _, c := range m.cache {\n\ts += c.Expire()\n}\nreturn s"}
{"src": ".LFB0:\nleaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L48\nmovl $296,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L48:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\n.LBB2:\nmovq <24>(%rbp),%rax\ncmpq $1,%rax\njle .L44\n.LBE2:\n.LBB4:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-40(%rbp)\n.LBB5:\njmp .L4\n.L47:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njl .L33\n.L5:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq <24>(%rbp),%rdx\ncmpq $0,-40(%rbp)\njs .L7\ncmpq %rdx,-40(%rbp)\njl .L34\n.L7:\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njge .L9\n.LBB9:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-48(%rbp)\n.LBB10:\n.LBB11:\njmp .L10\n.L45:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\nsubq $1,-48(%rbp)\n.L10:\n.LBE13:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L11\ncmpq %rdx,%rax\njl .L35\n.L11:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq <24>(%rbp),%rdx\ncmpq $0,-48(%rbp)\njs .L13\ncmpq %rdx,-48(%rbp)\njl .L36\n.L13:\nmovq -48(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njge .L45\n.LBE11:\n.LBE10:\n.LBB14:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -48(%rbp),%rax\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-256(%rbp)\nmovq %rbx,-248(%rbp)\nmovq <32>(%rbp),%rdx\nmovq %rdx,-240(%rbp)\nmovq -40(%rbp),%rdx\nsubq $1,%rdx\nmovq -40(%rbp),%rcx\nsubq $1,%rcx\nmovq <24>(%rbp),%rsi\ntestq %rcx,%rcx\njs .L17\ncmpq %rsi,%rcx\njl .L38\n.L17:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq <16>(%rbp),%rsi\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq <24>(%rbp),%rcx\ncmpq $0,-48(%rbp)\njs .L19\ncmpq %rcx,-48(%rbp)\njl .L39\n.L19:\nmovq -48(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq <16>(%rbp),%rsi\nmovq -48(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -280(%rbp),%rcx\ntestq %rax,%rax\njs .L21\ncmpq %rcx,%rax\njl .L40\n.L21:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -288(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rdi,(%rax)\nmovq -248(%rbp),%rax\ntestq %rdx,%rdx\njs .L23\ncmpq %rax,%rdx\njl .L41\n.L23:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -256(%rbp),%rax\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE14:\nmovq <32>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L25\ncmpq %rax,-40(%rbp)\njle .L42\n.L25:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L42:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq %rax,-40(%rbp)\nje .L27\nmovq -40(%rbp),%rax\nsalq $3,%rax\njmp .L28\n.L27:\nmovl $0,%eax\n.L28:\naddq %rdx,%rax\nmovq %rax,-144(%rbp)\nmovq <24>(%rbp),%rax\nsubq -40(%rbp),%rax\nmovq %rax,-136(%rbp)\nmovq <32>(%rbp),%rax\nsubq -40(%rbp),%rax\nmovq %rax,-128(%rbp)\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\ncall <main.reverse>\naddq $32,%rsp\nleaq <type...6.7int>(%rip),%r12\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-176(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L29\n.LBB15:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE15:\njmp .L30\n.L29:\n.LBB16:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L30:\n.LBE16:\nmovq -200(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-160(%rbp)\nmovq %r13,-152(%rbp)\nleaq -160(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-208(%rbp)\njmp .L1\n.L9:\n.LBE9:\n.LBE8:\n.LBB17:\ncmpq $1,-40(%rbp)\nje .L46\n.LBE17:\n.LBE7:\n.LBB20:\nsubq $1,-40(%rbp)\n.L4:\n.LBE20:\ncmpq $0,-40(%rbp)\njg .L47\njmp .L1\n.L44:\n.LBE5:\n.LBE4:\n.LBB23:\n.LBB3:\nnop\njmp .L1\n.L46:\n.LBE3:\n.LBE23:\n.LBB24:\n.LBB22:\n.LBB21:\n.LBB19:\n.LBB18:\nnop\n.L1:\n.LBE18:\n.LBE19:\n.LBE21:\n.LBE22:\n.LBE24:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "if len(num) <= 1 {\n\treturn\n}\nfor i := len(num) - 1; i > 0; i-- {\n\tif num[i-1] < num[i] {\n\t\tj := len(num) - 1\n\t\tfor num[i-1] >= num[j] {\n\t\t\tj--\n\t\t}\n\t\tnum[j], num[i-1] = num[i-1], num[j]\n\t\treverse(num[i:])\n\t\tfmt.Println(num)\n\t\treturn\n\t}\n\tif i == 1 {\n\t\treturn\n\t}\n}"}
{"src": ".LFB0:\nleaq -264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L41\nmovl $264,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L41:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $224,%rsp\nmovq %rdi,-248(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\n.LBB2:\nmovl $0,%r8d\nmovl $16,%ecx\nmovl $24,%edx\nmovl $0,%esi\nleaq <type..map.6string.7struct.4.5>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-40(%rbp)\nmovl $0,%r8d\nmovl $16,%ecx\nmovl $32,%edx\nmovl $0,%esi\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-48(%rbp)\nmovl $0,%r8d\nmovl $16,%ecx\nmovl $32,%edx\nmovl $0,%esi\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-56(%rbp)\n.LBB3:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r14\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L38:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -120(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq -40(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7struct.4.5>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\n.LBE12:\nmovq -176(%rbp),%rdx\nmovq -168(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <strings.ToLower@PLT>\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBB13:\nmovb $0,-67(%rbp)\n.LBB14:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq -48(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovl %edx,%eax\nmovb %al,-67(%rbp)\n.LBE14:\nmovzbl -67(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\njne .L4\n.LBB15:\n.LBB16:\n.LBB17:\n.LBB18:\njmp .L5\n.L3:\n.LBE18:\n.LBE17:\n.LBE16:\n.LBE15:\n.LBE13:\n.LBE11:\n.LBB30:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE30:\n.LBB31:\n.LBB29:\n.LBB28:\n.LBB24:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq -176(%rbp),%r12\nmovq -168(%rbp),%r13\nmovq -48(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L6\n.LBB25:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L7\n.L6:\n.LBE25:\n.LBB26:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L7:\n.LBE26:\n.LBE24:\n.LBB27:\n.LBB22:\nmovq -192(%rbp),%rdx\nmovq -184(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode0966.todev>\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovl %edx,%eax\nmovb %al,-67(%rbp)\n.LBE22:\nmovzbl -67(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L5\n.LBB23:\n.LBB21:\nmovq -192(%rbp),%rdx\nmovq -184(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode0966.todev>\nmovq -176(%rbp),%r12\nmovq -168(%rbp),%r13\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L8\n.LBB19:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L5\n.L8:\n.LBE19:\n.LBB20:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L5:\n.LBE20:\n.LBE21:\n.LBE23:\n.LBE27:\n.LBE28:\n.LBE29:\n.LBE31:\n.LBE8:\n.LBB32:\naddq $1,%rbx\n.L2:\n.LBE32:\ncmpq %r14,%rbx\njl .L38\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB33:\nmovq $0,-64(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\n.LBB34:\n.LBB35:\n.LBB36:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%r12\nmovl $0,%ebx\n.LBE36:\njmp .L11\n.L40:\n.LBB37:\nnop\n.LBE37:\n.LBB38:\n.LBB39:\nmovq -88(%rbp),%rax\ntestq %rbx,%rbx\njs .L12\ncmpq %rax,%rbx\njge .L12\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE39:\n.LBB40:\nmovq %rbx,-64(%rbp)\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\n.LBE40:\n.LBB41:\n.LBB42:\nmovb $0,-65(%rbp)\n.LBB43:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq -40(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7struct.4.5>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovl %edx,%eax\nmovb %al,-65(%rbp)\n.LBE43:\ncmpb $0,-65(%rbp)\njne .L39\njmp .L33\n.L12:\n.LBE42:\n.LBE41:\n.LBB60:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\n.LBE60:\n.LBB61:\nmovq -208(%rbp),%rdx\nmovq -200(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <strings.ToLower@PLT>\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\n.LBB45:\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovb $0,-66(%rbp)\n.LBB46:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq -48(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovq %rax,%rsi\nmovl %edx,%ecx\nmovq (%rsi),%rax\nmovq <8>(%rsi),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovb %cl,-66(%rbp)\n.LBE46:\ncmpb $0,-66(%rbp)\nje .L16\n.LBB47:\nmovq <48>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L17\ncmpq %rax,-64(%rbp)\njl .L34\n.L17:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq <40>(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq -232(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L19\n.LBB48:\nmovq -240(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L28\n.L19:\n.LBE48:\n.LBB49:\nmovq -240(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L28\n.L16:\n.LBE49:\n.LBE47:\n.LBB50:\n.LBB51:\n.LBB52:\nmovq -224(%rbp),%rdx\nmovq -216(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode0966.todev>\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovq %rax,%rsi\nmovl %edx,%ecx\nmovq (%rsi),%rax\nmovq <8>(%rsi),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovb %cl,-66(%rbp)\n.LBE52:\ncmpb $0,-66(%rbp)\nje .L21\n.LBB53:\nmovq <48>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L22\ncmpq %rax,-64(%rbp)\njl .L35\n.L22:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq <40>(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq -232(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L24\n.LBB54:\nmovq -240(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L28\n.L24:\n.LBE54:\n.LBB55:\nmovq -240(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L28\n.L21:\n.LBE55:\n.LBE53:\n.LBB56:\nmovq <48>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L25\ncmpq %rax,-64(%rbp)\njl .L36\n.L25:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\nmovq <40>(%rbp),%rdx\nmovq -64(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq $0,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L27\n.LBB57:\nleaq <.LC19>(%rip),%rdx\nmovq %rdx,(%rax)\njmp .L28\n.L27:\n.LBE57:\n.LBB58:\nleaq <.LC19>(%rip),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L28\n.L39:\n.LBE58:\n.LBE56:\n.LBE51:\n.LBE50:\n.LBE45:\n.LBB59:\n.LBB44:\nnop\n.L28:\n.LBE44:\n.LBE59:\n.LBE61:\n.LBE38:\n.LBB62:\naddq $1,%rbx\n.L11:\n.LBE62:\ncmpq %r12,%rbx\njl .L40\n.LBE35:\n.LBE34:\n.LBE33:\n.LBB63:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -248(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE63:\n.LBE2:\nmovq -248(%rbp),%rax\naddq $224,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "words := map[string]struct{}{}\ncap, vowel := map[string]string{}, map[string]string{}\nfor _, word := range wordlist {\n\twords[word] = struct{}{}\n\tlower := strings.ToLower(word)\n\tif _, ok := cap[lower]; !ok {\n\t\tcap[lower] = word\n\t\tif _, ok = vowel[todev(lower)]; !ok {\n\t\t\tvowel[todev(lower)] = word\n\t\t}\n\t}\n}\nfor i, query := range queries {\n\tif _, ok := words[query]; ok {\n\t\tcontinue\n\t}\n\tlower := strings.ToLower(query)\n\tif word, ok := cap[lower]; ok {\n\t\tqueries[i] = word\n\t} else if word, ok = vowel[todev(lower)]; ok {\n\t\tqueries[i] = word\n\t} else {\n\t\tqueries[i] = \"STR\"\n\t}\n}\nreturn queries"}
{"src": ".LFB36:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq $0,-16(%rbp)\nmovq $0,-8(%rbp)\n.LBB3:\n.LBB4:\nmovq -24(%rbp),%rax\nmovq <32>(%rax),%rdx\nmovq <24>(%rax),%rax\nmovq %rax,-16(%rbp)\nmovq %rdx,-8(%rbp)\nmovq -16(%rbp),%rax\nmovq -8(%rbp),%rdx\n.LBE4:\n.LBE3:\npopq %rbp\nret", "tgt": "return c.name"}
{"src": ".LFB1:\nleaq -728(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L47\nmovl $728,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L47:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $680,%rsp\nmovq %rdi,-664(%rbp)\nmovq $1,-560(%rbp)\nmovq $2,-552(%rbp)\nleaq <.LC18>(%rip),%r8\nmovl $3,%r9d\nmovq %r8,-544(%rbp)\nmovq %r9,-536(%rbp)\nmovq $4,-528(%rbp)\nmovq $1,-520(%rbp)\nleaq <.LC19>(%rip),%rcx\nmovl $5,%ebx\nmovq %rcx,-512(%rbp)\nmovq %rbx,-504(%rbp)\nleaq -560(%rbp),%rcx\nmovq %rcx,-592(%rbp)\nmovq $2,-584(%rbp)\nmovq $2,-576(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC20>(%rip),%rax\nmovl $69,%edx\nleaq -208(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB46:\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\nmovq $0,-632(%rbp)\n.LBB47:\n.LBB48:\n.LBB49:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-672(%rbp)\nmovl $0,%ebx\n.LBE49:\njmp .L37\n.L46:\n.LBB50:\nnop\n.LBE50:\n.LBB51:\n.LBB52:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L38\ncmpq %rax,%rbx\njge .L38\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE52:\n.LBB53:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\n.LBE53:\n.LBB54:\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -616(%rbp),%rdx\nmovq -624(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.strWithout3a3b>\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <go.leetcode..go.leetcode.para984..d>(%rip),%rax\nmovq %rax,-720(%rbp)\nleaq <go.leetcode..go.leetcode.para984..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-336(%rbp)\nmovq -336(%rbp),%rcx\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -336(%rbp),%rax\nmovq %rax,-712(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-704(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovq %r12,-320(%rbp)\nmovq %r13,-312(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L39\njmp .L44\n.L38:\n.LBE54:\n.LBB57:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\n.LBE57:\n.LBB58:\n.LBB55:\nmovq -328(%rbp),%rcx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE55:\njmp .L41\n.L44:\n.LBB56:\nmovq -328(%rbp),%rax\nleaq -320(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L41:\n.LBE56:\nmovq -328(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovdqa -720(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -704(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-688(%rbp)\nmovq $37,-680(%rbp)\nleaq -144(%rbp),%rax\nmovq -688(%rbp),%rsi\nmovq -680(%rbp),%rdi\nmovq %rsi,%r8\nmovq %rdi,%r9\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE58:\n.LBE51:\n.LBB59:\naddq $1,%rbx\n.L37:\n.LBE59:\ncmpq -672(%rbp),%rbx\njl .L46\n.LBE48:\n.LBE47:\n.LBE46:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC22>(%rip),%r14\nmovl $3,%r15d\nleaq -80(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question984{\n\t{\n\t\tpara984{1, 2},\n\t\tans984{\"STR\"},\n\t},\n\t{\n\t\tpara984{4, 1},\n\t\tans984{\"STR\"},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans984, q.para984\n\tfmt.Printf(\"STR\", p, strWithout3a3b(p.a, p.b))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L11\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L11:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq %rsi,-48(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\nmovq -40(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB4:\njmp .L2\n.L10:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L3\ncmpq %rax,-16(%rbp)\njl .L8\n.L3:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\naddq %rax,-8(%rbp)\n.LBE6:\n.LBB7:\naddq $1,-16(%rbp)\n.L2:\n.LBE7:\nmovq -16(%rbp),%rax\ncmpq -48(%rbp),%rax\njl .L10\n.LBE4:\n.LBE3:\n.LBB8:\nmovq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE8:\n.LBE2:\nleave\nret", "tgt": "var sum int\nfor i := start; i < end; i++ {\n\tsum += l[i]\n}\nreturn sum"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L52\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L52:\npushq %rbp\nmovq %rsp,%rbp\nsubq $192,%rsp\nmovl $1000000,%edx\nmovl $1000000,%esi\nleaq <bool..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-176(%rbp)\nmovq $1000000,-168(%rbp)\nmovq $1000000,-160(%rbp)\nmovq -168(%rbp),%rax\ncmpq $1,%rax\njg .L2\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq -176(%rbp),%rax\naddq $1,%rax\nmovb $1,(%rax)\nmovq $3,-8(%rbp)\nmovq $13,-16(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\n.L3:\n.L37:\n.LBB2:\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -8(%rbp),%rax\naddq %rax,%rax\nmovq %rax,-24(%rbp)\n.LBB6:\njmp .L4\n.L46:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\nmovq -168(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L5\ncmpq %rax,-24(%rbp)\njl .L38\n.L5:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq -176(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovb $1,(%rax)\n.LBE8:\n.LBB9:\nmovq -8(%rbp),%rax\naddq %rax,-24(%rbp)\n.L4:\n.LBE9:\nmovq -168(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L46\n.LBE6:\n.LBE5:\n.LBB10:\nmovq -8(%rbp),%rax\naddq $2,%rax\nmovq %rax,-24(%rbp)\n.LBB11:\njmp .L9\n.L47:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\naddq $2,-24(%rbp)\n.L9:\n.LBE13:\n.LBB14:\nmovq -168(%rbp),%rax\ncmpq %rax,-24(%rbp)\nsetl %al\ntestb %al,%al\nje .L10\n.LBB15:\nmovq -168(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L11\ncmpq %rax,-24(%rbp)\njl .L40\n.L11:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -176(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\n.L10:\n.LBE15:\n.LBE14:\ntestb %al,%al\njne .L47\n.LBE11:\n.LBE10:\n.LBB16:\nmovq -168(%rbp),%rax\ncmpq %rax,-24(%rbp)\njge .L48\n.LBB17:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBB18:\ncmpq $100,-8(%rbp)\njle .L37\n.LBB19:\nmovq $1,-32(%rbp)\n.LBB20:\nmovq $0,-40(%rbp)\n.LBB21:\njmp .L17\n.L51:\n.LBB22:\nnop\n.LBE22:\n.LBB23:\nmovl $1,%edx\nmovq -184(%rbp),%rax\ntestq %rdx,%rdx\njs .L18\ncmpq %rax,%rdx\njle .L42\n.L18:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L42:\nmovl $0,%eax\nmovl $1,%edi\nmovq -184(%rbp),%rcx\ntestq %rdi,%rdi\njs .L20\ncmpq %rcx,%rdi\njg .L20\ntestq %rax,%rax\njns .L21\njmp .L22\n.L20:\nmovq %rcx,%rsi\ncall <runtime.goPanicSliceAlen@PLT>\n.L21:\ncmpq %rdi,%rax\njle .L43\n.L22:\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L43:\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rcx\ncmpq %rcx,%rdx\nje .L24\nmovq %rdx,%rcx\njmp .L25\n.L24:\nmovl $0,%ecx\n.L25:\naddq %rsi,%rcx\nmovq %rcx,-144(%rbp)\nmovq -184(%rbp),%rcx\nsubq %rdx,%rcx\nmovq %rcx,-136(%rbp)\nmovq -192(%rbp),%rdx\ncmpq %rax,%rdi\nje .L26\nmovq %rax,%rcx\njmp .L27\n.L26:\nmovl $0,%ecx\n.L27:\naddq %rcx,%rdx\nmovq %rdx,-128(%rbp)\nsubq %rax,%rdi\nmovq %rdi,%rdx\nmovq %rdx,-120(%rbp)\nleaq -144(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBB24:\nleaq -80(%rbp),%rax\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <strconv.Atoi@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-48(%rbp)\n.LBE24:\n.LBB25:\nmovq -48(%rbp),%rax\ncmpq -8(%rbp),%rax\njg .L49\n.LBB26:\n.LBB27:\n.LBB28:\nmovq -168(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L29\ncmpq %rax,-48(%rbp)\njl .L44\n.L29:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L44:\nmovq -176(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L31\n.LBB29:\nmovq -48(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\nsetne %al\n.L31:\n.LBE29:\n.LBE28:\ntestb %al,%al\nje .L50\n.LBB30:\naddq $1,-32(%rbp)\n.LBE30:\n.LBE27:\n.LBE26:\n.LBE25:\n.LBE23:\n.LBB36:\naddq $1,-40(%rbp)\n.L17:\n.LBE36:\nmovq -184(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-40(%rbp)\njl .L51\n.LBE21:\n.LBE20:\nmovq -32(%rbp),%rax\naddq %rax,-16(%rbp)\njmp .L37\n.L49:\n.LBB39:\n.LBB38:\n.LBB37:\n.LBB35:\n.LBB33:\nnop\njmp .L37\n.L50:\n.LBE33:\n.LBB34:\n.LBB32:\n.LBB31:\nnop\n.LBE31:\n.LBE32:\n.LBE34:\n.LBE35:\n.LBE37:\n.LBE38:\n.LBE39:\n.LBE19:\n.LBE18:\n.LBE17:\n.LBE16:\n.LBE4:\njmp .L37\n.L48:\n.LBB42:\n.LBB41:\n.LBB40:\nnop\n.LBE40:\n.LBE41:\n.LBE42:\n.LBE3:\n.LBE2:\ncall <runtime.printlock@PLT>\nmovq -16(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nleave\nret", "tgt": "arr := make([]bool, 1000000)\narr[1] = true\nprime := 3\ncount := 13\nvar k, tmp, localCount int\nvar str string\nfor {\n\tfor k = prime * 2; k < len(arr); k += prime {\n\t\tarr[k] = true\n\t}\n\tfor k = prime + 2; k < len(arr) && arr[k]; k += 2 {\n\t}\n\tif k < len(arr) {\n\t\tprime = k\n\t\tstr = strconv.Itoa(prime)\n\t\tif prime > 100 {\n\t\t\tlocalCount = 1\n\t\t\tfor i := 0; i < len(str)-1; i++ {\n\t\t\t\tstr = str[1:] + str[0:1]\n\t\t\t\ttmp, _ = strconv.Atoi(str)\n\t\t\t\tif tmp > prime {\n\t\t\t\t\tcontinueprimeloop\n\t\t\t\t} else if !arr[tmp] && tmp%2 != 0 {\n\t\t\t\t\tlocalCount++\n\t\t\t\t} else {\n\t\t\t\t\tcontinueprimeloop\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount += localCount\n\t\t}\n\t} else {\n\t\tbreak\n\t}\n}\nprintln(count)"}
{"src": ".LFB0:\nleaq -488(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L37\nmovl $488,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $440,%rsp\nmovq %rdi,-456(%rbp)\nmovq %rsi,-464(%rbp)\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovl $0,%edx\nmovq %rax,%rsi\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,-64(%rbp)\n.LBB3:\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L34:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -312(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -320(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -432(%rbp),%r14\nmovq -424(%rbp),%r15\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq -64(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq (%rax),%rax\naddq $1,%rax\nmovq %rax,-480(%rbp)\nmovq -64(%rbp),%rax\nmovq %r14,%rdx\nmovq %r15,%rcx\nmovq %rax,%rsi\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq -480(%rbp),%rdi\nmovq %rdi,(%rax)\n.LBE12:\n.LBE11:\n.LBE8:\n.LBB14:\naddq $1,%rbx\njmp .L2\n.L3:\n.LBE14:\n.LBB15:\n.LBB13:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE13:\n.LBE15:\ncmpq -472(%rbp),%rbx\njl .L34\n.LBE5:\n.LBE4:\n.LBE3:\ncmpq $0,-64(%rbp)\nje .L6\nmovq -64(%rbp),%rax\nmovq (%rax),%rbx\njmp .L7\n.L6:\nmovl $0,%ebx\n.L7:\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <type...1go.problem0692.entry>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-384(%rbp)\nmovq $0,-376(%rbp)\nmovq %rbx,-368(%rbp)\n.LBB16:\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-72(%rbp)\n.LBB17:\n.LBB18:\n.LBB19:\nleaq -288(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE19:\njmp .L8\n.L35:\n.LBB20:\nnop\n.LBE20:\n.LBB21:\n.LBB22:\nmovq -288(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq -280(%rbp),%rcx\nmovq (%rcx),%rcx\n.LBE22:\n.LBB23:\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq %rcx,-72(%rbp)\n.LBE23:\n.LBB24:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rbx\nleaq <go.problem0692..go.problem0692.entry..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB25:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE25:\njmp .L10\n.L9:\n.LBB26:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.problem0692..go.problem0692.entry..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE26:\nmovq -168(%rbp),%r14\nleaq <1>(%rbx),%rax\nmovq -176(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L11\n.LBB27:\nmovq -192(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...1go.problem0692.entry>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE27:\njmp .L12\n.L11:\n.LBB28:\nmovq -192(%rbp),%rcx\nmovq -176(%rbp),%rdx\nmovq %rcx,-384(%rbp)\nmovq %rax,-376(%rbp)\nmovq %rdx,-368(%rbp)\n.L12:\n.LBE28:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -192(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L13\n.LBB29:\nmovq %r14,(%rax)\njmp .L14\n.L13:\n.LBE29:\n.LBB30:\nmovq %r14,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L14:\n.LBE30:\n.LBE24:\n.LBE21:\n.LBB31:\nleaq -288(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L8:\n.LBE31:\nmovq -288(%rbp),%rax\ntestq %rax,%rax\njne .L35\n.LBE18:\n.LBE17:\n.LBE16:\nleaq <imt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Swap.0func.8int.3int.9.8.9.5..go.problem0692.freWords>(%rip),%r12\nleaq <go.problem0692..go.problem0692.freWords..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L17\n.LBB32:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE32:\njmp .L18\n.L17:\n.LBB33:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.problem0692..go.problem0692.freWords..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L18:\n.LBE33:\nmovq -136(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Sort@PLT>\nmovq -464(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-416(%rbp)\nmovq %rbx,-408(%rbp)\nmovq %rbx,-400(%rbp)\n.LBB34:\nmovq $0,-56(%rbp)\n.LBB35:\njmp .L19\n.L36:\n.LBB36:\nnop\n.LBE36:\n.LBB37:\nmovq -408(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L20\ncmpq %rax,-56(%rbp)\njl .L31\n.L20:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\nmovq -416(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rcx\nmovq -376(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L22\ncmpq %rax,-56(%rbp)\njl .L32\n.L22:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq -384(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rdx,%rsi\nmovq %rsi,<8>(%rcx)\nleaq <runtime.writeBarrier>(%rip),%rsi\nmovl (%rsi),%esi\ntestl %esi,%esi\njne .L24\n.LBB38:\nmovq %rax,(%rcx)\njmp .L25\n.L24:\n.LBE38:\n.LBB39:\nmovq %rax,%rdx\nmovq %rcx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L25:\n.LBE39:\n.LBE37:\n.LBB40:\naddq $1,-56(%rbp)\n.L19:\n.LBE40:\nmovq -56(%rbp),%rax\ncmpq -464(%rbp),%rax\njl .L36\n.LBE35:\n.LBE34:\n.LBB41:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -456(%rbp),%rcx\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -336(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE41:\n.LBE2:\nmovq -456(%rbp),%rax\naddq $440,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "count := make(map[string]int, len(words))\nfor _, w := range words {\n\tcount[w]++\n}\nfw := make(freWords, 0, len(count))\nfor w, c := range count {\n\tfw = append(fw, &entry{\n\t\tword:      w,\n\t\tfrequence: c,\n\t})\n}\nsort.Sort(fw)\nres := make([]string, k)\nfor i := 0; i < k; i++ {\n\tres[i] = fw[i].word\n}\nreturn res"}
{"src": ".LFB1:\nleaq -904(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L43\nmovl $904,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L43:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $864,%rsp\nmovq %rdi,-808(%rbp)\nleaq <.LC6>(%rip),%rax\nmovl $10,%edx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\nleaq -704(%rbp),%rcx\nmovq -752(%rbp),%rdx\nmovq -744(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <go.problem830.largeGroupPositions>\nleaq <type...6.7.6.7int>(%rip),%rax\nmovq %rax,-896(%rbp)\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-680(%rbp)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-656(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L35\n.LBB29:\nmovq -680(%rbp),%rcx\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -656(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE29:\njmp .L36\n.L35:\n.LBB30:\nmovq -680(%rbp),%rcx\nleaq -672(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L36:\n.LBE30:\nmovq -680(%rbp),%rax\nmovq %rax,-888(%rbp)\nmovdqa -896(%rbp),%xmm0\nmovups %xmm0,-640(%rbp)\nleaq -640(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $1,-280(%rbp)\nmovq $1,-272(%rbp)\nleaq -256(%rbp),%rax\nsubq $8,%rsp\npushq -272(%rbp)\npushq -280(%rbp)\npushq -288(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-720(%rbp)\nleaq <.LC7>(%rip),%rax\nmovq %rax,-848(%rbp)\nmovq $3,-840(%rbp)\nmovdqa -848(%rbp),%xmm1\nmovups %xmm1,-768(%rbp)\nleaq -592(%rbp),%rax\nmovq -768(%rbp),%rcx\nmovq -760(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.problem830.largeGroupPositions>\nleaq <type...6.7.6.7int>(%rip),%rax\nmovq %rax,-880(%rbp)\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-568(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-544(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L37\n.LBB31:\nmovq -568(%rbp),%rcx\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -544(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE31:\njmp .L38\n.L37:\n.LBB32:\nmovq -568(%rbp),%rax\nleaq -560(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L38:\n.LBE32:\nmovq -568(%rbp),%rax\nmovq %rax,-872(%rbp)\nmovdqa -880(%rbp),%xmm2\nmovups %xmm2,-528(%rbp)\nleaq -528(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq $1,-216(%rbp)\nmovq $1,-208(%rbp)\nleaq -192(%rbp),%rax\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-608(%rbp)\nleaq <.LC8>(%rip),%rax\nmovq %rax,-832(%rbp)\nmovq $17,-824(%rbp)\nmovdqa -832(%rbp),%xmm3\nmovups %xmm3,-784(%rbp)\nleaq -480(%rbp),%rax\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.problem830.largeGroupPositions>\nleaq <type...6.7.6.7int>(%rip),%rax\nmovq %rax,-864(%rbp)\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-456(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-432(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L39\n.LBB33:\nmovq -456(%rbp),%rcx\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -432(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE33:\njmp .L40\n.L39:\n.LBB34:\nmovq -456(%rbp),%rax\nleaq -448(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L40:\n.LBE34:\nmovq -456(%rbp),%rax\nmovq %rax,-856(%rbp)\nmovdqa -864(%rbp),%xmm4\nmovups %xmm4,-416(%rbp)\nleaq -416(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $1,-152(%rbp)\nmovq $1,-144(%rbp)\nleaq -128(%rbp),%rax\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-496(%rbp)\nleaq <.LC9>(%rip),%r14\nmovl $3,%r15d\nmovq %r14,-800(%rbp)\nmovq %r15,-792(%rbp)\nleaq -368(%rbp),%rax\nmovq -800(%rbp),%rcx\nmovq -792(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.problem830.largeGroupPositions>\nleaq <type...6.7.6.7int>(%rip),%r12\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L41\n.LBB35:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE35:\njmp .L42\n.L41:\n.LBB36:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L42:\n.LBE36:\nmovq -344(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-304(%rbp)\nmovq %r13,-296(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-384(%rbp)\nleaq -32(%rbp),%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "str1 := \"STR\"\nfmt.Println(largeGroupPositions(str1))\nstr2 := \"STR\"\nfmt.Println(largeGroupPositions(str2))\nstr3 := \"STR\"\nfmt.Println(largeGroupPositions(str3))\nstr4 := \"STR\"\nfmt.Println(largeGroupPositions(str4))"}
{"src": "cmpq %fs:112,%rsp\njnb .L413\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL28:\nret\n.L413:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $120,%rsp\nmovq %rdi,-152(%rbp)\ncall <go.linkedlist.NewCyclic>\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\nmovl $3,%esi\nmovq %rax,%rdi\ncall <go.linkedlist.fillList>\nmovq $1,-64(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.linkedlist.Cyclic.Walk>\nmovq %rax,-72(%rbp)\n.LBB377:\nmovq -64(%rbp),%rax\nmovq %rax,-104(%rbp)\nleaq -104(%rbp),%rdx\nmovq -72(%rbp),%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rax\nmovq %rdx,%rcx\nleaq <int..d>(%rip),%rdx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L409\n.LBB378:\nleaq <type...1go.linkedlist.Node>(%rip),%r14\nmovq -72(%rbp),%r15\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq %r14,-128(%rbp)\nmovq %r15,-120(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L411\n.LBB379:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE379:\njmp .L412\n.L411:\n.LBB380:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L412:\n.LBE380:\nmovq -136(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq <.LC110>(%rip),%r12\nmovl $18,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -152(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L409:\n.LBE378:\n.LBE377:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "list := NewCyclic()\nfillList(list, 3)\nwant := 1\ngot := list.Walk()\nif got.Val != want {\n\tt.Errorf(\"STR\", got)\n}"}
{"src": ".LFB0:\nleaq -280(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L19\nmovl $280,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $248,%rsp\nmovq %rdi,-264(%rbp)\nmovq $0,-224(%rbp)\nmovq $0,-216(%rbp)\nmovq $0,-208(%rbp)\n.LBB2:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-40(%rbp)\n.LBB3:\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L17:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -184(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -192(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-48(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -48(%rbp),%rax\nmovq %rax,-168(%rbp)\nleaq -168(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7struct.4.5>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\n.LBE12:\n.LBE11:\n.LBE8:\n.LBB14:\naddq $1,%rbx\njmp .L2\n.L3:\n.LBE14:\n.LBB15:\n.LBB13:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE13:\n.LBE15:\ncmpq %r12,%rbx\njl .L17\n.LBE5:\n.LBE4:\n.LBE3:\nmovl $0,%edx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\n.LBB16:\nmovq $0,-56(%rbp)\n.LBB17:\n.LBB18:\n.LBB19:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%r13\nmovl $0,%ebx\n.LBE19:\njmp .L6\n.L18:\n.LBB20:\nnop\n.LBE20:\n.LBB21:\n.LBB22:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L7\ncmpq %rax,%rbx\njge .L7\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE22:\n.LBB23:\nmovq %rax,-56(%rbp)\n.LBE23:\n.LBB24:\n.LBB25:\nmovb $0,-57(%rbp)\n.LBB26:\nmovq -56(%rbp),%rax\nmovq %rax,-136(%rbp)\nleaq -136(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7struct.4.5>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovl %edx,%eax\nmovb %al,-57(%rbp)\n.LBE26:\ncmpb $0,-57(%rbp)\njne .L8\njmp .L9\n.L7:\n.LBE25:\n.LBE24:\n.LBB31:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE31:\n.LBB32:\n.LBB30:\n.LBB27:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L10\n.LBB28:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-240(%rbp)\n.LBE28:\njmp .L11\n.L10:\n.LBB29:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-256(%rbp)\nmovq %rax,-248(%rbp)\nmovq %rdx,-240(%rbp)\n.L11:\n.LBE29:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -40(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,-72(%rbp)\nleaq -72(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rax,%rsi\nleaq <type..map.6int.7struct.4.5>(%rip),%rdi\ncall <runtime.mapdelete_fast64@PLT>\n.L9:\n.LBE27:\n.LBE30:\n.LBE32:\n.LBE21:\n.LBB33:\naddq $1,%rbx\n.L6:\n.LBE33:\ncmpq %r13,%rbx\njl .L18\n.LBE18:\n.LBE17:\n.LBE16:\n.LBB34:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -264(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE34:\n.LBE2:\nmovq -264(%rbp),%rax\naddq $248,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "m := make(map[int]struct{})\nfor _, num := range nums1 {\n\tm[num] = struct{}{}\n}\nnums := make([]int, 0)\nfor _, num := range nums2 {\n\tif _, ok := m[num]; ok {\n\t\tnums = append(nums, num)\n\t\tdelete(m, num)\n\t}\n}\nreturn nums"}
{"src": ".LFB0:\nleaq -328(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L10\nmovl $328,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $288,%rsp\nmovq $0,-288(%rbp)\nmovq $0,-280(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nleaq -288(%rbp),%rax\nmovl $100,%edx\nmovl $1,%esi\nmovq %rax,%rdi\ncall <math..z2fbig.Int.MulRange@PLT>\nmovq %rax,-48(%rbp)\nleaq <type...60x.7uint8>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\nleaq -320(%rbp),%rax\nmovq -48(%rbp),%rcx\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovl $10,%edx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <math..z2fbig.Int.Append@PLT>\naddq $32,%rsp\nmovq $0,-40(%rbp)\n.LBB2:\nmovq $0,-56(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rcx\nmovl $0,%eax\n.LBE5:\njmp .L2\n.L9:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\nmovq %rax,-56(%rbp)\n.LBB8:\nmovq -312(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L3\ncmpq %rdx,-56(%rbp)\njl .L7\n.L3:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\nmovq -320(%rbp),%rsi\nmovq -56(%rbp),%rdx\naddq %rsi,%rdx\nmovzbl (%rdx),%edx\nsubl $48,%edx\nmovzbl %dl,%edx\naddq %rdx,-40(%rbp)\n.LBE8:\n.LBE7:\n.LBB9:\naddq $1,%rax\n.L2:\n.LBE9:\ncmpq %rcx,%rax\njl .L9\n.LBE4:\n.LBE3:\n.LBE2:\nleaq <string..d>(%rip),%r12\nleaq <go..C13>(%rip),%r13\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -184(%rbp),%rax\nmovq %rax,%r15\nmovq %r12,-176(%rbp)\nmovq %r13,-168(%rbp)\nmovq %r14,-160(%rbp)\nmovq %r15,-152(%rbp)\nleaq -176(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq -32(%rbp),%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "factorial := new(big.Int).MulRange(1, 100)\nbytes := factorial.Append([]byte{}, 10)\nsum := 0\nfor b := range bytes {\n\tsum += int(bytes[b] - '0')\n}\nfmt.Println(\"STR\", sum)"}
{"src": ".LFB1:\nleaq -760(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L59\nmovl $760,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L59:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $712,%rsp\nmovq %rdi,-696(%rbp)\nleaq <.LC20>(%rip),%rax\nmovl $6,%edx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovb $1,-576(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $12,%r13d\nmovq %r12,-568(%rbp)\nmovq %r13,-560(%rbp)\nmovb $1,-552(%rbp)\nleaq <.LC22>(%rip),%r10\nmovl $6,%r11d\nmovq %r10,-544(%rbp)\nmovq %r11,-536(%rbp)\nmovb $0,-528(%rbp)\nleaq <.LC23>(%rip),%r8\nmovl $6,%r9d\nmovq %r8,-520(%rbp)\nmovq %r9,-512(%rbp)\nmovb $0,-504(%rbp)\nleaq -592(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $4,-616(%rbp)\nmovq $4,-608(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC24>(%rip),%rcx\nmovl $70,%ebx\nleaq -208(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB36:\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\n.LBB37:\n.LBB38:\n.LBB39:\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%r13\nmovl $0,%ebx\n.LBE39:\njmp .L49\n.L58:\n.LBB40:\nnop\n.LBE40:\n.LBB41:\n.LBB42:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L50\ncmpq %rax,%rbx\njge .L50\nmovq -432(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-448(%rbp)\n.LBE42:\n.LBB43:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-640(%rbp)\n.LBE43:\n.LBB44:\nmovzbl -640(%rbp),%eax\nmovb %al,-657(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nmovq -688(%rbp),%rdx\nmovq -680(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode.isValid1003>\nmovl %eax,%r12d\nleaq <go.leetcode..go.leetcode.para1003..d>(%rip),%rax\nmovq %rax,-752(%rbp)\nleaq <go.leetcode..go.leetcode.para1003..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L51\njmp .L56\n.L50:\n.LBE44:\n.LBB47:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L51:\n.LBE47:\n.LBB48:\n.LBB45:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE45:\njmp .L53\n.L56:\n.LBB46:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para1003..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L53:\n.LBE46:\nmovq -344(%rbp),%rax\nmovq %rax,-744(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-736(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovb %r12b,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-728(%rbp)\nmovdqa -752(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -736(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC25>(%rip),%rax\nmovq %rax,-720(%rbp)\nmovq $37,-712(%rbp)\nleaq -144(%rbp),%rax\nmovq -720(%rbp),%rsi\nmovq -712(%rbp),%rdi\nmovq %rsi,%r8\nmovq %rdi,%r9\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE48:\n.LBE41:\n.LBB49:\naddq $1,%rbx\n.L49:\n.LBE49:\ncmpq %r13,%rbx\njl .L58\n.LBE38:\n.LBE37:\n.LBE36:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC26>(%rip),%r14\nmovl $3,%r15d\nleaq -80(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1003{\n\t{\n\t\tpara1003{\"STR\"},\n\t\tans1003{true},\n\t},\n\t{\n\t\tpara1003{\"STR\"},\n\t\tans1003{true},\n\t},\n\t{\n\t\tpara1003{\"STR\"},\n\t\tans1003{false},\n\t},\n\t{\n\t\tpara1003{\"STR\"},\n\t\tans1003{false},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1003, q.para1003\n\tfmt.Printf(\"STR\", p, isValid1003(p.s))\n}\nfmt.Printf(\"STR\")"}
{"src": "cmpq %fs:112,%rsp\njnb .L9\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\n.LBB6:\nmovq $0,-8(%rbp)\n.LBB7:\nleaq <type...1error>(%rip),%rax\nmovq %rax,-32(%rbp)\nmovq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\n.LBE7:\n.LBE6:\npopq %rbp\nret", "tgt": "var v *error\nreturn v"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L19\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $200,%rsp\nmovq %rdi,-200(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\n.LBB2:\nmovl $0,%r8d\nmovl $16,%ecx\nmovl $24,%edx\nmovl $0,%esi\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-48(%rbp)\nleaq <type...60x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\n.LBB3:\nmovq $0,-40(%rbp)\n.LBB4:\njmp .L2\n.L18:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -40(%rbp),%rax\nleaq <10>(%rax),%rdi\nmovq -216(%rbp),%rax\ntestq %rdi,%rdi\njs .L3\ncmpq %rax,%rdi\njg .L3\ncmpq $0,-40(%rbp)\njns .L4\njmp .L5\n.L3:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAlen@PLT>\n.L4:\ncmpq %rdi,-40(%rbp)\njg .L5\nmovq -224(%rbp),%rdx\ncmpq -40(%rbp),%rdi\njne .L6\njmp .L16\n.L5:\nmovq -40(%rbp),%rax\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L6:\nmovq -40(%rbp),%rax\njmp .L8\n.L16:\nmovl $0,%eax\n.L8:\naddq %rdx,%rax\nmovq %rax,-192(%rbp)\nmovq %rdi,%rax\nsubq -40(%rbp),%rax\nmovq %rax,-184(%rbp)\n.LBB7:\nmovq -192(%rbp),%r12\nmovq -184(%rbp),%r13\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq -48(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq (%rax),%rax\nleaq <1>(%rax),%rbx\nmovq -48(%rbp),%rax\nmovq %r12,%rdx\nmovq %r13,%rcx\nmovq %rax,%rsi\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %rbx,(%rax)\n.LBE7:\n.LBB8:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq -48(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7int>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq (%rax),%rax\ncmpq $2,%rax\njne .L9\n.LBB9:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L10\n.LBB10:\nmovq -112(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-160(%rbp)\n.LBE10:\njmp .L11\n.L10:\n.LBB11:\nmovq -112(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rcx,-176(%rbp)\nmovq %rax,-168(%rbp)\nmovq %rdx,-160(%rbp)\n.L11:\n.LBE11:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq -184(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L12\n.LBB12:\nmovq -192(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L9\n.L12:\n.LBE12:\n.LBB13:\nmovq -192(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L9:\n.LBE13:\n.LBE9:\n.LBE8:\n.LBE6:\n.LBB14:\naddq $1,-40(%rbp)\n.L2:\n.LBE14:\nmovq -216(%rbp),%rax\nsubq $10,%rax\ncmpq %rax,-40(%rbp)\njle .L18\n.LBE4:\n.LBE3:\n.LBB15:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -200(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE15:\n.LBE2:\nmovq -200(%rbp),%rax\naddq $200,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "m := map[string]int{}\nrets := []string{}\nfor i := 0; i <= len(s)-10; i++ {\n\tsub := string(s[i : i+10])\n\tm[sub]++\n\tif m[sub] == 2 {\n\t\trets = append(rets, sub)\n\t}\n}\nreturn rets"}
{"src": "cmpq %fs:112,%rsp\njnb .L92\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL6:\nret\n.L92:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\naddq $-128,%rsp\nmovq %rdi,-120(%rbp)\nmovq %rsi,-128(%rbp)\nmovq %rdx,-136(%rbp)\ncmpq $0,-120(%rbp)\njne .L75\ncall <runtime.panicmem@PLT>\n.L75:\nmovq -120(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-96(%rbp)\n.LBB59:\n.LBB60:\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -128(%rbp),%rax\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,-48(%rbp)\nmovq %rbx,-40(%rbp)\nmovq -96(%rbp),%rdx\nmovq %rdx,-32(%rbp)\nmovq -136(%rbp),%rbx\nmovq -104(%rbp),%rdx\ncmpq $0,-136(%rbp)\njs .L76\ncmpq %rdx,-136(%rbp)\njl .L88\n.L76:\nmovq -136(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L88:\nmovq -112(%rbp),%rcx\nmovq -136(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq -104(%rbp),%rdx\ncmpq $0,-128(%rbp)\njs .L78\ncmpq %rdx,-128(%rbp)\njl .L89\n.L78:\nmovq -128(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L89:\nmovq -112(%rbp),%rsi\nmovq -128(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%r12\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L80\ncmpq %rdx,%rax\njl .L90\n.L80:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L90:\nmovq -80(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L82\n.LBB61:\nmovq %rcx,(%rax)\njmp .L83\n.L82:\n.LBE61:\n.LBB62:\nmovq %rcx,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L83:\n.LBE62:\nmovq -40(%rbp),%rax\ntestq %rbx,%rbx\njs .L84\ncmpq %rax,%rbx\njl .L91\n.L84:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L91:\nmovq -48(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L86\n.LBB63:\nmovq %r12,(%rax)\njmp .L74\n.L86:\n.LBE63:\n.LBB64:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L74:\n.LBE64:\n.LBE60:\n.LBE59:\nsubq $-128,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "q[i], q[j] = q[j], q[i]"}
{"src": ".LFB0:\nleaq -344(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L19\nmovl $344,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\nsubq $336,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq $0,-224(%rbp)\nmovq $0,-216(%rbp)\n.LBB2:\nleaq -48(%rbp),%rdi\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nleaq -208(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicerune@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB3:\ncmpq $1,-16(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\njmp .L14\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -240(%rbp),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceAcap@PLT>\n.L4:\nmovq -256(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $1,-280(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-272(%rbp)\n.LBB6:\nmovq $0,-8(%rbp)\n.LBB7:\njmp .L5\n.L18:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nleaq -320(%rbp),%rax\nmovq -8(%rbp),%rdx\nmovq -8(%rbp),%rcx\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.longest_palindromic_substring.findPalindrome>\naddq $32,%rsp\n.LBB10:\nmovq -312(%rbp),%rdx\nmovq -280(%rbp),%rax\ncmpq %rax,%rdx\njle .L6\n.LBB11:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-272(%rbp)\n.L6:\n.LBE11:\n.LBE10:\n.LBB12:\nmovq -248(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L7\ncmpq %rax,-8(%rbp)\njl .L15\n.L7:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq -8(%rbp),%rax\naddq $1,%rax\nmovq -248(%rbp),%rdx\ntestq %rax,%rax\njs .L9\ncmpq %rdx,%rax\njl .L16\n.L9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\nmovq -256(%rbp),%rcx\nmovq -8(%rbp),%rdx\nsalq $2,%rdx\naddq %rcx,%rdx\nmovl (%rdx),%edx\nmovq -256(%rbp),%rcx\nsalq $2,%rax\naddq %rcx,%rax\nmovl (%rax),%eax\ncmpl %eax,%edx\njne .L11\n.LBB13:\nmovq -8(%rbp),%rax\nleaq <1>(%rax),%rdx\nleaq -80(%rbp),%rax\nmovq -8(%rbp),%rcx\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.longest_palindromic_substring.findPalindrome>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-304(%rbp)\n.LBB14:\nmovq -312(%rbp),%rdx\nmovq -280(%rbp),%rax\ncmpq %rax,%rdx\njle .L11\n.LBB15:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-272(%rbp)\n.L11:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE9:\n.LBB16:\naddq $1,-8(%rbp)\n.L5:\n.LBE16:\nmovq -16(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-8(%rbp)\njl .L18\n.LBE7:\n.LBE6:\n.LBB17:\nsubq $8,%rsp\npushq -272(%rbp)\npushq -280(%rbp)\npushq -288(%rbp)\nmovl $0,%edi\ncall <runtime.slicerunetostring@PLT>\naddq $32,%rsp\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\n.L14:\n.LBE17:\n.LBE2:\nleave\nret", "tgt": "runes := []rune(s)\nlength := len(runes)\nif length <= 1 {\n\treturn s\n}\nmaxRune := runes[0:1]\nfor i := 0; i < length-1; i++ {\n\ttmpRune := findPalindrome(runes, i, i)\n\tif len(tmpRune) > len(maxRune) {\n\t\tmaxRune = tmpRune\n\t}\n\tif runes[i] == runes[i+1] {\n\t\ttmpRune = findPalindrome(runes, i, i+1)\n\t\tif len(tmpRune) > len(maxRune) {\n\t\t\tmaxRune = tmpRune\n\t\t}\n\t}\n}\nreturn string(maxRune)"}
{"src": ".LFB1:\nleaq -616(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L46\nmovl $616,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L46:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $568,%rsp\nmovb $0,-57(%rbp)\n.LBB16:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-504(%rbp)\nmovq -504(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $0,-520(%rbp)\nmovq $0,-512(%rbp)\nmovq $0,-56(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-72(%rbp)\n.LBB17:\nmovq $0,-80(%rbp)\n.LBB18:\n.LBB19:\n.LBB20:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq -488(%rbp),%r13\nmovl $0,%r12d\n.LBE20:\njmp .L14\n.L45:\n.LBB21:\nnop\n.LBE21:\n.LBB22:\n.LBB23:\nmovq -488(%rbp),%rax\ntestq %r12,%r12\njs .L15\ncmpq %rax,%r12\njge .L15\nmovq -496(%rbp),%rdx\nmovq %r12,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE23:\n.LBB24:\nmovq %rax,-80(%rbp)\n.LBE24:\n.LBB25:\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%rbx\nleaq <1>(%rbx),%rcx\nmovq -448(%rbp),%rsi\nmovq %rcx,%rdx\nmovq %rsi,%rax\ncmpq %rax,%rdx\nja .L16\njmp .L38\n.L15:\n.LBE25:\n.LBB40:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\n.LBE40:\n.LBB41:\n.LBB26:\nmovq -464(%rbp),%rax\nleaq -240(%rbp),%rdi\nmovq %rcx,%r9\nmovq %rsi,%r8\nmovq %rbx,%rcx\nmovq %rax,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-512(%rbp)\n.LBE26:\njmp .L18\n.L38:\n.LBB27:\nmovq -464(%rbp),%rax\nmovq -448(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rcx,-520(%rbp)\nmovq %rdx,-512(%rbp)\n.L18:\n.LBE27:\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -464(%rbp),%rdx\nmovq %rbx,%rax\nsalq $3,%rax\naddq %rax,%rdx\nmovq -80(%rbp),%rax\nmovq %rax,(%rdx)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-608(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-408(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-384(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L19\n.LBB28:\nmovq -408(%rbp),%rcx\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -384(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE28:\njmp .L20\n.L19:\n.LBB29:\nmovq -408(%rbp),%rcx\nleaq -400(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L20:\n.LBE29:\nmovq -408(%rbp),%rax\nmovq %rax,-600(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-592(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -376(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -376(%rbp),%rax\nmovq %rax,-584(%rbp)\nmovdqa -608(%rbp),%xmm0\nmovups %xmm0,-368(%rbp)\nmovdqa -592(%rbp),%xmm1\nmovups %xmm1,-352(%rbp)\nleaq -368(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $2,-200(%rbp)\nmovq $2,-192(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-544(%rbp)\nmovq $18,-536(%rbp)\nleaq -176(%rbp),%rdi\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-416(%rbp)\n.LBB30:\n.LBB31:\njmp .L21\n.L44:\n.LBB32:\nnop\n.LBE32:\n.LBB33:\nmovq -520(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -512(%rbp),%rax\ntestq %rdi,%rdi\njs .L22\ncmpq %rax,%rdi\njg .L22\ntestq %rdi,%rdi\njns .L23\njmp .L39\n.L22:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L39:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L23:\nmovq -528(%rbp),%rax\nmovq -512(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdi,-520(%rbp)\nmovq %rdx,-512(%rbp)\naddq $1,-56(%rbp)\n.L21:\n.LBE33:\n.LBB34:\n.LBB35:\nmovq -520(%rbp),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L25\n.LBB36:\nmovq -56(%rbp),%rax\ncmpq -72(%rbp),%rax\nsetl %al\n.L25:\n.LBE36:\n.LBE35:\ntestb %al,%al\nje .L26\n.LBB37:\nmovq -520(%rbp),%rax\nleaq -1(%rax),%rcx\nmovq -520(%rbp),%rax\ntestq %rcx,%rcx\njs .L27\ncmpq %rax,%rcx\njl .L40\n.L27:\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq <48>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L29\ncmpq %rdx,-56(%rbp)\njl .L41\n.L29:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -528(%rbp),%rdx\nmovq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <40>(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rcx\nsete %al\n.L26:\n.LBE37:\n.LBE34:\ntestb %al,%al\njne .L44\n.LBE31:\n.LBE30:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-576(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-288(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L33\n.LBB38:\nmovq -312(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -288(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE38:\njmp .L34\n.L33:\n.LBB39:\nmovq -312(%rbp),%rcx\nleaq -304(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L34:\n.LBE39:\nmovq -312(%rbp),%rax\nmovq %rax,-568(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-560(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -280(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -280(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovdqa -576(%rbp),%xmm2\nmovups %xmm2,-272(%rbp)\nmovdqa -560(%rbp),%xmm3\nmovups %xmm3,-256(%rbp)\nleaq -272(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $2,-136(%rbp)\nmovq $2,-128(%rbp)\nleaq <.LC24>(%rip),%r14\nmovl $23,%r15d\nleaq -112(%rbp),%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-320(%rbp)\n.LBE41:\n.LBE22:\n.LBB42:\naddq $1,%r12\n.L14:\n.LBE42:\ncmpq %r13,%r12\njl .L45\n.LBE19:\n.LBE18:\n.LBE17:\n.LBB43:\nmovq -56(%rbp),%rax\ncmpq -72(%rbp),%rax\nsete %al\nmovb %al,-57(%rbp)\nmovzbl -57(%rbp),%eax\n.LBE43:\n.LBE16:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "stack, j, N := []int{}, 0, len(pushed)\nfor _, x := range pushed {\n\tstack = append(stack, x)\n\tfmt.Printf(\"STR\", stack, j)\n\tfor len(stack) != 0 && j < N && stack[len(stack)-1] == popped[j] {\n\t\tstack = stack[0 : len(stack)-1]\n\t\tj++\n\t}\n\tfmt.Printf(\"STR\", stack, j)\n}\nreturn j == N"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $160,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nmovq %rdx,-160(%rbp)\nmovq %rcx,-152(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\nleaq -64(%rbp),%rdi\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nleaq -96(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicebyte@PLT>\nleaq -32(%rbp),%rdi\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nleaq -128(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicebyte@PLT>\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\npushq -16(%rbp)\npushq -24(%rbp)\npushq -32(%rbp)\ncall <go.distinct_subsequences.numDistinctBytes>\naddq $48,%rsp\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return numDistinctBytes([]byte(s), []byte(t))"}
{"src": "cmpq %fs:112,%rsp\njnb .L34\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L34:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq %rcx,%rax\nmovq %r8,%rcx\nmovq %rcx,%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovb $0,-1(%rbp)\n.LBB36:\n.LBB37:\nmovq -48(%rbp),%rax\nleaq <int..d>(%rip),%rdx\ncmpq %rdx,%rax\nje .L31\nmovq -48(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L31:\nmovq -64(%rbp),%rax\nleaq <int..d>(%rip),%rdx\ncmpq %rdx,%rax\nje .L32\nmovq -64(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L32:\nmovq -40(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetl %al\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE37:\n.LBE36:\nleave\nret", "tgt": "return key1.(int) < key2.(int)"}
{"src": "cmpq %fs:112,%rsp\njnb .L12\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\nmovss %xmm0,-20(%rbp)\nmovss %xmm1,-24(%rbp)\nmovb $0,-1(%rbp)\n.LBB8:\n.LBB9:\nmovss -20(%rbp),%xmm0\nucomiss -24(%rbp),%xmm0\nsetp %al\nmovl $1,%edx\nmovss -20(%rbp),%xmm0\nucomiss -24(%rbp),%xmm0\ncmovne %edx,%eax\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE9:\n.LBE8:\npopq %rbp\nret", "tgt": "return x != y"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-152(%rbp)\nmovq %rsi,-160(%rbp)\nmovb $0,-17(%rbp)\n.LBB2:\n.LBB3:\nmovq $0,-32(%rbp)\n.LBB4:\nmovq -152(%rbp),%rax\nmovq %rax,%rdi\ncall <main.sig>\nmovq %rax,%rcx\n.LBB5:\n.LBB6:\nleaq -144(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type..map.6int64.7bool>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE6:\njmp .L2\n.L8:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -144(%rbp),%rax\nmovq (%rax),%rax\n.LBE9:\nmovq %rax,-32(%rbp)\n.LBB10:\n.LBB11:\nmovq -32(%rbp),%rax\nmovq %rax,-40(%rbp)\nleaq -40(%rbp),%rax\nmovq (%rax),%rbx\nmovq -160(%rbp),%rax\nmovq %rax,%rdi\ncall <main.sig>\nmovq %rbx,%rdx\nmovq %rax,%rsi\nleaq <type..map.6int64.7bool>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovzbl (%rax),%eax\ntestb %al,%al\nje .L3\n.LBB12:\n.LBB13:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L4\n.L3:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBE8:\n.LBB14:\nleaq -144(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L2:\n.LBE14:\nmovq -144(%rbp),%rax\ntestq %rax,%rax\njne .L8\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB15:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L4:\n.LBE15:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "for prime := range sig(a) {\n\tif sig(b)[prime] {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $104,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $88,%rsp\nmovq %rdi,-88(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-32(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L25:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L3\ncmpq %rax,-32(%rbp)\njl .L18\n.L3:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-56(%rbp)\n.LBB7:\n.LBB8:\nmovl $1,%ebx\nmovq -56(%rbp),%rax\ncmpq -88(%rbp),%rax\nsete %al\ncmpb %al,%bl\njne .L23\n.LBB9:\n.LBB10:\nmovq -32(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\njmp .L7\n.L23:\n.LBE10:\n.LBE9:\n.LBB11:\nnop\n.LBE11:\nmovq <32>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L8\ncmpq %rax,-40(%rbp)\njg .L8\ncmpq $0,-32(%rbp)\njns .L9\njmp .L10\n.L8:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L9:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njle .L20\n.L10:\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L20:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq %rax,-32(%rbp)\nje .L12\nmovq -32(%rbp),%rax\nsalq $3,%rax\njmp .L13\n.L12:\nmovl $0,%eax\n.L13:\naddq %rdx,%rax\nmovq %rax,-80(%rbp)\nmovq -40(%rbp),%rax\nsubq -32(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq <32>(%rbp),%rax\nsubq -32(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -88(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rax,%rdi\ncall <go.day58.inRange>\naddq $32,%rsp\ncmpb %al,%bl\njne .L24\n.LBB12:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-32(%rbp)\n.LBE12:\njmp .L2\n.L24:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\nmovq -32(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -24(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-32(%rbp)\n.LBE14:\nnop\n.L2:\n.LBE8:\n.LBE7:\n.LBE6:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L25\n.LBE4:\n.LBE3:\n.LBB15:\nmovq $-1,-48(%rbp)\nmovq -48(%rbp),%rax\n.L7:\n.LBE15:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "var low, mid, high int = 0, len(sorted) / 2, len(sorted)\nfor low < high {\n\tcurr := sorted[mid]\n\tswitch {\n\tcase curr == target:\n\t\treturn mid\n\tcase inRange(sorted[mid:high], target):\n\t\tlow = mid\n\t\tmid = (low + high) / 2\n\tdefault:\n\t\thigh = mid\n\t\tmid = (low + high) / 2\n\t}\n}\nreturn -1"}
{"src": ".LFB190:\ncmpq %fs:112,%rsp\njnb .L446\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL27:\nret\n.L446:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovb $0,-1(%rbp)\n.LBB339:\n.LBB340:\nmovq -24(%rbp),%rax\nmovq %rax,%rdi\ncall <main.sumOfProperDivisors>\ncmpq %rax,-24(%rbp)\njge .L444\n.LBB341:\n.LBB342:\nmovb $1,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L445\n.L444:\n.LBE342:\n.LBE341:\n.LBE340:\n.LBB343:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L445:\n.LBE343:\n.LBE339:\nleave\nret", "tgt": "if n < sumOfProperDivisors(n) {\n\treturn true\n}\nreturn false"}
{"src": ".LFB0:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L27\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $328,%rsp\nmovq %rdi,-344(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\n.LBB2:\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -232(%rbp),%rax\nleaq -224(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -232(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $1,-280(%rbp)\nmovq $1,-272(%rbp)\n.LBB5:\nmovq $0,-56(%rbp)\n.LBB6:\njmp .L4\n.L26:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\n.LBB10:\nmovq -360(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L5\ncmpq %rax,-56(%rbp)\njge .L5\nmovq -368(%rbp),%rdx\nmovq -56(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $47,%al\nsetbe %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\njne .L6\njmp .L7\n.L5:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBB11:\nmovq -360(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L8\ncmpq %rax,-56(%rbp)\njge .L8\nmovq -368(%rbp),%rdx\nmovq -56(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $57,%al\nseta %al\njmp .L7\n.L8:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE11:\n.LBE10:\ntestb %al,%al\nje .L9\n.LBB12:\n.LBB13:\nmovq $0,-304(%rbp)\nmovq $0,-296(%rbp)\n.LBB14:\n.LBB15:\n.LBB16:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r15\nmovl $0,%ebx\n.LBE16:\njmp .L10\n.L25:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L11\ncmpq %rax,%rbx\njge .L11\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE19:\n.LBB20:\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\n.LBE20:\n.LBB21:\nleaq -112(%rbp),%rdi\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nleaq -176(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicebyte@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -56(%rbp),%rax\nsubq $8,%rsp\npushq -320(%rbp)\npushq -328(%rbp)\npushq -336(%rbp)\nmovq %rax,%rdi\ncall <go.leetcode.letterCase>\naddq $32,%rsp\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%r14\nsubq $8,%rsp\npushq -320(%rbp)\npushq -328(%rbp)\npushq -336(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <1>(%r14),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L12\njmp .L22\n.L11:\n.LBE21:\n.LBB26:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\n.LBE26:\n.LBB27:\n.LBB22:\nmovq -144(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-272(%rbp)\n.LBE22:\njmp .L14\n.L22:\n.LBB23:\nmovq -144(%rbp),%rcx\nmovq -128(%rbp),%rdx\nmovq %rcx,-288(%rbp)\nmovq %rax,-280(%rbp)\nmovq %rdx,-272(%rbp)\n.L14:\n.LBE23:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq %r14,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L15\n.LBB24:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L16\n.L15:\n.LBE24:\n.LBB25:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L16:\n.LBE25:\n.LBE27:\n.LBE18:\n.LBB28:\naddq $1,%rbx\n.L10:\n.LBE28:\ncmpq %r15,%rbx\njl .L25\n.L9:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE9:\n.LBE8:\n.LBB29:\naddq $1,-56(%rbp)\n.L4:\n.LBE29:\nmovq -360(%rbp),%rax\ncmpq %rax,-56(%rbp)\njl .L26\n.LBE6:\n.LBE5:\n.LBB30:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -344(%rbp),%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -240(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE30:\n.LBE2:\nmovq -344(%rbp),%rax\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "ss := []string{S}\nfor i := 0; i < len(S); i++ {\n\tif S[i] < '0' || S[i] > '9' {\n\t\tfor _, s := range ss {\n\t\t\tb := []byte(s)\n\t\t\tletterCase(b, i)\n\t\t\tss = append(ss, string(b))\n\t\t}\n\t}\n}\nreturn ss"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L31\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L31:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-168(%rbp)\nmovq $0,-56(%rbp)\n.LBB2:\nmovq -168(%rbp),%rax\nleaq <1>(%rax),%rdx\nleaq -160(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem1012.convert>\nmovq -152(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $0,-24(%rbp)\n.LBB3:\nmovq $1,-32(%rbp)\n.LBB4:\njmp .L2\n.L27:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq %rax,%rsi\nmovl $9,%edi\ncall <go.problem1012.count>\nmovq %rax,%rdx\nmovq %rdx,%rax\nsalq $3,%rax\naddq %rdx,%rax\naddq %rax,-24(%rbp)\n.LBE6:\n.LBB7:\naddq $1,-32(%rbp)\n.L2:\n.LBE7:\nmovq -32(%rbp),%rax\ncmpq -64(%rbp),%rax\njl .L27\n.LBE4:\n.LBE3:\nmovl $0,%edx\nmovl $10,%esi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,-72(%rbp)\n.LBB8:\nmovq $0,-40(%rbp)\n.LBB9:\njmp .L5\n.L30:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\nmovq $0,-48(%rbp)\n.LBB12:\ncmpq $0,-40(%rbp)\njne .L7\n.LBB13:\nmovq $1,-48(%rbp)\n.LBE13:\n.LBE12:\n.LBB14:\n.LBB15:\njmp .L7\n.L28:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -48(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq -88(%rbp),%rax\nmovq (%rax),%rdx\nmovq -72(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovzbl (%rax),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L8\n.LBB19:\nmovq -64(%rbp),%rax\nsubq -40(%rbp),%rax\nleaq -1(%rax),%rdx\nmovl $9,%eax\nsubq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem1012.count>\naddq %rax,-24(%rbp)\n.L8:\n.LBE19:\n.LBE18:\n.LBE17:\n.LBB20:\naddq $1,-48(%rbp)\n.L7:\n.LBE20:\nmovq -152(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L9\ncmpq %rax,-40(%rbp)\njl .L22\n.L9:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq -160(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-48(%rbp)\njl .L28\n.LBE15:\n.LBE14:\n.LBB21:\nmovq -152(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L13\ncmpq %rax,-40(%rbp)\njl .L24\n.L13:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq -160(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-80(%rbp)\nleaq -80(%rbp),%rax\nmovq (%rax),%rdx\nmovq -72(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovzbl (%rax),%eax\ntestb %al,%al\njne .L29\n.LBE21:\n.LBB23:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -40(%rbp),%rax\nmovq -120(%rbp),%rdx\ntestq %rax,%rax\njs .L17\ncmpq %rdx,%rax\njl .L25\n.L17:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq -128(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-96(%rbp)\nmovl $1,%ebx\nleaq -96(%rbp),%rax\nmovq (%rax),%rdx\nmovq -72(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovb %bl,(%rax)\n.LBE23:\n.LBE11:\n.LBB25:\naddq $1,-40(%rbp)\n.L5:\n.LBE25:\nmovq -40(%rbp),%rax\ncmpq -64(%rbp),%rax\njl .L30\njmp .L16\n.L29:\n.LBB26:\n.LBB24:\n.LBB22:\nnop\n.L16:\n.LBE22:\n.LBE24:\n.LBE26:\n.LBE9:\n.LBE8:\n.LBB27:\nmovq -168(%rbp),%rax\nsubq -24(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\n.LBE27:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "digits := convert(N + 1)\nbits := len(digits)\nnoRepeat := 0\nfor b := 1; b < bits; b++ {\n\tnoRepeat += 9 * count(9, b-1)\n}\nhasSeen := make(map[int]bool, 10)\nfor b := 0; b < bits; b++ {\n\td := 0\n\tif b == 0 {\n\t\td = 1\n\t}\n\tfor ; d < digits[b]; d++ {\n\t\tif !hasSeen[d] {\n\t\t\tnoRepeat += count(9-b, bits-b-1)\n\t\t}\n\t}\n\tif hasSeen[digits[b]] {\n\t\tbreak\n\t}\n\thasSeen[digits[b]] = true\n}\nreturn N - noRepeat"}
{"src": "cmpq %fs:112,%rsp\njnb .L491\nmovl $72,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL37:\nret\n.L491:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $40,%rsp\nmovq $0,-48(%rbp)\n.LBB363:\nmovl $1000,%edi\ncall <go.lrucache.NewLRUCache>\nmovq %rax,-56(%rbp)\n.LBB364:\nmovq $0,-40(%rbp)\n.LBB365:\njmp .L485\n.L490:\n.LBB366:\nnop\n.LBE366:\n.LBB367:\nmovl $2,%edi\ncall <go.lrucache.randomString>\nleaq <string..d>(%rip),%r12\nleaq <go..C436>(%rip),%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rsi,%rdi\nmovq %rbx,%r8\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.lrucache.LRUCache.Set>\naddq $32,%rsp\n.LBE367:\n.LBB368:\naddq $1,-40(%rbp)\n.L485:\n.LBE368:\ncmpq $999,-40(%rbp)\njle .L490\n.LBE365:\n.LBE364:\n.LBB369:\nmovq -56(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.LBE369:\n.LBE363:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "b := NewLRUCache(1000)\nfor i := 0; i < 1000; i++ {\n\tb.Set(randomString(2), \"STR\", expire)\n}\nreturn b"}
{"src": ".LFB40:\nleaq -680(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L461\nmovl $680,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL48:\nret\n.L461:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $632,%rsp\nmovq %rdi,-360(%rbp)\nleaq <go.Solution.IntMaxHeap..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-352(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L452\n.LBB306:\nmovq -352(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE306:\njmp .L453\n.L452:\n.LBB307:\nmovq -352(%rbp),%rcx\nleaq -336(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <go.Solution.IntMaxHeap..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L453:\n.LBE307:\nmovq -352(%rbp),%rax\nmovq %rax,-56(%rbp)\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.Solution.IntMaxHeap>(%rip),%r12\nmovq -56(%rbp),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Init@PLT>\nleaq <int..d>(%rip),%r13\nmovq %r13,-656(%rbp)\nleaq <go..C240>(%rip),%rax\nmovq %rax,-648(%rbp)\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.Solution.IntMaxHeap>(%rip),%r14\nmovq -56(%rbp),%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -656(%rbp),%rdx\nmovq -648(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nmovq %r13,%r15\nmovq %r15,-640(%rbp)\nleaq <go..C241>(%rip),%rax\nmovq %rax,-632(%rbp)\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.Solution.IntMaxHeap>(%rip),%r14\nmovq %r14,-624(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -640(%rbp),%rdx\nmovq -632(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nmovq %r15,-608(%rbp)\nleaq <go..C242>(%rip),%rax\nmovq %rax,-600(%rbp)\nmovq %r14,-592(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-584(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -608(%rbp),%rdx\nmovq -600(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nmovq %r15,-576(%rbp)\nleaq <go..C243>(%rip),%rax\nmovq %rax,-568(%rbp)\nmovq %r14,-560(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -576(%rbp),%rdx\nmovq -568(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nmovq %r15,-544(%rbp)\nleaq <go..C244>(%rip),%rax\nmovq %rax,-536(%rbp)\nmovq %r14,-528(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-520(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -544(%rbp),%rdx\nmovq -536(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nmovq %r15,-512(%rbp)\nleaq <go..C245>(%rip),%rax\nmovq %rax,-504(%rbp)\nmovq %r14,-496(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-488(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -512(%rbp),%rdx\nmovq -504(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nmovq %r15,-480(%rbp)\nleaq <go..C246>(%rip),%rax\nmovq %rax,-472(%rbp)\nmovq %r14,-464(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -480(%rbp),%rdx\nmovq -472(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nmovq %r15,-448(%rbp)\nleaq <go..C247>(%rip),%rax\nmovq %rax,-440(%rbp)\nmovq %r14,-432(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-424(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -448(%rbp),%rdx\nmovq -440(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\nleaq <go.Solution.IntMaxHeap..d>(%rip),%rax\nmovq %rax,-672(%rbp)\nleaq <go.Solution.IntMaxHeap..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -56(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-256(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L454\n.LBB308:\nmovq -280(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -256(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE308:\njmp .L455\n.L454:\n.LBB309:\nmovq -280(%rbp),%rax\nleaq -272(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.Solution.IntMaxHeap..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L455:\n.LBE309:\nmovq -280(%rbp),%rax\nmovq %rax,-664(%rbp)\nmovdqa -672(%rbp),%xmm0\nmovups %xmm0,-240(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nleaq <.LC104>(%rip),%rax\nmovq %rax,-416(%rbp)\nmovq $12,-408(%rbp)\nleaq -144(%rbp),%rax\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-288(%rbp)\n.LBB310:\n.LBB311:\njmp .L456\n.L460:\n.LBB312:\nnop\n.LBE312:\n.LBB313:\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.Solution.IntMaxHeap>(%rip),%rax\nmovq %rax,-400(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-392(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Pop@PLT>\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq <.LC105>(%rip),%rax\nmovq %rax,-384(%rbp)\nmovq $3,-376(%rbp)\nleaq -80(%rbp),%rax\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-208(%rbp)\n.L456:\n.LBE313:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.Solution.IntMaxHeap.Len>\ntestq %rax,%rax\njg .L460\n.LBE311:\n.LBE310:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "h := &IntMaxHeap{}\nheap.Init(h)\nheap.Push(h, 7)\nheap.Push(h, 3)\nheap.Push(h, 2)\nheap.Push(h, 1)\nheap.Push(h, 5)\nheap.Push(h, 5)\nheap.Push(h, 6)\nheap.Push(h, 7)\nfmt.Printf(\"STR\", (*h))\nfor h.Len() > 0 {\n\tfmt.Printf(\"STR\", heap.Pop(h))\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L32\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\n.LBB28:\n.LBB29:\nmovl $0,%edx\nmovl $0,%esi\nleaq <go.Solution..go.Solution.seg..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-16(%rbp)\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -16(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE29:\n.LBE28:\nmovq -72(%rbp),%rax\nleave\nret", "tgt": "return MyCalendar{\n\tbooks: make([]seg, 0),\n}"}
{"src": "leaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L80\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L80:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-280(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\n.LBB48:\nleaq <bytes.Buffer..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nmovl $123,%esi\nmovq %rax,%rdi\ncall <bytes.Buffer.WriteByte@PLT>\n.LBB49:\nmovq $0,-72(%rbp)\nmovq $0,-80(%rbp)\n.LBB50:\nmovq -280(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-240(%rbp)\n.LBB51:\n.LBB52:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovl $0,%ebx\n.LBE52:\njmp .L60\n.L79:\n.LBB53:\nnop\n.LBE53:\n.LBB54:\n.LBB55:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L61\ncmpq %rax,%rbx\njge .L61\nmovq -224(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE55:\n.LBB56:\nmovq %rbx,-72(%rbp)\nmovq %rax,-80(%rbp)\n.LBE56:\n.LBB57:\n.LBB58:\ncmpq $0,-80(%rbp)\nje .L77\njmp .L74\n.L61:\n.LBE58:\n.LBE57:\n.LBB70:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L74:\n.LBE70:\n.LBB71:\n.LBB60:\nmovq $0,-56(%rbp)\n.LBB61:\njmp .L65\n.L78:\n.LBB62:\nnop\n.LBE62:\n.LBB63:\n.LBB64:\nmovq -56(%rbp),%rax\ncmpq $63,%rax\nja .L66\nmovl $1,%edx\nmovl %eax,%ecx\nsalq %cl,%rdx\nmovq %rdx,%rax\njmp .L67\n.L66:\nmovl $0,%eax\n.L67:\nandq -80(%rbp),%rax\ntestq %rax,%rax\nje .L68\n.LBB65:\n.LBB66:\nmovq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <bytes.Buffer.Len@PLT>\ncmpq $1,%rax\njle .L69\n.LBB67:\nmovq -64(%rbp),%rax\nmovl $32,%esi\nmovq %rax,%rdi\ncall <bytes.Buffer.WriteByte@PLT>\n.L69:\n.LBE67:\n.LBE66:\nleaq <int..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -72(%rbp),%rax\nsalq $6,%rax\nmovq %rax,%rcx\nmovq -168(%rbp),%rax\nmovq -56(%rbp),%rdx\naddq %rcx,%rdx\nmovq %rdx,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,-296(%rbp)\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-160(%rbp)\nleaq -160(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $1,-136(%rbp)\nmovq $1,-128(%rbp)\nleaq <.LC27>(%rip),%r14\nmovl $2,%r15d\nleaq <pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer>(%rip),%r12\nmovq -64(%rbp),%r13\nleaq -112(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%r10\nmovq %r12,%r8\nmovq %r13,%r9\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r8,%r9\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %r10,%r8\nmovq %r9,%rsi\nmovq %rax,%rdi\ncall <fmt.Fprintf@PLT>\naddq $32,%rsp\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-176(%rbp)\n.L68:\n.LBE65:\n.LBE64:\n.LBE63:\n.LBB68:\naddq $1,-56(%rbp)\n.L65:\n.LBE68:\ncmpq $63,-56(%rbp)\njle .L78\njmp .L64\n.L77:\n.LBE61:\n.LBE60:\n.LBB69:\n.LBB59:\nnop\n.L64:\n.LBE59:\n.LBE69:\n.LBE71:\n.LBE54:\n.LBB72:\naddq $1,%rbx\n.L60:\n.LBE72:\ncmpq -288(%rbp),%rbx\njl .L79\n.LBE51:\n.LBE50:\n.LBE49:\nmovq -64(%rbp),%rax\nmovl $125,%esi\nmovq %rax,%rdi\ncall <bytes.Buffer.WriteByte@PLT>\n.LBB73:\nmovq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <bytes.Buffer.String@PLT>\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\n.LBE73:\n.LBE48:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var buf bytes.Buffer\nbuf.WriteByte(\"STR\")\nfor i, word := range s.words {\n\tif word == 0 {\n\t\tcontinue\n\t}\n\tfor j := 0; j < 64; j++ {\n\t\tif word&(1<<uint(j)) != 0 {\n\t\t\tif buf.Len() > len(\"STR\") {\n\t\t\t\tbuf.WriteByte(\"STR\")\n\t\t\t}\n\t\t\tfmt.Fprintf(&buf, \"STR\", 64*i+j)\n\t\t}\n\t}\n}\nbuf.WriteByte(\"STR\")\nreturn buf.String()"}
{"src": ".LFB0:\nleaq -760(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $760,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $712,%rsp\nmovq $5,-656(%rbp)\nmovq $1,-648(%rbp)\nmovq $9,-640(%rbp)\nmovq $11,-632(%rbp)\nmovq $2,-624(%rbp)\nmovq $4,-616(%rbp)\nmovq $8,-608(%rbp)\nmovq $10,-600(%rbp)\nmovq $13,-592(%rbp)\nmovq $3,-584(%rbp)\nmovq $6,-576(%rbp)\nmovq $7,-568(%rbp)\nmovq $15,-560(%rbp)\nmovq $14,-552(%rbp)\nmovq $12,-544(%rbp)\nmovq $16,-536(%rbp)\nleaq -656(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $4,-520(%rbp)\nmovq $4,-512(%rbp)\nleaq -624(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq $4,-496(%rbp)\nmovq $4,-488(%rbp)\nleaq -592(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $4,-472(%rbp)\nmovq $4,-464(%rbp)\nleaq -560(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovq $4,-448(%rbp)\nmovq $4,-440(%rbp)\nleaq -528(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $4,-680(%rbp)\nmovq $4,-672(%rbp)\nleaq -432(%rbp),%rax\nsubq $8,%rsp\npushq -672(%rbp)\npushq -680(%rbp)\npushq -688(%rbp)\nmovq %rax,%rdi\ncall <main.rotate>\naddq $32,%rsp\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-672(%rbp)\n.LBB2:\nmovq $0,-720(%rbp)\nmovq $0,-712(%rbp)\nmovq $0,-704(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r13\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -360(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -368(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-384(%rbp)\n.LBE8:\n.LBB9:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-704(%rbp)\n.LBE9:\n.LBB10:\n.LBB11:\nmovq $0,-56(%rbp)\n.LBB12:\n.LBB13:\n.LBB14:\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -704(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%rax\nmovq %rax,-744(%rbp)\nmovl $0,%r12d\n.LBE14:\njmp .L4\n.L3:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB26:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\n.LBE26:\n.LBB27:\n.LBB25:\n.LBB24:\n.LBB23:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\n.LBB17:\nmovq -296(%rbp),%rax\ntestq %r12,%r12\njs .L5\ncmpq %rax,%r12\njge .L5\nmovq -304(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE17:\n.LBB18:\nmovq %rax,-56(%rbp)\n.LBE18:\n.LBB19:\nleaq <int..d>(%rip),%rax\nmovq %rax,-736(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -248(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -248(%rbp),%rax\nmovq %rax,-728(%rbp)\nleaq <string..d>(%rip),%r14\nleaq <go..C11>(%rip),%r15\nmovdqa -736(%rbp),%xmm0\nmovups %xmm0,-240(%rbp)\nmovq %r14,-224(%rbp)\nmovq %r15,-216(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq -144(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Print@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-256(%rbp)\n.LBE19:\n.LBE16:\n.LBB21:\naddq $1,%r12\njmp .L4\n.L5:\n.LBE21:\n.LBB22:\n.LBB20:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE20:\n.LBE22:\ncmpq -744(%rbp),%r12\njl .L12\n.LBE23:\n.LBE24:\n.LBE25:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE27:\n.LBE7:\n.LBB28:\naddq $1,%rbx\n.L2:\n.LBE28:\ncmpq %r13,%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "matrix := [][]int{\n\t{5, 1, 9, 11},\n\t{2, 4, 8, 10},\n\t{13, 3, 6, 7},\n\t{15, 14, 12, 16},\n}\nmatrix = rotate(matrix)\nfor _, nums := range matrix {\n\tfor _, num := range nums {\n\t\tfmt.Print(num, \"STR\")\n\t}\n\tfmt.Println()\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\ncall <container..z2flist.New@PLT>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return MyQueue{\n\tlist: list.New(),\n}"}
{"src": ".LFB10:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\nleaq -64(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day93.sizeOfLargestBST>\n.LBB3:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "res := sizeOfLargestBST(tree)\nreturn res.AnsPtr"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $120,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $112,%rsp\nmovq %rdi,-104(%rbp)\nmovq %rsi,-112(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-16(%rbp)\nleaq -96(%rbp),%rdx\nmovq -112(%rbp),%rax\npushq -16(%rbp)\npushq -24(%rbp)\npushq -32(%rbp)\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovl $0,%esi\nmovq %rax,%rdi\ncall <main.dfs>\naddq $48,%rsp\n.LBB3:\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -104(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\n.LBE2:\nmovq -104(%rbp),%rax\nleave\nret", "tgt": "sort.Ints(candidates)\nvar res [][]int\ndfs(candidates, nil, target, 0, &res)\nreturn res"}
{"src": ".LFB1:\nleaq -424(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L18\nmovl $424,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $376,%rsp\nmovq %rdi,-376(%rbp)\nleaq <.LC15>(%rip),%rcx\nmovl $6,%ebx\nmovq %rcx,-336(%rbp)\nmovq %rbx,-328(%rbp)\nmovb $1,-320(%rbp)\nleaq <.LC16>(%rip),%rax\nmovl $6,%edx\nmovq %rax,-312(%rbp)\nmovq %rdx,-304(%rbp)\nmovb $0,-296(%rbp)\n.LBB6:\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq $2,-384(%rbp)\nmovl $0,%ebx\n.LBE9:\njmp .L6\n.L17:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\ntestq %rbx,%rbx\njs .L7\ncmpq $1,%rbx\njg .L7\nmovq %rbx,%rax\naddq %rax,%rax\naddq %rbx,%rax\nsalq $3,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -208(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-272(%rbp)\n.LBE12:\n.LBB13:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE13:\n.LBB14:\nmovq -368(%rbp),%rdx\nmovq -360(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem551.checkRecord>\nmovb %al,-49(%rbp)\n.LBB15:\nmovzbl -352(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L8\njmp .L9\n.L7:\n.LBE15:\n.LBE14:\n.LBB22:\nmovl $2,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE22:\n.LBB23:\n.LBB21:\n.LBB16:\nleaq <string..d>(%rip),%rax\nmovq %rax,-416(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L10\n.LBB17:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L11\n.L10:\n.LBB18:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L11:\n.LBE18:\nmovq -184(%rbp),%rax\nmovq %rax,-408(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-392(%rbp)\nleaq <bool..d>(%rip),%r14\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -352(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -416(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -400(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB19:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE19:\njmp .L13\n.L12:\n.LBB20:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L13:\n.LBE20:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC17>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -376(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L9:\n.LBE16:\n.LBE21:\n.LBE23:\n.LBE11:\n.LBB24:\naddq $1,%rbx\n.L6:\n.LBE24:\ncmpq -384(%rbp),%rbx\njl .L17\n.LBE8:\n.LBE7:\n.LBE6:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: false,\n\t},\n}\nfor _, tt := range tests {\n\tgot := checkRecord(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L28\nmovl $40,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L28:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\n.LBB2:\nmovq $1,-8(%rbp)\n.LBB3:\njmp .L2\n.L27:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L3\ncmpq %rax,-8(%rbp)\njl .L19\n.L3:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-24(%rbp)\nmovq -8(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBB6:\n.LBB7:\njmp .L5\n.L26:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -16(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L6\ncmpq %rdx,%rax\njl .L20\n.L6:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq <24>(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L8\ncmpq %rdx,-16(%rbp)\njl .L21\n.L8:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq <16>(%rbp),%rcx\nmovq -16(%rbp),%rdx\nsalq $3,%rdx\naddq %rdx,%rcx\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rax,%rdx\nmovq (%rcx),%rax\nmovq %rax,(%rdx)\nsubq $1,-16(%rbp)\n.L5:\n.LBE9:\n.LBB10:\nmovq -16(%rbp),%rax\nnotq %rax\nshrq $63,%rax\ntestb %al,%al\nje .L10\n.LBB11:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L11\ncmpq %rax,-16(%rbp)\njl .L22\n.L11:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-24(%rbp)\nsetl %al\n.L10:\n.LBE11:\n.LBE10:\ntestb %al,%al\njne .L26\n.LBE7:\n.LBE6:\nmovq -16(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L15\ncmpq %rdx,%rax\njl .L24\n.L15:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rax,%rdx\nmovq -24(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE5:\n.LBB12:\naddq $1,-8(%rbp)\n.L2:\n.LBE12:\nmovq <24>(%rbp),%rax\ncmpq %rax,-8(%rbp)\njl .L27\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "for i := 1; i < len(arr); i++ {\n\tvalue := arr[i]\n\tj := i - 1\n\tfor j >= 0 && arr[j] > value {\n\t\tarr[j+1] = arr[j]\n\t\tj = j - 1\n\t}\n\tarr[j+1] = value\n}"}
{"src": ".LFB0:\nleaq -328(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $328,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $280,%rsp\nmovq %rdi,-280(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\nmovb $0,-49(%rbp)\nmovq $1,-240(%rbp)\nmovq $2,-232(%rbp)\nmovq $3,-224(%rbp)\nmovq $1,-216(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq $4,-264(%rbp)\nmovq $4,-256(%rbp)\nmovb $1,-49(%rbp)\n.LBB2:\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\ncall <go.leetcode.containsDuplicate>\naddq $32,%rsp\ncmpb %al,-49(%rbp)\nje .L2\n.LBB3:\nleaq <bool..d>(%rip),%rax\nmovq %rax,-320(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-208(%rbp)\nmovq -208(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -208(%rbp),%rax\nmovq %rax,-312(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovdqa -320(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L3\n.LBB4:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE4:\njmp .L4\n.L3:\n.LBB5:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L4:\n.LBE5:\nmovq -200(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq <.LC21>(%rip),%r14\nmovl $15,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -280(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L2:\n.LBE3:\n.LBE2:\nmovq $1,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $3,-160(%rbp)\nmovq $4,-152(%rbp)\nleaq -176(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq $4,-264(%rbp)\nmovq $4,-256(%rbp)\nmovb $0,-49(%rbp)\n.LBB6:\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\ncall <go.leetcode.containsDuplicate>\naddq $32,%rsp\ncmpb %al,-49(%rbp)\nje .L1\n.LBB7:\nleaq <bool..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -304(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB8:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE8:\njmp .L7\n.L6:\n.LBB9:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE9:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $1,-72(%rbp)\nmovq $1,-64(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $15,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -280(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L1:\n.LBE7:\n.LBE6:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var nums []int\nvar ret bool\nnums = []int{1, 2, 3, 1}\nret = true\nif ret != containsDuplicate(nums) {\n\tt.Fatalf(\"STR\", ret)\n}\nnums = []int{1, 2, 3, 4}\nret = false\nif ret != containsDuplicate(nums) {\n\tt.Fatalf(\"STR\", ret)\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L17\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L17:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $56,%rsp\nmovq %rdi,-56(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\nmovl $1,%edx\n.LBB5:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsete %al\ntestb %al,%al\nje .L2\n.LBB6:\nmovq -56(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\nsete %al\n.L2:\n.LBE6:\n.LBE5:\ncmpb %al,%dl\njne .L14\n.LBB7:\n.LBB8:\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L5\n.L14:\n.LBE8:\n.LBE7:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L6\n.LBB11:\nmovq -56(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\nsetne %al\n.L6:\n.LBE11:\n.LBE10:\ncmpb %al,%dl\njne .L15\n.LBB12:\nmovq -56(%rbp),%rax\nmovq (%rax),%rbx\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,%rdi\ncall <go.day135.MinPathSum>\naddq %rbx,%rax\nmovq %rax,-32(%rbp)\nmovq -56(%rbp),%rax\nmovq (%rax),%rbx\nmovq -56(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,%rdi\ncall <go.day135.MinPathSum>\naddq %rbx,%rax\nmovq %rax,-40(%rbp)\n.LBB13:\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day135.min>\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L5\n.L15:\n.LBE13:\n.LBE12:\n.LBB14:\nnop\n.LBE14:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsetne %al\ncmpb %al,%dl\njne .L16\n.LBB15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,%rdi\ncall <go.day135.MinPathSum>\nmovq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\naddq %rdx,%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L5\n.L16:\n.LBE16:\n.LBE15:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -56(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,%rdi\ncall <go.day135.MinPathSum>\nmovq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\naddq %rdx,%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L5:\n.LBE19:\n.LBE18:\n.LBE4:\n.LBE3:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "switch {\ncase head.Left == nil && head.Right == nil:\n\treturn head.Value\ncase head.Left != nil && head.Right != nil:\n\tleft := head.Value + MinPathSum(head.Left)\n\tright := head.Value + MinPathSum(head.Right)\n\treturn min(left, right)\ncase head.Left != nil:\n\treturn head.Value + MinPathSum(head.Left)\ndefault:\n\treturn head.Value + MinPathSum(head.Right)\n}"}
{"src": ".LFB0:\nleaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L25\nmovl $520,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L25:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nmovq %rdi,-504(%rbp)\nmovq $0,-400(%rbp)\nmovq $0,-392(%rbp)\nmovq $0,-384(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\ncmpq $63,%rax\nja .L2\nmovl $1,%edx\nmovq %rdx,%rbx\nmovl %eax,%ecx\nsalq %cl,%rbx\njmp .L3\n.L2:\nmovl $0,%ebx\n.L3:\nmovq %rbx,%rdx\nmovl $1,%esi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-432(%rbp)\nmovq $1,-424(%rbp)\nmovq %rbx,-416(%rbp)\n.LBB3:\nmovq $0,-56(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r15\nmovl $0,%ebx\n.LBE6:\njmp .L4\n.L24:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -360(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -368(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-56(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\n.LBB13:\n.LBB14:\n.LBB15:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovl $0,%r12d\n.LBE15:\njmp .L6\n.L5:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB31:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\n.LBE31:\n.LBB32:\n.LBB30:\n.LBB29:\n.LBB28:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -296(%rbp),%rax\ntestq %r12,%r12\njs .L7\ncmpq %rax,%r12\njge .L7\nmovq -304(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-320(%rbp)\n.LBE18:\n.LBB19:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-448(%rbp)\n.LBE19:\n.LBB20:\nmovq -456(%rbp),%r13\nmovq -456(%rbp),%rax\nleaq <1>(%rax),%r14\nmovq %r14,%rdx\nmovq %r13,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-496(%rbp)\nmovq %r13,-488(%rbp)\nmovq %r14,-480(%rbp)\nmovq -488(%rbp),%rax\nmovq -456(%rbp),%rdx\ncmpq %rax,%rdx\ncmovle %rdx,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -464(%rbp),%rcx\nmovq -496(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memmove@PLT>\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r13\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r14\nleaq <1>(%r14),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L8\njmp .L20\n.L7:\n.LBE20:\n.LBB25:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE25:\n.LBB26:\nmovq -208(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-192(%rbp)\njmp .L10\n.L20:\nmovq -208(%rbp),%rcx\nmovq -192(%rbp),%rdx\nmovq %rcx,-208(%rbp)\nmovq %rax,-200(%rbp)\nmovq %rdx,-192(%rbp)\n.L10:\nmovq -208(%rbp),%rax\nmovq %r14,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <1>(%r13),%rax\nmovq -224(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L11\n.LBB21:\nmovq -240(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r13,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-416(%rbp)\n.LBE21:\njmp .L12\n.L11:\n.LBB22:\nmovq -240(%rbp),%rcx\nmovq -224(%rbp),%rdx\nmovq %rcx,-432(%rbp)\nmovq %rax,-424(%rbp)\nmovq %rdx,-416(%rbp)\n.L12:\n.LBE22:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rdx\nmovq %r13,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nmovq -160(%rbp),%rdx\nmovq %rdx,-128(%rbp)\nmovq -136(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -128(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L13\n.LBB23:\nmovq -144(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L14\n.L13:\n.LBE23:\n.LBB24:\nmovq -144(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L14:\n.LBE24:\n.LBE26:\n.LBE17:\n.LBB27:\naddq $1,%r12\n.L6:\n.LBE27:\ncmpq -512(%rbp),%r12\njl .L23\n.LBE28:\n.LBE29:\n.LBE30:\n.LBE32:\n.LBE8:\n.LBB33:\naddq $1,%rbx\n.L4:\n.LBE33:\ncmpq %r15,%rbx\njl .L24\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB34:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -504(%rbp),%rcx\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -384(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE34:\n.LBE2:\nmovq -504(%rbp),%rax\naddq $472,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "sets := make([][]int, 1, 1<<uint(len(nums)))\nfor _, num := range nums {\n\tfor _, set := range sets {\n\t\ts := make([]int, len(set), len(set)+1)\n\t\tcopy(s, set)\n\t\tsets = append(sets, append(s, num))\n\t}\n}\nreturn sets"}
{"src": ".LFB19:\ncmpq %fs:112,%rsp\njnb .L347\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL20:\nret\n.L347:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-168(%rbp)\nmovq $100,-56(%rbp)\n.LBB256:\ncall <main.p33>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\ncmpq -56(%rbp),%rax\nje .L343\n.LBB257:\nleaq <int..d>(%rip),%rax\nmovq %rax,-192(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-184(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -192(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L345\n.LBB258:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE258:\njmp .L346\n.L345:\n.LBB259:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L346:\n.LBE259:\nmovq -136(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\nleaq <.LC56>(%rip),%r12\nmovl $24,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -168(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L343:\n.LBE257:\n.LBE256:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "out := 100\nif x := p33(); x != out {\n\tt.Errorf(\"STR\", x, out)\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L12\nmovl $216,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $192,%rsp\nmovb $0,-17(%rbp)\n.LBB2:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nleaq -176(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $2,-56(%rbp)\nmovq $2,-48(%rbp)\npushq <56>(%rbp)\npushq <48>(%rbp)\npushq <40>(%rbp)\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\ncall <go.problem0789.countSteps>\naddq $48,%rsp\nmovq %rax,-32(%rbp)\n.LBB3:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L11:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -120(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -128(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-144(%rbp)\n.LBE9:\n.LBB10:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\npushq <56>(%rbp)\npushq <48>(%rbp)\npushq <40>(%rbp)\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\ncall <go.problem0789.countSteps>\naddq $48,%rsp\ncmpq %rax,-32(%rbp)\njge .L4\njmp .L9\n.L3:\n.LBE12:\n.LBE11:\n.LBB16:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE16:\n.LBB17:\n.LBB15:\n.LBB13:\n.LBB14:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L6\n.L9:\n.LBE14:\n.LBE13:\n.LBE15:\n.LBE17:\n.LBE8:\n.LBB18:\naddq $1,%rbx\n.L2:\n.LBE18:\ncmpq %r12,%rbx\njl .L11\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB19:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L6:\n.LBE19:\n.LBE2:\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "steps := countSteps([]int{0, 0}, target)\nfor _, g := range ghosts {\n\tif steps >= countSteps(g, target) {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": ".LFB4:\nleaq -504(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L79\nmovl $504,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L79:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $456,%rsp\nmovq %rdi,-424(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB55:\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\nmovq $0,-400(%rbp)\nmovq $0,-392(%rbp)\n.LBB56:\n.LBB57:\n.LBB58:\nmovq <go.day92.testcases>(%rip),%rax\nmovq <8+go.day92.testcases>(%rip),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16+go.day92.testcases>(%rip),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%r13\nmovl $0,%r12d\n.LBE58:\njmp .L60\n.L78:\n.LBB59:\nnop\n.LBE59:\n.LBB60:\n.LBB61:\nmovq -312(%rbp),%rax\ntestq %r12,%r12\njs .L61\ncmpq %rax,%r12\njge .L61\nmovq -320(%rbp),%rax\nmovq %r12,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\n.LBE61:\n.LBB62:\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\n.LBE62:\n.LBB63:\n.LBB64:\nmovq -416(%rbp),%rdx\nleaq -384(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day92.CourseOrder>\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-464(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -408(%rbp),%rax\nmovq -400(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -392(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L62\njmp .L76\n.L61:\n.LBE64:\n.LBE63:\n.LBB77:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\n.LBE77:\n.LBB78:\n.LBB76:\n.LBB65:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE65:\njmp .L64\n.L76:\n.LBB66:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L64:\n.LBE66:\nmovq -216(%rbp),%rax\nmovq %rax,-456(%rbp)\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-448(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L65\n.LBB67:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE67:\njmp .L66\n.L65:\n.LBB68:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L66:\n.LBE68:\nmovq -248(%rbp),%rax\nmovq %rax,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -464(%rbp),%rdx\nmovq -456(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L67\n.LBB69:\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -408(%rbp),%rax\nmovq -400(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -392(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L68\n.LBB70:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE70:\njmp .L69\n.L68:\n.LBB71:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L69:\n.LBE71:\nmovq -184(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L70\n.LBB72:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE72:\njmp .L71\n.L70:\n.LBB73:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L71:\n.LBE73:\nmovq -152(%rbp),%rax\nmovq %rax,-472(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -496(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -480(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L72\n.LBB74:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE74:\njmp .L73\n.L72:\n.LBB75:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L73:\n.LBE75:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC35>(%rip),%r14\nmovl $18,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -424(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L67:\n.LBE69:\n.LBE76:\n.LBE78:\n.LBE60:\n.LBB79:\naddq $1,%r12\n.L60:\n.LBE79:\ncmpq %r13,%r12\njl .L78\n.LBE57:\n.LBE56:\n.LBE55:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := CourseOrder(tc.prereqs); !reflect.DeepEqual(result, tc.expected) {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L10\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\ncmpq $0,-24(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\ncmpq $0,-32(%rbp)\nsetle %al\n.L2:\n.LBE5:\n.LBE4:\ntestb %al,%al\nje .L3\n.LBB6:\n.LBB7:\nmovq $0,-16(%rbp)\nmovq -16(%rbp),%rax\njmp .L4\n.L3:\n.LBE7:\n.LBE6:\n.LBE3:\nmovq $0,-8(%rbp)\n.LBB8:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nje .L5\n.LBB9:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem54.kthNode>\nmovq %rax,-8(%rbp)\n.L5:\n.LBE9:\n.LBE8:\n.LBB10:\ncmpq $0,-8(%rbp)\njne .L6\n.LBB11:\n.LBB12:\ncmpq $1,-32(%rbp)\njne .L7\n.LBB13:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\n.LBE13:\njmp .L6\n.L7:\n.LBB14:\nsubq $1,-32(%rbp)\n.L6:\n.LBE14:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB15:\n.LBB16:\ncmpq $0,-8(%rbp)\nsete %al\ntestb %al,%al\nje .L8\n.LBB17:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\nsetne %al\n.L8:\n.LBE17:\n.LBE16:\ntestb %al,%al\nje .L9\n.LBB18:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem54.kthNode>\nmovq %rax,-8(%rbp)\n.L9:\n.LBE18:\n.LBE15:\n.LBB19:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.L4:\n.LBE19:\n.LBE2:\nleave\nret", "tgt": "if nil == root || k <= 0 {\n\treturn nil\n}\nvar target *BinaryTreeNode\nif root.left != nil {\n\ttarget = kthNode(root.left, k)\n}\nif target == nil {\n\tif 1 == k {\n\t\ttarget = root\n\t} else {\n\t\tk--\n\t}\n}\nif target == nil && root.right != nil {\n\ttarget = kthNode(root.right, k)\n}\nreturn target"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L2\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $200,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $1,-160(%rbp)\nmovq $2,-152(%rbp)\nleaq -176(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $4,-200(%rbp)\nmovq $4,-192(%rbp)\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\ncall <go.problem747.dominantIndex>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "nums := []int{0, 0, 1, 2}\nfmt.Println(dominantIndex(nums))"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L10\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq %rdx,-40(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-24(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\njle .L4\n.LBB7:\n.LBB8:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rcx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0669.trimBST>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L4:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB9:\nmovq -24(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\njge .L5\n.LBB10:\n.LBB11:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rcx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0669.trimBST>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L5:\n.LBE11:\n.LBE10:\n.LBE9:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rcx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0669.trimBST>\nmovq %rax,%rdx\nmovq -24(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L6\n.LBB12:\nmovq %rdx,(%rax)\n.LBE12:\njmp .L7\n.L6:\n.LBB13:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L7:\n.LBE13:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rcx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0669.trimBST>\nmovq %rax,%rdx\nmovq -24(%rbp),%rax\naddq $16,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L8\n.LBB14:\nmovq %rdx,(%rax)\n.LBE14:\njmp .L9\n.L8:\n.LBB15:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L9:\n.LBE15:\n.LBB16:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L3:\n.LBE16:\n.LBE2:\nleave\nret", "tgt": "if root == nil {\n\treturn nil\n}\nif root.Val < L {\n\treturn trimBST(root.Right, L, R)\n}\nif root.Val > R {\n\treturn trimBST(root.Left, L, R)\n}\nroot.Left = trimBST(root.Left, L, R)\nroot.Right = trimBST(root.Right, L, R)\nreturn root"}
{"src": ".LFB353:\nleaq -424(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L9336\nmovl $424,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL440:\nret\n.L9336:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $400,%rsp\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB7478:\nmovq $0,-24(%rbp)\n.LBB7479:\njmp .L9282\n.L9335:\n.LBB7480:\nnop\n.LBE7480:\n.LBB7481:\n.LBB7482:\nmovq -24(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB7483:\njmp .L9283\n.L9334:\n.LBB7484:\nnop\n.LBE7484:\n.LBB7485:\n.LBB7486:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq -24(%rbp),%rax\nmovq -408(%rbp),%rdx\ntestq %rax,%rax\njs .L9284\ncmpq %rdx,%rax\njl .L9320\n.L9284:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9320:\nmovq -416(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-368(%rbp)\nmovq -32(%rbp),%rcx\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -32(%rbp),%rax\nmovq -344(%rbp),%rdx\ntestq %rax,%rax\njs .L9286\ncmpq %rdx,%rax\njl .L9321\n.L9286:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9321:\nmovq -352(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rsi\nmovq (%rsi),%rax\nmovq <8>(%rsi),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16>(%rsi),%rax\nmovq %rax,-304(%rbp)\nmovq -40(%rbp),%rax\nsubq -24(%rbp),%rax\nleaq -1(%rax),%r8\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -40(%rbp),%rax\nsubq -24(%rbp),%rax\nsubq $1,%rax\nmovq -280(%rbp),%rdx\ntestq %rax,%rax\njs .L9288\ncmpq %rdx,%rax\njl .L9322\n.L9288:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9322:\nmovq -288(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rsi\nmovq (%rsi),%rax\nmovq <8>(%rsi),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16>(%rsi),%rax\nmovq %rax,-240(%rbp)\nmovq -40(%rbp),%rax\nsubq -32(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -40(%rbp),%rax\nsubq -32(%rbp),%rax\nsubq $1,%rax\nmovq -216(%rbp),%rdx\ntestq %rax,%rax\njs .L9290\ncmpq %rdx,%rax\njl .L9323\n.L9290:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9323:\nmovq -224(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rsi\nmovq (%rsi),%rax\nmovq <8>(%rsi),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rsi),%rax\nmovq %rax,-176(%rbp)\nmovq -24(%rbp),%rdx\nmovq -40(%rbp),%rax\nsubq -32(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rsi\ntestq %rax,%rax\njs .L9292\ncmpq %rsi,%rax\njl .L9324\n.L9292:\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9324:\nmovq <16>(%rbp),%rsi\nmovq %rax,%r9\nmovq %r9,%rax\naddq %rax,%rax\naddq %r9,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%r10\nmovq <8>(%rax),%r11\nmovq %r10,-160(%rbp)\nmovq %r11,-152(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L9294\ncmpq %rax,-24(%rbp)\njge .L9294\nmovq -160(%rbp),%rsi\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%r12\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njns .L9295\njmp .L9296\n.L9294:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9295:\ncmpq %rax,-24(%rbp)\njl .L9325\n.L9296:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9325:\nmovq <16>(%rbp),%r9\nmovq -24(%rbp),%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\naddq %r9,%rax\nmovq (%rax),%r10\nmovq <8>(%rax),%r11\nmovq %r10,-128(%rbp)\nmovq %r11,-120(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L9298\ncmpq %rax,-32(%rbp)\njge .L9298\nmovq -128(%rbp),%rsi\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njns .L9299\njmp .L9300\n.L9298:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9299:\ncmpq %rax,-32(%rbp)\njl .L9326\n.L9300:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9326:\nmovq <16>(%rbp),%r9\nmovq -32(%rbp),%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\naddq %r9,%rax\nmovq (%rax),%r10\nmovq <8>(%rax),%r11\nmovq %r10,-96(%rbp)\nmovq %r11,-88(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-80(%rbp)\nmovq -40(%rbp),%rax\nsubq -24(%rbp),%rax\nsubq $1,%rax\nmovq -88(%rbp),%rsi\ntestq %rax,%rax\njs .L9302\ncmpq %rsi,%rax\njge .L9302\nmovq -96(%rbp),%rsi\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%r9\nmovq -40(%rbp),%rax\nsubq -24(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rsi\ntestq %rax,%rax\njns .L9303\njmp .L9304\n.L9302:\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9303:\ncmpq %rsi,%rax\njl .L9327\n.L9304:\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9327:\nmovq <16>(%rbp),%rsi\nmovq %rax,%r10\nmovq %r10,%rax\naddq %rax,%rax\naddq %r10,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%r10\nmovq <8>(%rax),%r11\nmovq %r10,-64(%rbp)\nmovq %r11,-56(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-48(%rbp)\nmovq -40(%rbp),%rax\nsubq -32(%rbp),%rax\nsubq $1,%rax\nmovq -56(%rbp),%rsi\ntestq %rax,%rax\njs .L9306\ncmpq %rsi,%rax\njge .L9306\nmovq -64(%rbp),%rsi\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%rsi\nmovq -376(%rbp),%rax\ntestq %rcx,%rcx\njns .L9307\njmp .L9308\n.L9306:\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9307:\ncmpq %rax,%rcx\njl .L9328\n.L9308:\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9328:\nmovq -384(%rbp),%rax\nsalq $3,%rcx\naddq %rcx,%rax\nmovq %r12,(%rax)\nmovq -312(%rbp),%rax\ntestq %r8,%r8\njs .L9310\ncmpq %rax,%r8\njl .L9329\n.L9310:\nmovq %rax,%rsi\nmovq %r8,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9329:\nmovq -320(%rbp),%rax\nmovq %r8,%rcx\nsalq $3,%rcx\naddq %rcx,%rax\nmovq %rbx,(%rax)\nmovq -248(%rbp),%rax\ntestq %rdi,%rdi\njs .L9312\ncmpq %rax,%rdi\njl .L9330\n.L9312:\nmovq %rax,%rsi\ncall <runtime.goPanicIndex@PLT>\n.L9330:\nmovq -256(%rbp),%rax\nmovq %rdi,%rcx\nsalq $3,%rcx\naddq %rcx,%rax\nmovq %r9,(%rax)\nmovq -184(%rbp),%rax\ntestq %rdx,%rdx\njs .L9314\ncmpq %rax,%rdx\njl .L9331\n.L9314:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9331:\nmovq -192(%rbp),%rax\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE7486:\n.LBE7485:\n.LBB7487:\naddq $1,-32(%rbp)\n.L9283:\n.LBE7487:\nmovq -40(%rbp),%rax\nsubq -24(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-32(%rbp)\njl .L9334\n.LBE7483:\n.LBE7482:\n.LBE7481:\n.LBB7488:\naddq $1,-24(%rbp)\n.L9282:\n.LBE7488:\nmovq -24(%rbp),%rax\nleaq (%rax,%rax),%rdx\nmovq -40(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,%rdx\njl .L9335\n.LBE7479:\n.LBE7478:\naddq $400,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "length := len(matrix)\nfor i := 0; 2*i < length-1; i++ {\n\tfor j := i; j < length-i-1; j++ {\n\t\tmatrix[i][j], matrix[j][length-i-1], matrix[length-i-1][length-j-1], matrix[length-j-1][i] =\n\t\t\tmatrix[length-j-1][i], matrix[i][j], matrix[j][length-i-1], matrix[length-i-1][length-j-1]\n\t}\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L52\nmovl $104,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L52:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $72,%rsp\nmovq $0,-40(%rbp)\n.LBB40:\nmovq <48>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,<go.Solution.p>(%rip)\ncall <runtime.makemap_small@PLT>\nmovq %rax,%rdx\nleaq <go.Solution.idxMap>(%rip),%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L43\n.LBB41:\nmovq %rdx,(%rax)\n.LBE41:\njmp .L44\n.L43:\n.LBB42:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L44:\n.LBE42:\n.LBB43:\nmovq $0,-48(%rbp)\nmovq $0,-56(%rbp)\n.LBB44:\n.LBB45:\n.LBB46:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%r13\nmovl $0,%ebx\n.LBE46:\njmp .L45\n.L51:\n.LBB47:\nnop\n.LBE47:\n.LBB48:\n.LBB49:\nmovq -88(%rbp),%rax\ntestq %rbx,%rbx\njs .L46\ncmpq %rax,%rbx\njge .L46\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE49:\n.LBB50:\nmovq %rbx,-48(%rbp)\nmovq %rax,-56(%rbp)\n.LBE50:\n.LBB51:\n.LBB52:\nmovq -56(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -48(%rbp),%r12\nleaq -64(%rbp),%rax\nmovq (%rax),%rdx\nmovq <go.Solution.idxMap>(%rip),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r12,(%rax)\n.LBE52:\n.LBE51:\n.LBE48:\n.LBB54:\naddq $1,%rbx\njmp .L45\n.L46:\n.LBE54:\n.LBB55:\n.LBB53:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L45:\n.LBE53:\n.LBE55:\ncmpq %r13,%rbx\njl .L51\n.LBE45:\n.LBE44:\n.LBE43:\n.LBB56:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nsubq $8,%rsp\npushq <56>(%rbp)\npushq <48>(%rbp)\npushq <40>(%rbp)\nmovq %rax,%rsi\nmovl $0,%edi\ncall <go.Solution.build>\naddq $32,%rsp\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE56:\n.LBE40:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "p = len(postorder) - 1\nidxMap = make(map[int]int)\nfor i, v := range inorder {\n\tidxMap[v] = i\n}\nreturn build(0, len(inorder)-1, postorder)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $144,%rsp\nmovq $0,-40(%rbp)\n.LBB2:\nmovq $0,-48(%rbp)\n.LBB3:\njmp .L2\n.L8:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -48(%rbp),%rcx\nmovabsq $6148914691236517206,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rcx,%rsi\nsarq $63,%rsi\nmovq %rdx,%rax\nsubq %rsi,%rax\nmovq %rax,%rdx\naddq %rdx,%rdx\naddq %rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L3\n.LBB8:\nmovq -48(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nmovq %rcx,%rdx\nsarq $63,%rdx\nsubq %rdx,%rax\nmovq %rax,%rdx\nsalq $2,%rdx\naddq %rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\ntestq %rax,%rax\nsete %al\n.L3:\n.LBE8:\n.LBE7:\ntestb %al,%al\nje .L4\n.LBB9:\nmovq -48(%rbp),%rax\naddq %rax,-40(%rbp)\n.L4:\n.LBE9:\n.LBE6:\n.LBE5:\n.LBB10:\naddq $1,-48(%rbp)\n.L2:\n.LBE10:\ncmpq $999,-48(%rbp)\njle .L8\n.LBE3:\n.LBE2:\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,%r15\nleaq <string..d>(%rip),%r12\nleaq <go..C11>(%rip),%r13\nmovq %r14,-144(%rbp)\nmovq %r15,-136(%rbp)\nmovq %r12,-128(%rbp)\nmovq %r13,-120(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Print@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq -32(%rbp),%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "sum := 0\nfor i := 0; i < 1000; i++ {\n\tif (i%3 == 0) || (i%5 == 0) {\n\t\tsum += i\n\t}\n}\nfmt.Print(sum, \"STR\")"}
{"src": ".LFB1:\nleaq -840(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L65\nmovl $840,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L65:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $792,%rsp\nmovq %rdi,-744(%rbp)\nleaq <.LC17>(%rip),%rax\nmovl $2,%edx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq $1,-624(%rbp)\nleaq <.LC18>(%rip),%r8\nmovl $4,%r9d\nmovq %r8,-616(%rbp)\nmovq %r9,-608(%rbp)\nmovq $2,-600(%rbp)\nleaq <.LC19>(%rip),%r10\nmovl $4,%r11d\nmovq %r10,-592(%rbp)\nmovq %r11,-584(%rbp)\nmovq $2,-576(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-800(%rbp)\nmovq $8,-792(%rbp)\nmovdqa -800(%rbp),%xmm0\nmovups %xmm0,-568(%rbp)\nmovq $6,-552(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-784(%rbp)\nmovq $6,-776(%rbp)\nmovdqa -784(%rbp),%xmm1\nmovups %xmm1,-544(%rbp)\nmovq $3,-528(%rbp)\nleaq <.LC22>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-520(%rbp)\nmovq %r13,-512(%rbp)\nmovq $8,-504(%rbp)\nleaq -640(%rbp),%rax\nmovq %rax,-672(%rbp)\nmovq $6,-664(%rbp)\nmovq $6,-656(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC23>(%rip),%rcx\nmovl $69,%ebx\nleaq -208(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB35:\nmovq $0,-704(%rbp)\nmovq $0,-696(%rbp)\nmovq $0,-688(%rbp)\n.LBB36:\n.LBB37:\n.LBB38:\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%r13\nmovl $0,%ebx\n.LBE38:\njmp .L55\n.L64:\n.LBB39:\nnop\n.LBE39:\n.LBB40:\n.LBB41:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L56\ncmpq %rax,%rbx\njge .L56\nmovq -432(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-448(%rbp)\n.LBE41:\n.LBB42:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-688(%rbp)\n.LBE42:\n.LBB43:\nmovq -688(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -736(%rbp),%rdx\nmovq -728(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode.scoreOfParentheses>\nmovq %rax,%r12\nleaq <go.leetcode..go.leetcode.para856..d>(%rip),%rax\nmovq %rax,-832(%rbp)\nleaq <go.leetcode..go.leetcode.para856..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L57\njmp .L62\n.L56:\n.LBE43:\n.LBB46:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L57:\n.LBE46:\n.LBB47:\n.LBB44:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE44:\njmp .L59\n.L62:\n.LBB45:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para856..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L59:\n.LBE45:\nmovq -344(%rbp),%rax\nmovq %rax,-824(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-816(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq %r12,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-808(%rbp)\nmovdqa -832(%rbp),%xmm2\nmovups %xmm2,-304(%rbp)\nmovdqa -816(%rbp),%xmm3\nmovups %xmm3,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC24>(%rip),%rax\nmovq %rax,-768(%rbp)\nmovq $37,-760(%rbp)\nleaq -144(%rbp),%rax\nmovq -768(%rbp),%rsi\nmovq -760(%rbp),%rdi\nmovq %rsi,%r8\nmovq %rdi,%r9\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE47:\n.LBE40:\n.LBB48:\naddq $1,%rbx\n.L55:\n.LBE48:\ncmpq %r13,%rbx\njl .L64\n.LBE37:\n.LBE36:\n.LBE35:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC25>(%rip),%r14\nmovl $3,%r15d\nleaq -80(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question856{\n\t{\n\t\tpara856{\"STR\"},\n\t\tans856{1},\n\t},\n\t{\n\t\tpara856{\"STR\"},\n\t\tans856{2},\n\t},\n\t{\n\t\tpara856{\"STR\"},\n\t\tans856{2},\n\t},\n\t{\n\t\tpara856{\"STR\"},\n\t\tans856{6},\n\t},\n\t{\n\t\tpara856{\"STR\"},\n\t\tans856{3},\n\t},\n\t{\n\t\tpara856{\"STR\"},\n\t\tans856{8},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans856, q.para856\n\tfmt.Printf(\"STR\", p, scoreOfParentheses(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L12\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nleaq -144(%rbp),%rax\nmovl $1024,%r8d\nmovl $1024,%ecx\nmovl $0,%edx\nmovl $0,%esi\nmovq %rax,%rdi\ncall <image.Rect@PLT>\npushq -120(%rbp)\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\ncall <image.NewRGBA@PLT>\naddq $32,%rsp\nmovq %rax,-72(%rbp)\n.LBB2:\nmovq $0,-56(%rbp)\n.LBB3:\njmp .L2\n.L11:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\npxor %xmm0,%xmm0\ncvtsi 2sdq-56(%rbp),%xmm0\nmovsd <.LC0>(%rip),%xmm2\nmovapd %xmm0,%xmm1\ndivsd %xmm2,%xmm1\nmovsd <.LC1>(%rip),%xmm0\nmulsd %xmm1,%xmm0\nmovsd <.LC2>(%rip),%xmm1\nsubsd %xmm1,%xmm0\nmovsd %xmm0,-80(%rbp)\n.LBB6:\nmovq $0,-64(%rbp)\n.LBB7:\njmp .L3\n.L10:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\npxor %xmm0,%xmm0\ncvtsi 2sdq-64(%rbp),%xmm0\nmovsd <.LC0>(%rip),%xmm2\nmovapd %xmm0,%xmm1\ndivsd %xmm2,%xmm1\nmovsd <.LC1>(%rip),%xmm0\nmulsd %xmm1,%xmm0\nmovsd <.LC2>(%rip),%xmm1\nsubsd %xmm1,%xmm0\nmovsd %xmm0,-88(%rbp)\nmovsd -80(%rbp),%xmm0\nmovsd -88(%rbp),%xmm1\nmovsd %xmm1,-104(%rbp)\nmovsd %xmm0,-96(%rbp)\nmovq -104(%rbp),%rax\nmovsd -96(%rbp),%xmm1\nmovq %rax,%xmm0\ncall <main.mandelbrot>\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rdi\nmovq -56(%rbp),%rdx\nmovq -64(%rbp),%rsi\nmovq -72(%rbp),%rax\nmovq %rdi,%r8\nmovq %rax,%rdi\ncall <image.RGBA.Set@PLT>\n.LBE9:\n.LBB10:\naddq $1,-64(%rbp)\n.L3:\n.LBE10:\ncmpq $1023,-64(%rbp)\njle .L10\n.LBE7:\n.LBE6:\n.LBE5:\n.LBB11:\naddq $1,-56(%rbp)\n.L2:\n.LBE11:\ncmpq $1023,-56(%rbp)\njle .L11\n.LBE3:\n.LBE2:\nleaq <pimt..interface.4At.0func.8int.3int.9.8image..z2fcolor.Color.9.2Bounds.0func.8.9.8image.Rectangle.9.2ColorModel.0func.8.9.8image..z2fcolor.Model.9.5..image.RGBA>(%rip),%r14\nmovq -72(%rbp),%r15\nleaq <pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%r12\nmovq <os.Stdout>(%rip),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %r14,%rdx\nmovq %r15,%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <image..z2fpng.Encode@PLT>\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "const (\n\txmin, ymin, xmax, ymax = -2, -2, +2, +2\n\twidth, height          = 1024, 1024\n)\nimg := image.NewRGBA(image.Rect(0, 0, width, height))\nfor py := 0; py < height; py++ {\n\ty := float64(py)/height*(ymax-ymin) + ymin\n\tfor px := 0; px < width; px++ {\n\t\tx := float64(px)/width*(xmax-xmin) + xmin\n\t\tz := complex(x, y)\n\t\timg.Set(px, py, mandelbrot(z))\n\t}\n}\npng.Encode(os.Stdout, img)"}
{"src": ".LFB2:\nleaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L49\nmovl $456,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L49:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $408,%rsp\nmovq %rdi,-376(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB33:\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\n.LBB34:\n.LBB35:\n.LBB36:\nmovq <go.day171.testcases>(%rip),%rax\nmovq <8+go.day171.testcases>(%rip),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq <16+go.day171.testcases>(%rip),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%r13\nmovl $0,%r12d\n.LBE36:\njmp .L38\n.L48:\n.LBB37:\nnop\n.LBE37:\n.LBB38:\n.LBB39:\nmovq -264(%rbp),%rax\ntestq %r12,%r12\njs .L39\ncmpq %rax,%r12\njge .L39\nmovq -272(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <32>(%rcx),%rax\nmovq %rax,-288(%rbp)\n.LBE39:\n.LBB40:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-336(%rbp)\n.LBE40:\n.LBB41:\n.LBB42:\nsubq $8,%rsp\npushq -352(%rbp)\npushq -360(%rbp)\npushq -368(%rbp)\ncall <go.day171.BusiestBuildingTimes>\naddq $32,%rsp\nmovq %rax,%rcx\nmovq %rcx,-56(%rbp)\nmovq %rdx,%rax\nmovq %rax,-64(%rbp)\n.LBB43:\nmovq -344(%rbp),%rax\ncmpq %rax,-56(%rbp)\nsetne %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\njne .L40\njmp .L41\n.L39:\n.LBE43:\n.LBE42:\n.LBE41:\n.LBB50:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\n.LBE50:\n.LBB51:\n.LBB49:\n.LBB45:\n.LBB44:\nmovq -336(%rbp),%rax\ncmpq %rax,-64(%rbp)\nsetne %al\n.L41:\n.LBE44:\n.LBE45:\ntestb %al,%al\nje .L42\n.LBB46:\nleaq <uint64..d>(%rip),%rbx\nmovq %rbx,-448(%rbp)\nleaq <uint64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -200(%rbp),%rax\nmovq %rax,-440(%rbp)\nmovq %rbx,-432(%rbp)\nleaq <uint64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-192(%rbp)\nmovq -192(%rbp),%rax\nmovq -336(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -192(%rbp),%rax\nmovq %rax,-424(%rbp)\nmovq %rbx,-416(%rbp)\nleaq <uint64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -184(%rbp),%rax\nmovq %rax,-408(%rbp)\nmovq %rbx,-400(%rbp)\nleaq <uint64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-392(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovdqa -448(%rbp),%xmm0\nmovups %xmm0,-160(%rbp)\nmovdqa -432(%rbp),%xmm1\nmovups %xmm1,-144(%rbp)\nmovdqa -416(%rbp),%xmm2\nmovups %xmm2,-128(%rbp)\nmovdqa -400(%rbp),%xmm3\nmovups %xmm3,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L43\n.LBB47:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\n.LBE47:\njmp .L44\n.L43:\n.LBB48:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L44:\n.LBE48:\nmovq -168(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $4,-88(%rbp)\nmovq $4,-80(%rbp)\nleaq <.LC20>(%rip),%r14\nmovl $28,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -376(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L42:\n.LBE46:\n.LBE49:\n.LBE51:\n.LBE38:\n.LBB52:\naddq $1,%r12\n.L38:\n.LBE52:\ncmpq %r13,%r12\njl .L48\n.LBE35:\n.LBE34:\n.LBE33:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif start, end := BusiestBuildingTimes(tc.moves); start != tc.start || end != tc.end {\n\t\tt.Errorf(\"STR\", tc.start, tc.end, start, end)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $72,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $56,%rsp\nmovq $0,-32(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq %rbx,-48(%rbp)\n.LBB3:\nmovq $2,-24(%rbp)\n.LBB4:\njmp .L2\n.L25:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -24(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -56(%rbp),%rax\ntestq %rdx,%rdx\njs .L3\ncmpq %rax,%rdx\njl .L18\n.L3:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rcx\ntestq %rax,%rax\njs .L5\ncmpq %rcx,%rax\njl .L19\n.L5:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq -24(%rbp),%rcx\nleaq -2(%rcx),%rdi\nmovq -56(%rbp),%rcx\ntestq %rdi,%rdi\njs .L7\ncmpq %rcx,%rdi\njl .L20\n.L7:\nmovq %rcx,%rsi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq -24(%rbp),%rcx\nsubq $2,%rcx\nmovq <24>(%rbp),%rsi\ntestq %rcx,%rcx\njs .L9\ncmpq %rsi,%rcx\njl .L21\n.L9:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -64(%rbp),%rsi\nsalq $3,%rdi\naddq %rdi,%rsi\nmovq (%rsi),%rsi\nmovq <16>(%rbp),%rdi\nsalq $3,%rcx\naddq %rdi,%rcx\nmovq (%rcx),%rcx\naddq %rsi,%rcx\nmovq -64(%rbp),%rsi\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rsi\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%rax\naddq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0746.min>\nmovq %rax,%rdx\nmovq -56(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L11\ncmpq %rax,-24(%rbp)\njl .L22\n.L11:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq -64(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rdx,(%rax)\n.LBE6:\n.LBB7:\naddq $1,-24(%rbp)\n.L2:\n.LBE7:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njle .L25\n.LBE4:\n.LBE3:\n.LBB8:\nmovq -56(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L15\ncmpq %rax,-40(%rbp)\njl .L24\n.L15:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq -64(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE8:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "n := len(cost)\ndp := make([]int, n+1)\nfor i := 2; i <= n; i++ {\n\tdp[i] = min(dp[i-1]+cost[i-1], dp[i-2]+cost[i-2])\n}\nreturn dp[n]"}
{"src": "cmpq %fs:112,%rsp\njnb .L102\nmovl $24,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL14:\nret\n.L102:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq $0,-8(%rbp)\n.LBB67:\n.LBB68:\nleaq <go.greedy..go.greedy.runningSchTaskList..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <go.greedy.runningSchTaskList.init>\naddq $32,%rsp\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE68:\n.LBE67:\nleave\nret", "tgt": "return new(runningSchTaskList).init(tasks)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $120,%r10d\nmovl $16,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,-80(%rbp)\nmovq %rdx,-88(%rbp)\nmovq %rcx,-96(%rbp)\nmovq %r8,-104(%rbp)\nmovq %r9,-112(%rbp)\nmovq $0,-56(%rbp)\n.LBB2:\n.LBB3:\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rdx\nmovq -80(%rbp),%rsi\nmovq -72(%rbp),%rax\nmovq %rax,%rdi\ncall <go.problem0223.area>\nmovq %rax,%r15\nmovq <24>(%rbp),%rdx\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rax\nmovq %rdx,%rcx\nmovq <16>(%rbp),%rdx\nmovq %rax,%rdi\ncall <go.problem0223.area>\nmovq %rax,%r14\nmovq -104(%rbp),%rdx\nmovq -72(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0223.max>\nmovq %rax,%rbx\nmovq -112(%rbp),%rdx\nmovq -80(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0223.max>\nmovq %rax,%r12\nmovq -88(%rbp),%rax\nmovq <16>(%rbp),%rsi\nmovq %rax,%rdi\ncall <go.problem0223.min>\nmovq %rax,%r13\nmovq <24>(%rbp),%rdx\nmovq -96(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0223.min>\nmovq %rax,%rcx\nmovq %r13,%rdx\nmovq %r12,%rsi\nmovq %rbx,%rdi\ncall <go.problem0223.area>\nmovq %rax,%rdx\nleaq (%r15,%r14),%rax\nsubq %rdx,%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\n.LBE3:\n.LBE2:\naddq $72,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "return area(A, B, C, D) + area(E, F, G, H) - area(max(A, E), max(B, F), min(C, G), min(D, H))"}
{"src": "leaq -472(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L15\nmovl $472,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $424,%rsp\nmovq <8+os.Args>(%rip),%rax\ncmpq $1,%rax\njg .L5\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L5:\nmovq <os.Args>(%rip),%rax\naddq $16,%rax\nleaq -240(%rbp),%rcx\nmovq (%rax),%rdx\nmovq <8>(%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <net..z2fhttp.Get@PLT>\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -392(%rbp),%rax\nmovq -384(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBB4:\nmovq -416(%rbp),%rax\ntestq %rax,%rax\nje .L6\n.LBB5:\nmovq -416(%rbp),%rax\ntestq %rax,%rax\njne .L7\nmovl $0,%eax\njmp .L8\n.L7:\nmovq -416(%rbp),%rax\nmovq (%rax),%rax\n.L8:\nmovq %rax,%r12\nmovq -408(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-336(%rbp)\nmovq %r13,-328(%rbp)\nleaq -336(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nleaq -176(%rbp),%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-352(%rbp)\njmp .L4\n.L6:\n.LBE5:\n.LBE4:\nmovq -56(%rbp),%rax\nmovq <64>(%rax),%r12\nmovq <72>(%rax),%r13\nmovq %r12,%rax\ntestq %rax,%rax\njne .L10\nmovl $0,%eax\njmp .L11\n.L10:\nmovq %r12,%rax\nmovq (%rax),%rax\n.L11:\nmovq %rax,%rsi\nleaq <io.Reader..d>(%rip),%rdi\ncall <runtime.requireitab@PLT>\nmovq %rax,-448(%rbp)\nmovq %r13,%rax\nmovq %rax,-440(%rbp)\nleaq <pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%r14\nmovq <os.Stdout>(%rip),%rax\nmovq %rax,%r15\nleaq -144(%rbp),%rax\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rsi,%r8\nmovq %rbx,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nmovq %r8,%rcx\nmovq %r9,%r8\nmovq %rax,%rdi\ncall <io.Copy@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-304(%rbp)\n.LBB6:\nmovq -56(%rbp),%rax\nmovq <72>(%rax),%rdx\nmovq <64>(%rax),%rax\nmovq %rax,%rcx\nmovq <8>(%rcx),%rcx\nmovq %rdx,%rax\nmovq %rax,%rdi\ncall *%rcx\n.LVL2:\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -432(%rbp),%rax\ntestq %rax,%rax\nje .L4\n.LBB7:\nmovq -432(%rbp),%rax\ntestq %rax,%rax\njne .L13\nmovl $0,%eax\njmp .L14\n.L13:\nmovq -432(%rbp),%rax\nmovq (%rax),%rax\n.L14:\nmovq %rax,-464(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovdqa -464(%rbp),%xmm0\nmovups %xmm0,-256(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-272(%rbp)\n.L4:\n.LBE7:\n.LBE6:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "r, err := http.Get(os.Args[1])\nif err != nil {\n\tfmt.Println(err)\n\treturn\n}\nio.Copy(os.Stdout, r.Body)\nif err := r.Body.Close(); err != nil {\n\tfmt.Println(err)\n}"}
{"src": ".LFB0:\nleaq -952(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12\nmovl $952,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $904,%rsp\nmovq %rdi,-888(%rbp)\nmovq $-7,-768(%rbp)\nmovq $-1,-760(%rbp)\nmovq $1,-752(%rbp)\nmovq $3,-744(%rbp)\nmovq $4,-736(%rbp)\nmovq $-1,-720(%rbp)\nmovq $0,-712(%rbp)\nmovq $1,-704(%rbp)\nmovq $0,-688(%rbp)\nmovq $5,-672(%rbp)\nleaq -768(%rbp),%rax\nmovq %rax,-664(%rbp)\nmovq $5,-656(%rbp)\nmovq $5,-648(%rbp)\nmovq $0,-640(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-680(%rbp)\nmovq -680(%rbp),%rax\nmovq %rax,-632(%rbp)\nmovq $0,-624(%rbp)\nmovq $0,-616(%rbp)\nmovq $3,-608(%rbp)\nleaq -720(%rbp),%rax\nmovq %rax,-600(%rbp)\nmovq $3,-592(%rbp)\nmovq $3,-584(%rbp)\nmovq $1,-576(%rbp)\nleaq -688(%rbp),%rax\nmovq %rax,-568(%rbp)\nmovq $1,-560(%rbp)\nmovq $1,-552(%rbp)\nleaq -672(%rbp),%rax\nmovq %rax,-800(%rbp)\nmovq $4,-792(%rbp)\nmovq $4,-784(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC15>(%rip),%rax\nmovq %rax,-912(%rbp)\nmovq $70,-904(%rbp)\nleaq -208(%rbp),%rax\nmovq -912(%rbp),%rcx\nmovq -904(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB2:\nmovq $0,-880(%rbp)\nmovq $0,-872(%rbp)\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq -472(%rbp),%rax\nmovq %rax,-912(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L11:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -472(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -480(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\n.LBE8:\n.LBB9:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-880(%rbp)\nmovq %rdx,-872(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\n.LBE9:\n.LBB10:\nmovq -872(%rbp),%rax\nmovq -864(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -856(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq -880(%rbp),%rax\nmovq %rax,-840(%rbp)\nmovq -840(%rbp),%rdx\nleaq -384(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.sumZero>\nleaq <go.leetcode..go.leetcode.para1304..d>(%rip),%rax\nmovq %rax,-944(%rbp)\nleaq <go.leetcode..go.leetcode.para1304..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-352(%rbp)\nmovq -352(%rbp),%rax\nmovq -840(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -352(%rbp),%rax\nmovq %rax,-936(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-928(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L9\n.L3:\n.LBE10:\n.LBB13:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE13:\n.LBB14:\n.LBB11:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\njmp .L6\n.L9:\n.LBB12:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -344(%rbp),%rax\nmovq %rax,-920(%rbp)\nmovdqa -944(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -928(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC16>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBE14:\n.LBE7:\n.LBB15:\naddq $1,%rbx\n.L2:\n.LBE15:\ncmpq -912(%rbp),%rbx\njl .L11\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC17>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1304{\n\t{\n\t\tpara1304{5},\n\t\tans1304{[]int{-7, -1, 1, 3, 4}},\n\t},\n\t{\n\t\tpara1304{0},\n\t\tans1304{[]int{}},\n\t},\n\t{\n\t\tpara1304{3},\n\t\tans1304{[]int{-1, 0, 1}},\n\t},\n\t{\n\t\tpara1304{1},\n\t\tans1304{[]int{0}},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1304, q.para1304\n\tfmt.Printf(\"STR\", p, sumZero(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\nleaq -792(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $792,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $744,%rsp\nmovq %rdi,-760(%rbp)\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.nums.0.6.7int.2.go.Solution.index.0.6.7int.2.go.Solution.expect.0.6.7int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-720(%rbp)\nleaq <.LC22>(%rip),%rax\nmovq %rax,-784(%rbp)\nmovq $8,-776(%rbp)\nmovdqa -784(%rbp),%xmm0\nmovups %xmm0,-640(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-712(%rbp)\nmovq -712(%rbp),%rax\nmovq $0,(%rax)\nmovq $1,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $4,<32>(%rax)\nmovq -712(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $5,-616(%rbp)\nmovq $5,-608(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-704(%rbp)\nmovq -704(%rbp),%rax\nmovq $0,(%rax)\nmovq $1,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -704(%rbp),%rax\nmovq %rax,-600(%rbp)\nmovq $5,-592(%rbp)\nmovq $5,-584(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-696(%rbp)\nmovq -696(%rbp),%rax\nmovq $0,(%rax)\nmovq $4,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $2,<32>(%rax)\nmovq -696(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq $5,-568(%rbp)\nmovq $5,-560(%rbp)\nleaq <.LC22>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-552(%rbp)\nmovq %r15,-544(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-688(%rbp)\nmovq -688(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $4,<24>(%rax)\nmovq $0,<32>(%rax)\nmovq -688(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovq $5,-528(%rbp)\nmovq $5,-520(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-680(%rbp)\nmovq -680(%rbp),%rax\nmovq $0,(%rax)\nmovq $1,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $0,<32>(%rax)\nmovq -680(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovq $5,-504(%rbp)\nmovq $5,-496(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-672(%rbp)\nmovq -672(%rbp),%rax\nmovq $0,(%rax)\nmovq $1,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $4,<32>(%rax)\nmovq -672(%rbp),%rax\nmovq %rax,-488(%rbp)\nmovq $5,-480(%rbp)\nmovq $5,-472(%rbp)\nleaq <.LC22>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-464(%rbp)\nmovq %r13,-456(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-664(%rbp)\nmovq -664(%rbp),%rax\nmovq $1,(%rax)\nmovq -664(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq $1,-440(%rbp)\nmovq $1,-432(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-656(%rbp)\nmovq -656(%rbp),%rax\nmovq $0,(%rax)\nmovq -656(%rbp),%rax\nmovq %rax,-424(%rbp)\nmovq $1,-416(%rbp)\nmovq $1,-408(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq $1,(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $1,-392(%rbp)\nmovq $1,-384(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -720(%rbp),%rax\nmovq %rax,%rdi\nleaq -640(%rbp),%rax\nmovl $33,%edx\nmovq %rax,%rsi\nmovq %rdx,%rcx\nrep movsq.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -720(%rbp),%rax\nleaq -640(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.nums.0.6.7int.2.go.Solution.index.0.6.7int.2.go.Solution.expect.0.6.7int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -720(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovq $3,-744(%rbp)\nmovq $3,-736(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.nums.0.6.7int.2.go.Solution.index.0.6.7int.2.go.Solution.expect.0.6.7int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -736(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -264(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -272(%rbp),%rcx\nmovq %rbx,%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-368(%rbp)\nmovq %rdi,-360(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-352(%rbp)\nmovq %rdi,-344(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-336(%rbp)\nmovq %rdi,-328(%rbp)\nmovq <48>(%rax),%rsi\nmovq <56>(%rax),%rdi\nmovq %rsi,-320(%rbp)\nmovq %rdi,-312(%rbp)\nmovq <64>(%rax),%rsi\nmovq <72>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <80>(%rax),%rax\nmovq %rax,-288(%rbp)\n.LBE10:\n.LBB11:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -240(%rbp),%rsi\nmovq -232(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -224(%rbp),%rsi\nmovq -216(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -208(%rbp),%rsi\nmovq -200(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,<48>(%rax)\nmovq %rdi,<56>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<64>(%rax)\nmovq %rdi,<72>(%rax)\nmovq -160(%rbp),%rdx\nmovq %rdx,<80>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.nums.0.6.7int.2.go.Solution.index.0.6.7int.2.go.Solution.expect.0.6.7int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC23>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.nums.0.6.7int.2.go.Solution.index.0.6.7int.2.go.Solution.expect.0.6.7int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.nums.0.6.7int.2.go.Solution.index.0.6.7int.2.go.Solution.expect.0.6.7int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -760(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $744,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tnums   []int\n\tindex  []int\n\texpect []int\n}{\n\t{\"STR\", []int{0, 1, 2, 3, 4}, []int{0, 1, 2, 2, 1}, []int{0, 4, 1, 3, 2}},\n\t{\"STR\", []int{1, 2, 3, 4, 0}, []int{0, 1, 2, 3, 0}, []int{0, 1, 2, 3, 4}},\n\t{\"STR\", []int{1}, []int{0}, []int{1}},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.nums, c.index)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.nums, c.index)\n\t\t}\n\t})\n}"}
{"src": ".LFB1:\nleaq -728(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L34\nmovl $728,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L34:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $680,%rsp\nmovq %rdi,-632(%rbp)\nleaq <.LC13>(%rip),%rax\nmovl $6,%edx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovb $1,-576(%rbp)\nleaq <.LC14>(%rip),%rcx\nmovl $2,%ebx\nmovq %rcx,-568(%rbp)\nmovq %rbx,-560(%rbp)\nmovb $0,-552(%rbp)\nleaq <.LC15>(%rip),%r8\nmovl $2,%r9d\nmovq %r8,-544(%rbp)\nmovq %r9,-536(%rbp)\nmovb $1,-528(%rbp)\nleaq <.LC16>(%rip),%rax\nmovq %rax,-672(%rbp)\nmovq $12,-664(%rbp)\nmovdqa -672(%rbp),%xmm0\nmovups %xmm0,-520(%rbp)\nmovb $1,-504(%rbp)\nleaq <.LC17>(%rip),%rax\nmovq %rax,-656(%rbp)\nmovq $6,-648(%rbp)\nmovdqa -656(%rbp),%xmm1\nmovups %xmm1,-496(%rbp)\nmovb $1,-480(%rbp)\nleaq <.LC18>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-472(%rbp)\nmovq %r13,-464(%rbp)\nmovb $1,-456(%rbp)\nleaq <.LC19>(%rip),%r10\nmovl $12,%r11d\nmovq %r10,-448(%rbp)\nmovq %r11,-440(%rbp)\nmovb $0,-432(%rbp)\n.LBB28:\nmovq $0,-624(%rbp)\nmovq $0,-616(%rbp)\nmovq $0,-608(%rbp)\n.LBB29:\n.LBB30:\n.LBB31:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -432(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovl $7,%r12d\nmovl $0,%ebx\n.LBE31:\njmp .L22\n.L33:\n.LBB32:\nnop\n.LBE32:\n.LBB33:\n.LBB34:\ntestq %rbx,%rbx\njs .L23\ncmpq $6,%rbx\njg .L23\nmovq %rbx,%rax\naddq %rax,%rax\naddq %rbx,%rax\nsalq $3,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -336(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-400(%rbp)\n.LBE34:\n.LBB35:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-608(%rbp)\n.LBE35:\n.LBB36:\nmovq -624(%rbp),%rdx\nmovq -616(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem1041.isRobotBounded>\nmovb %al,-49(%rbp)\n.LBB37:\nmovzbl -608(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L24\njmp .L25\n.L23:\n.LBE37:\n.LBE36:\n.LBB44:\nmovl $7,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\n.LBE44:\n.LBB45:\n.LBB43:\n.LBB38:\nleaq <string..d>(%rip),%rax\nmovq %rax,-720(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L26\n.LBB39:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE39:\njmp .L27\n.L26:\n.LBB40:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L27:\n.LBE40:\nmovq -184(%rbp),%rax\nmovq %rax,-712(%rbp)\nleaq <bool..d>(%rip),%r13\nmovq %r13,-704(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovq %r13,-688(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -608(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,-680(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -720(%rbp),%xmm2\nmovups %xmm2,-128(%rbp)\nmovdqa -704(%rbp),%xmm3\nmovups %xmm3,-112(%rbp)\nmovdqa -688(%rbp),%xmm4\nmovups %xmm4,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L28\n.LBB41:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE41:\njmp .L29\n.L28:\n.LBB42:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L29:\n.LBE42:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC20>(%rip),%r14\nmovl $25,%r15d\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq -632(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L25:\n.LBE38:\n.LBE43:\n.LBE45:\n.LBE33:\n.LBB46:\naddq $1,%rbx\n.L22:\n.LBE46:\ncmpq %r12,%rbx\njl .L33\n.LBE30:\n.LBE29:\n.LBE28:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: false,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: true,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: false,\n\t},\n}\nfor _, tt := range tests {\n\tgot := isRobotBounded(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": "leaq -392(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L69\nmovl $392,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L69:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $344,%rsp\nmovq %rdi,-376(%rbp)\nmovq %rsi,-384(%rbp)\ncmpq $0,-384(%rbp)\njne .L50\ncall <runtime.panicmem@PLT>\n.L50:\nmovq -384(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-272(%rbp)\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\nmovq $0,-304(%rbp)\n.LBB55:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-56(%rbp)\n.LBB56:\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\n.LBB57:\n.LBB58:\n.LBB59:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r14\nmovl $0,%ebx\n.LBE59:\njmp .L51\n.L68:\n.LBB60:\nnop\n.LBE60:\n.LBB61:\n.LBB62:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L52\ncmpq %rax,%rbx\njge .L52\nmovq -224(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-240(%rbp)\n.LBE62:\n.LBB63:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-336(%rbp)\n.LBE63:\n.LBB64:\n.LBB65:\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\n.LBB66:\n.LBB67:\n.LBB68:\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%r15\nmovl $0,%r12d\n.LBE68:\njmp .L53\n.L52:\n.LBE67:\n.LBE66:\n.LBE65:\n.LBE64:\n.LBB90:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L67:\n.LBE90:\n.LBB91:\n.LBB89:\n.LBB88:\n.LBB87:\n.LBB69:\nnop\n.LBE69:\n.LBB70:\n.LBB71:\nmovq -152(%rbp),%rax\ntestq %r12,%r12\njs .L54\ncmpq %rax,%r12\njge .L54\nmovq -160(%rbp),%rax\nmovq %r12,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE71:\n.LBB72:\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\n.LBE72:\n.LBB73:\n.LBB74:\nmovb $0,-57(%rbp)\n.LBB75:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7struct.4.5>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovl %edx,%eax\nmovb %al,-57(%rbp)\n.LBE75:\nmovzbl -57(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\njne .L55\n.LBB76:\njmp .L56\n.L54:\n.LBE76:\n.LBE74:\n.LBE73:\n.LBB84:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\n.LBE84:\n.LBB85:\n.LBB83:\n.LBB82:\n.LBB77:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7struct.4.5>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\n.LBE77:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r13\nleaq <1>(%r13),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L57\n.LBB78:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r13,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-304(%rbp)\n.LBE78:\njmp .L58\n.L57:\n.LBB79:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-320(%rbp)\nmovq %rax,-312(%rbp)\nmovq %rdx,-304(%rbp)\n.L58:\n.LBE79:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %r13,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq -360(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L59\n.LBB80:\nmovq -368(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L56\n.L59:\n.LBE80:\n.LBB81:\nmovq -368(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L56:\n.LBE81:\n.LBE82:\n.LBE83:\n.LBE85:\n.LBE70:\n.LBB86:\naddq $1,%r12\n.L53:\n.LBE86:\ncmpq %r15,%r12\njl .L67\n.LBE87:\n.LBE88:\n.LBE89:\n.LBE91:\n.LBE61:\n.LBB92:\naddq $1,%rbx\n.L51:\n.LBE92:\ncmpq %r14,%rbx\njl .L68\n.LBE58:\n.LBE57:\n.LBE56:\nmovq -376(%rbp),%rcx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -304(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE55:\nmovq -376(%rbp),%rax\naddq $344,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "seen := make(map[string]struct{})\nfor _, tier := range al {\n\tfor _, v := range tier {\n\t\tif _, ok := seen[v]; !ok {\n\t\t\tseen[v] = struct{}{}\n\t\t\tret = append(ret, v)\n\t\t}\n\t}\n}\nreturn"}
{"src": "cmpq %fs:112,%rsp\njnb .L81\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL10:\nret\n.L81:\npushq %rbp\nmovq %rsp,%rbp\nsubq $96,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,-80(%rbp)\nmovq %rdx,-88(%rbp)\nmovb $0,-1(%rbp)\n.LBB57:\n.LBB58:\nmovq -72(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%rax\ncmpq $0,-80(%rbp)\njs .L74\ncmpq %rax,-80(%rbp)\njl .L79\n.L74:\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L79:\nmovq -72(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-16(%rbp)\nmovq -24(%rbp),%rax\ncmpq $0,-88(%rbp)\njs .L76\ncmpq %rax,-88(%rbp)\njl .L80\n.L76:\nmovq -88(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L80:\nmovq -64(%rbp),%rdx\nmovq -80(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq (%rax),%rdx\nmovq -32(%rbp),%rcx\nmovq -88(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetl %al\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE58:\n.LBE57:\nleave\nret", "tgt": "return h.tasks[i].r < h.tasks[j].r"}
{"src": "cmpq %fs:112,%rsp\njnb .L22\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,-80(%rbp)\ncmpq $0,-80(%rbp)\njne .L20\ncall <runtime.panicmem@PLT>\n.L20:\nmovq -80(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\n.LBB15:\n.LBB16:\nleaq -32(%rbp),%rax\nmovq -8(%rbp),%rcx\nmovl $0,%edx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <time.Unix@PLT>\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -16(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE16:\n.LBE15:\nmovq -72(%rbp),%rax\nleave\nret", "tgt": "return xtime.Unix(int64(jt), 0)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-104(%rbp)\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\n.LBB2:\n.LBB3:\ncall <runtime.makemap_small@PLT>\nmovq %rax,%rbx\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq %rbx,-72(%rbp)\nmovq -104(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE3:\n.LBE2:\nmovq -104(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return RandomizedSet{\n\tl: []int{},\n\tm: make(map[int]int),\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L266\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL40:\nret\n.L266:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-56(%rbp)\nmovq %rsi,-64(%rbp)\nmovq %rdx,-80(%rbp)\nmovq %rcx,-72(%rbp)\nmovl $0,-4(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB268:\n.LBB269:\n.LBB270:\nmovl $16,%eax\nmovl $0,%r8d\nmovl $0,%r9d\nmovl %eax,-4(%rbp)\nmovq %r8,-48(%rbp)\nmovq %r9,-40(%rbp)\n.LBE270:\nmovl -4(%rbp),%eax\nmovl %eax,-32(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-24(%rbp)\nmovq %rdx,-16(%rbp)\nmovq -56(%rbp),%rcx\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -16(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE269:\n.LBE268:\nmovq -56(%rbp),%rax\npopq %rbp\nret", "tgt": "return TypeInt, nil"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\n.LBB3:\nmovq <24>(%rbp),%rax\nleaq -1(%rax),%rdx\nleaq -32(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.day286.createSkyline>\naddq $32,%rsp\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -16(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\n.LBE2:\nmovq -72(%rbp),%rax\nleave\nret", "tgt": "return createSkyline(buildings, 0, len(buildings)-1)"}
{"src": ".LFB5:\ncmpq %fs:112,%rsp\njnb .L210\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L210:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $208,%rsp\nmovq %rdi,-216(%rbp)\nmovq %rsi,-224(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\n.LBB143:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-24(%rbp)\n.LBB144:\n.LBB145:\njmp .L189\n.L209:\n.LBB146:\nnop\n.LBE146:\n.LBB147:\n.LBB148:\nmovq -224(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\njne .L190\n.LBB149:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rbx\nmovq -224(%rbp),%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L191\n.LBB150:\nmovq -144(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE150:\njmp .L192\n.L191:\n.LBB151:\nmovq -144(%rbp),%rcx\nmovq -128(%rbp),%rdx\nmovq %rcx,-208(%rbp)\nmovq %rax,-200(%rbp)\nmovq %rdx,-192(%rbp)\n.L192:\n.LBE151:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\nmovq -224(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-224(%rbp)\n.LBE149:\njmp .L189\n.L190:\n.LBB152:\nmovq -224(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-24(%rbp)\n.LBB153:\n.LBB154:\njmp .L193\n.L208:\n.LBB155:\nnop\n.LBE155:\n.LBB156:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-24(%rbp)\n.L193:\n.LBE156:\n.LBB157:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L194\n.LBB158:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\ncmpq %rax,-224(%rbp)\nsetne %al\n.L194:\n.LBE158:\n.LBE157:\ntestb %al,%al\njne .L208\n.LBE154:\n.LBE153:\n.LBB159:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\njne .L197\n.LBB160:\nmovq -24(%rbp),%rax\naddq $16,%rax\nmovq -224(%rbp),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L198\n.LBB161:\nmovq %rdx,(%rax)\njmp .L199\n.L198:\n.LBE161:\n.LBB162:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L199:\n.LBE162:\nmovq -224(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-224(%rbp)\n.LBE160:\njmp .L189\n.L197:\n.LBB163:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rbx\nmovq -224(%rbp),%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L200\n.LBB164:\nmovq -112(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE164:\njmp .L201\n.L200:\n.LBB165:\nmovq -112(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rcx,-208(%rbp)\nmovq %rax,-200(%rbp)\nmovq %rdx,-192(%rbp)\n.L201:\n.LBE165:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\nmovq -224(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-224(%rbp)\nmovq -24(%rbp),%rax\naddq $16,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L202\n.LBB166:\nmovq $0,(%rax)\njmp .L189\n.L202:\n.LBE166:\n.LBB167:\nmovl $0,%esi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L189:\n.LBE167:\n.LBE163:\n.LBE159:\n.LBE152:\n.LBE148:\n.LBE147:\ncmpq $0,-224(%rbp)\njne .L209\n.LBE145:\n.LBE144:\n.LBB168:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -216(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE168:\n.LBE143:\nmovq -216(%rbp),%rax\naddq $208,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "var res []int\nvar max *TreeNode\nfor root != nil {\n\tif root.Left == nil {\n\t\tres = append(res, root.Val)\n\t\troot = root.Right\n\t} else {\n\t\tmax = root.Left\n\t\tfor max.Right != nil && max.Right != root {\n\t\t\tmax = max.Right\n\t\t}\n\t\tif max.Right == nil {\n\t\t\tmax.Right = root\n\t\t\troot = root.Left\n\t\t} else {\n\t\t\tres = append(res, root.Val)\n\t\t\troot = root.Right\n\t\t\tmax.Right = nil\n\t\t}\n\t}\n}\nreturn res"}
{"src": ".LFB0:\nleaq -584(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L20\nmovl $584,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\n.LEHB0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $536,%rsp\n.LEHE0:\nmovb $0,-457(%rbp)\n.LBB2:\nleaq <.LC4>(%rip),%rax\nmovl $9,%edx\nleaq -160(%rbp),%rdi\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdx\n.LEHB1:\ncall <os.Open@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBB3:\nmovq -480(%rbp),%rdx\nmovq -472(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <os.IsNotExist@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L2\n.LBB4:\nleaq <string..d>(%rip),%r12\nleaq <go..C6>(%rip),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L2:\n.LBE4:\n.LBE3:\nleaq <.LC5>(%rip),%rax\nmovq %rax,-528(%rbp)\nmovq $23,-520(%rbp)\nleaq -128(%rbp),%rax\nmovq -528(%rbp),%rcx\nmovq -520(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nmovq %rax,%rdi\ncall <os.Open@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovq -408(%rbp),%rax\nmovq -400(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBB5:\nmovq -480(%rbp),%rax\ntestq %rax,%rax\nje .L3\n.LBB6:\nmovq -480(%rbp),%rax\ntestq %rax,%rax\njne .L4\nmovl $0,%eax\njmp .L5\n.L4:\nmovq -480(%rbp),%rax\nmovq (%rax),%rax\n.L5:\nmovq %rax,-560(%rbp)\nmovq -472(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L3:\n.LBE6:\n.LBE5:\n.LBB7:\nleaq <main.main..func1>(%rip),%rcx\nleaq -456(%rbp),%rdx\nmovq $0,-384(%rbp)\nmovq $0,-376(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-360(%rbp)\nmovq -360(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -360(%rbp),%rdx\nmovq $0,-288(%rbp)\nleaq -288(%rbp),%rax\nmovq %rax,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -280(%rbp),%rdx\nleaq <main.main..thunk0>(%rip),%rdi\nleaq -457(%rbp),%rsi\nleaq -352(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE7:\nleaq <pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%r14\nmovq -456(%rbp),%rax\nmovq %rax,%r15\nleaq -96(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nmovq %rax,%rdi\ncall <io..z2fioutil.ReadAll@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq -248(%rbp),%rax\nmovq -240(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBB8:\nmovq -480(%rbp),%rax\ntestq %rax,%rax\nje .L6\n.LBB9:\nmovq -480(%rbp),%rax\ntestq %rax,%rax\njne .L7\nmovl $0,%eax\njmp .L8\n.L7:\nmovq -480(%rbp),%rax\nmovq (%rax),%rax\n.L8:\nmovq %rax,-544(%rbp)\nmovq -472(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L6:\n.LBE9:\n.LBE8:\nleaq -192(%rbp),%rax\nsubq $8,%rsp\npushq -496(%rbp)\npushq -504(%rbp)\npushq -512(%rbp)\nmovq %rax,%rdi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\ncall <runtime.printlock@PLT>\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printunlock@PLT>\n.LEHE1:\n.L11:\n.LBE2:\nmovl $1,%ebx\n.L15:\nleaq -457(%rbp),%rax\nmovq %rax,%rdi\n.LEHB2:\ncall <runtime.deferreturn@PLT>\n.LEHE2:\ncmpl $1,%ebx\njne .L9\njmp .L19\n.L16:\nleaq -457(%rbp),%rax\nmovq %rax,%rdi\n.LEHB3:\ncall <runtime.checkdefer@PLT>\n.LEHE3:\njmp .L11\n.L17:\nmovq %rax,-568(%rbp)\nmovl $0,%ebx\njmp .L15\n.L9:\nmovq -568(%rbp),%rax\nmovq %rax,%rdi\n.LEHB4:\ncall <_Unwind_Resume@PLT>\n.L18:\nleaq -457(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L15\n.L19:\nleaq -40(%rbp),%rsp\n.LEHE4:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "_, err := os.Open(\"STR\")\nif !os.IsNotExist(err) {\n\tpanic(\"STR\")\n}\nf, err := os.Open(\"STR\")\nif err != nil {\n\tpanic(err)\n}\ndefer func() {\n\tif err := f.Close(); err != nil {\n\t\tpanic(err)\n\t}\n\t_, err := f.Read(make([]byte, 10))\n\tif err == nil {\n\t\tpanic(\"STR\")\n\t}\n}()\ndata, err := ioutil.ReadAll(f)\nif err != nil {\n\tpanic(err)\n}\nprint(string(data))"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L15\nmovl $88,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L15:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq $0,-32(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq $0,-16(%rbp)\nmovq $0,-24(%rbp)\n.LBB3:\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rcx\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L14:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njge .L3\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE9:\n.LBB10:\nmovq %rax,-40(%rbp)\nmovq %rdx,-48(%rbp)\n.LBE10:\n.LBB11:\nmovq <48>(%rbp),%rdx\ncmpq $0,-40(%rbp)\njns .L4\njmp .L5\n.L3:\n.LBE11:\n.LBB14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE14:\n.LBB15:\ncmpq %rdx,-40(%rbp)\njl .L12\n.L5:\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\nmovq <40>(%rbp),%rsi\nmovq -40(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rsi\nmovq -48(%rbp),%rdx\nsubq %rsi,%rdx\naddq %rdx,-24(%rbp)\n.LBB12:\ncmpq $0,-24(%rbp)\njns .L7\n.LBB13:\nmovq -40(%rbp),%rdx\naddq $1,%rdx\nmovq %rdx,-8(%rbp)\nmovq -24(%rbp),%rdx\naddq %rdx,-16(%rbp)\nmovq $0,-24(%rbp)\n.L7:\n.LBE13:\n.LBE12:\n.LBE15:\n.LBE8:\n.LBB16:\naddq $1,%rax\n.L2:\n.LBE16:\ncmpq %rcx,%rax\njl .L14\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB17:\nmovq -16(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\ntestq %rax,%rax\njns .L10\n.LBB18:\n.LBB19:\nmovq $-1,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L11\n.L10:\n.LBE19:\n.LBE18:\n.LBE17:\n.LBB20:\nmovq -8(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.L11:\n.LBE20:\n.LBE2:\nleave\nret", "tgt": "start, total, tank := 0, 0, 0\nfor i, g := range gas {\n\ttank += g - cost[i]\n\tif tank < 0 {\n\t\tstart = i + 1\n\t\ttotal += tank\n\t\ttank = 0\n\t}\n}\nif total+tank < 0 {\n\treturn -1\n}\nreturn start"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L2\nmovl $136,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\naddq $-128,%rsp\nmovq %rdi,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nleaq -80(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $1,-56(%rbp)\nmovq $1,-48(%rbp)\nleaq -32(%rbp),%rax\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -16(%rbp),%rax\nmovq %rax,-96(%rbp)\nleave\nret", "tgt": "fmt.Println(btree.Data)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $184,%rsp\nmovq %rdi,-184(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq %rcx,-192(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\n.LBB2:\nmovq -200(%rbp),%rax\nmovq %rax,-136(%rbp)\nleaq <type...60x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-104(%rbp)\nmovq -104(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-168(%rbp)\nleaq <go.leetcode0282.addOperators..func1>(%rip),%r9\nleaq -136(%rbp),%r8\nleaq -192(%rbp),%rdi\nleaq -160(%rbp),%rsi\nleaq -208(%rbp),%rcx\nleaq -168(%rbp),%rdx\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovq %r9,(%rax)\nmovq %r8,<8>(%rax)\nmovq %rdi,<16>(%rax)\nmovq %rsi,<24>(%rax)\nmovq %rcx,<32>(%rax)\nmovq %rdx,<40>(%rax)\nmovq -40(%rbp),%rax\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rsi\nmovq -168(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%r9\nleaq <.LC4>(%rip),%r12\nmovl $0,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rdi\nmovq %rdx,%rax\nmovq %rsi,%r10\nmovl $0,%r8d\nmovl $0,%ecx\nmovl $0,%edx\nmovq %rax,%rsi\ncall *%r9\n.LVL1:\n.LBB3:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -184(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\n.LBE2:\nmovq -184(%rbp),%rax\naddq $184,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "n := len(num)\nres := []string{}\nvar dfs func(string, int, int, int)\ndfs = func(path string, index, result, pre int) {\n\tif index == n && result == target {\n\t\tres = append(res, path)\n\t\treturn\n\t}\n\tfor i := index; i < n; i++ {\n\t\tif num[index] == '0' && i != index {\n\t\t\treturn\n\t\t}\n\t\tcurrStr := num[index : i+1]\n\t\tcurr, _ := strconv.Atoi(currStr)\n\t\tif index == 0 {\n\t\t\tdfs(currStr, i+1, curr, curr)\n\t\t} else {\n\t\t\tdfs(path+\"STR\"+currStr, i+1, result+curr, curr)\n\t\t\tdfs(path+\"STR\"+currStr, i+1, result-curr, -curr)\n\t\t\tdfs(path+\"STR\"+currStr, i+1, result-pre+pre*curr, pre*curr)\n\t\t}\n\t}\n}\ndfs(\"STR\", 0, 0, 0)\nreturn res"}
{"src": ".LFB1:\nleaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L23\nmovl $536,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r12\npushq %rbx\nsubq $496,%rsp\nmovq %rdi,-472(%rbp)\nleaq <.LC13>(%rip),%r10\nmovl $7,%r11d\nmovq %r10,-416(%rbp)\nmovq %r11,-408(%rbp)\nleaq <.LC14>(%rip),%r8\nmovl $13,%r9d\nmovq %r8,-400(%rbp)\nmovq %r9,-392(%rbp)\nleaq <.LC15>(%rip),%rcx\nmovl $12,%ebx\nmovq %rcx,-384(%rbp)\nmovq %rbx,-376(%rbp)\nleaq <.LC16>(%rip),%rax\nmovl $18,%edx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\n.LBB4:\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovl $2,%r12d\nmovl $0,%ebx\n.LBE7:\njmp .L5\n.L22:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\ntestq %rbx,%rbx\njs .L6\ncmpq $1,%rbx\njg .L6\nmovq %rbx,%rax\nsalq $5,%rax\nleaq -32(%rbp),%rdi\naddq %rdi,%rax\nleaq -288(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\n.LBE10:\n.LBB11:\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE11:\n.LBB12:\nmovq -464(%rbp),%rdx\nmovq -456(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem1108.defangIPaddr>\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\n.LBB13:\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq -424(%rbp),%rcx\nmovq %rdx,%rsi\ncmpq %rsi,%rcx\njne .L7\njmp .L20\n.L6:\n.LBE13:\n.LBE12:\n.LBB24:\nmovl $2,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\n.LBE24:\n.LBB25:\n.LBB23:\nmovq -432(%rbp),%rcx\nmovq %rax,%rsi\ncmpq %rsi,%rcx\nje .L9\nmovq %rdx,%rcx\nmovq %rcx,%rsi\nmovq %rax,%rcx\nmovq -432(%rbp),%rax\nmovq %rsi,%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L9\n.L7:\n.LBB14:\nleaq <string..d>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L10\n.LBB15:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE15:\njmp .L11\n.L10:\n.LBB16:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L11:\n.LBE16:\nmovq -216(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB17:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L13\n.L12:\n.LBB18:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L13:\n.LBE18:\nmovq -184(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L14\n.LBB19:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE19:\njmp .L15\n.L14:\n.LBB20:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L15:\n.LBE20:\nmovq -152(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -512(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nmovdqa -496(%rbp),%xmm2\nmovups %xmm2,-80(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L16\n.LBB21:\nmovq -120(%rbp),%rax\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -80(%rbp),%rsi\nmovq -72(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE21:\njmp .L17\n.L16:\n.LBB22:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L17:\n.LBE22:\nmovq -120(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq $3,-56(%rbp)\nmovq $3,-48(%rbp)\nleaq <.LC17>(%rip),%r14\nmovl $25,%r15d\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq -472(%rbp),%rax\nsubq $8,%rsp\npushq -48(%rbp)\npushq -56(%rbp)\npushq -64(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L9:\n.LBE14:\n.LBE23:\n.LBE25:\n.LBE9:\n.LBB26:\naddq $1,%rbx\n.L5:\n.LBE26:\ncmpq %r12,%rbx\njl .L22\n.LBE6:\n.LBE5:\n.LBE4:\nleaq -32(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   \"STR\",\n\t\twant: \"STR\",\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: \"STR\",\n\t},\n}\nfor _, tt := range tests {\n\tgot := defangIPaddr(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": ".LFB1:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L22\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $328,%rsp\nmovq %rdi,-344(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB6:\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq <go.day382.testcases>(%rip),%rax\nmovq <8+go.day382.testcases>(%rip),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16+go.day382.testcases>(%rip),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovl $0,%ebx\n.LBE9:\njmp .L6\n.L21:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -248(%rbp),%rax\ntestq %rbx,%rbx\njs .L7\ncmpq %rax,%rbx\njge .L7\nmovq -256(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\n.LBE12:\n.LBB13:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\n.LBE13:\n.LBB14:\n.LBB15:\nmovq -336(%rbp),%rdx\nmovq -328(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.day382.Base64DecodeDelegate>\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq -296(%rbp),%rcx\nmovq %rdx,%rsi\ncmpq %rsi,%rcx\njne .L8\njmp .L19\n.L7:\n.LBE15:\n.LBE14:\n.LBB24:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\n.LBE24:\n.LBB25:\n.LBB23:\nmovq -304(%rbp),%rcx\nmovq %rax,%rsi\ncmpq %rsi,%rcx\nje .L10\nmovq %rdx,%rcx\nmovq %rcx,%rsi\nmovq %rax,%rcx\nmovq -304(%rbp),%rax\nmovq %rsi,%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L10\n.L8:\n.LBB16:\nleaq <string..d>(%rip),%rax\nmovq %rax,-368(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L11\n.LBB17:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L12\n.L11:\n.LBB18:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L12:\n.LBE18:\nmovq -184(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq <string..d>(%rip),%r14\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB19:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE19:\njmp .L14\n.L13:\n.LBB20:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE20:\nmovq -152(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -368(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L15\n.LBB21:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE21:\njmp .L16\n.L15:\n.LBB22:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L16:\n.LBE22:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC8>(%rip),%r12\nmovl $19,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -344(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L10:\n.LBE16:\n.LBE23:\n.LBE25:\n.LBE11:\n.LBB26:\naddq $1,%rbx\n.L6:\n.LBE26:\ncmpq -352(%rbp),%rbx\njl .L21\n.LBE8:\n.LBE7:\n.LBE6:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif res := Base64DecodeDelegate(tc.base64); res != tc.decoded {\n\t\tt.Errorf(\"STR\", tc.decoded, res)\n\t}\n}"}
{"src": ".LFB0:\nleaq -776(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12\nmovl $776,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $728,%rsp\nmovq %rdi,-712(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-616(%rbp)\nmovq -616(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $1,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq $3,<40>(%rax)\nmovq -616(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $6,-584(%rbp)\nmovq $6,-576(%rbp)\nmovb $1,-568(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-608(%rbp)\nmovq -608(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq -608(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $2,-552(%rbp)\nmovq $2,-544(%rbp)\nmovb $0,-536(%rbp)\nleaq <type...610x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq $-3,(%rax)\nmovq $0,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $-3,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq $1,<40>(%rax)\nmovq $1,<48>(%rax)\nmovq $-3,<56>(%rax)\nmovq $10,<64>(%rax)\nmovq $0,<72>(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $10,-520(%rbp)\nmovq $10,-512(%rbp)\nmovb $1,-504(%rbp)\nleaq -592(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq $3,-632(%rbp)\nmovq $3,-624(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC37>(%rip),%rax\nmovq %rax,-736(%rbp)\nmovq $70,-728(%rbp)\nleaq -208(%rbp),%rax\nmovq -736(%rbp),%rcx\nmovq -728(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB2:\nmovq $0,-704(%rbp)\nmovq $0,-696(%rbp)\nmovq $0,-688(%rbp)\nmovq $0,-680(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -624(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-736(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L11:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE8:\n.LBB9:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\n.LBE9:\n.LBB10:\nmovzbl -680(%rbp),%eax\nmovb %al,-641(%rbp)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-656(%rbp)\nsubq $8,%rsp\npushq -656(%rbp)\npushq -664(%rbp)\npushq -672(%rbp)\ncall <go.leetcode.uniqueOccurrences>\naddq $32,%rsp\nmovb %al,-713(%rbp)\nleaq <go.leetcode..go.leetcode.para1207..d>(%rip),%rax\nmovq %rax,-768(%rbp)\nleaq <go.leetcode..go.leetcode.para1207..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L9\n.L3:\n.LBE10:\n.LBB13:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE13:\n.LBB14:\n.LBB11:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\njmp .L6\n.L9:\n.LBB12:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para1207..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -344(%rbp),%rax\nmovq %rax,-760(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-752(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovzbl -713(%rbp),%edi\nmovb %dil,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-744(%rbp)\nmovdqa -768(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -752(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC38>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE14:\n.LBE7:\n.LBB15:\naddq $1,%rbx\n.L2:\n.LBE15:\ncmpq -736(%rbp),%rbx\njl .L11\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC39>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1207{\n\t{\n\t\tpara1207{[]int{1, 2, 2, 1, 1, 3}},\n\t\tans1207{true},\n\t},\n\t{\n\t\tpara1207{[]int{1, 2}},\n\t\tans1207{false},\n\t},\n\t{\n\t\tpara1207{[]int{-3, 0, 1, -3, 1, 1, 1, -3, 10, 0}},\n\t\tans1207{true},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1207, q.para1207\n\tfmt.Printf(\"STR\", p, uniqueOccurrences(p.arr))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L28\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L28:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq $0,-48(%rbp)\n.LBB2:\nmovq $-1001,-8(%rbp)\nmovq $-1001,-16(%rbp)\nmovq $-1001,-24(%rbp)\nmovq $1001,-32(%rbp)\nmovq $1001,-40(%rbp)\n.LBB3:\nmovq $0,-56(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rdi\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L27:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njge .L3\nmovq -80(%rbp),%rdx\nmovq %rax,%rcx\nsalq $3,%rcx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\n.LBE9:\n.LBB10:\nmovq %rdx,-56(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\n.LBB13:\nmovl $1,%edx\nmovq -56(%rbp),%rcx\ncmpq -8(%rbp),%rcx\nsetg %cl\ncmpb %cl,%dl\njne .L22\njmp .L18\n.L3:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB31:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\n.LBE31:\n.LBB32:\n.LBB23:\n.LBB22:\n.LBB14:\n.LBB15:\nmovq -16(%rbp),%rsi\nmovq -8(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rsi,-24(%rbp)\nmovq %rcx,-16(%rbp)\nmovq %rdx,-8(%rbp)\n.LBE15:\n.LBE14:\njmp .L7\n.L22:\n.LBB16:\nnop\n.LBE16:\nmovq -56(%rbp),%rcx\ncmpq -16(%rbp),%rcx\nsetg %cl\ncmpb %cl,%dl\njne .L23\n.LBB17:\n.LBB18:\nmovq -16(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rcx,-24(%rbp)\nmovq %rdx,-16(%rbp)\n.LBE18:\n.LBE17:\njmp .L7\n.L23:\n.LBB19:\nnop\n.LBE19:\nmovq -56(%rbp),%rcx\ncmpq -24(%rbp),%rcx\nsetg %cl\ncmpb %cl,%dl\njne .L24\n.LBB20:\nmovq -56(%rbp),%rdx\nmovq %rdx,-24(%rbp)\n.LBE20:\njmp .L7\n.L24:\n.LBB21:\nnop\n.L7:\n.LBE21:\n.LBE22:\n.LBE23:\n.LBB24:\n.LBB25:\nmovl $1,%ecx\nmovq -56(%rbp),%rdx\ncmpq -32(%rbp),%rdx\nsetl %dl\ncmpb %dl,%cl\njne .L25\n.LBB26:\n.LBB27:\nmovq -32(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rcx,-40(%rbp)\nmovq %rdx,-32(%rbp)\n.LBE27:\n.LBE26:\njmp .L13\n.L25:\n.LBB28:\nnop\n.LBE28:\nmovq -56(%rbp),%rdx\ncmpq -40(%rbp),%rdx\nsetl %dl\ncmpb %dl,%cl\njne .L26\n.LBB29:\nmovq -56(%rbp),%rdx\nmovq %rdx,-40(%rbp)\n.LBE29:\njmp .L13\n.L26:\n.LBB30:\nnop\n.L13:\n.LBE30:\n.LBE25:\n.LBE24:\n.LBE32:\n.LBE8:\n.LBB33:\naddq $1,%rax\n.L2:\n.LBE33:\ncmpq %rdi,%rax\njl .L27\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB34:\nmovq -32(%rbp),%rax\nimulq -40(%rbp),%rax\nmovq %rax,%rdx\nmovq -16(%rbp),%rax\nimulq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem0628.bigger>\nimulq -8(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.LBE34:\n.LBE2:\nleave\nret", "tgt": "max := -1001\nmax1 := -1001\nmax2 := -1001\nmin1 := 1001\nmin2 := 1001\nfor _, n := range nums {\n\tswitch {\n\tcase n > max:\n\t\tmax2, max1, max = max1, max, n\n\tcase n > max1:\n\t\tmax2, max1 = max1, n\n\tcase n > max2:\n\t\tmax2 = n\n\t}\n\tswitch {\n\tcase n < min1:\n\t\tmin2, min1 = min1, n\n\tcase n < min2:\n\t\tmin2 = n\n\t}\n}\nreturn bigger(max1*max2, min1*min2) * max"}
{"src": ".LFB0:\nleaq -440(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L22\nmovl $440,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $392,%rsp\nmovq %rdi,-328(%rbp)\npxor %xmm0,%xmm0\nmovsd %xmm0,-56(%rbp)\npxor %xmm0,%xmm0\nmovsd %xmm0,-64(%rbp)\nmovq $0,-72(%rbp)\npxor %xmm0,%xmm0\nmovsd %xmm0,-56(%rbp)\nmovsd <.LC6>(%rip),%xmm0\nmovsd %xmm0,-64(%rbp)\nmovq $2147483647,-72(%rbp)\n.LBB2:\nmovq -72(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%xmm0\ncall <go.leetcode.myPow>\nmovq %xmm0,%rax\nmovq %rax,%xmm1\nucomisd -56(%rbp),%xmm1\njp .L18\nmovq %rax,%xmm2\ncomisd -56(%rbp),%xmm2\nje .L2\n.L18:\n.LBB3:\nleaq <float64..d>(%rip),%rax\nmovq %rax,-432(%rbp)\nleaq <float64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-320(%rbp)\nmovq -320(%rbp),%rax\nmovsd -56(%rbp),%xmm0\nmovsd %xmm0,(%rax)\nmovq -320(%rbp),%rax\nmovq %rax,-424(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovdqa -432(%rbp),%xmm3\nmovups %xmm3,-304(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -312(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -312(%rbp),%rcx\nleaq -304(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -312(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $1,-184(%rbp)\nmovq $1,-176(%rbp)\nleaq <.LC7>(%rip),%r12\nmovl $14,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -176(%rbp)\npushq -184(%rbp)\npushq -192(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L2:\n.LBE3:\n.LBE2:\nmovsd <.LC8>(%rip),%xmm0\nmovsd %xmm0,-56(%rbp)\nmovsd <.LC9>(%rip),%xmm0\nmovsd %xmm0,-64(%rbp)\nmovq $0,-72(%rbp)\n.LBB6:\nmovq -72(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%xmm0\ncall <go.leetcode.myPow>\nmovq %xmm0,%rax\nmovq %rax,%xmm4\nucomisd -56(%rbp),%xmm4\njp .L19\nmovq %rax,%xmm5\ncomisd -56(%rbp),%xmm5\nje .L6\n.L19:\n.LBB7:\nleaq <float64..d>(%rip),%rax\nmovq %rax,-416(%rbp)\nleaq <float64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-288(%rbp)\nmovq -288(%rbp),%rax\nmovsd -56(%rbp),%xmm0\nmovsd %xmm0,(%rax)\nmovq -288(%rbp),%rax\nmovq %rax,-408(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovdqa -416(%rbp),%xmm6\nmovups %xmm6,-272(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB8:\nmovq -280(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE8:\njmp .L9\n.L8:\n.LBB9:\nmovq -280(%rbp),%rax\nleaq -272(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE9:\nmovq -280(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $1,-152(%rbp)\nmovq $1,-144(%rbp)\nleaq <.LC7>(%rip),%rax\nmovq %rax,-368(%rbp)\nmovq $14,-360(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L6:\n.LBE7:\n.LBE6:\nmovsd <.LC10>(%rip),%xmm0\nmovsd %xmm0,-56(%rbp)\nmovsd <.LC10>(%rip),%xmm0\nmovsd %xmm0,-64(%rbp)\nmovq $1,-72(%rbp)\n.LBB10:\nmovq -72(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%xmm0\ncall <go.leetcode.myPow>\nmovq %xmm0,%rax\nmovq %rax,%xmm7\nucomisd -56(%rbp),%xmm7\njp .L20\nmovq %rax,%xmm1\ncomisd -56(%rbp),%xmm1\nje .L10\n.L20:\n.LBB11:\nleaq <float64..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <float64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-256(%rbp)\nmovq -256(%rbp),%rax\nmovsd -56(%rbp),%xmm0\nmovsd %xmm0,(%rax)\nmovq -256(%rbp),%rax\nmovq %rax,-392(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovdqa -400(%rbp),%xmm2\nmovups %xmm2,-240(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB12:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE12:\njmp .L13\n.L12:\n.LBB13:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L13:\n.LBE13:\nmovq -248(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq $1,-112(%rbp)\nleaq <.LC7>(%rip),%rax\nmovq %rax,-352(%rbp)\nmovq $14,-344(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L10:\n.LBE11:\n.LBE10:\nmovsd <.LC11>(%rip),%xmm0\nmovsd %xmm0,-56(%rbp)\nmovsd <.LC9>(%rip),%xmm0\nmovsd %xmm0,-64(%rbp)\nmovq $-2,-72(%rbp)\n.LBB14:\nmovq -72(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%xmm0\ncall <go.leetcode.myPow>\nmovq %xmm0,%rax\nmovq %rax,%xmm3\nucomisd -56(%rbp),%xmm3\njp .L21\nmovq %rax,%xmm4\ncomisd -56(%rbp),%xmm4\nje .L1\n.L21:\n.LBB15:\nleaq <float64..d>(%rip),%rax\nmovq %rax,-384(%rbp)\nleaq <float64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-224(%rbp)\nmovq -224(%rbp),%rax\nmovsd -56(%rbp),%xmm0\nmovsd %xmm0,(%rax)\nmovq -224(%rbp),%rax\nmovq %rax,-376(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovdqa -384(%rbp),%xmm5\nmovups %xmm5,-208(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L16\n.LBB16:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE16:\njmp .L17\n.L16:\n.LBB17:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L17:\n.LBE17:\nmovq -216(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq <.LC7>(%rip),%r14\nmovl $14,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L1:\n.LBE15:\n.LBE14:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var ret float64\nvar x float64\nvar n int\nret = 0\nx = 0.00001\nn = 2147483647\nif ret != myPow(x, n) {\n\tt.Fatalf(\"STR\", ret)\n}\nret = 1.0000\nx = 2\nn = 0\nif ret != myPow(x, n) {\n\tt.Fatalf(\"STR\", ret)\n}\nret = 10.0000\nx = 10.0000\nn = 1\nif ret != myPow(x, n) {\n\tt.Fatalf(\"STR\", ret)\n}\nret = 0.25000\nx = 2.0000\nn = -2\nif ret != myPow(x, n) {\n\tt.Fatalf(\"STR\", ret)\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L16\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $176,%rsp\nmovq %rdi,-184(%rbp)\nmovq %rsi,-192(%rbp)\n.LBB2:\n.LBB3:\njmp .L2\n.L15:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq -184(%rbp),%rax\nmovq <8>(%rax),%rsi\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-160(%rbp)\nleaq -1(%rsi),%rdi\nmovq -160(%rbp),%rax\ntestq %rdi,%rdi\njs .L3\ncmpq %rax,%rdi\njg .L3\ntestq %rdi,%rdi\njns .L4\njmp .L13\n.L3:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L13:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L4:\nmovq -176(%rbp),%rcx\nmovq -160(%rbp),%rdx\nmovq -184(%rbp),%rax\nmovq %rcx,(%rax)\nmovq -184(%rbp),%rax\nmovq %rdi,<8>(%rax)\nmovq -184(%rbp),%rax\nmovq %rdx,<16>(%rax)\n.L2:\n.LBE5:\n.LBB6:\nmovq -184(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsetg %al\ntestb %al,%al\nje .L6\n.LBB7:\nmovq -184(%rbp),%rax\nmovq <8>(%rax),%rsi\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-128(%rbp)\nleaq -1(%rsi),%rax\nmovq -136(%rbp),%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njge .L7\nmovq -144(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-192(%rbp)\nsetg %al\njmp .L6\n.L7:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE7:\n.LBE6:\ntestb %al,%al\njne .L15\n.LBE3:\n.LBE2:\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L10\n.LBB8:\nmovq -184(%rbp),%rbx\nmovq -112(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -64(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L11\n.LBB9:\nmovq -80(%rbp),%rax\nmovq %rax,(%rbx)\n.LBE9:\njmp .L12\n.L11:\n.LBB10:\nmovq -80(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L12\n.L10:\n.LBE10:\n.LBE8:\n.LBB11:\nmovq -112(%rbp),%rsi\nmovq -96(%rbp),%rdx\nmovq -184(%rbp),%rcx\nmovq %rsi,(%rcx)\nmovq -184(%rbp),%rcx\nmovq %rax,<8>(%rcx)\nmovq -184(%rbp),%rax\nmovq %rdx,<16>(%rax)\n.L12:\n.LBE11:\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -192(%rbp),%rax\nmovq %rax,(%rdx)\naddq $176,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "for len(w.data) > 0 && w.data[len(w.data)-1] < n {\n\tw.data = w.data[0 : len(w.data)-1]\n}\nw.data = append(w.data, n)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L8\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq -40(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L7:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\naddq $1,-8(%rbp)\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-16(%rbp)\n.L2:\n.LBE6:\ncmpq $0,-16(%rbp)\njne .L7\n.LBE4:\n.LBE3:\n.LBB7:\nmovq -8(%rbp),%rax\nleaq -1(%rax),%rdx\nleaq -40(%rbp),%rax\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.convert_sorted_list_to_binary_search_tree.helper>\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE7:\n.LBE2:\nleave\nret", "tgt": "n := 0\ntmp := head\nfor tmp != nil {\n\tn++\n\ttmp = tmp.Next\n}\nreturn helper(&head, 0, n-1)"}
{"src": ".LFB0:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L7\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nleaq <.LC5>(%rip),%rax\nmovl $6,%edx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <html..z2ftemplate.New@PLT>\nmovq %rax,%rsi\nleaq <.LC6>(%rip),%rax\nmovq %rax,-288(%rbp)\nmovq $32,-280(%rbp)\nleaq -112(%rbp),%rax\nmovq -288(%rbp),%rdx\nmovq -280(%rbp),%rcx\nmovq %rax,%rdi\ncall <html..z2ftemplate.Template.Parse@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rax\nmovq -176(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <html..z2ftemplate.Must@PLT>\nmovq %rax,-56(%rbp)\nmovq $0,-224(%rbp)\nmovq $0,-216(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nleaq <.LC7>(%rip),%rax\nmovq %rax,-272(%rbp)\nmovq $13,-264(%rbp)\nmovdqa -272(%rbp),%xmm0\nmovups %xmm0,-224(%rbp)\nmovq %rax,-256(%rbp)\nmovq $13,-248(%rbp)\nmovdqa -256(%rbp),%xmm1\nmovups %xmm1,-208(%rbp)\n.LBB2:\nleaq <type..struct.4A.0string.2B.0html..z2ftemplate.HTML.5>(%rip),%r14\nleaq <type..struct.4A.0string.2B.0html..z2ftemplate.HTML.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4A.0string.2B.0html..z2ftemplate.HTML.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -168(%rbp),%rax\nmovq %rax,%r15\nleaq <pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%r12\nmovq <os.Stdout>(%rip),%rax\nmovq %rax,%r13\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <html..z2ftemplate.Template.Execute@PLT>\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -240(%rbp),%rax\ntestq %rax,%rax\nje .L1\n.LBB5:\nmovq -240(%rbp),%rax\ntestq %rax,%rax\njne .L5\nmovl $0,%eax\njmp .L6\n.L5:\nmovq -240(%rbp),%rax\nmovq (%rax),%rax\n.L6:\nmovq %rax,-304(%rbp)\nmovq -232(%rbp),%rax\nmovq %rax,-296(%rbp)\nmovdqa -304(%rbp),%xmm2\nmovups %xmm2,-128(%rbp)\nleaq -128(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $1,-72(%rbp)\nmovq $1,-64(%rbp)\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\ncall <log.Fatal@PLT>\naddq $32,%rsp\n.L1:\n.LBE5:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "const templ = `<p>A:{{.A}}</p><p>B:{{.B}}</p>`\nt := template.Must(template.New(\"STR\").Parse(templ))\nvar data struct {\n\tA string\n\tBtemplate.HTML\n}\ndata.A = \"STR\"\ndata.B = \"STR\"\nif err := t.Execute(os.Stdout, data); err != nil {\n\tlog.Fatal(err)\n}"}
{"src": ".LFB2:\nleaq -424(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L109\nmovl $424,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L109:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $408,%rsp\nmovq %rdi,-408(%rbp)\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\n.LBB42:\n.LBB43:\nmovq <24>(%rbp),%rdx\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L45\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L45:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\ncmpq %rax,%rdx\njne .L46\n.LBB44:\n.LBB45:\nmovq $0,-24(%rbp)\n.LBB46:\njmp .L47\n.L106:\n.LBB47:\nnop\n.LBE47:\n.LBB48:\n.LBB49:\nmovq $0,-32(%rbp)\n.LBB50:\njmp .L48\n.L105:\n.LBB51:\nnop\n.LBE51:\n.LBB52:\n.LBB53:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\nje .L104\n.LBE53:\n.LBB55:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -24(%rbp),%rax\nmovq -328(%rbp),%rdx\ntestq %rax,%rax\njs .L51\ncmpq %rdx,%rax\njl .L90\n.L51:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L90:\nmovq -336(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-288(%rbp)\nmovq -32(%rbp),%rcx\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -32(%rbp),%rax\nmovq -264(%rbp),%rdx\ntestq %rax,%rax\njs .L53\ncmpq %rdx,%rax\njl .L91\n.L53:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L91:\nmovq -272(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rsi\nmovq (%rsi),%rax\nmovq <8>(%rsi),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rsi),%rax\nmovq %rax,-224(%rbp)\nmovq -24(%rbp),%rdx\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L55\ncmpq %rax,-32(%rbp)\njl .L92\n.L55:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L92:\nmovq <16>(%rbp),%rdi\nmovq -32(%rbp),%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\naddq %rdi,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-208(%rbp)\nmovq %rdi,-200(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L57\ncmpq %rax,-24(%rbp)\njge .L57\nmovq -208(%rbp),%rsi\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%r8\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njns .L58\njmp .L59\n.L57:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\ncmpq %rax,-24(%rbp)\njl .L93\n.L59:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L93:\nmovq <16>(%rbp),%rdi\nmovq -24(%rbp),%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\naddq %rdi,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-176(%rbp)\nmovq %rdi,-168(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L61\ncmpq %rax,-32(%rbp)\njge .L61\nmovq -176(%rbp),%rsi\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%rsi\nmovq -296(%rbp),%rax\ntestq %rcx,%rcx\njns .L62\njmp .L63\n.L61:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\ncmpq %rax,%rcx\njl .L94\n.L63:\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L94:\nmovq -304(%rbp),%rax\nsalq $3,%rcx\naddq %rcx,%rax\nmovq %r8,(%rax)\nmovq -232(%rbp),%rax\ntestq %rdx,%rdx\njs .L65\ncmpq %rax,%rdx\njl .L95\n.L65:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L95:\nmovq -240(%rbp),%rax\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE55:\n.LBE52:\n.LBB57:\naddq $1,-32(%rbp)\n.L48:\n.LBE57:\nmovq <24>(%rbp),%rax\ncmpq %rax,-32(%rbp)\njl .L105\njmp .L50\n.L104:\n.LBB58:\n.LBB56:\n.LBB54:\nnop\n.L50:\n.LBE54:\n.LBE56:\n.LBE58:\n.LBE50:\n.LBE49:\n.LBE48:\n.LBB59:\naddq $1,-24(%rbp)\n.L47:\n.LBE59:\nmovq <24>(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L106\n.LBE46:\n.LBE45:\n.LBB60:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -408(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L44\n.L46:\n.LBE60:\n.LBE44:\n.LBE43:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L71\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L71:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-400(%rbp)\nmovq %rbx,-392(%rbp)\nmovq %rbx,-384(%rbp)\n.LBB61:\nmovq $0,-40(%rbp)\n.LBB62:\njmp .L72\n.L108:\n.LBB63:\nnop\n.LBE63:\n.LBB64:\nmovq <24>(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -392(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L73\ncmpq %rax,-40(%rbp)\njl .L98\n.L73:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L98:\nmovq -400(%rbp),%rsi\nmovq -40(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq %rdx,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq %rbx,-128(%rbp)\nmovq -136(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -128(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L75\n.LBB65:\nmovq -144(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L76\n.L75:\n.LBE65:\n.LBB66:\nmovq -144(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L76:\n.LBE66:\n.LBB67:\nmovq $0,-48(%rbp)\n.LBB68:\njmp .L77\n.L107:\n.LBB69:\nnop\n.LBE69:\n.LBB70:\nmovq -392(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L78\ncmpq %rax,-40(%rbp)\njl .L99\n.L78:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L99:\nmovq -400(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L80\ncmpq %rax,-48(%rbp)\njl .L100\n.L80:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L100:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L82\ncmpq %rax,-48(%rbp)\njl .L101\n.L82:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L101:\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L84\ncmpq %rax,-40(%rbp)\njge .L84\nmovq -80(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -112(%rbp),%rcx\nmovq -48(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\n.LBE70:\n.LBB71:\naddq $1,-48(%rbp)\njmp .L77\n.L84:\n.LBE71:\n.LBB72:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L77:\n.LBE72:\nmovq <24>(%rbp),%rax\ncmpq %rax,-48(%rbp)\njl .L107\n.LBE68:\n.LBE67:\n.LBE64:\n.LBB73:\naddq $1,-40(%rbp)\n.L72:\n.LBE73:\nmovq -392(%rbp),%rax\ncmpq %rax,-40(%rbp)\njl .L108\n.LBE62:\n.LBE61:\n.LBB74:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -408(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L44:\n.LBE74:\n.LBE42:\nmovq -408(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if len(A) == len(A[0]) {\n\tfor i := 0; i < len(A); i++ {\n\t\tfor j := 0; j < len(A); j++ {\n\t\t\tif i == j {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tA[i][j], A[j][i] = A[j][i], A[i][j]\n\t\t}\n\t}\n\treturn A\n}\nres := make([][]int, len(A[0]))\nfor i := 0; i < len(res); i++ {\n\tres[i] = make([]int, len(A))\n\tfor j := 0; j < len(A); j++ {\n\t\tres[i][j] = A[j][i]\n\t}\n}\nreturn res"}
{"src": ".LFB71:\ncmpq %fs:112,%rsp\njnb .L1015\nmovl $248,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL82:\nret\n.L1015:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $208,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r10\nmovq %r10,%rsi\nmovq %r11,%rdi\nmovq %rax,%rdi\nmovq %rsi,-208(%rbp)\nmovq %rdi,-200(%rbp)\nmovq %rdx,-224(%rbp)\nmovq %rcx,-216(%rbp)\nmovq %r8,-240(%rbp)\nmovq %r9,-232(%rbp)\nmovq $0,-40(%rbp)\n.LBB667:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-48(%rbp)\nleaq -144(%rbp),%rax\nmovq -224(%rbp),%rcx\nmovq -216(%rbp),%rdi\nmovq -208(%rbp),%rsi\nmovq -200(%rbp),%rdx\nmovq %rdi,%r8\nmovq %rax,%rdi\ncall <strings.Split@PLT>\n.LBB668:\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\n.LBB669:\n.LBB670:\n.LBB671:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r14\nmovl $0,%ebx\n.LBE671:\njmp .L1002\n.L1014:\n.LBB672:\nnop\n.LBE672:\n.LBB673:\n.LBB674:\nmovq -104(%rbp),%rax\ntestq %rbx,%rbx\njs .L1003\ncmpq %rax,%rbx\njge .L1003\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE674:\n.LBB675:\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\n.LBE675:\n.LBB676:\nleaq -192(%rbp),%rax\nmovq -240(%rbp),%rcx\nmovq -232(%rbp),%rdi\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdx\nmovq %rdi,%r8\nmovq %rax,%rdi\ncall <strings.Split@PLT>\n.LBB677:\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rax\ntestq %rax,%rax\njg .L1004\njmp .L1012\n.L1003:\n.LBE677:\n.LBE676:\n.LBB681:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1012:\n.LBE681:\n.LBB682:\n.LBB680:\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1004:\nmovq -80(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq -184(%rbp),%rcx\ncmpq $1,%rcx\njg .L1006\nmovq %rcx,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1006:\nmovq -192(%rbp),%rcx\nmovq <16>(%rcx),%r12\nmovq <24>(%rcx),%r13\nmovq -48(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L1007\n.LBB678:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L1008\n.L1007:\n.LBE678:\n.LBB679:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L1008:\n.LBE679:\n.LBE680:\n.LBE682:\n.LBE673:\n.LBB683:\naddq $1,%rbx\n.L1002:\n.LBE683:\ncmpq %r14,%rbx\njl .L1014\n.LBE670:\n.LBE669:\n.LBE668:\n.LBB684:\nmovq -48(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE684:\n.LBE667:\naddq $208,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "out := make(map[string]string)\nmain_pieces := strings.Split(s, sep1)\nfor _, piece := range main_pieces {\n\tminor_pieces := strings.Split(piece, sep2)\n\tout[minor_pieces[0]] = minor_pieces[1]\n}\nreturn out"}
{"src": ".LFB2:\nleaq -408(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L105\nmovl $408,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L105:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $360,%rsp\nmovq %rdi,-376(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB89:\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\n.LBB90:\n.LBB91:\n.LBB92:\nmovq <go.day195.testcases>(%rip),%rax\nmovq <8+go.day195.testcases>(%rip),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16+go.day195.testcases>(%rip),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovl $0,%ebx\n.LBE92:\njmp .L95\n.L104:\n.LBB93:\nnop\n.LBE93:\n.LBB94:\n.LBB95:\nmovq -232(%rbp),%rax\ntestq %rbx,%rbx\njs .L96\ncmpq %rax,%rbx\njge .L96\nmovq -240(%rbp),%rax\nmovq %rbx,%rdx\nsalq $6,%rdx\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-288(%rbp)\nmovq %rdi,-280(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq <56>(%rax),%rdx\nmovq <48>(%rax),%rax\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBE95:\n.LBB96:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\n.LBE96:\n.LBB97:\n.LBB98:\nmovq -320(%rbp),%rcx\nmovq -328(%rbp),%rdx\nmovq -336(%rbp),%rsi\nmovq -344(%rbp),%rax\nsubq $8,%rsp\npushq -352(%rbp)\npushq -360(%rbp)\npushq -368(%rbp)\nmovq %rax,%rdi\ncall <go.day195.CountLargerAndSmallerBrute>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\nmovq -312(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L97\njmp .L98\n.L96:\n.LBE98:\n.LBE97:\n.LBB103:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L97:\n.LBE103:\n.LBB104:\n.LBB102:\n.LBB99:\nleaq <int..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-392(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -400(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L99\n.LBB100:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE100:\njmp .L100\n.L99:\n.LBB101:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L100:\n.LBE101:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC10>(%rip),%r12\nmovl $19,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -376(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L98:\n.LBE99:\n.LBE102:\n.LBE104:\n.LBE94:\n.LBB105:\naddq $1,%rbx\n.L95:\n.LBE105:\ncmpq -384(%rbp),%rbx\njl .L104\n.LBE91:\n.LBE90:\n.LBE89:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := CountLargerAndSmallerBrute(tc.mat, tc.i1, tc.j1, tc.i2, tc.j2); result != tc.count {\n\t\tt.Errorf(\"STR\", tc.count, result)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L12\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq $0,-24(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq $0,-8(%rbp)\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L11:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -8(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-40(%rbp)\nmovq -32(%rbp),%rax\nsubq -40(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-48(%rbp)\n.LBB7:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L3\ncmpq %rax,-48(%rbp)\njl .L9\n.L3:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9:\nmovq <16>(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\njge .L5\n.LBB8:\nmovq -40(%rbp),%rax\naddq $1,%rax\nmovq %rax,-8(%rbp)\n.LBE8:\njmp .L2\n.L5:\n.LBB9:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.L2:\n.LBE9:\n.LBE7:\n.LBE6:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njle .L11\n.LBE4:\n.LBE3:\n.LBB10:\nmovq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE10:\n.LBE2:\nleave\nret", "tgt": "size := len(a)\nlo, hi := 0, size-1\nvar miD, miA int\nfor lo <= hi {\n\tmiD = (lo + hi) / 2\n\tmiA = size - miD - 1\n\tif a[miA] > miD {\n\t\tlo = miD + 1\n\t} else {\n\t\thi = miD - 1\n\t}\n}\nreturn lo"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L17\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L17:\npushq %rbp\nmovq %rsp,%rbp\nsubq $144,%rsp\nmovq %rdi,-136(%rbp)\nmovq %rsi,-144(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\nleaq -96(%rbp),%rdx\nmovq -136(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.dfs>\nleaq -128(%rbp),%rdx\nmovq -144(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.dfs>\n.LBB3:\nmovq -88(%rbp),%rdx\nmovq -120(%rbp),%rax\ncmpq %rax,%rdx\nje .L2\n.LBB4:\n.LBB5:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L12\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq $0,-16(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -40(%rbp),%rcx\nmovl $0,%eax\n.LBE9:\njmp .L4\n.L16:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\nmovq %rax,-16(%rbp)\n.LBB12:\n.LBB13:\nmovq -88(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L5\ncmpq %rdx,-16(%rbp)\njl .L13\n.L5:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\nmovq -120(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L7\ncmpq %rdx,-16(%rbp)\njl .L14\n.L7:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq -96(%rbp),%rsi\nmovq -16(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rsi\nmovq -128(%rbp),%rdi\nmovq -16(%rbp),%rdx\nsalq $3,%rdx\naddq %rdi,%rdx\nmovq (%rdx),%rdx\ncmpq %rdx,%rsi\nje .L9\n.LBB14:\n.LBB15:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L12\n.L9:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB16:\naddq $1,%rax\n.L4:\n.LBE16:\ncmpq %rcx,%rax\njl .L16\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB17:\nmovb $1,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L12:\n.LBE17:\n.LBE2:\nleave\nret", "tgt": "l1, l2 := []int{}, []int{}\ndfs(root1, &l1)\ndfs(root2, &l2)\nif len(l1) != len(l2) {\n\treturn false\n}\nfor i, _ := range l1 {\n\tif l1[i] != l2[i] {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": ".LFB3:\nleaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L51\nmovl $520,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L51:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nmovq %rdi,-424(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB68:\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\nmovq $0,-400(%rbp)\nmovq $0,-392(%rbp)\nmovq $0,-384(%rbp)\n.LBB69:\n.LBB70:\n.LBB71:\nmovq <go.day294.testcases>(%rip),%rax\nmovq <8+go.day294.testcases>(%rip),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16+go.day294.testcases>(%rip),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%r15\nmovl $0,%r14d\n.LBE71:\njmp .L36\n.L50:\n.LBB72:\nnop\n.LBE72:\n.LBB73:\n.LBB74:\nmovq -296(%rbp),%rax\ntestq %r14,%r14\njs .L37\ncmpq %rax,%r14\njge .L37\nmovq -304(%rbp),%rdx\nmovq %r14,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <32>(%rcx),%rax\nmovq %rax,-320(%rbp)\n.LBE74:\n.LBB75:\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE75:\n.LBB76:\n.LBB77:\nmovq -408(%rbp),%rax\nmovq -416(%rbp),%rcx\nleaq -112(%rbp),%rdi\nmovq %rax,%rdx\nmovq %rcx,%rsi\ncall <go.day294.ShortestRunnerPath>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -216(%rbp),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\n.LBB78:\nmovq -400(%rbp),%rax\ncmpq %rax,-56(%rbp)\nsetne %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\njne .L38\njmp .L39\n.L37:\n.LBE78:\n.LBE77:\n.LBE76:\n.LBB85:\nmovq %rax,%rsi\nmovq %r14,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\n.LBE85:\n.LBB86:\n.LBB84:\n.LBB80:\n.LBB79:\nmovq -392(%rbp),%rax\nmovq -384(%rbp),%rdx\nmovq -368(%rbp),%rdi\nmovq -360(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.ifaceeq@PLT>\nxorl $1,%eax\n.L39:\n.LBE79:\n.LBE80:\ntestb %al,%al\nje .L40\n.LBB81:\nmovq -392(%rbp),%r12\nmovq -384(%rbp),%r13\nleaq <int..d>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rdx\nmovq -400(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -200(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq %r12,%rax\ntestq %rax,%rax\njne .L41\nmovl $0,%eax\njmp .L42\n.L41:\nmovq %r12,%rax\nmovq (%rax),%rax\n.L42:\nmovq %rax,-496(%rbp)\nmovq %r13,%rax\nmovq %rax,-488(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-192(%rbp)\nmovq -192(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -192(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq -368(%rbp),%rax\ntestq %rax,%rax\njne .L43\nmovl $0,%eax\njmp .L44\n.L43:\nmovq -368(%rbp),%rax\nmovq (%rax),%rax\n.L44:\nmovq %rax,-464(%rbp)\nmovq -360(%rbp),%rax\nmovq %rax,-456(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovdqa -512(%rbp),%xmm0\nmovups %xmm0,-176(%rbp)\nmovdqa -496(%rbp),%xmm1\nmovups %xmm1,-160(%rbp)\nmovdqa -480(%rbp),%xmm2\nmovups %xmm2,-144(%rbp)\nmovdqa -464(%rbp),%xmm3\nmovups %xmm3,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L45\n.LBB82:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\n.LBE82:\njmp .L46\n.L45:\n.LBB83:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L46:\n.LBE83:\nmovq -184(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $4,-72(%rbp)\nmovq $4,-64(%rbp)\nleaq <.LC48>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $29,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -424(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L40:\n.LBE81:\n.LBE84:\n.LBE86:\n.LBE73:\n.LBB87:\naddq $1,%r14\n.L36:\n.LBE87:\ncmpq %r15,%r14\njl .L50\n.LBE70:\n.LBE69:\n.LBE68:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result, err := ShortestRunnerPath(tc.elevations, tc.paths); result != tc.shortestRoute || err != tc.err {\n\t\tt.Errorf(\"STR\", tc.shortestRoute, tc.err, result, err)\n\t}\n}"}
{"src": ".LFB0:\nleaq -1384(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L37\nmovl $1384,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1336,%rsp\nmovq %rdi,-1256(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-1280(%rbp)\nmovq %rdx,-1272(%rbp)\nmovq $0,-1200(%rbp)\nmovq $0,-1192(%rbp)\nmovq $0,-1184(%rbp)\n.LBB2:\nleaq <.LC20>(%rip),%r8\nmovl $1,%r9d\nmovq %r8,-608(%rbp)\nmovq %r9,-600(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-1176(%rbp)\nleaq <.LC21>(%rip),%rax\nmovq %rax,-1168(%rbp)\nmovq $1,-1160(%rbp)\nleaq <.LC22>(%rip),%rax\nmovq %rax,-1152(%rbp)\nmovq $1,-1144(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-1136(%rbp)\nmovq $1,-1128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -1176(%rbp),%rcx\nmovq -1168(%rbp),%rax\nmovq -1160(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -1152(%rbp),%rax\nmovq -1144(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -1136(%rbp),%rax\nmovq -1128(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -1176(%rbp),%rcx\nleaq -1168(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -1176(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $3,-584(%rbp)\nmovq $3,-576(%rbp)\nleaq <.LC24>(%rip),%r12\nmovl $1,%r13d\nmovq %r12,-568(%rbp)\nmovq %r13,-560(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-1112(%rbp)\nleaq <.LC25>(%rip),%rax\nmovq %rax,-1104(%rbp)\nmovq $1,-1096(%rbp)\nleaq <.LC26>(%rip),%rax\nmovq %rax,-1088(%rbp)\nmovq $1,-1080(%rbp)\nleaq <.LC27>(%rip),%rax\nmovq %rax,-1072(%rbp)\nmovq $1,-1064(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB5:\nmovq -1112(%rbp),%rcx\nmovq -1104(%rbp),%rax\nmovq -1096(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -1088(%rbp),%rax\nmovq -1080(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -1072(%rbp),%rax\nmovq -1064(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE5:\njmp .L5\n.L4:\n.LBB6:\nmovq -1112(%rbp),%rcx\nleaq -1104(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE6:\nmovq -1112(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovq $3,-544(%rbp)\nmovq $3,-536(%rbp)\nleaq <.LC28>(%rip),%r14\nmovl $1,%r15d\nmovq %r14,-528(%rbp)\nmovq %r15,-520(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-1048(%rbp)\nleaq <.LC29>(%rip),%rax\nmovq %rax,-1040(%rbp)\nmovq $1,-1032(%rbp)\nleaq <.LC30>(%rip),%rax\nmovq %rax,-1024(%rbp)\nmovq $1,-1016(%rbp)\nleaq <.LC31>(%rip),%rax\nmovq %rax,-1008(%rbp)\nmovq $1,-1000(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB7:\nmovq -1048(%rbp),%rcx\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -1008(%rbp),%rax\nmovq -1000(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE7:\njmp .L7\n.L6:\n.LBB8:\nmovq -1048(%rbp),%rax\nleaq -1040(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE8:\nmovq -1048(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovq $3,-504(%rbp)\nmovq $3,-496(%rbp)\nleaq <.LC32>(%rip),%rax\nmovq %rax,-1376(%rbp)\nmovq $1,-1368(%rbp)\nmovdqa -1376(%rbp),%xmm0\nmovups %xmm0,-488(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-984(%rbp)\nleaq <.LC33>(%rip),%rax\nmovq %rax,-976(%rbp)\nmovq $1,-968(%rbp)\nleaq <.LC34>(%rip),%rax\nmovq %rax,-960(%rbp)\nmovq $1,-952(%rbp)\nleaq <.LC35>(%rip),%rax\nmovq %rax,-944(%rbp)\nmovq $1,-936(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB9:\nmovq -984(%rbp),%rax\nmovq -976(%rbp),%rcx\nmovq -968(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -960(%rbp),%rcx\nmovq -952(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -944(%rbp),%rcx\nmovq -936(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE9:\njmp .L9\n.L8:\n.LBB10:\nmovq -984(%rbp),%rax\nleaq -976(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE10:\nmovq -984(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq $3,-464(%rbp)\nmovq $3,-456(%rbp)\nleaq <.LC36>(%rip),%rax\nmovq %rax,-1360(%rbp)\nmovq $1,-1352(%rbp)\nmovdqa -1360(%rbp),%xmm1\nmovups %xmm1,-448(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-920(%rbp)\nleaq <.LC37>(%rip),%rax\nmovq %rax,-912(%rbp)\nmovq $1,-904(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-896(%rbp)\nmovq $1,-888(%rbp)\nleaq <.LC39>(%rip),%rax\nmovq %rax,-880(%rbp)\nmovq $1,-872(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L10\n.LBB11:\nmovq -920(%rbp),%rax\nmovq -912(%rbp),%rcx\nmovq -904(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -896(%rbp),%rcx\nmovq -888(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -880(%rbp),%rcx\nmovq -872(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE11:\njmp .L11\n.L10:\n.LBB12:\nmovq -920(%rbp),%rax\nleaq -912(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L11:\n.LBE12:\nmovq -920(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq $3,-424(%rbp)\nmovq $3,-416(%rbp)\nleaq <.LC40>(%rip),%rax\nmovq %rax,-1344(%rbp)\nmovq $1,-1336(%rbp)\nmovdqa -1344(%rbp),%xmm2\nmovups %xmm2,-408(%rbp)\nleaq <type...64x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-856(%rbp)\nleaq <.LC41>(%rip),%rax\nmovq %rax,-848(%rbp)\nmovq $1,-840(%rbp)\nleaq <.LC42>(%rip),%rax\nmovq %rax,-832(%rbp)\nmovq $1,-824(%rbp)\nleaq <.LC43>(%rip),%rax\nmovq %rax,-816(%rbp)\nmovq $1,-808(%rbp)\nleaq <.LC44>(%rip),%rax\nmovq %rax,-800(%rbp)\nmovq $1,-792(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB13:\nmovq -856(%rbp),%rax\nmovq -848(%rbp),%rcx\nmovq -840(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -832(%rbp),%rcx\nmovq -824(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -816(%rbp),%rcx\nmovq -808(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -800(%rbp),%rcx\nmovq -792(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\n.LBE13:\njmp .L13\n.L12:\n.LBB14:\nmovq -856(%rbp),%rax\nleaq -848(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L13:\n.LBE14:\nmovq -856(%rbp),%rax\nmovq %rax,-392(%rbp)\nmovq $4,-384(%rbp)\nmovq $4,-376(%rbp)\nleaq <.LC45>(%rip),%rax\nmovq %rax,-1328(%rbp)\nmovq $1,-1320(%rbp)\nmovdqa -1328(%rbp),%xmm3\nmovups %xmm3,-368(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-776(%rbp)\nleaq <.LC46>(%rip),%rax\nmovq %rax,-768(%rbp)\nmovq $1,-760(%rbp)\nleaq <.LC47>(%rip),%rax\nmovq %rax,-752(%rbp)\nmovq $1,-744(%rbp)\nleaq <.LC48>(%rip),%rax\nmovq %rax,-736(%rbp)\nmovq $1,-728(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L14\n.LBB15:\nmovq -776(%rbp),%rax\nmovq -768(%rbp),%rcx\nmovq -760(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -752(%rbp),%rcx\nmovq -744(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -736(%rbp),%rcx\nmovq -728(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE15:\njmp .L15\n.L14:\n.LBB16:\nmovq -776(%rbp),%rax\nleaq -768(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L15:\n.LBE16:\nmovq -776(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $3,-344(%rbp)\nmovq $3,-336(%rbp)\nleaq <.LC49>(%rip),%rax\nmovq %rax,-1312(%rbp)\nmovq $1,-1304(%rbp)\nmovdqa -1312(%rbp),%xmm4\nmovups %xmm4,-328(%rbp)\nleaq <type...64x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-712(%rbp)\nleaq <.LC50>(%rip),%rax\nmovq %rax,-704(%rbp)\nmovq $1,-696(%rbp)\nleaq <.LC51>(%rip),%rax\nmovq %rax,-688(%rbp)\nmovq $1,-680(%rbp)\nleaq <.LC52>(%rip),%rax\nmovq %rax,-672(%rbp)\nmovq $1,-664(%rbp)\nleaq <.LC53>(%rip),%rax\nmovq %rax,-656(%rbp)\nmovq $1,-648(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L16\n.LBB17:\nmovq -712(%rbp),%rax\nmovq -704(%rbp),%rcx\nmovq -696(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -688(%rbp),%rcx\nmovq -680(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -672(%rbp),%rcx\nmovq -664(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -656(%rbp),%rcx\nmovq -648(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\n.LBE17:\njmp .L17\n.L16:\n.LBB18:\nmovq -712(%rbp),%rax\nleaq -704(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L17:\n.LBE18:\nmovq -712(%rbp),%rax\nmovq %rax,-312(%rbp)\nmovq $4,-304(%rbp)\nmovq $4,-296(%rbp)\nleaq <.LC54>(%rip),%rax\nmovq %rax,-1296(%rbp)\nmovq $1,-1288(%rbp)\nmovdqa -1296(%rbp),%xmm5\nmovups %xmm5,-288(%rbp)\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nleaq <.LC55>(%rip),%rax\nmovq %rax,-624(%rbp)\nmovq $1,-616(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L18\n.LBB19:\nmovq -632(%rbp),%rcx\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE19:\njmp .L19\n.L18:\n.LBB20:\nmovq -632(%rbp),%rax\nleaq -624(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L19:\n.LBE20:\nmovq -632(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq $1,-264(%rbp)\nmovq $1,-256(%rbp)\nleaq -608(%rbp),%rax\nmovq %rax,%r8\nmovl $16,%ecx\nmovl $40,%edx\nmovl $9,%esi\nleaq <type..map.6string.7.6.7string>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-56(%rbp)\nleaq <type...60x.7.6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-240(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-1232(%rbp)\nmovq $0,-1224(%rbp)\nmovq $0,-1216(%rbp)\n.LBB21:\nmovq $0,-64(%rbp)\n.LBB22:\n.LBB23:\n.LBB24:\nmovq -1272(%rbp),%r13\nmovl $0,%ebx\n.LBE24:\njmp .L20\n.L36:\n.LBB25:\nnop\n.LBE25:\n.LBB26:\n.LBB27:\nmovq -1272(%rbp),%rax\ntestq %rbx,%rbx\njs .L21\ncmpq %rax,%rbx\njge .L21\nmovq -1280(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L22\njmp .L34\n.L21:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\n.LBB28:\nleaq <1>(%rbx),%r12\n.LBE28:\njmp .L24\n.L34:\n.LBB29:\nmovq -1280(%rbp),%rcx\nmovq -1272(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rdx,%r12\n.L24:\n.LBE29:\n.LBE27:\nmovq %rbx,-64(%rbp)\n.LBB30:\nmovq -1272(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L25\ncmpq %rax,-64(%rbp)\njge .L25\nmovq -1280(%rbp),%rdx\nmovq -64(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nleaq -228(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-1248(%rbp)\nmovq %rdx,-1240(%rbp)\n.LBB31:\nmovb $0,-65(%rbp)\n.LBB32:\nmovq -1248(%rbp),%rax\nmovq -1240(%rbp),%rdx\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7.6.7string>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovl %edx,%eax\nmovb %al,-65(%rbp)\n.LBE32:\ncmpb $0,-65(%rbp)\njne .L26\n.LBB33:\njmp .L27\n.L25:\n.LBE33:\n.LBE31:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\n.LBB39:\n.LBB38:\nmovq -1232(%rbp),%rax\nmovq -1224(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -1216(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%rbx\nmovq -1248(%rbp),%rax\nmovq -1240(%rbp),%rdx\nmovq -56(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7.6.7string>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-176(%rbp)\nleaq <1>(%rbx),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L28\n.LBB34:\nmovq -224(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7string>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-1232(%rbp)\nmovq %rdx,-1224(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-1216(%rbp)\n.LBE34:\njmp .L29\n.L28:\n.LBB35:\nmovq -224(%rbp),%rcx\nmovq -208(%rbp),%rdx\nmovq %rcx,-1232(%rbp)\nmovq %rax,-1224(%rbp)\nmovq %rdx,-1216(%rbp)\n.L29:\n.LBE35:\nmovq -1232(%rbp),%rax\nmovq -1224(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -1216(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,-160(%rbp)\nmovq %rbx,-152(%rbp)\nmovq -176(%rbp),%rdx\nmovq %rdx,-144(%rbp)\nmovq -152(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -144(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L30\n.LBB36:\nmovq -160(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L27\n.L30:\n.LBE36:\n.LBB37:\nmovq -160(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L27:\n.LBE37:\n.LBE38:\n.LBE39:\n.LBE30:\n.LBE26:\n.LBB40:\nmovq %r12,%rbx\n.L20:\n.LBE40:\ncmpq %r13,%rbx\njl .L36\n.LBE23:\n.LBE22:\n.LBE21:\n.LBB41:\nleaq -128(%rbp),%rax\nsubq $8,%rsp\npushq -1216(%rbp)\npushq -1224(%rbp)\npushq -1232(%rbp)\nmovq %rax,%rdi\ncall <go.letter_combinations_of_a_phone_number.generateCombinations>\naddq $32,%rsp\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-1200(%rbp)\nmovq %rdx,-1192(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-1184(%rbp)\nmovq -1256(%rbp),%rcx\nmovq -1200(%rbp),%rax\nmovq -1192(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -1184(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE41:\n.LBE2:\nmovq -1256(%rbp),%rax\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "m := map[string][]string{\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\", \"STR\", \"STR\", \"STR\"},\n\t\"STR\": []string{\"STR\"},\n}\nslices := [][]string{}\nfor index := range digits {\n\tdigit := string(digits[index])\n\tif _, ok := m[digit]; ok {\n\t\tslices = append(slices, m[digit])\n\t}\n}\nreturn generateCombinations(slices)"}
{"src": ".LFB0:\nleaq -440(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L66\nmovl $440,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L66:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $408,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-416(%rbp)\nmovq %rdi,-408(%rbp)\nmovq %rdx,-432(%rbp)\nmovq %rcx,-424(%rbp)\nmovb $0,-49(%rbp)\n.LBB2:\nmovq -408(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq -64(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7bool>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-400(%rbp)\nmovq %rbx,-392(%rbp)\nmovq %rbx,-384(%rbp)\n.LBB3:\nmovq $0,-80(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r13\nmovl $0,%r12d\n.LBE6:\njmp .L2\n.L63:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\nmovq %r12,-80(%rbp)\n.LBB9:\nmovq -72(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <bool..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -392(%rbp),%rax\ncmpq $0,-80(%rbp)\njs .L3\ncmpq %rax,-80(%rbp)\njl .L51\n.L3:\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L51:\nmovq -400(%rbp),%rsi\nmovq -80(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq %rdx,-336(%rbp)\nmovq %rbx,-328(%rbp)\nmovq %rbx,-320(%rbp)\nmovq -328(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -320(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L5\n.LBB10:\nmovq -336(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L6\n.L5:\n.LBE10:\n.LBB11:\nmovq -336(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L6:\n.LBE11:\n.LBE9:\n.LBE8:\n.LBB12:\naddq $1,%r12\n.L2:\n.LBE12:\ncmpq %r13,%r12\njl .L63\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -392(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L9\ncmpq %rax,-64(%rbp)\njl .L53\n.L9:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L53:\nmovq -400(%rbp),%rcx\nmovq -64(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L11\ncmpq %rax,-72(%rbp)\njge .L11\nmovq -304(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovb $1,(%rax)\n.LBB13:\nmovq -64(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB14:\njmp .L12\n.L11:\n.LBE14:\n.LBE13:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L65:\n.LBB40:\n.LBB39:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\n.LBB17:\nmovq -72(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-48(%rbp)\n.LBB18:\njmp .L13\n.L64:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -40(%rbp),%rax\ncmpq -64(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L14\n.LBB22:\n.LBB23:\nmovq -424(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L15\ncmpq %rax,-48(%rbp)\njl .L54\n.L15:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\nmovq -408(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L17\ncmpq %rax,-40(%rbp)\njl .L55\n.L17:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\nmovq -432(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -416(%rbp),%rcx\nmovq -40(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L14\n.LBB24:\nmovq -424(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L20\ncmpq %rax,-48(%rbp)\njge .L20\nmovq -432(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $46,%al\nsete %al\njmp .L14\n.L20:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L14:\n.LBE24:\n.LBE23:\n.LBE22:\n.LBE21:\nmovb %al,-81(%rbp)\n.LBB25:\n.LBB26:\nmovq -48(%rbp),%rax\naddq $1,%rax\ncmpq %rax,-72(%rbp)\nsetg %al\ntestb %al,%al\nje .L21\n.LBB27:\nmovq -48(%rbp),%rax\naddq $1,%rax\nmovq -424(%rbp),%rdx\ntestq %rax,%rax\njs .L22\ncmpq %rdx,%rax\njge .L22\nmovq -432(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $42,%al\nsete %al\njmp .L21\n.L22:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\n.LBE27:\n.LBE26:\ntestb %al,%al\nje .L23\n.LBB28:\n.LBB29:\nmovq -392(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L24\ncmpq %rax,-40(%rbp)\njl .L56\n.L24:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L56:\nmovq -400(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-256(%rbp)\nmovq -48(%rbp),%rax\naddq $2,%rax\nmovq -264(%rbp),%rdx\ntestq %rax,%rax\njs .L26\ncmpq %rdx,%rax\njge .L26\nmovq -272(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovl %edx,%eax\nxorl $1,%eax\ntestb %al,%al\njne .L27\njmp .L28\n.L26:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\n.LBB30:\n.LBB31:\nmovzbl -81(%rbp),%edx\ntestb %dl,%dl\nje .L28\n.LBB32:\nmovq -40(%rbp),%rax\naddq $1,%rax\nmovq -392(%rbp),%rdx\ntestq %rax,%rax\njs .L30\ncmpq %rdx,%rax\njl .L57\n.L30:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L57:\nmovq -400(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L32\ncmpq %rax,-48(%rbp)\njge .L32\nmovq -240(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\njmp .L28\n.L32:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\n.LBE32:\n.LBE31:\n.LBE30:\n.LBE29:\nmovq -392(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L33\ncmpq %rax,-40(%rbp)\njl .L58\n.L33:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\nmovq -400(%rbp),%rsi\nmovq -40(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-208(%rbp)\nmovq %rbx,-200(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L35\ncmpq %rax,-48(%rbp)\njge .L35\nmovq -208(%rbp),%rcx\nmovq -48(%rbp),%rax\naddq %rcx,%rax\nmovb %dl,(%rax)\n.LBE28:\njmp .L36\n.L35:\n.LBB33:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\n.LBE33:\n.LBB34:\n.LBB35:\nmovzbl -81(%rbp),%edx\ntestb %dl,%dl\nje .L37\n.LBB36:\nmovq -40(%rbp),%rax\naddq $1,%rax\nmovq -392(%rbp),%rdx\ntestq %rax,%rax\njs .L38\ncmpq %rdx,%rax\njl .L59\n.L38:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L59:\nmovq -400(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-160(%rbp)\nmovq -48(%rbp),%rax\naddq $1,%rax\nmovq -168(%rbp),%rdx\ntestq %rax,%rax\njs .L40\ncmpq %rdx,%rax\njge .L40\nmovq -176(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%edx\njmp .L37\n.L40:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\n.LBE36:\n.LBE35:\nmovq -392(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L41\ncmpq %rax,-40(%rbp)\njl .L60\n.L41:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L60:\nmovq -400(%rbp),%rsi\nmovq -40(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L43\ncmpq %rax,-48(%rbp)\njge .L43\nmovq -144(%rbp),%rcx\nmovq -48(%rbp),%rax\naddq %rcx,%rax\nmovb %dl,(%rax)\njmp .L36\n.L43:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L36:\n.LBE34:\n.LBE25:\n.LBE20:\n.LBB37:\nsubq $1,-48(%rbp)\n.L13:\n.LBE37:\ncmpq $0,-48(%rbp)\njns .L64\n.LBE18:\n.LBE17:\n.LBE16:\n.LBB38:\nsubq $1,-40(%rbp)\n.L12:\n.LBE38:\ncmpq $0,-40(%rbp)\njns .L65\n.LBE39:\n.LBE40:\n.LBB41:\nmovq -392(%rbp),%rax\ntestq %rax,%rax\njg .L48\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L48:\nmovq -400(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rax\ntestq %rax,%rax\njg .L49\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L49:\nmovq -112(%rbp),%rax\nmovzbl (%rax),%eax\nmovb %al,-49(%rbp)\nmovzbl -49(%rbp),%eax\n.LBE41:\n.LBE2:\naddq $408,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "sLen, pLen := len(s), len(p)\ndp := make([][]bool, sLen+1)\nfor i := range dp {\n\tdp[i] = make([]bool, pLen+1)\n}\ndp[sLen][pLen] = true\nfor i := sLen; i > -1; i-- {\n\tfor j := pLen - 1; j > -1; j-- {\n\t\tfirstMatch := i < sLen && (p[j] == s[i] || p[j] == '.')\n\t\tif j+1 < pLen && p[j+1] == '*' {\n\t\t\tdp[i][j] = dp[i][j+2] || firstMatch && dp[i+1][j]\n\t\t} else {\n\t\t\tdp[i][j] = firstMatch && dp[i+1][j+1]\n\t\t}\n\t}\n}\nreturn dp[0][0]"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L13\nmovl $184,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq $0,-56(%rbp)\n.LBB2:\nleaq <go.day191.MinRemoveNoOverlap..func1>(%rip),%rdx\nleaq <16>(%rbp),%rcx\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rax\nmovq %rdx,(%rax)\nmovq %rcx,<8>(%rax)\nmovq -88(%rbp),%rbx\nleaq <type...6.7go.day191.Interval>(%rip),%r12\nleaq <type...6.7go.day191.Interval>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7go.day191.Interval>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -152(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nmovq $0,-40(%rbp)\nmovabsq $-9223372036854775808,%rax\nmovq %rax,-48(%rbp)\n.LBB5:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB6:\n.LBB7:\n.LBB8:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rsi\nmovl $0,%eax\n.LBE8:\njmp .L4\n.L12:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\n.LBB11:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njge .L5\nmovq -80(%rbp),%rdx\nmovq %rax,%rcx\nsalq $4,%rcx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\n.LBE11:\n.LBB12:\nmovq %rcx,-176(%rbp)\nmovq %rbx,-168(%rbp)\n.LBE12:\n.LBB13:\n.LBB14:\nmovq -176(%rbp),%rdx\ncmpq %rdx,-48(%rbp)\njle .L6\njmp .L7\n.L5:\n.LBE14:\n.LBE13:\n.LBB17:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE17:\n.LBB18:\n.LBB16:\n.LBB15:\naddq $1,-40(%rbp)\nmovq -168(%rbp),%rdx\nmovq %rdx,-48(%rbp)\n.L7:\n.LBE15:\n.LBE16:\n.LBE18:\n.LBE10:\n.LBB19:\naddq $1,%rax\n.L4:\n.LBE19:\ncmpq %rsi,%rax\njl .L12\n.LBE7:\n.LBE6:\n.LBE5:\n.LBB20:\nmovq <24>(%rbp),%rax\nsubq -40(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\n.LBE20:\n.LBE2:\naddq $152,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "sort.Slice(intervals, func(i, j int) bool {\n\treturn intervals[i].End < intervals[j].End\n})\ncount := 0\ncurrent := -int(^uint(0)>>1) - 1\nfor _, interval := range intervals {\n\tif interval.Start >= current {\n\t\tcount++\n\t\tcurrent = interval.End\n\t}\n}\nreturn len(intervals) - count"}
{"src": ".LFB163:\ncmpq %fs:112,%rsp\njnb .L4587\nmovl $168,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL211:\nret\n.L4587:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $152,%rsp\nmovq <24>(%rbp),%rax\nsubq $2,%rax\nmovq %rax,-24(%rbp)\n.LBB3599:\n.LBB3600:\njmp .L4534\n.L4584:\n.LBB3601:\nnop\n.LBE3601:\n.LBB3602:\nsubq $1,-24(%rbp)\n.L4534:\n.LBE3602:\n.LBB3603:\nmovq -24(%rbp),%rax\nnotq %rax\nshrq $63,%rax\ntestb %al,%al\nje .L4535\n.LBB3604:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L4536\ncmpq %rax,-24(%rbp)\njl .L4569\n.L4536:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4569:\nmovq -24(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L4538\ncmpq %rdx,%rax\njl .L4570\n.L4538:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4570:\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetge %al\n.L4535:\n.LBE3604:\n.LBE3603:\ntestb %al,%al\njne .L4584\n.LBE3600:\n.LBE3599:\nmovq -24(%rbp),%rax\naddq $1,%rax\nmovq %rax,-32(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-40(%rbp)\n.LBB3605:\n.LBB3606:\njmp .L4542\n.L4585:\n.LBB3607:\nnop\n.LBE3607:\n.LBB3608:\n.LBB3609:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -32(%rbp),%rdx\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -40(%rbp),%rax\nmovq <24>(%rbp),%rcx\ncmpq $0,-40(%rbp)\njs .L4543\ncmpq %rcx,-40(%rbp)\njl .L4572\n.L4543:\nmovq -40(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4572:\nmovq <16>(%rbp),%rsi\nmovq -40(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq <24>(%rbp),%rcx\ncmpq $0,-32(%rbp)\njs .L4545\ncmpq %rcx,-32(%rbp)\njl .L4573\n.L4545:\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4573:\nmovq <16>(%rbp),%rsi\nmovq -32(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -152(%rbp),%rcx\ntestq %rdx,%rdx\njs .L4547\ncmpq %rcx,%rdx\njl .L4574\n.L4547:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4574:\nmovq -160(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq %rdi,(%rdx)\nmovq -120(%rbp),%rdx\ntestq %rax,%rax\njs .L4549\ncmpq %rdx,%rax\njl .L4575\n.L4549:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4575:\nmovq -128(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE3609:\n.LBB3610:\nmovq -32(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq %rdx,-32(%rbp)\nmovq %rax,-40(%rbp)\n.L4542:\n.LBE3610:\n.LBE3608:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L4585\n.LBE3606:\n.LBE3605:\n.LBB3611:\ncmpq $0,-24(%rbp)\njs .L4533\n.LBB3612:\nmovq -24(%rbp),%rax\naddq $1,%rax\nmovq %rax,-32(%rbp)\n.LBB3613:\n.LBB3614:\njmp .L4554\n.L4586:\n.LBB3615:\nnop\n.LBE3615:\n.LBB3616:\naddq $1,-32(%rbp)\n.L4554:\n.LBE3616:\nmovq <24>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L4555\ncmpq %rax,-32(%rbp)\njl .L4577\n.L4555:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4577:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L4557\ncmpq %rax,-24(%rbp)\njl .L4578\n.L4557:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4578:\nmovq <16>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njle .L4586\n.LBE3614:\n.LBE3613:\n.LBB3617:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -24(%rbp),%rdx\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -32(%rbp),%rax\nmovq <24>(%rbp),%rcx\ncmpq $0,-32(%rbp)\njs .L4561\ncmpq %rcx,-32(%rbp)\njl .L4580\n.L4561:\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4580:\nmovq <16>(%rbp),%rsi\nmovq -32(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq <24>(%rbp),%rcx\ncmpq $0,-24(%rbp)\njs .L4563\ncmpq %rcx,-24(%rbp)\njl .L4581\n.L4563:\nmovq -24(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4581:\nmovq <16>(%rbp),%rsi\nmovq -24(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -88(%rbp),%rcx\ntestq %rdx,%rdx\njs .L4565\ncmpq %rcx,%rdx\njl .L4582\n.L4565:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4582:\nmovq -96(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq %rdi,(%rdx)\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L4567\ncmpq %rdx,%rax\njl .L4583\n.L4567:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4583:\nmovq -64(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.L4533:\n.LBE3617:\n.LBE3612:\n.LBE3611:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "i := len(nums) - 2\nfor i >= 0 && nums[i] >= nums[i+1] {\n\ti--\n}\nj, k := i+1, len(nums)-1\nfor j < k {\n\tnums[j], nums[k] = nums[k], nums[j]\n\tj, k = j+1, k-1\n}\nif i >= 0 {\n\tj = i + 1\n\tfor nums[j] <= nums[i] {\n\t\tj++\n\t}\n\tnums[i], nums[j] = nums[j], nums[i]\n}"}
{"src": ".LFB0:\nleaq -328(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L22\nmovl $328,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $304,%rsp\nmovq %rdi,-312(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\n.LBB2:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-24(%rbp)\n.LBB3:\nmovq $0,-32(%rbp)\nmovq $0,-40(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L20:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -232(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -240(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rbx,-32(%rbp)\nmovq %rax,-40(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -24(%rbp),%rdx\nmovq -32(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day316.waysToProduce>\nmovq %rax,-56(%rbp)\n.LBB13:\n.LBB14:\ncmpq $1,-40(%rbp)\nsete %al\ntestb %al,%al\njne .L4\njmp .L5\n.L3:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB22:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE22:\n.LBB23:\n.LBB21:\n.LBB18:\n.LBB16:\n.LBB15:\ncmpq $0,-32(%rbp)\nsetg %al\n.L5:\n.LBE15:\n.LBE16:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L6\n.LBB17:\nmovq -40(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-56(%rbp)\nsete %al\n.L6:\n.LBE17:\n.LBE18:\ntestb %al,%al\nje .L7\n.LBB19:\n.LBB20:\nmovq -32(%rbp),%rax\nmovq %rax,-216(%rbp)\nleaq -216(%rbp),%rax\nmovq (%rax),%rdx\nmovq -24(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7struct.4.5>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\n.L7:\n.LBE20:\n.LBE19:\n.LBE21:\n.LBE23:\n.LBE8:\n.LBB24:\naddq $1,%rbx\n.L2:\n.LBE24:\ncmpq %r12,%rbx\njl .L20\n.LBE5:\n.LBE4:\n.LBE3:\ncmpq $0,-24(%rbp)\nje .L10\nmovq -24(%rbp),%rax\nmovq (%rax),%rbx\njmp .L11\n.L10:\nmovl $0,%ebx\n.L11:\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-304(%rbp)\nmovq $0,-296(%rbp)\nmovq %rbx,-288(%rbp)\n.LBB25:\nmovq $0,-48(%rbp)\n.LBB26:\n.LBB27:\n.LBB28:\nleaq -208(%rbp),%rdx\nmovq -24(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7struct.4.5>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE28:\njmp .L12\n.L21:\n.LBB29:\nnop\n.LBE29:\n.LBB30:\n.LBB31:\nmovq -208(%rbp),%rax\nmovq (%rax),%rax\n.LBE31:\nmovq %rax,-48(%rbp)\n.LBB32:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L13\n.LBB33:\nmovq -112(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-288(%rbp)\n.LBE33:\njmp .L14\n.L13:\n.LBB34:\nmovq -112(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rcx,-304(%rbp)\nmovq %rax,-296(%rbp)\nmovq %rdx,-288(%rbp)\n.L14:\n.LBE34:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -48(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE32:\n.LBE30:\n.LBB35:\nleaq -208(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L12:\n.LBE35:\nmovq -208(%rbp),%rax\ntestq %rax,%rax\njne .L21\n.LBE27:\n.LBE26:\n.LBE25:\nsubq $8,%rsp\npushq -288(%rbp)\npushq -296(%rbp)\npushq -304(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\n.LBB36:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -312(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -256(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE36:\n.LBE2:\nmovq -312(%rbp),%rax\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "denoms := make(map[int]struct{})\nfor d, way := range ways {\n\tif others := waysToProduce(d, denoms); (way == 1 && d > 0) || others == way-1 {\n\t\tdenoms[d] = struct{}{}\n\t}\n}\nres := make([]int, 0, len(denoms))\nfor k := range denoms {\n\tres = append(res, k)\n}\nsort.Ints(res)\nreturn res"}
{"src": "cmpq %fs:112,%rsp\njnb .L48\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL6:\nret\n.L48:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq $0,-8(%rbp)\n.LBB26:\n.LBB27:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE27:\n.LBE26:\npopq %rbp\nret", "tgt": "return len(self.data)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L36\nmovl $72,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L36:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq $0,-8(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\nmovl $0,-28(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%rcx\nmovl $0,%eax\n.LBE5:\njmp .L2\n.L35:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njge .L3\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nsalq $2,%rsi\naddq %rsi,%rdx\nmovl (%rdx),%edx\n.LBE8:\n.LBB9:\nmovq %rax,-24(%rbp)\nmovl %edx,-28(%rbp)\n.LBE9:\n.LBB10:\n.LBB11:\ncmpl $82,-28(%rbp)\nje .L4\njmp .L25\n.L3:\n.LBE11:\n.LBE10:\n.LBB17:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE17:\n.LBB18:\n.LBB16:\n.LBB12:\nmovq <24>(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L6\ncmpq %rdx,-24(%rbp)\njl .L26\n.L6:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\nmovq <24>(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L8\ncmpq %rdx,-16(%rbp)\njl .L27\n.L8:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq <16>(%rbp),%rsi\nmovq -16(%rbp),%rdx\nsalq $2,%rdx\naddq %rsi,%rdx\nmovq <16>(%rbp),%rdi\nmovq -24(%rbp),%rsi\nsalq $2,%rsi\naddq %rdi,%rsi\nmovl (%rdx),%edx\nmovl %edx,(%rsi)\nmovq <24>(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L10\ncmpq %rdx,-16(%rbp)\njl .L28\n.L10:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq <24>(%rbp),%rdx\ncmpq $0,-8(%rbp)\njs .L12\ncmpq %rdx,-8(%rbp)\njl .L29\n.L12:\nmovq -8(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq <16>(%rbp),%rsi\nmovq -8(%rbp),%rdx\nsalq $2,%rdx\naddq %rsi,%rdx\nmovq <16>(%rbp),%rdi\nmovq -16(%rbp),%rsi\nsalq $2,%rsi\naddq %rdi,%rsi\nmovl (%rdx),%edx\nmovl %edx,(%rsi)\nmovq <24>(%rbp),%rdx\ncmpq $0,-8(%rbp)\njs .L14\ncmpq %rdx,-8(%rbp)\njl .L30\n.L14:\nmovq -8(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq <16>(%rbp),%rsi\nmovq -8(%rbp),%rdx\nsalq $2,%rdx\naddq %rdx,%rsi\nmovl -28(%rbp),%edx\nmovl %edx,(%rsi)\naddq $1,-16(%rbp)\naddq $1,-8(%rbp)\n.LBE12:\njmp .L16\n.L25:\n.LBB13:\n.LBB14:\ncmpl $71,-28(%rbp)\njne .L16\n.LBB15:\nmovq <24>(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L17\ncmpq %rdx,-24(%rbp)\njl .L31\n.L17:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\nmovq <24>(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L19\ncmpq %rdx,-16(%rbp)\njl .L32\n.L19:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq <16>(%rbp),%rsi\nmovq -16(%rbp),%rdx\nsalq $2,%rdx\naddq %rsi,%rdx\nmovq <16>(%rbp),%rdi\nmovq -24(%rbp),%rsi\nsalq $2,%rsi\naddq %rdi,%rsi\nmovl (%rdx),%edx\nmovl %edx,(%rsi)\nmovq <24>(%rbp),%rdx\ncmpq $0,-16(%rbp)\njs .L21\ncmpq %rdx,-16(%rbp)\njl .L33\n.L21:\nmovq -16(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq <16>(%rbp),%rsi\nmovq -16(%rbp),%rdx\nsalq $2,%rdx\naddq %rdx,%rsi\nmovl -28(%rbp),%edx\nmovl %edx,(%rsi)\naddq $1,-16(%rbp)\n.L16:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE16:\n.LBE18:\n.LBE7:\n.LBB19:\naddq $1,%rax\n.L2:\n.LBE19:\ncmpq %rcx,%rax\njl .L35\n.LBE4:\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "var ri, gi int\nfor i, r := range letters {\n\tif r == 'R' {\n\t\tletters[i] = letters[gi]\n\t\tletters[gi] = letters[ri]\n\t\tletters[ri] = r\n\t\tgi++\n\t\tri++\n\t} else if r == 'G' {\n\t\tletters[i] = letters[gi]\n\t\tletters[gi] = r\n\t\tgi++\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L14\nmovl $248,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $200,%rsp\nmovq %rdi,-216(%rbp)\nmovq %rsi,-224(%rbp)\ncmpq $0,-216(%rbp)\njne .L4\ncall <runtime.panicmem@PLT>\n.L4:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\n.LBB2:\n.LBB3:\nmovl $10,%edi\ncall <math..z2frand.Intn@PLT>\ncmpq $9,%rax\nje .L5\ncmpq $9,%rax\njg .L6\ncmpq $1,%rax\nje .L5\ncmpq $5,%rax\nje .L7\njmp .L6\n.L5:\n.LBB4:\n.LBB5:\nmovq <io.EOF>(%rip),%rax\nmovq <8+io.EOF>(%rip),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\njmp .L13\n.L7:\n.LBE5:\n.LBE4:\n.LBB6:\n.LBB7:\nleaq <.LC43>(%rip),%r12\nmovl $29,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\njmp .L13\n.L6:\n.LBE7:\n.LBE6:\n.LBB8:\nmovq -224(%rbp),%rax\nmovq $4,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L9\n.LBB9:\nleaq <.LC1>(%rip),%rdx\nmovq %rdx,(%rax)\njmp .L10\n.L9:\n.LBE9:\n.LBB10:\nleaq <.LC1>(%rip),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L10:\n.LBE10:\nleaq <string..d>(%rip),%r14\nleaq <go..C64>(%rip),%r15\nleaq <string..d>(%rip),%rax\nmovq %rax,-240(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L11\n.LBB11:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE11:\njmp .L12\n.L11:\n.LBB12:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L12:\n.LBE12:\nmovq -168(%rbp),%rax\nmovq %rax,-232(%rbp)\nmovq %r14,-144(%rbp)\nmovq %r15,-136(%rbp)\nmovdqa -240(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-176(%rbp)\n.LBB13:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\n.L13:\n.LBE13:\n.LBE8:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "switch rand.Intn(10) {\ncase 1, 9:\n\treturn io.EOF\ncase 5:\n\treturn errors.New(\"STR\")\ndefault:\n\td.Line = \"STR\"\n\tfmt.Println(\"STR\", d.Line)\n\treturn nil\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq %rdx,-40(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\nmovq -40(%rbp),%rdx\nmovq -32(%rbp),%rcx\nmovq -24(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <main.helper>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return helper(root, p, q)"}
{"src": "cmpq %fs:112,%rsp\njnb .L297\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL21:\nret\n.L297:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq %rdi,-8(%rbp)\nmovq <.LC190>(%rip),%rdx\nmovq -8(%rbp),%rax\nmovq %rdx,%xmm0\nmovl $16384,%esi\nmovq %rax,%rdi\ncall <go.spacesaving.benchmark>\nleave\nret", "tgt": "benchmark(bb, 16384, 0.1)"}
{"src": "cmpq %fs:112,%rsp\njnb .L604\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL47:\n.LEHB75:\nret\n.L604:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $160,%rsp\n.LEHE75:\nmovq %rdi,-184(%rbp)\nmovq %rsi,-192(%rbp)\nmovb $0,-145(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB450:\ncmpq $0,-184(%rbp)\njne .L587\n.LEHB76:\ncall <runtime.panicmem@PLT>\n.L587:\nmovq -184(%rbp),%rax\naddq $80,%rax\nmovq %rax,%rdi\ncall <sync.Mutex.Lock@PLT>\n.LBB451:\ncmpq $0,-184(%rbp)\njne .L588\ncall <runtime.panicmem@PLT>\n.L588:\nmovq -184(%rbp),%rax\nleaq <80>(%rax),%rdx\nmovq $0,-80(%rbp)\nleaq -80(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -72(%rbp),%rdx\nleaq <go.util.go.util..thunk18>(%rip),%rdi\nleaq -145(%rbp),%rsi\nleaq -144(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE451:\n.LBB452:\n.LBB453:\nmovq -192(%rbp),%rax\nshrq $63,%rax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L589\n.LBB454:\nmovq -184(%rbp),%rax\nmovq <48>(%rax),%rax\ncmpq %rax,-192(%rbp)\nsetg %al\n.L589:\n.LBE454:\n.LBE453:\ntestb %al,%al\nje .L590\n.LBB455:\n.LBB456:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq -176(%rbp),%r12\nmovq -168(%rbp),%r13\nmovl $0,%ebx\njmp .L599\n.L590:\n.LBE456:\n.LBE455:\n.LBE452:\n.LBB457:\nmovq -184(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%rax\ncmpq $0,-192(%rbp)\njs .L592\ncmpq %rax,-192(%rbp)\njge .L592\nmovq -64(%rbp),%rdx\nmovq -192(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,%rdi\ncall <go.util.Queue.Peek>\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%r12\nmovq -168(%rbp),%r13\nmovl $0,%ebx\njmp .L599\n.L592:\nmovq -192(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.LEHE76:\n.L599:\n.LBE457:\n.LBE450:\nleaq -145(%rbp),%rax\nmovq %rax,%rdi\n.LEHB77:\ncall <runtime.deferreturn@PLT>\n.LEHE77:\ncmpl $1,%ebx\nje .L594\nmovq %r12,%rax\nmovq %r13,%rdx\njmp .L603\n.L600:\nleaq -145(%rbp),%rax\nmovq %rax,%rdi\n.LEHB78:\ncall <runtime.checkdefer@PLT>\n.LEHE78:\nmovq -176(%rbp),%r12\nmovq -168(%rbp),%r13\nmovl $0,%ebx\njmp .L599\n.L601:\nmovq %rax,%r14\nmovl $1,%ebx\njmp .L599\n.L594:\nmovq %r14,%rax\nmovq %rax,%rdi\n.LEHB79:\ncall <_Unwind_Resume@PLT>\n.L602:\nleaq -145(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L599\n.L603:\naddq $160,%rsp\n.LEHE79:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "this.mutex.Lock()\ndefer this.mutex.Unlock()\nif priority < 0 || priority > this.max {\n\treturn nil\n}\nreturn this.queues[priority].Peek()"}
{"src": ".LFB50:\ncmpq %fs:112,%rsp\njnb .L700\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL59:\nret\n.L700:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-136(%rbp)\ncmpq $0,-136(%rbp)\njne .L685\ncall <runtime.panicmem@PLT>\n.L685:\nmovq -136(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-56(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\n.LBB654:\n.LBB655:\n.LBB656:\nmovq -56(%rbp),%rax\nshrq $63,%rax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L686\n.LBB657:\ncmpq $5,-56(%rbp)\nsetg %al\n.L686:\n.LBE657:\n.LBE656:\ntestb %al,%al\nje .L687\n.LBB658:\n.LBB659:\nleaq <go.httprange..go.httprange.itemKind..d>(%rip),%r14\nleaq <go.httprange..go.httprange.itemKind..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-104(%rbp)\nmovq -104(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -104(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $1,-72(%rbp)\nmovq $1,-64(%rbp)\nleaq <.LC265>(%rip),%r12\nmovl $12,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <fmt.Sprintf@PLT>\naddq $32,%rsp\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\njmp .L697\n.L687:\n.LBE659:\n.LBE658:\n.LBE655:\n.LBB660:\ncmpq $0,-56(%rbp)\njs .L689\ncmpq $6,-56(%rbp)\njle .L698\n.L689:\nmovq -56(%rbp),%rax\nmovl $7,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L698:\nmovq -56(%rbp),%rax\naddq $1,%rax\ntestq %rax,%rax\njs .L691\ncmpq $6,%rax\njle .L699\n.L691:\nmovl $7,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L699:\nleaq <.LC266>(%rip),%rcx\nmovl $50,%ebx\nleaq <go.httprange._itemKind_index>(%rip),%rsi\nmovq -56(%rbp),%rdx\naddq %rsi,%rdx\nmovzbl (%rdx),%edx\nleaq <go.httprange._itemKind_index>(%rip),%rsi\nmovzbl (%rax,%rsi),%eax\nmovq %rbx,%rsi\nmovzbl %al,%edi\ncmpq %rdi,%rsi\njge .L693\nmovzbl %al,%eax\nmovq %rax,%rdi\ncall <runtime.goPanicSliceAlenU@PLT>\n.L693:\ncmpb %al,%dl\njbe .L694\nmovzbl %al,%ecx\nmovzbl %dl,%eax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceBU@PLT>\n.L694:\nmovq %rcx,%rsi\ncmpb %dl,%al\nje .L695\nmovzbl %dl,%ecx\njmp .L696\n.L695:\nmovl $0,%ecx\n.L696:\naddq %rsi,%rcx\nmovzbl %al,%eax\nmovzbl %dl,%edx\nsubq %rdx,%rax\nmovq %rcx,-128(%rbp)\nmovq %rax,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\n.L697:\n.LBE660:\n.LBE654:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "if i < 0 || i >= itemKind(len(_itemKind_index)-1) {\n\treturn fmt.Sprintf(\"STR\", i)\n}\nreturn _itemKind_name[_itemKind_index[i]:_itemKind_index[i+1]]"}
{"src": "leaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L1240\nmovl $536,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL161:\nret\n.L1240:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $488,%rsp\nmovq %rdi,-424(%rbp)\nleaq -400(%rbp),%rax\nmovl $10,%ecx\nmovl $20,%edx\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.binaryTree.randomSlice>\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq $0,(%rax)\nmovq %rax,-56(%rbp)\ncall <go.binaryTree.newGBT>\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\n.LBB1237:\nmovq $0,-64(%rbp)\n.LBB1238:\n.LBB1239:\n.LBB1240:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovl $0,%r12d\n.LBE1240:\njmp .L1215\n.L1238:\n.LBB1241:\nnop\n.LBE1241:\n.LBB1242:\n.LBB1243:\nmovq -360(%rbp),%rax\ntestq %r12,%r12\njs .L1216\ncmpq %rax,%r12\njge .L1216\nmovq -368(%rbp),%rdx\nmovq %r12,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE1243:\n.LBB1244:\nmovq %rax,-64(%rbp)\n.LBE1244:\n.LBB1245:\nmovq -416(%rbp),%rax\nmovq <24>(%rax),%r13\nleaq <uint32..d>(%rip),%r14\nleaq <uint32..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -344(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovl %eax,(%rdx)\nmovq -344(%rbp),%rax\nmovq %rax,%r15\nmovq -408(%rbp),%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall *%r13\n.LVL162:\n.LBE1245:\n.LBE1242:\n.LBB1247:\naddq $1,%r12\njmp .L1215\n.L1216:\n.LBE1247:\n.LBB1248:\n.LBB1246:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1215:\n.LBE1246:\n.LBE1248:\ncmpq -432(%rbp),%r12\njl .L1238\n.LBE1239:\n.LBE1238:\n.LBE1237:\nleaq <type...6.7.1go.binaryTree.gbtElement>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rbx\nmovl $0,%edx\nmovl $0,%esi\nleaq <type...1go.binaryTree.gbtElement>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\nmovq -328(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1219\n.LBB1249:\nmovq -336(%rbp),%rax\nmovq %rax,(%rbx)\njmp .L1220\n.L1219:\n.LBE1249:\n.LBB1250:\nmovq -336(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L1220:\n.LBE1250:\nmovq -416(%rbp),%rax\nmovq <96>(%rax),%rdx\nmovq -408(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL163:\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <go.binaryTree.TestGBT_Rotate..func1>(%rip),%r14\nmovq -72(%rbp),%rbx\nmovq -416(%rbp),%rax\nmovq <16>(%rax),%r15\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.binaryTree.rotateNodes1.0.1.6.7.1go.binaryTree.gbtElement.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq %r14,-304(%rbp)\nmovq %rbx,-296(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1221\n.LBB1251:\nmovq -312(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1251:\njmp .L1222\n.L1221:\n.LBB1252:\nmovq -312(%rbp),%rcx\nleaq -304(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.binaryTree.rotateNodes1.0.1.6.7.1go.binaryTree.gbtElement.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1222:\n.LBE1252:\nmovq -312(%rbp),%rdi\nmovq -408(%rbp),%r8\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %rdi,%rcx\nmovq %rax,%rdx\nmovq %r8,%rdi\ncall *%r15\n.LVL164:\n.LBB1253:\nmovq $0,-80(%rbp)\n.LBB1254:\n.LBB1255:\n.LBB1256:\nmovq -72(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-272(%rbp)\nmovq -280(%rbp),%r13\nmovl $0,%r12d\n.LBE1256:\njmp .L1223\n.L1239:\n.LBB1257:\nnop\n.LBE1257:\n.LBB1258:\n.LBB1259:\nmovq -280(%rbp),%rax\ntestq %r12,%r12\njs .L1224\ncmpq %rax,%r12\njge .L1224\nmovq -288(%rbp),%rdx\nmovq %r12,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE1259:\n.LBB1260:\nmovq %rax,-80(%rbp)\n.LBE1260:\n.LBB1261:\ncall <go.binaryTree.getRand>\nmovl $2,%esi\nmovq %rax,%rdi\ncall <math..z2frand.Rand.Intn@PLT>\nmovq %rax,-88(%rbp)\n.LBB1262:\ncmpq $1,-88(%rbp)\nje .L1225\njmp .L1236\n.L1224:\n.LBE1262:\n.LBE1261:\n.LBB1266:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1225:\n.LBE1266:\n.LBB1267:\n.LBB1265:\n.LBB1263:\nmovq -416(%rbp),%rax\nmovq <40>(%rax),%r8\nleaq <type...1go.binaryTree.gbtElement>(%rip),%rax\nmovq %rax,-480(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq -408(%rbp),%rdi\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall *%r8\n.LVL165:\njmp .L1227\n.L1236:\n.LBE1263:\n.LBB1264:\nmovq -416(%rbp),%rax\nmovq <88>(%rax),%r8\nleaq <type...1go.binaryTree.gbtElement>(%rip),%rax\nmovq %rax,-464(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovq -408(%rbp),%rdi\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall *%r8\n.LVL166:\n.L1227:\n.LBE1264:\n.LBE1265:\n.LBE1267:\n.LBE1258:\n.LBB1268:\naddq $1,%r12\n.L1223:\n.LBE1268:\ncmpq %r13,%r12\njl .L1239\n.LBE1255:\n.LBE1254:\n.LBE1253:\nmovq -416(%rbp),%rax\nmovq <96>(%rax),%rdx\nmovq -408(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL167:\nmovq %rax,%r12\nmovq %rdx,%r13\nmovq <go.binaryTree.debug>(%rip),%rax\nmovzbl (%rax),%edx\nmovq -56(%rbp),%rcx\nmovq -424(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.checkGBT>\nmovq %rax,%rdx\nmovq -416(%rbp),%rax\nmovq <16>(%rax),%r8\nmovq -408(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdi\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall *%r8\n.LVL168:\n.LBB1269:\nmovq -56(%rbp),%rax\nmovq (%rax),%rdx\nmovq -392(%rbp),%rax\ncmpq %rax,%rdx\nje .L1214\n.LBB1270:\nmovq -392(%rbp),%rbx\nleaq <int..d>(%rip),%r15\nmovq %r15,-528(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-256(%rbp)\nmovq -256(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -256(%rbp),%rax\nmovq %rax,-520(%rbp)\nmovq %r15,-512(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -248(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rdx,(%rax)\nmovq -248(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-240(%rbp)\nmovdqa -512(%rbp),%xmm1\nmovups %xmm1,-224(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $2,-136(%rbp)\nmovq $2,-128(%rbp)\nleaq <.LC177>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $34,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <fmt.Sprintf@PLT>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <string..d>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq %r12,-192(%rbp)\nmovq %r13,-184(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1231\n.LBB1271:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1271:\njmp .L1232\n.L1231:\n.LBB1272:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1232:\n.LBE1272:\nmovq -200(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovdqa -496(%rbp),%xmm2\nmovups %xmm2,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1233\n.LBB1273:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1273:\njmp .L1234\n.L1233:\n.LBB1274:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1234:\n.LBE1274:\nmovq -168(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nmovq -424(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Log..stub@PLT>\naddq $32,%rsp\nmovq -424(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Fail..stub@PLT>\n.L1214:\n.LBE1270:\n.LBE1269:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "arr := randomSlice(0, 20, 10)\nnodeCnt := 0\ngbt := newGBT()\nfor _, v := range arr {\n\tgbt.Insert(uint32(v))\n}\nrotateNodes := make([]*gbtElement, 0, 0)\ngbt.InOrderWalk(gbt.Root(), func(GBTbinaryTreeIf, node interface{}) bool {\n\trotate := getRand().Intn(2)\n\tif rotate == 1 {\n\t\trotateNodes = append(rotateNodes, node.(*gbtElement))\n\t}\n\treturn false\n})\nfor _, v := range rotateNodes {\n\trotate := getRand().Intn(2)\n\tif rotate == 1 {\n\t\tgbt.LeftRotate(v)\n\t} else {\n\t\tgbt.RightRotate(v)\n\t}\n}\ngbt.InOrderWalk(gbt.Root(), checkGBT(t, &nodeCnt, *debug))\nif nodeCnt != len(arr) {\n\tt.Log(fmt.Sprintf(\"STR\", len(arr), nodeCnt))\n\tt.Fail()\n}"}
{"src": ".LFB4:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L100\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L100:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB49:\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\n.LBB50:\n.LBB51:\n.LBB52:\nmovq <go.day44.testcases>(%rip),%rax\nmovq <8+go.day44.testcases>(%rip),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <16+go.day44.testcases>(%rip),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovl $0,%ebx\n.LBE52:\njmp .L90\n.L99:\n.LBB53:\nnop\n.LBE53:\n.LBB54:\n.LBB55:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L91\ncmpq %rax,%rbx\njge .L91\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\n.LBE55:\n.LBB56:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBE56:\n.LBB57:\n.LBB58:\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\ncall <go.day44.InversionCountBrute>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\nmovq -248(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L92\njmp .L93\n.L91:\n.LBE58:\n.LBE57:\n.LBB63:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L92:\n.LBE63:\n.LBB64:\n.LBB62:\n.LBB59:\nleaq <int..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L94\n.LBB60:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE60:\njmp .L95\n.L94:\n.LBB61:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L95:\n.LBE61:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC5>(%rip),%r12\nmovl $22,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -280(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L93:\n.LBE59:\n.LBE62:\n.LBE64:\n.LBE54:\n.LBB65:\naddq $1,%rbx\n.L90:\n.LBE65:\ncmpq -288(%rbp),%rbx\njl .L99\n.LBE51:\n.LBE50:\n.LBE49:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := InversionCountBrute(tc.input); result != tc.inversions {\n\t\tt.Errorf(\"STR\", tc.inversions, result)\n\t}\n}"}
{"src": ".LFB0:\nleaq -584(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L2\nmovl $584,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $536,%rsp\nmovq $0,-528(%rbp)\nleaq -528(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $1,-328(%rbp)\nmovq $1,-320(%rbp)\nsubq $8,%rsp\npushq -320(%rbp)\npushq -328(%rbp)\npushq -336(%rbp)\ncall <main.subarrayBitwiseORs>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%rax\nmovq %rax,-576(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-520(%rbp)\nmovq -520(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -520(%rbp),%rax\nmovq %rax,-568(%rbp)\nmovdqa -576(%rbp),%xmm0\nmovups %xmm0,-512(%rbp)\nleaq -512(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $1,-296(%rbp)\nmovq $1,-288(%rbp)\nleaq -272(%rbp),%rax\nsubq $8,%rsp\npushq -288(%rbp)\npushq -296(%rbp)\npushq -304(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovq $1,-464(%rbp)\nmovq $1,-456(%rbp)\nmovq $2,-448(%rbp)\nleaq -464(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $3,-232(%rbp)\nmovq $3,-224(%rbp)\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\ncall <main.subarrayBitwiseORs>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovq -440(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -440(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-432(%rbp)\nmovq %r15,-424(%rbp)\nleaq -432(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nleaq -176(%rbp),%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq $1,-384(%rbp)\nmovq $2,-376(%rbp)\nmovq $4,-368(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $3,-136(%rbp)\nmovq $3,-128(%rbp)\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\ncall <main.subarrayBitwiseORs>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq -360(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -360(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-352(%rbp)\nmovq %r13,-344(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-400(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "fmt.Println(subarrayBitwiseORs([]int{0}))\nfmt.Println(subarrayBitwiseORs([]int{1, 1, 2}))\nfmt.Println(subarrayBitwiseORs([]int{1, 2, 4}))"}
{"src": ".LFB0:\nleaq -456(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L29\nmovl $456,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $416,%rsp\nmovq %rdi,-440(%rbp)\nmovq %rsi,-448(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-448(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-304(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\nmovq -440(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovq -296(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-288(%rbp)\nleaq -288(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $1,-392(%rbp)\nmovq $1,-384(%rbp)\n.LBB6:\n.LBB7:\njmp .L4\n.L28:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -384(%rbp),%rax\ntestq %rax,%rax\njns .L5\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L5:\nmovq -400(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq -392(%rbp),%rax\nmovq %rax,-424(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-416(%rbp)\nleaq <type...60x.7.1main.TreeNode>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $0,-392(%rbp)\nmovq $0,-384(%rbp)\nmovabsq $-4294967296,%rax\nmovq %rax,-40(%rbp)\n.LBB10:\nmovq $0,-48(%rbp)\n.LBB11:\n.LBB12:\n.LBB13:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%r14\nmovl $0,%ebx\n.LBE13:\njmp .L6\n.L27:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\n.LBB16:\nmovq -264(%rbp),%rax\ntestq %rbx,%rbx\njs .L7\ncmpq %rax,%rbx\njge .L7\nmovq -272(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE16:\n.LBB17:\nmovq %rax,-48(%rbp)\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -48(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-40(%rbp)\njl .L8\njmp .L9\n.L7:\n.LBE19:\n.LBE18:\n.LBB34:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE34:\n.LBB35:\n.LBB21:\n.LBB20:\nmovq -48(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-40(%rbp)\n.L9:\n.LBE20:\n.LBE21:\n.LBB22:\nmovq -48(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nje .L10\n.LBB23:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r12\nmovq -48(%rbp),%rax\nmovq <8>(%rax),%r13\nleaq <1>(%r12),%rax\nmovq -224(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L11\n.LBB24:\nmovq -240(%rbp),%rsi\nleaq -144(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <type...1main.TreeNode>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE24:\njmp .L12\n.L11:\n.LBB25:\nmovq -240(%rbp),%rcx\nmovq -224(%rbp),%rdx\nmovq %rcx,-400(%rbp)\nmovq %rax,-392(%rbp)\nmovq %rdx,-384(%rbp)\n.L12:\n.LBE25:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L13\n.LBB26:\nmovq %r13,(%rax)\njmp .L10\n.L13:\n.LBE26:\n.LBB27:\nmovq %r13,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L10:\n.LBE27:\n.LBE23:\n.LBE22:\n.LBB28:\nmovq -48(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\nje .L14\n.LBB29:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r12\nmovq -48(%rbp),%rax\nmovq <16>(%rax),%r13\nleaq <1>(%r12),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L15\n.LBB30:\nmovq -208(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <type...1main.TreeNode>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE30:\njmp .L16\n.L15:\n.LBB31:\nmovq -208(%rbp),%rcx\nmovq -192(%rbp),%rdx\nmovq %rcx,-400(%rbp)\nmovq %rax,-392(%rbp)\nmovq %rdx,-384(%rbp)\n.L16:\n.LBE31:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L17\n.LBB32:\nmovq %r13,(%rax)\njmp .L14\n.L17:\n.LBE32:\n.LBB33:\nmovq %r13,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L14:\n.LBE33:\n.LBE29:\n.LBE28:\n.LBE35:\n.LBE15:\n.LBB36:\naddq $1,%rbx\n.L6:\n.LBE36:\ncmpq %r14,%rbx\njl .L27\n.LBE12:\n.LBE11:\n.LBE10:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -160(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L20\n.LBB37:\nmovq -176(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE37:\njmp .L21\n.L20:\n.LBB38:\nmovq -176(%rbp),%rcx\nmovq -160(%rbp),%rdx\nmovq %rcx,-368(%rbp)\nmovq %rax,-360(%rbp)\nmovq %rdx,-352(%rbp)\n.L21:\n.LBE38:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -176(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rax,(%rdx)\n.L4:\n.LBE9:\nmovq -392(%rbp),%rax\ntestq %rax,%rax\njg .L28\n.LBE7:\n.LBE6:\n.LBB39:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -440(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE39:\n.LBE2:\nmovq -440(%rbp),%rax\naddq $416,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "if nil == root {\n\treturn []int{}\n}\nlargestVals := []int{}\nchildren := []*TreeNode{root}\nfor len(children) > 0 {\n\ttmp := children[:]\n\tchildren = []*TreeNode{}\n\tlargest := -(1 << 32)\n\tfor _, child := range tmp {\n\t\tif child.Val > largest {\n\t\t\tlargest = child.Val\n\t\t}\n\t\tif nil != child.Left {\n\t\t\tchildren = append(children, child.Left)\n\t\t}\n\t\tif nil != child.Right {\n\t\t\tchildren = append(children, child.Right)\n\t\t}\n\t}\n\tlargestVals = append(largestVals, largest)\n}\nreturn largestVals"}
{"src": ".LFB0:\nleaq -1288(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L21\nmovl $1288,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L21:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1240,%rsp\n.LBB2:\nleaq <type...6.7main.Movie>(%rip),%r12\nleaq <type...6.7main.Movie>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-904(%rbp)\nmovq <main.movies>(%rip),%rax\nmovq <8+main.movies>(%rip),%rdx\nmovq %rax,-896(%rbp)\nmovq %rdx,-888(%rbp)\nmovq <16+main.movies>(%rip),%rax\nmovq %rax,-880(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -904(%rbp),%rcx\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -880(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -904(%rbp),%rcx\nleaq -896(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7main.Movie>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -904(%rbp),%rax\nmovq %rax,%r13\nleaq -432(%rbp),%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <encoding..z2fjson.Marshal@PLT>\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-944(%rbp)\nmovq %rdx,-936(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-928(%rbp)\nmovq %rdx,-920(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-912(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -928(%rbp),%rax\nmovq %rax,-848(%rbp)\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-976(%rbp)\nmovq %rdx,-968(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-960(%rbp)\nmovq -920(%rbp),%rax\nmovq -912(%rbp),%rdx\nmovq %rax,-992(%rbp)\nmovq %rdx,-984(%rbp)\n.LBB5:\nmovq -992(%rbp),%rax\ntestq %rax,%rax\nje .L4\n.LBB6:\nmovq -992(%rbp),%rax\ntestq %rax,%rax\njne .L5\nmovl $0,%eax\njmp .L6\n.L5:\nmovq -992(%rbp),%rax\nmovq (%rax),%rax\n.L6:\nmovq %rax,-1280(%rbp)\nmovq -984(%rbp),%rax\nmovq %rax,-1272(%rbp)\nmovdqa -1280(%rbp),%xmm0\nmovups %xmm0,-832(%rbp)\nleaq -832(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq $1,-376(%rbp)\nmovq $1,-368(%rbp)\nleaq <.LC32>(%rip),%r14\nmovl $26,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -368(%rbp)\npushq -376(%rbp)\npushq -384(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <log.Fatalf@PLT>\naddq $32,%rsp\n.L4:\n.LBE6:\n.LBE5:\nleaq <type...6.7uint8>(%rip),%rax\nmovq %rax,-1264(%rbp)\nleaq <type...6.7uint8>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-792(%rbp)\nmovq -976(%rbp),%rax\nmovq -968(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovq -960(%rbp),%rax\nmovq %rax,-768(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB7:\nmovq -792(%rbp),%rcx\nmovq -784(%rbp),%rax\nmovq -776(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -768(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE7:\njmp .L8\n.L7:\n.LBB8:\nmovq -792(%rbp),%rcx\nleaq -784(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7uint8>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE8:\nmovq -792(%rbp),%rax\nmovq %rax,-1256(%rbp)\nmovdqa -1264(%rbp),%xmm1\nmovups %xmm1,-752(%rbp)\nleaq -752(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $1,-344(%rbp)\nmovq $1,-336(%rbp)\nleaq <.LC33>(%rip),%rax\nmovq %rax,-1184(%rbp)\nmovq $3,-1176(%rbp)\nleaq -320(%rbp),%rdi\nmovq -1184(%rbp),%rax\nmovq -1176(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -336(%rbp)\npushq -344(%rbp)\npushq -352(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-816(%rbp)\nmovq %rdx,-808(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-800(%rbp)\n.LBE2:\n.LBB9:\nleaq <.LC34>(%rip),%rax\nmovq %rax,-1168(%rbp)\nmovq $4,-1160(%rbp)\nleaq <.LC35>(%rip),%rax\nmovq %rax,-1152(%rbp)\nmovq $0,-1144(%rbp)\nleaq <type...6.7main.Movie>(%rip),%rax\nmovq %rax,-1136(%rbp)\nleaq <type...6.7main.Movie>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-696(%rbp)\nmovq <main.movies>(%rip),%rax\nmovq <8+main.movies>(%rip),%rdx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nmovq <16+main.movies>(%rip),%rax\nmovq %rax,-672(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB10:\nmovq -696(%rbp),%rcx\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -672(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE10:\njmp .L10\n.L9:\n.LBB11:\nmovq -696(%rbp),%rcx\nleaq -688(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...6.7main.Movie>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE11:\nmovq -696(%rbp),%rax\nmovq %rax,-1128(%rbp)\nleaq -288(%rbp),%r9\nmovq -1152(%rbp),%rax\nmovq -1144(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -1136(%rbp),%rax\nmovq -1128(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\npushq -1160(%rbp)\npushq -1168(%rbp)\nmovq %rdi,%rcx\nmovq %rax,%rdx\nmovq %r9,%rdi\ncall <encoding..z2fjson.MarshalIndent@PLT>\naddq $16,%rsp\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-704(%rbp)\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -720(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-1024(%rbp)\nmovq %rdx,-1016(%rbp)\nmovq -640(%rbp),%rax\nmovq %rax,-1008(%rbp)\nmovq -712(%rbp),%rax\nmovq -704(%rbp),%rdx\nmovq %rax,-1040(%rbp)\nmovq %rdx,-1032(%rbp)\n.LBB12:\nmovq -1040(%rbp),%rax\ntestq %rax,%rax\nje .L11\n.LBB13:\nmovq -1040(%rbp),%rax\ntestq %rax,%rax\njne .L12\nmovl $0,%eax\njmp .L13\n.L12:\nmovq -1040(%rbp),%rax\nmovq (%rax),%rax\n.L13:\nmovq %rax,-1248(%rbp)\nmovq -1032(%rbp),%rax\nmovq %rax,-1240(%rbp)\nmovdqa -1248(%rbp),%xmm2\nmovups %xmm2,-624(%rbp)\nleaq -624(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nleaq <.LC32>(%rip),%rax\nmovq %rax,-1120(%rbp)\nmovq $26,-1112(%rbp)\nmovq -1120(%rbp),%rax\nmovq -1112(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <log.Fatalf@PLT>\naddq $32,%rsp\n.L11:\n.LBE13:\n.LBE12:\nleaq <type...6.7uint8>(%rip),%rax\nmovq %rax,-1232(%rbp)\nleaq <type...6.7uint8>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-584(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -1008(%rbp),%rax\nmovq %rax,-560(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L14\n.LBB14:\nmovq -584(%rbp),%rcx\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -560(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE14:\njmp .L15\n.L14:\n.LBB15:\nmovq -584(%rbp),%rax\nleaq -576(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7uint8>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L15:\n.LBE15:\nmovq -584(%rbp),%rax\nmovq %rax,-1224(%rbp)\nmovdqa -1232(%rbp),%xmm3\nmovups %xmm3,-544(%rbp)\nleaq -544(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nleaq <.LC33>(%rip),%rax\nmovq %rax,-1104(%rbp)\nmovq $3,-1096(%rbp)\nleaq -176(%rbp),%rax\nmovq -1104(%rbp),%rcx\nmovq -1096(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-592(%rbp)\nleaq <type...6.7struct.4Title.0string.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\n.LBB16:\nleaq <type...1.6.7struct.4Title.0string.5>(%rip),%rax\nmovq %rax,-1088(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-1080(%rbp)\nmovq -1088(%rbp),%rax\nmovq -1080(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -1008(%rbp)\npushq -1016(%rbp)\npushq -1024(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <encoding..z2fjson.Unmarshal@PLT>\naddq $32,%rsp\nmovq %rax,-1056(%rbp)\nmovq %rdx,-1048(%rbp)\nmovq -1056(%rbp),%rax\ntestq %rax,%rax\nje .L16\n.LBB17:\nmovq -1056(%rbp),%rax\ntestq %rax,%rax\njne .L17\nmovl $0,%eax\njmp .L18\n.L17:\nmovq -1056(%rbp),%rax\nmovq (%rax),%rax\n.L18:\nmovq %rax,-1216(%rbp)\nmovq -1048(%rbp),%rax\nmovq %rax,-1208(%rbp)\nmovdqa -1216(%rbp),%xmm4\nmovups %xmm4,-528(%rbp)\nleaq -528(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $1,-136(%rbp)\nmovq $1,-128(%rbp)\nleaq <.LC36>(%rip),%rax\nmovq %rax,-1072(%rbp)\nmovq $28,-1064(%rbp)\nmovq -1072(%rbp),%rax\nmovq -1064(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <log.Fatalf@PLT>\naddq $32,%rsp\n.L16:\n.LBE17:\n.LBE16:\nleaq <type...6.7struct.4Title.0string.5>(%rip),%rax\nmovq %rax,-1200(%rbp)\nleaq <type...6.7struct.4Title.0string.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-488(%rbp)\nmovq -56(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-464(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L19\n.LBB18:\nmovq -488(%rbp),%rcx\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -464(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE18:\njmp .L20\n.L19:\n.LBB19:\nmovq -488(%rbp),%rax\nleaq -480(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7struct.4Title.0string.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L20:\n.LBE19:\nmovq -488(%rbp),%rax\nmovq %rax,-1192(%rbp)\nmovdqa -1200(%rbp),%xmm5\nmovups %xmm5,-448(%rbp)\nleaq -448(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-496(%rbp)\n.LBE9:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "{\n\tdata, err := json.Marshal(movies)\n\tif err != nil {\n\t\tlog.Fatalf(\"STR\", err)\n\t}\n\tfmt.Printf(\"STR\", data)\n}\n{\n\tdata, err := json.MarshalIndent(movies, \"STR\")\n\tif err != nil {\n\t\tlog.Fatalf(\"STR\", err)\n\t}\n\tfmt.Printf(\"STR\", data)\n\tvar titles []struct{ Title string }\n\tif err := json.Unmarshal(data, &titles); err != nil {\n\t\tlog.Fatalf(\"STR\", err)\n\t}\n\tfmt.Println(titles)\n}"}
{"src": ".LFB4:\nleaq -952(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L111\nmovl $952,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL6:\nret\n.L111:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $904,%rsp\nmovq %rdi,-792(%rbp)\nmovq -792(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB53:\nmovq $0,-672(%rbp)\nmovq $0,-664(%rbp)\nmovq $0,-656(%rbp)\n.LBB54:\n.LBB55:\n.LBB56:\nmovq <go.day356.testcases>(%rip),%rax\nmovq <8+go.day356.testcases>(%rip),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq <16+go.day356.testcases>(%rip),%rax\nmovq %rax,-592(%rbp)\nmovq -600(%rbp),%rax\nmovq %rax,-800(%rbp)\nmovl $0,%r15d\n.LBE56:\njmp .L53\n.L110:\n.LBB57:\nnop\n.LBE57:\n.LBB58:\n.LBB59:\nmovq -600(%rbp),%rax\ntestq %r15,%r15\njs .L54\ncmpq %rax,%r15\njge .L54\nmovq -608(%rbp),%rcx\nmovq %r15,%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-624(%rbp)\n.LBE59:\n.LBB60:\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -624(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -560(%rbp),%rax\nmovq %rax,-656(%rbp)\n.LBE60:\n.LBB61:\nmovl $5,%edi\ncall <go.day356.NewQueueFLA>\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\n.LBB62:\nmovq $0,-784(%rbp)\nmovq $0,-776(%rbp)\nmovq $0,-768(%rbp)\nmovq $0,-760(%rbp)\nmovq $0,-752(%rbp)\nmovq $0,-744(%rbp)\n.LBB63:\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB64:\n.LBB65:\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,-936(%rbp)\nmovl $0,%r14d\n.LBE65:\njmp .L55\n.L54:\n.LBE64:\n.LBE63:\n.LBE62:\n.LBE61:\n.LBB101:\nmovq %rax,%rsi\nmovq %r15,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L109:\n.LBE101:\n.LBB102:\n.LBB100:\n.LBB99:\n.LBB98:\n.LBB66:\nnop\n.LBE66:\n.LBB67:\n.LBB68:\nmovq -456(%rbp),%rax\ntestq %r14,%r14\njs .L56\ncmpq %rax,%r14\njge .L56\nmovq -464(%rbp),%rcx\nmovq %r14,%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBE68:\n.LBB69:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-768(%rbp)\nmovq %rdx,-760(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\n.LBE69:\n.LBB70:\n.LBB71:\n.LBB72:\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rbx\nmovq %rbx,%rax\ncmpq $1,%rax\nje .L57\njmp .L98\n.L56:\n.LBE72:\n.LBE71:\n.LBE70:\n.LBB95:\nmovq %rax,%rsi\nmovq %r14,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L57:\n.LBE95:\n.LBB96:\n.LBB94:\n.LBB93:\nmovq %rcx,%rdx\nleaq <.LC51>(%rip),%rax\ncmpq %rax,%rdx\njne .L59\nmovl $0,%eax\njmp .L61\n.L59:\nmovq %rcx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%esi\nleaq <.LC51>(%rip),%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nmovl %esi,%eax\nsubl %edx,%eax\ntestl %eax,%eax\nsetne %al\njmp .L61\n.L98:\nmovl $1,%eax\n.L61:\ntestb %al,%al\njne .L103\n.LBB73:\n.LBB74:\nmovq -688(%rbp),%rax\nmovq <16>(%rax),%r8\nmovq -680(%rbp),%rcx\nmovq -768(%rbp),%rdx\nmovq -760(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall *%r8\n.LVL7:\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq -704(%rbp),%rdi\nmovq -696(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.ifaceeq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L104\n.LBB75:\nmovq -752(%rbp),%rcx\nmovq -744(%rbp),%rbx\nmovq %rcx,%rax\ntestq %rax,%rax\njne .L65\nmovl $0,%eax\njmp .L66\n.L65:\nmovq %rcx,%rax\nmovq (%rax),%rax\n.L66:\nmovq %rax,-928(%rbp)\nmovq %rbx,%rax\nmovq %rax,-920(%rbp)\nmovq -704(%rbp),%rax\ntestq %rax,%rax\njne .L67\nmovl $0,%eax\njmp .L68\n.L67:\nmovq -704(%rbp),%rax\nmovq (%rax),%rax\n.L68:\nmovq %rax,-912(%rbp)\nmovq -696(%rbp),%rax\nmovq %rax,-904(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovdqa -928(%rbp),%xmm0\nmovups %xmm0,-368(%rbp)\nmovdqa -912(%rbp),%xmm1\nmovups %xmm1,-352(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L69\n.LBB76:\nmovq -376(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE76:\njmp .L70\n.L69:\n.LBB77:\nmovq -376(%rbp),%rcx\nleaq -368(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L70:\n.LBE77:\nmovq -376(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC52>(%rip),%rax\nmovq %rax,-848(%rbp)\nmovq $19,-840(%rbp)\nmovq -848(%rbp),%rax\nmovq -840(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -792(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.LBE75:\n.LBE74:\n.LBE73:\njmp .L104\n.L103:\n.LBB78:\nnop\n.LBE78:\nmovq %rbx,%rax\ncmpq $1,%rax\njne .L72\nmovq %rcx,%rdx\nleaq <.LC53>(%rip),%rax\ncmpq %rax,%rdx\njne .L73\nmovl $0,%eax\njmp .L75\n.L73:\nmovq %rcx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%esi\nleaq <.LC53>(%rip),%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nmovl %esi,%eax\nsubl %edx,%eax\ntestl %eax,%eax\nsetne %al\njmp .L75\n.L72:\nmovl $1,%eax\n.L75:\ntestb %al,%al\njne .L105\n.LBB79:\n.LBB80:\nmovq -688(%rbp),%rax\nmovq <8>(%rax),%rcx\nmovq -680(%rbp),%rdx\nleaq -144(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL8:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\n.LBB81:\nmovq -768(%rbp),%rax\nmovq -760(%rbp),%rdx\nmovq -720(%rbp),%rdi\nmovq -712(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.efaceeq@PLT>\nxorl $1,%eax\nmovl %eax,%edx\nmovl %edx,%eax\nxorl $1,%eax\ntestb %al,%al\nje .L78\n.LBB82:\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq -736(%rbp),%rdi\nmovq -728(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.ifaceeq@PLT>\nxorl $1,%eax\nmovl %eax,%edx\n.L78:\n.LBE82:\n.LBE81:\ntestb %dl,%dl\nje .L106\n.LBB83:\nmovq -752(%rbp),%rcx\nmovq -744(%rbp),%rbx\nmovq -768(%rbp),%r12\nmovq -760(%rbp),%r13\nmovq %rcx,%rax\ntestq %rax,%rax\njne .L80\nmovl $0,%eax\njmp .L81\n.L80:\nmovq %rcx,%rax\nmovq (%rax),%rax\n.L81:\nmovq %rax,-896(%rbp)\nmovq %rbx,%rax\nmovq %rax,-888(%rbp)\nmovq -736(%rbp),%rax\ntestq %rax,%rax\njne .L82\nmovl $0,%eax\njmp .L83\n.L82:\nmovq -736(%rbp),%rax\nmovq (%rax),%rax\n.L83:\nmovq %rax,-880(%rbp)\nmovq -728(%rbp),%rax\nmovq %rax,-872(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovq %r12,-288(%rbp)\nmovq %r13,-280(%rbp)\nmovdqa -896(%rbp),%xmm2\nmovups %xmm2,-272(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovdqa -880(%rbp),%xmm3\nmovups %xmm3,-240(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L84\n.LBB84:\nmovq -296(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\n.LBE84:\njmp .L85\n.L84:\n.LBB85:\nmovq -296(%rbp),%rcx\nleaq -288(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L85:\n.LBE85:\nmovq -296(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $4,-104(%rbp)\nmovq $4,-96(%rbp)\nleaq <.LC54>(%rip),%rax\nmovq %rax,-832(%rbp)\nmovq $29,-824(%rbp)\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -792(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.LBE83:\n.LBE80:\n.LBE79:\njmp .L106\n.L105:\n.LBB86:\nnop\n.LBE86:\nmovq %rbx,%rax\ncmpq $1,%rax\njne .L86\nmovq %rcx,%rdx\nleaq <.LC55>(%rip),%rax\ncmpq %rax,%rdx\njne .L87\nmovl $0,%eax\njmp .L89\n.L87:\nmovq %rcx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%ecx\nleaq <.LC55>(%rip),%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nmovl %ecx,%eax\nsubl %edx,%eax\ntestl %eax,%eax\nsetne %al\njmp .L89\n.L86:\nmovl $1,%eax\n.L89:\ntestb %al,%al\njne .L107\n.LBB87:\n.LBB88:\nmovq -688(%rbp),%rax\nmovq <24>(%rax),%rdx\nmovq -680(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL9:\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq -88(%rbp),%rax\nmovq -768(%rbp),%rdi\nmovq -760(%rbp),%rsi\nmovq %rax,%rcx\nleaq <int..d>(%rip),%rdx\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L108\n.LBB89:\nmovq -768(%rbp),%r12\nmovq -760(%rbp),%r13\nleaq <int..d>(%rip),%rax\nmovq %rax,-864(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-224(%rbp)\nmovq -224(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -224(%rbp),%rax\nmovq %rax,-856(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq %r12,-208(%rbp)\nmovq %r13,-200(%rbp)\nmovdqa -864(%rbp),%xmm4\nmovups %xmm4,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L92\n.LBB90:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE90:\njmp .L93\n.L92:\n.LBB91:\nmovq -216(%rbp),%rcx\nleaq -208(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L93:\n.LBE91:\nmovq -216(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC56>(%rip),%rax\nmovq %rax,-816(%rbp)\nmovq $29,-808(%rbp)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -792(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.LBE89:\n.LBE88:\n.LBE87:\njmp .L108\n.L104:\nnop\njmp .L71\n.L106:\nnop\njmp .L71\n.L107:\n.LBB92:\nnop\njmp .L71\n.L108:\n.LBE92:\nnop\n.L71:\n.LBE93:\n.LBE94:\n.LBE96:\n.LBE67:\n.LBB97:\naddq $1,%r14\n.L55:\n.LBE97:\ncmpq -936(%rbp),%r14\njl .L109\n.LBE98:\n.LBE99:\n.LBE100:\n.LBE102:\n.LBE58:\n.LBB103:\naddq $1,%r15\n.L53:\n.LBE103:\ncmpq -800(%rbp),%r15\njl .L110\n.LBE55:\n.LBE54:\n.LBE53:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tq := NewQueueFLA(5)\n\tfor _, action := range tc.actions {\n\t\tswitch action.act {\n\t\tcase \"STR\":\n\t\t\tif err := q.Enqueue(action.data); err != action.err {\n\t\t\t\tt.Errorf(\"STR\", action.err, err)\n\t\t\t}\n\t\tcase \"STR\":\n\t\t\tif item, err := q.Dequeue(); item != action.data || err != action.err {\n\t\t\t\tt.Errorf(\"STR\", action.data, action.err, item, err)\n\t\t\t}\n\t\tcase \"STR\":\n\t\t\tif s := q.Size(); s != action.data {\n\t\t\t\tt.Errorf(\"STR\", action.data, s)\n\t\t\t}\n\t\t}\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L6\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L6:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-24(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nandq -24(%rbp),%rax\ntestq %rax,%rax\nje .L4\n.LBB7:\n.LBB8:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L4:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB9:\nmovq -24(%rbp),%rax\nandl $1431655765,%eax\ntestq %rax,%rax\njne .L5\n.LBB10:\n.LBB11:\nmovb $0,-1(%rbp)\nmovzbl -1(%rbp),%eax\njmp .L3\n.L5:\n.LBE11:\n.LBE10:\n.LBE9:\n.LBB12:\nmovb $1,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.L3:\n.LBE12:\n.LBE2:\npopq %rbp\nret", "tgt": "if num <= 0 {\n\treturn false\n}\nif num&(num-1) != 0 {\n\treturn false\n}\nif num&0x55555555 == 0 {\n\treturn false\n}\nreturn true"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovl $0,-4(%rbp)\n.LBB2:\nmovq -24(%rbp),%rax\nandl $1048320,%eax\nshrq $8,%rax\nmovl %eax,-8(%rbp)\nmovabsq $-17592186044416,%rax\nandq -24(%rbp),%rax\nshrq $32,%rax\norl %eax,-8(%rbp)\n.LBB3:\nmovl -8(%rbp),%eax\nmovl %eax,-4(%rbp)\nmovl -4(%rbp),%eax\n.LBE3:\n.LBE2:\npopq %rbp\nret", "tgt": "major := uint32((dev & 0x00000000000fff00) >> 8)\nmajor |= uint32((dev & 0xfffff00000000000) >> 32)\nreturn major"}
{"src": ".LFB4:\nleaq -664(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L61\nmovl $664,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L61:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $616,%rsp\nmovq %rdi,-552(%rbp)\nmovq -552(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\nmovq $0,-496(%rbp)\nmovq $0,-488(%rbp)\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\n.LBB30:\nmovq $0,-512(%rbp)\nmovq $0,-504(%rbp)\n.LBB31:\n.LBB32:\n.LBB33:\nmovq <go.day137.testcases>(%rip),%rax\nmovq <8+go.day137.testcases>(%rip),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16+go.day137.testcases>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%r13\nmovl $0,%r12d\n.LBE33:\njmp .L36\n.L60:\n.LBB34:\nnop\n.LBE34:\n.LBB35:\n.LBB36:\nmovq -456(%rbp),%rax\ntestq %r12,%r12\njs .L37\ncmpq %rax,%r12\njge .L37\nmovq -464(%rbp),%rdx\nmovq %r12,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE36:\n.LBB37:\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\n.LBE37:\n.LBB38:\nmovq -504(%rbp),%rdx\nleaq -496(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.day137.BitArray.Init>\n.LBB39:\nmovq $0,-64(%rbp)\nmovb $0,-65(%rbp)\n.LBB40:\nmovq -512(%rbp),%rcx\n.LBB41:\n.LBB42:\nleaq -432(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE42:\njmp .L38\n.L37:\n.LBE41:\n.LBE40:\n.LBE39:\n.LBE38:\n.LBB68:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\n.LBE68:\n.LBB69:\n.LBB53:\n.LBB52:\n.LBB51:\n.LBB43:\nnop\n.LBE43:\n.LBB44:\n.LBB45:\nmovq -432(%rbp),%rax\nmovq (%rax),%rdx\nmovq -424(%rbp),%rax\nmovzbl (%rax),%eax\n.LBE45:\n.LBB46:\nmovq %rdx,-64(%rbp)\nmovb %al,-65(%rbp)\n.LBE46:\n.LBB47:\n.LBB48:\nmovzbl -65(%rbp),%edx\nmovq -64(%rbp),%rcx\nleaq -496(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day137.BitArray.Set>\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -528(%rbp),%rax\ntestq %rax,%rax\nje .L39\n.LBB49:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nleaq <.LC53>(%rip),%rax\nmovq %rax,-592(%rbp)\nmovq $26,-584(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -552(%rbp),%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L39:\n.LBE49:\n.LBE48:\n.LBE47:\n.LBE44:\n.LBB50:\nleaq -432(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L38:\n.LBE50:\nmovq -432(%rbp),%rax\ntestq %rax,%rax\njne .L58\n.LBE51:\n.LBE52:\n.LBE53:\n.LBB54:\nmovq $0,-56(%rbp)\n.LBB55:\njmp .L42\n.L59:\n.LBB56:\nnop\n.LBE56:\n.LBB57:\n.LBB58:\nleaq -176(%rbp),%rcx\nmovq -56(%rbp),%rdx\nleaq -496(%rbp),%rax\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <go.day137.BitArray.Get>\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovzbl -336(%rbp),%eax\nmovb %al,-66(%rbp)\nmovq -328(%rbp),%rax\nmovq -320(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -544(%rbp),%rax\ntestq %rax,%rax\nje .L43\n.LBB59:\nmovq -544(%rbp),%rax\ntestq %rax,%rax\njne .L44\nmovl $0,%eax\njmp .L45\n.L44:\nmovq -544(%rbp),%rax\nmovq (%rax),%rax\n.L45:\nmovq %rax,-656(%rbp)\nmovq -536(%rbp),%rax\nmovq %rax,-648(%rbp)\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovdqa -656(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L46\n.LBB60:\nmovq -312(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE60:\njmp .L47\n.L46:\n.LBB61:\nmovq -312(%rbp),%rcx\nleaq -304(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L47:\n.LBE61:\nmovq -312(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $1,-136(%rbp)\nmovq $1,-128(%rbp)\nleaq <.LC54>(%rip),%rax\nmovq %rax,-576(%rbp)\nmovq $41,-568(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -552(%rbp),%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\njmp .L48\n.L43:\n.LBE59:\n.LBB62:\n.LBB63:\nmovq -56(%rbp),%rax\nmovq %rax,-112(%rbp)\nleaq -112(%rbp),%rax\nmovq (%rax),%rdx\nmovq -512(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovzbl (%rax),%eax\ncmpb %al,-66(%rbp)\nje .L48\n.LBB64:\nmovq -56(%rbp),%rax\nmovq %rax,-104(%rbp)\nleaq -104(%rbp),%rax\nmovq (%rax),%rdx\nmovq -512(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7bool>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq %rax,%rbx\nleaq <bool..d>(%rip),%rax\nmovq %rax,-640(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-288(%rbp)\nmovq -288(%rbp),%rdx\nmovzbl (%rbx),%eax\nmovb %al,(%rdx)\nmovq -288(%rbp),%rax\nmovq %rax,-632(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-624(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -280(%rbp),%rdx\nmovzbl -66(%rbp),%eax\nmovb %al,(%rdx)\nmovq -280(%rbp),%rax\nmovq %rax,-616(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-608(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-272(%rbp)\nmovq -272(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -272(%rbp),%rax\nmovq %rax,-600(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovdqa -640(%rbp),%xmm1\nmovups %xmm1,-256(%rbp)\nmovdqa -624(%rbp),%xmm2\nmovups %xmm2,-240(%rbp)\nmovdqa -608(%rbp),%xmm3\nmovups %xmm3,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L49\n.LBB65:\nmovq -264(%rbp),%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE65:\njmp .L50\n.L49:\n.LBB66:\nmovq -264(%rbp),%rcx\nleaq -256(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L50:\n.LBE66:\nmovq -264(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq $3,-80(%rbp)\nleaq <.LC55>(%rip),%r14\nmovl $31,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -552(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L48:\n.LBE64:\n.LBE63:\n.LBE62:\n.LBE58:\n.LBE57:\n.LBB67:\naddq $1,-56(%rbp)\n.L42:\n.LBE67:\nmovq -504(%rbp),%rax\ncmpq %rax,-56(%rbp)\njl .L59\n.LBE55:\n.LBE54:\n.LBE69:\n.LBE35:\n.LBB70:\naddq $1,%r12\n.L36:\n.LBE70:\ncmpq %r13,%r12\njl .L60\n.LBE32:\n.LBE31:\n.LBE30:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nvar ba BitArray\nfor _, tc := range testcases {\n\tba.Init(tc.size)\n\tfor index, val := range tc.ones {\n\t\tif err := ba.Set(index, val); err != nil {\n\t\t\tt.Errorf(\"STR\")\n\t\t}\n\t}\n\tfor i := 0; i < tc.size; i++ {\n\t\tif val, err := ba.Get(i); err != nil {\n\t\t\tt.Errorf(\"STR\", err)\n\t\t} else if tc.ones[i] != val {\n\t\t\tt.Errorf(\"STR\", tc.ones[i], val, i)\n\t\t}\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-32(%rbp)\nmovq %rdi,-24(%rbp)\nmovq %rdx,-48(%rbp)\nmovq %rcx,-40(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\nmovq -24(%rbp),%rdx\nmovq -40(%rbp),%rax\ncmpq %rax,%rdx\njne .L2\nmovq -32(%rbp),%rdx\nmovq -48(%rbp),%rax\ncmpq %rax,%rdx\njne .L3\nmovl $1,%eax\njmp .L5\n.L3:\nmovq -40(%rbp),%rax\nmovq %rax,%rdx\nmovq -48(%rbp),%rcx\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nsete %al\njmp .L5\n.L2:\nmovl $0,%eax\n.L5:\ntestb %al,%al\nje .L6\n.LBB4:\n.LBB5:\nmovq $-1,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L7\n.L6:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq -24(%rbp),%rdx\nmovq -40(%rbp),%rax\ncmpq %rax,%rdx\njle .L8\n.LBB7:\n.LBB8:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L7\n.L8:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB9:\nmovq -40(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L7:\n.LBE9:\n.LBE2:\nleave\nret", "tgt": "if a == b {\n\treturn -1\n}\nif len(a) > len(b) {\n\treturn len(a)\n}\nreturn len(b)"}
{"src": ".LFB9:\ncmpq %fs:112,%rsp\njnb .L257\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL9:\nret\n.L257:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $144,%rsp\nmovq %rdi,-152(%rbp)\nmovq %rsi,-160(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\n.LBB189:\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-24(%rbp)\n.LBB190:\n.LBB191:\njmp .L240\n.L256:\n.LBB192:\nnop\n.LBE192:\n.LBB193:\n.LBB194:\nmovq -160(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\njne .L241\n.LBB195:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rbx\nmovq -160(%rbp),%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L242\n.LBB196:\nmovq -80(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-128(%rbp)\n.LBE196:\njmp .L243\n.L242:\n.LBB197:\nmovq -80(%rbp),%rcx\nmovq -64(%rbp),%rdx\nmovq %rcx,-144(%rbp)\nmovq %rax,-136(%rbp)\nmovq %rdx,-128(%rbp)\n.L243:\n.LBE197:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\nmovq -160(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-160(%rbp)\n.LBE195:\njmp .L240\n.L241:\n.LBB198:\nmovq -160(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-24(%rbp)\n.LBB199:\n.LBB200:\njmp .L244\n.L255:\n.LBB201:\nnop\n.LBE201:\n.LBB202:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-24(%rbp)\n.L244:\n.LBE202:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\njne .L255\n.LBE200:\n.LBE199:\nmovq -24(%rbp),%rax\naddq $16,%rax\nmovq -160(%rbp),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L247\n.LBB203:\nmovq %rdx,(%rax)\njmp .L248\n.L247:\n.LBE203:\n.LBB204:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L248:\n.LBE204:\n.LBB205:\nmovq -160(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq <8>(%rax),%rax\nmovl $0,%edx\nmovq %rax,-160(%rbp)\nleaq <8>(%rcx),%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L249\n.LBB206:\nmovq %rdx,(%rax)\njmp .L240\n.L249:\n.LBE206:\n.LBB207:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L240:\n.LBE207:\n.LBE205:\n.LBE198:\n.LBE194:\n.LBE193:\ncmpq $0,-160(%rbp)\njne .L256\n.LBE191:\n.LBE190:\n.LBB208:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -152(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE208:\n.LBE189:\nmovq -152(%rbp),%rax\naddq $144,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "var res []int\nvar max *TreeNode\nfor root != nil {\n\tif root.Left == nil {\n\t\tres = append(res, root.Val)\n\t\troot = root.Right\n\t} else {\n\t\tmax = root.Left\n\t\tfor max.Right != nil {\n\t\t\tmax = max.Right\n\t\t}\n\t\tmax.Right = root\n\t\troot, root.Left = root.Left, nil\n\t}\n}\nreturn res"}
{"src": ".LFB27:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\njle .L2\n.LBB4:\n.LBB5:\nmovq -32(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L3:\n.LBE6:\n.LBE2:\npopq %rbp\nret", "tgt": "if a > b {\n\treturn b\n}\nreturn a"}
{"src": ".LFB9:\nleaq -328(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L142\nmovl $328,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL11:\nret\n.L142:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $296,%rsp\nmovq %rdi,-296(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\n.LBB103:\nleaq <bytes.Buffer..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\n.LBB104:\nleaq -224(%rbp),%rax\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <reflect.ValueOf@PLT>\nmovq -40(%rbp),%rax\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\nmovq %rax,%rdi\ncall <go.sexpr.encode>\naddq $32,%rsp\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -288(%rbp),%rax\ntestq %rax,%rax\nje .L139\n.LBB105:\n.LBB106:\n.LBB107:\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq $0,-176(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,-256(%rbp)\nmovq %rbx,-248(%rbp)\nmovq -176(%rbp),%rcx\nmovq %rcx,-240(%rbp)\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\n.LBE107:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-136(%rbp)\nmovq %rdx,-128(%rbp)\nmovq -296(%rbp),%rax\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -128(%rbp),%rdx\nmovq %rdx,<32>(%rax)\njmp .L138\n.L139:\n.LBE106:\n.LBE105:\n.LBE104:\n.LBB108:\n.LBB109:\nleaq -112(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <bytes.Buffer.Bytes@PLT>\nmovl $0,%r12d\nmovl $0,%r13d\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq %r12,-272(%rbp)\nmovq %r13,-264(%rbp)\n.LBE109:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-56(%rbp)\nmovq %rdx,-48(%rbp)\nmovq -296(%rbp),%rax\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -48(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.L138:\n.LBE108:\n.LBE103:\nmovq -296(%rbp),%rax\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "var buf bytes.Buffer\nif err := encode(&buf, reflect.ValueOf(v)); err != nil {\n\treturn nil, err\n}\nreturn buf.Bytes(), nil"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L27\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $88,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r9\nmovq %r9,%rsi\nmovq %r10,%rdi\nmovq %rax,%rdi\nmovq %rsi,-96(%rbp)\nmovq %rdi,-88(%rbp)\nmovq %rdx,-112(%rbp)\nmovq %rcx,-104(%rbp)\nmovq $0,-48(%rbp)\n.LBB2:\nmovl $0,%r8d\nmovl $1,%ecx\nmovl $2,%edx\nmovl $0,%esi\nleaq <type..map.6uint8.7struct.4.5>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,-56(%rbp)\n.LBB3:\nmovq $0,-64(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -88(%rbp),%r13\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L25:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -88(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L21\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\nleaq <1>(%rbx),%r12\n.LBE10:\njmp .L6\n.L21:\n.LBB11:\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rdx,%r12\n.L6:\n.LBE11:\n.LBE9:\nmovq %rbx,-64(%rbp)\n.LBB12:\n.LBB13:\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq -64(%rbp),%rax\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njge .L7\nmovq %rcx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovb %al,-75(%rbp)\nleaq -75(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6uint8.7struct.4.5>(%rip),%rdi\ncall <runtime.mapassign@PLT>\n.LBE13:\n.LBE12:\n.LBE8:\n.LBB16:\nmovq %r12,%rbx\njmp .L2\n.L7:\n.LBE16:\n.LBB17:\n.LBB15:\n.LBB14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE14:\n.LBE15:\n.LBE17:\ncmpq %r13,%rbx\njl .L25\n.LBE5:\n.LBE4:\n.LBE3:\nmovq $0,-40(%rbp)\n.LBB18:\nmovq $0,-72(%rbp)\n.LBB19:\n.LBB20:\n.LBB21:\nmovq -104(%rbp),%r13\nmovl $0,%ebx\n.LBE21:\njmp .L10\n.L26:\n.LBB22:\nnop\n.LBE22:\n.LBB23:\n.LBB24:\nmovq -104(%rbp),%rax\ntestq %rbx,%rbx\njs .L11\ncmpq %rax,%rbx\njge .L11\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L12\njmp .L23\n.L11:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12:\n.LBB25:\nleaq <1>(%rbx),%r12\n.LBE25:\njmp .L14\n.L23:\n.LBB26:\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rdx,%r12\n.L14:\n.LBE26:\n.LBE24:\nmovq %rbx,-72(%rbp)\n.LBB27:\n.LBB28:\nmovb $0,-73(%rbp)\n.LBB29:\nmovq -104(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L15\ncmpq %rax,-72(%rbp)\njge .L15\nmovq -112(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovb %al,-74(%rbp)\nleaq -74(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6uint8.7struct.4.5>(%rip),%rdi\ncall <runtime.mapaccess2@PLT>\nmovl %edx,%eax\nmovb %al,-73(%rbp)\n.LBE29:\ncmpb $0,-73(%rbp)\njne .L16\njmp .L17\n.L15:\n.LBB30:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\n.LBE30:\n.LBB31:\naddq $1,-40(%rbp)\n.L17:\n.LBE31:\n.LBE28:\n.LBE27:\n.LBE23:\n.LBB32:\nmovq %r12,%rbx\n.L10:\n.LBE32:\ncmpq %r13,%rbx\njl .L26\n.LBE20:\n.LBE19:\n.LBE18:\n.LBB33:\nmovq -40(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.LBE33:\n.LBE2:\naddq $88,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "m := map[byte]struct{}{}\nfor i := range J {\n\tm[J[i]] = struct{}{}\n}\nres := 0\nfor i := range S {\n\tif _, ok := m[S[i]]; ok {\n\t\tres++\n\t}\n}\nreturn res"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L23\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $168,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-160(%rbp)\nmovq %rdi,-152(%rbp)\nmovq %rdx,-168(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\n.LBB2:\n.LBB3:\ncmpq $1,-168(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\njmp .L17\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -168(%rbp),%rax\nsubq $1,%rax\naddq %rax,%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-24(%rbp)\nleaq <.LC2>(%rip),%rcx\nmovl $0,%ebx\nmovq %rcx,-144(%rbp)\nmovq %rbx,-136(%rbp)\n.LBB6:\nmovq $0,-32(%rbp)\n.LBB7:\njmp .L4\n.L22:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -168(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-32(%rbp)\njne .L5\n.LBB11:\nmovq -56(%rbp),%rax\nmovq %rax,-24(%rbp)\n.L5:\n.LBE11:\n.LBE10:\n.LBB12:\nmovq -32(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB13:\njmp .L6\n.L21:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\nmovq -152(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L7\ncmpq %rax,-40(%rbp)\njl .L18\n.L7:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -160(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%edx\nleaq -100(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.intstring@PLT>\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nleaq -96(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\n.LBB16:\n.LBB17:\n.LBB18:\ncmpq $0,-32(%rbp)\nsetg %al\ntestb %al,%al\nje .L9\n.LBB19:\nmovq -168(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-32(%rbp)\nsetl %al\n.L9:\n.LBE19:\n.LBE18:\ntestb %al,%al\nje .L10\n.LBB20:\nmovq -48(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\nsetne %al\n.L10:\n.LBE20:\n.LBE17:\ntestb %al,%al\nje .L11\n.LBB21:\nmovq -56(%rbp),%rax\nsubq -24(%rbp),%rax\naddq %rax,-40(%rbp)\njmp .L12\n.L11:\n.LBE21:\n.LBE16:\nmovq -24(%rbp),%rax\naddq %rax,-40(%rbp)\n.L12:\n.LBE15:\n.LBB22:\naddq $1,-48(%rbp)\n.L6:\n.LBE22:\nmovq -152(%rbp),%rax\ncmpq %rax,-40(%rbp)\njl .L21\n.LBE13:\n.LBE12:\nsubq $2,-24(%rbp)\n.LBE9:\n.LBB23:\naddq $1,-32(%rbp)\n.L4:\n.LBE23:\nmovq -32(%rbp),%rax\ncmpq -168(%rbp),%rax\njl .L22\n.LBE7:\n.LBE6:\n.LBB24:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\n.L17:\n.LBE24:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if numRows < 2 {\n\treturn s\n}\nmaxInterval := (numRows - 1) << 1\ninterval := maxInterval\nafter := \"STR\"\nfor i := 0; i < numRows; i++ {\n\tif numRows-1 == i {\n\t\tinterval = maxInterval\n\t}\n\tfor j, no := i, 0; j < len(s); no++ {\n\t\tafter += string(s[j])\n\t\tif i > 0 && i < numRows-1 && 1 == no&1 {\n\t\t\tj += maxInterval - interval\n\t\t\tcontinue\n\t\t}\n\t\tj += interval\n\t}\n\tinterval -= 2\n}\nreturn after"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L40\nmovl $136,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L40:\npushq %rbp\nmovq %rsp,%rbp\naddq $-128,%rsp\nmovq %rdi,-104(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\n.LBB36:\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nleaq <type...60x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-16(%rbp)\nleaq -96(%rbp),%rdx\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rax\nsubq $8,%rsp\npushq -16(%rbp)\npushq -24(%rbp)\npushq -32(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.Solution.dfs>\naddq $32,%rsp\n.LBB37:\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -104(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -48(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE37:\n.LBE36:\nmovq -104(%rbp),%rax\nleave\nret", "tgt": "var result []string\ndfs(s, []string{}, &result)\nreturn result"}
{"src": ".LFB27:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $40,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\ncmpq $6,-40(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovq -40(%rbp),%rax\naddq $1,%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -40(%rbp),%rcx\nmovabsq $5270498306774157605,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nmovq %rcx,%rdx\nsarq $63,%rdx\nsubq %rdx,%rax\nmovq %rax,%rdx\nsalq $3,%rdx\nsubq %rax,%rdx\nmovq %rcx,%rax\nsubq %rdx,%rax\nleaq <1>(%rax),%rbx\nmovq -40(%rbp),%rcx\nmovabsq $5270498306774157605,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\nmovq %rax,%rdi\ncall <main.row>\nimulq %rbx,%rax\nmovq %rax,-32(%rbp)\n.LBB6:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L3:\n.LBE6:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if n < 7 {\n\treturn int64(n + 1)\n}\nans := (1 + int64(n%7)) * row(n/7)\nreturn ans"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $232,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $216,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L3\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L3:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsete %al\n.L2:\n.LBE5:\n.LBE4:\ntestb %al,%al\nje .L4\n.LBB6:\n.LBB7:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\nmovq -216(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L4:\n.LBE7:\n.LBE6:\n.LBE3:\nmovq <24>(%rbp),%rax\nmovq %rax,-168(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L6\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-176(%rbp)\nmovb $1,-177(%rbp)\nleaq <go.problem0498.findDiagonalOrder..func1>(%rip),%rdi\nleaq -177(%rbp),%rsi\nleaq -176(%rbp),%rcx\nleaq -168(%rbp),%rdx\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nleaq -128(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rax\nmovq %rdi,(%rax)\nmovq %rsi,<8>(%rax)\nmovq %rcx,<16>(%rax)\nmovq %rdx,<24>(%rax)\nmovq -88(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -168(%rbp),%rdx\nmovq -176(%rbp),%rax\nimulq %rdx,%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-208(%rbp)\nmovq %rbx,-200(%rbp)\nmovq %rbx,-192(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB8:\nmovq $0,-40(%rbp)\n.LBB9:\njmp .L7\n.L19:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\nmovq -200(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L8\ncmpq %rax,-40(%rbp)\njl .L16\n.L8:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L10\ncmpq %rax,-24(%rbp)\njl .L17\n.L10:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L12\ncmpq %rax,-32(%rbp)\njge .L12\nmovq -80(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -208(%rbp),%rcx\nmovq -40(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\n.LBB12:\nmovq -48(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -32(%rbp),%rdx\nmovq -24(%rbp),%rax\nmovq -48(%rbp),%r10\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL1:\nmovq %rax,%rcx\nmovq %rdx,%rax\nmovq %rcx,-24(%rbp)\nmovq %rax,-32(%rbp)\n.LBE12:\n.LBE11:\n.LBB13:\naddq $1,-40(%rbp)\njmp .L7\n.L12:\n.LBE13:\n.LBB14:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE14:\nmovq -40(%rbp),%rax\ncmpq -56(%rbp),%rax\njl .L19\n.LBE9:\n.LBE8:\n.LBB15:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -216(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE15:\n.LBE2:\nmovq -216(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if len(mat) == 0 || len(mat[0]) == 0 {\n\treturn []int{}\n}\nm, n := len(mat), len(mat[0])\nisUpping := true\nnext := func(i, j int) (int, int) {\n\tif isUpping {\n\t\ti--\n\t\tj++\n\t\tif 0 <= i && j < n {\n\t\t\treturn i, j\n\t\t}\n\t\tisUpping = false\n\t\tif i < 0 && j < n {\n\t\t\treturn 0, j\n\t\t}\n\t\treturn i + 2, j - 1\n\t}\n\ti++\n\tj--\n\tif i < m && 0 <= j {\n\t\treturn i, j\n\t}\n\tisUpping = true\n\tif i < m && j < 0 {\n\t\treturn i, 0\n\t}\n\treturn i - 1, j + 2\n}\nmn := m * n\nres := make([]int, mn)\ni, j := 0, 0\nfor k := 0; k < mn; k++ {\n\tres[k] = mat[i][j]\n\ti, j = next(i, j)\n}\nreturn res"}
{"src": ".LFB0:\nleaq -408(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L37\nmovl $408,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $360,%rsp\nmovq %rdi,-360(%rbp)\npxor %xmm0,%xmm0\nmovsd %xmm0,-80(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...62.7float64>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-336(%rbp)\nmovq %rbx,-328(%rbp)\nmovq %rbx,-320(%rbp)\n.LBB3:\nmovq $0,-72(%rbp)\n.LBB4:\njmp .L2\n.L35:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq <48>(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L3\ncmpq %rax,-72(%rbp)\njl .L28\n.L3:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq <40>(%rbp),%rdx\nmovq -72(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\npxor %xmm0,%xmm0\ncvtsi 2sdq%rax,%xmm0\nmovsd %xmm0,-104(%rbp)\nmovq <24>(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L5\ncmpq %rax,-72(%rbp)\njl .L29\n.L5:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq <16>(%rbp),%rdx\nmovq -72(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\npxor %xmm0,%xmm0\ncvtsi 2sdq%rax,%xmm0\nmovsd %xmm0,-112(%rbp)\n.LBB7:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -72(%rbp),%rdx\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,-272(%rbp)\nmovq %rbx,-264(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -72(%rbp),%rax\nmovsd -104(%rbp),%xmm0\nmovapd %xmm0,%xmm1\ndivsd -112(%rbp),%xmm1\nmovsd -112(%rbp),%xmm0\nmovq -296(%rbp),%rcx\ntestq %rdx,%rdx\njs .L7\ncmpq %rcx,%rdx\njl .L30\n.L7:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq -304(%rbp),%rcx\nsalq $4,%rdx\naddq %rcx,%rdx\nmovsd %xmm1,(%rdx)\nmovq -264(%rbp),%rdx\ntestq %rax,%rax\njs .L9\ncmpq %rdx,%rax\njl .L31\n.L9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\nmovq -272(%rbp),%rdx\nsalq $4,%rax\naddq %rdx,%rax\nmovsd %xmm0,<8>(%rax)\n.LBE7:\n.LBE6:\n.LBB8:\naddq $1,-72(%rbp)\n.L2:\n.LBE8:\nmovq -72(%rbp),%rax\ncmpq -88(%rbp),%rax\njl .L35\n.LBE4:\n.LBE3:\nleaq <go.leetcode0857.mincostToHireWorkers..func1>(%rip),%rcx\nleaq -336(%rbp),%rdx\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nleaq -208(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -192(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -192(%rbp),%rbx\nleaq <type...6.7.62.7float64>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <type...6.7.62.7float64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB9:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE9:\njmp .L14\n.L13:\n.LBB10:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7.62.7float64>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE10:\nmovq -248(%rbp),%rax\nmovq %rax,-392(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nmovsd <.LC35>(%rip),%xmm0\nmovsd %xmm0,-56(%rbp)\npxor %xmm0,%xmm0\nmovsd %xmm0,-64(%rbp)\nleaq <go.leetcode0857..go.leetcode0857.floatHeap..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-96(%rbp)\nmovq -96(%rbp),%rbx\nleaq <type...60x.7float64>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\nmovq -168(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L15\n.LBB11:\nmovq -176(%rbp),%rax\nmovq %rax,(%rbx)\njmp .L16\n.L15:\n.LBE11:\n.LBB12:\nmovq -176(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L16:\n.LBE12:\n.LBB13:\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\n.LBB14:\n.LBB15:\n.LBB16:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovl $0,%ebx\n.LBE16:\njmp .L17\n.L36:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -136(%rbp),%rax\ntestq %rbx,%rbx\njs .L18\ncmpq %rax,%rbx\njge .L18\nmovq -144(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE19:\n.LBB20:\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\n.LBE20:\n.LBB21:\nmovsd -344(%rbp),%xmm0\naddsd -64(%rbp),%xmm0\nmovsd %xmm0,-64(%rbp)\nleaq <float64..d>(%rip),%rax\nmovq %rax,-384(%rbp)\nleaq <float64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovsd -344(%rbp),%xmm0\nmovsd %xmm0,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,-376(%rbp)\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.leetcode0857.floatHeap>(%rip),%r14\nmovq -96(%rbp),%r15\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq -384(%rbp),%rdx\nmovq -376(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Push@PLT>\n.LBB22:\nmovq -96(%rbp),%rax\nmovq <8>(%rax),%rax\ncmpq %rax,-360(%rbp)\njge .L20\njmp .L33\n.L18:\n.LBE22:\n.LBE21:\n.LBB27:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\n.LBE27:\n.LBB28:\n.LBB24:\n.LBB23:\nleaq <pimt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Pop.0func.8.9.8interface.4.5.9.2Push.0func.8interface.4.5.9.8.9.2Swap.0func.8int.3int.9.8.9.5..go.leetcode0857.floatHeap>(%rip),%r12\nmovq -96(%rbp),%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <container..z2fheap.Pop@PLT>\nmovq %rax,%rsi\nleaq <float64..d>(%rip),%rcx\ncmpq %rcx,%rsi\nje .L21\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <float64..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L21:\nmovq %rdx,%rax\nmovsd (%rax),%xmm1\nmovsd -64(%rbp),%xmm0\nsubsd %xmm1,%xmm0\nmovsd %xmm0,-64(%rbp)\n.L20:\n.LBE23:\n.LBE24:\n.LBB25:\nmovq -96(%rbp),%rax\nmovq <8>(%rax),%rax\ncmpq %rax,-360(%rbp)\njne .L22\n.LBB26:\nmovsd -352(%rbp),%xmm0\nmulsd -64(%rbp),%xmm0\nmovq -56(%rbp),%rax\nmovapd %xmm0,%xmm1\nmovq %rax,%xmm0\ncall <go.leetcode0857.min>\nmovq %xmm0,%rax\nmovq %rax,-56(%rbp)\n.L22:\n.LBE26:\n.LBE25:\n.LBE28:\n.LBE18:\n.LBB29:\naddq $1,%rbx\n.L17:\n.LBE29:\ncmpq -400(%rbp),%rbx\njl .L36\n.LBE15:\n.LBE14:\n.LBE13:\n.LBB30:\nmovsd -56(%rbp),%xmm0\nmovsd %xmm0,-80(%rbp)\nmovsd -80(%rbp),%xmm0\nmovq %xmm0,%rax\n.LBE30:\n.LBE2:\nmovq %rax,%xmm0\naddq $360,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "n := len(quality)\nworkers := make([][2]float64, n)\nfor i := 0; i < n; i++ {\n\tw, q := float64(wage[i]), float64(quality[i])\n\tworkers[i][0], workers[i][1] = w/q, q\n}\nsort.Slice(workers, func(i, j int) bool {\n\treturn workers[i][0] < workers[j][0]\n})\nres := math.MaxFloat64\nsum := 0.\nh := floatHeap{}\nfor _, w := range workers {\n\tsum += w[1]\n\theap.Push(&h, w[1])\n\tif len(h) > K {\n\t\tsum -= heap.Pop(&h).(float64)\n\t}\n\tif len(h) == K {\n\t\tres = min(res, sum*w[0])\n\t}\n}\nreturn res"}
{"src": ".LFB3:\nleaq -664(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L75\nmovl $664,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L75:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $616,%rsp\nmovq %rdi,-328(%rbp)\nmovq -328(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\nmovl $3,%edi\ncall <go.day67.NewLFUCache>\nmovq %rax,-56(%rbp)\nleaq <string..d>(%rip),%r12\nleaq <go..C88>(%rip),%r13\nleaq <string..d>(%rip),%r14\nleaq <go..C87>(%rip),%r15\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Set>\nleaq <int..d>(%rip),%r15\nmovq %r15,-656(%rbp)\nleaq <go..C90>(%rip),%rax\nmovq %rax,-648(%rbp)\nmovq %r15,-640(%rbp)\nleaq <go..C89>(%rip),%rax\nmovq %rax,-632(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Set>\nleaq <string..d>(%rip),%r14\nmovq %r14,-624(%rbp)\nleaq <go..C92>(%rip),%rax\nmovq %rax,-616(%rbp)\nmovq %r14,-608(%rbp)\nleaq <go..C91>(%rip),%rax\nmovq %rax,-600(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Set>\nmovq %r15,-592(%rbp)\nleaq <go..C93>(%rip),%rax\nmovq %rax,-584(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Get>\nmovq %r14,-576(%rbp)\nleaq <go..C94>(%rip),%rax\nmovq %rax,-568(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Get>\nmovq %r15,-560(%rbp)\nleaq <go..C96>(%rip),%rax\nmovq %rax,-552(%rbp)\nmovq %r15,-544(%rbp)\nleaq <go..C95>(%rip),%rax\nmovq %rax,-536(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Set>\n.LBB79:\nmovq %r14,-528(%rbp)\nleaq <go..C97>(%rip),%rax\nmovq %rax,-520(%rbp)\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Get>\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -256(%rbp),%rax\ntestq %rax,%rax\nje .L66\n.LBB80:\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L67\n.LBB81:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE81:\njmp .L68\n.L67:\n.LBB82:\nmovq -232(%rbp),%rcx\nleaq -224(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L68:\n.LBE82:\nmovq -232(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nleaq <.LC58>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $52,-504(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L66:\n.LBE80:\n.LBE79:\n.LBB83:\nleaq <int..d>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <go..C99>(%rip),%rax\nmovq %rax,-488(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Get>\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -272(%rbp),%rax\ntestq %rax,%rax\njne .L69\n.LBB84:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\nleaq <.LC59>(%rip),%rax\nmovq %rax,-480(%rbp)\nmovq $15,-472(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L69:\n.LBE84:\n.LBE83:\n.LBB85:\nleaq <string..d>(%rip),%rax\nmovq %rax,-464(%rbp)\nleaq <go..C100>(%rip),%rax\nmovq %rax,-456(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Get>\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -288(%rbp),%rax\ntestq %rax,%rax\njne .L70\n.LBB86:\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\nleaq <.LC60>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $19,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L70:\n.LBE86:\n.LBE85:\n.LBB87:\nleaq <int..d>(%rip),%rax\nmovq %rax,-432(%rbp)\nleaq <go..C101>(%rip),%rax\nmovq %rax,-424(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Get>\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -304(%rbp),%rax\ntestq %rax,%rax\njne .L71\n.LBB88:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC61>(%rip),%rax\nmovq %rax,-416(%rbp)\nmovq $17,-408(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L71:\n.LBE88:\n.LBE87:\nleaq <string..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <go..C103>(%rip),%rax\nmovq %rax,-392(%rbp)\nleaq <int..d>(%rip),%r14\nmovq %r14,-384(%rbp)\nleaq <go..C102>(%rip),%rax\nmovq %rax,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Set>\n.LBB89:\nmovq %r14,-368(%rbp)\nleaq <go..C104>(%rip),%rax\nmovq %rax,-360(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day67.LFUCache.Get>\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -320(%rbp),%rax\nleaq <string..d>(%rip),%rdx\ncmpq %rdx,%rax\nje .L72\nmovq -320(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L72:\nmovq -312(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rdx,%rcx\ncmpq $3,%rcx\njne .L73\nmovq %rax,%rsi\nleaq <.LC47>(%rip),%rcx\ncmpq %rcx,%rsi\nje .L65\nmovl $3,%edx\nleaq <.LC47>(%rip),%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L65\n.L73:\n.LBB90:\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nleaq <.LC62>(%rip),%rax\nmovq %rax,-352(%rbp)\nmovq $14,-344(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -328(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L65:\n.LBE90:\n.LBE89:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nlfu := NewLFUCache(3)\nlfu.Set(\"STR\", \"STR\")\nlfu.Set(1, 2)\nlfu.Set(\"STR\", \"STR\")\nlfu.Get(1)\nlfu.Get(\"STR\")\nlfu.Set(100, 1)\nif result := lfu.Get(\"STR\"); result != nil {\n\tt.Errorf(\"STR\", result)\n}\nif result := lfu.Get(1); result == nil {\n\tt.Errorf(\"STR\")\n}\nif result := lfu.Get(\"STR\"); result == nil {\n\tt.Errorf(\"STR\")\n}\nif result := lfu.Get(100); result == nil {\n\tt.Errorf(\"STR\")\n}\nlfu.Set(100, \"STR\")\nif result := lfu.Get(100); result.(string) != \"STR\" {\n\tt.Errorf(\"STR\")\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L44\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L44:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-152(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\n.LBB2:\nmovq -168(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq %rbx,-128(%rbp)\n.LBB3:\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rcx\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L41:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\nmovq %rax,-48(%rbp)\n.LBB9:\nmovq -136(%rbp),%rdx\ncmpq $0,-48(%rbp)\njs .L3\ncmpq %rdx,-48(%rbp)\njl .L30\n.L3:\nmovq -48(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq -144(%rbp),%rsi\nmovq -48(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq $-1,(%rdx)\n.LBE9:\n.LBE8:\n.LBB10:\naddq $1,%rax\n.L2:\n.LBE10:\ncmpq %rcx,%rax\njl .L41\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB11:\nmovq $1,-24(%rbp)\n.LBB12:\njmp .L7\n.L43:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq -136(%rbp),%rdx\ntestq %rax,%rax\njs .L8\ncmpq %rdx,%rax\njl .L32\n.L8:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq -144(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\n.LBB15:\n.LBB16:\njmp .L10\n.L42:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\nmovq -136(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L11\ncmpq %rax,-32(%rbp)\njl .L33\n.L11:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L33:\nmovq -144(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\n.L10:\n.LBE18:\n.LBB19:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq -168(%rbp),%rdx\ntestq %rax,%rax\njs .L13\ncmpq %rdx,%rax\njl .L34\n.L13:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq -168(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L15\ncmpq %rdx,-24(%rbp)\njl .L35\n.L15:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\nmovq -176(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -176(%rbp),%rcx\nmovq -24(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nsetne %al\ntestb %al,%al\nje .L17\n.LBB20:\nmovq -32(%rbp),%rax\nnotq %rax\nshrq $63,%rax\n.L17:\n.LBE20:\n.LBE19:\ntestb %al,%al\njne .L42\n.LBE16:\n.LBE15:\n.LBB21:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq -168(%rbp),%rdx\ntestq %rax,%rax\njs .L20\ncmpq %rdx,%rax\njl .L37\n.L20:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\nmovq -168(%rbp),%rdx\ncmpq $0,-24(%rbp)\njs .L22\ncmpq %rdx,-24(%rbp)\njl .L38\n.L22:\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L38:\nmovq -176(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -176(%rbp),%rcx\nmovq -24(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\njne .L24\n.LBB22:\naddq $1,-32(%rbp)\n.L24:\n.LBE22:\n.LBE21:\nmovq -136(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L25\ncmpq %rax,-24(%rbp)\njl .L39\n.L25:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -144(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rax,%rdx\nmovq -32(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE14:\n.LBB23:\naddq $1,-24(%rbp)\n.L7:\n.LBE23:\nmovq -40(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-24(%rbp)\njl .L43\n.LBE12:\n.LBE11:\n.LBB24:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -152(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE24:\n.LBE2:\nmovq -152(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "m := len(pattern)\nnext := make([]int, m)\nfor index := range next {\n\tnext[index] = -1\n}\nfor i := 1; i < m-1; i++ {\n\tj := next[i-1]\n\tfor pattern[j+1] != pattern[i] && j >= 0 {\n\t\tj = next[j]\n\t}\n\tif pattern[j+1] == pattern[i] {\n\t\tj += 1\n\t}\n\tnext[i] = j\n}\nreturn next"}
{"src": ".LFB2:\nleaq -328(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L43\nmovl $328,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L43:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $280,%rsp\nmovq %rdi,-248(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB22:\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\n.LBB23:\n.LBB24:\n.LBB25:\nmovq <go.day379.testcases>(%rip),%rax\nmovq <8+go.day379.testcases>(%rip),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <16+go.day379.testcases>(%rip),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r13\nmovl $0,%r12d\n.LBE25:\njmp .L33\n.L42:\n.LBB26:\nnop\n.LBE26:\n.LBB27:\n.LBB28:\nmovq -168(%rbp),%rax\ntestq %r12,%r12\njs .L34\ncmpq %rax,%r12\njge .L34\nmovq -176(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-192(%rbp)\n.LBE28:\n.LBB29:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-224(%rbp)\n.LBE29:\n.LBB30:\n.LBB31:\nmovq -240(%rbp),%rdx\nmovq -232(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.day379.AllPossibleSubsequences>\nmovq %rax,-56(%rbp)\nleaq <type..map.6string.7struct.4.5>(%rip),%rax\nmovq %rax,-288(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-280(%rbp)\nleaq <type..map.6string.7struct.4.5>(%rip),%r14\nmovq -56(%rbp),%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -288(%rbp),%rdx\nmovq -280(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\njne .L35\njmp .L36\n.L34:\n.LBE31:\n.LBE30:\n.LBB36:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\n.LBE36:\n.LBB37:\n.LBB35:\n.LBB32:\nleaq <type..map.6string.7struct.4.5>(%rip),%rbx\nmovq %rbx,-320(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-312(%rbp)\nmovq %rbx,-304(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -320(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -304(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L37\n.LBB33:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE33:\njmp .L38\n.L37:\n.LBB34:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L38:\n.LBE34:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC26>(%rip),%rax\nmovq %rax,-272(%rbp)\nmovq $19,-264(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -248(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L36:\n.LBE32:\n.LBE35:\n.LBE37:\n.LBE27:\n.LBB38:\naddq $1,%r12\n.L33:\n.LBE38:\ncmpq %r13,%r12\njl .L42\n.LBE24:\n.LBE23:\n.LBE22:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := AllPossibleSubsequences(tc.input); !reflect.DeepEqual(result, tc.subseq) {\n\t\tt.Errorf(\"STR\", tc.subseq, result)\n\t}\n}"}
{"src": ".LFB0:\nleaq -440(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $440,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $392,%rsp\nmovq %rdi,-424(%rbp)\nleaq <type...62x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nleaq <.LC33>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-368(%rbp)\nmovq %r15,-360(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-384(%rbp)\nmovq -384(%rbp),%rax\nmovq $1,(%rax)\nmovq $3,<8>(%rax)\nmovq $4,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $2,<32>(%rax)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $5,-344(%rbp)\nmovq $5,-336(%rbp)\nmovq $2,-328(%rbp)\nleaq <.LC33>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-320(%rbp)\nmovq %r13,-312(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -376(%rbp),%rax\nmovq $3,(%rax)\nmovq $1,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $4,<24>(%rax)\nmovq $2,<32>(%rax)\nmovq -376(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $5,-296(%rbp)\nmovq $5,-288(%rbp)\nmovq $3,-280(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -392(%rbp),%rax\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -392(%rbp),%rax\nleaq -368(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -392(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq $2,-408(%rbp)\nmovq $2,-400(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -216(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -224(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-256(%rbp)\nmovq %rdi,-248(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE10:\n.LBB11:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -160(%rbp),%rsi\nmovq -152(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC34>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -424(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $392,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs []int\n\texpect int\n}{\n\t{\"STR\", []int{1, 3, 4, 2, 2}, 2},\n\t{\"STR\", []int{3, 1, 3, 4, 2}, 3},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := findDuplicate(c.inputs)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.inputs)\n\t\t}\n\t})\n}"}
{"src": ".LFB0:\nleaq -472(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $472,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $424,%rsp\nmovq %rdi,-440(%rbp)\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expects.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-400(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-464(%rbp)\nmovq $11,-456(%rbp)\nmovdqa -464(%rbp),%xmm0\nmovups %xmm0,-368(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nmovq -392(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $1,<24>(%rax)\nmovq -392(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $4,-344(%rbp)\nmovq $4,-336(%rbp)\nmovb $1,-328(%rbp)\nleaq <.LC39>(%rip),%r14\nmovl $11,%r15d\nmovq %r14,-320(%rbp)\nmovq %r15,-312(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-384(%rbp)\nmovq -384(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $4,<24>(%rax)\nmovq -384(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $4,-296(%rbp)\nmovq $4,-288(%rbp)\nmovb $0,-280(%rbp)\nleaq <.LC40>(%rip),%r12\nmovl $11,%r13d\nmovq %r12,-272(%rbp)\nmovq %r13,-264(%rbp)\nleaq <type...610x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -376(%rbp),%rax\nmovq $1,(%rax)\nmovq $1,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $3,<32>(%rax)\nmovq $4,<40>(%rax)\nmovq $3,<48>(%rax)\nmovq $2,<56>(%rax)\nmovq $4,<64>(%rax)\nmovq $2,<72>(%rax)\nmovq -376(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq $10,-248(%rbp)\nmovq $10,-240(%rbp)\nmovb $1,-232(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -400(%rbp),%rax\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -256(%rbp),%rcx\nmovq -248(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -240(%rbp),%rcx\nmovq -232(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -400(%rbp),%rax\nleaq -368(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expects.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -400(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq $3,-424(%rbp)\nmovq $3,-416(%rbp)\n.LBB4:\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expects.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -168(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -176(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-224(%rbp)\nmovq %rdi,-216(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-208(%rbp)\nmovq %rdi,-200(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBE10:\n.LBB11:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -56(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expects.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nleaq <go.Solution.TestConTainsDuplicate..func1>(%rip),%r14\nmovq -56(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.testcase1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expects.0bool.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.testcase1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7int.2.go.Solution.expects.0bool.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%rcx\nmovq -56(%rbp),%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdx\nmovq -440(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $424,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname    string\n\tinputs  []int\n\texpects bool\n}{\n\t{\"STR\", []int{1, 2, 3, 1}, true},\n\t{\"STR\", []int{1, 2, 3, 4}, false},\n\t{\"STR\", []int{1, 1, 1, 3, 3, 4, 3, 2, 4, 2}, true},\n}\nfor _, testcase := range cases {\n\tt.Run(testcase.name, func(t *testing.T) {\n\t\tresult := containsDuplicate(testcase.inputs)\n\t\tif !reflect.DeepEqual(result, testcase.expects) {\n\t\t\tt.Fatalf(\"STR\", testcase.expects, result, testcase.inputs)\n\t\t}\n\t})\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L1291\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL175:\nret\n.L1291:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $120,%rsp\nmovq %rdi,-152(%rbp)\nleaq -128(%rbp),%rax\nmovl $10,%ecx\nmovl $20,%edx\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.binaryTree.randomSlice>\ncall <go.binaryTree.newGBT>\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\n.LBB1317:\nmovq $0,-56(%rbp)\n.LBB1318:\n.LBB1319:\n.LBB1320:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%r15\nmovl $0,%ebx\n.LBE1320:\njmp .L1285\n.L1290:\n.LBB1321:\nnop\n.LBE1321:\n.LBB1322:\n.LBB1323:\nmovq -88(%rbp),%rax\ntestq %rbx,%rbx\njs .L1286\ncmpq %rax,%rbx\njge .L1286\nmovq -96(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE1323:\n.LBB1324:\nmovq %rax,-56(%rbp)\n.LBE1324:\n.LBB1325:\nmovq -144(%rbp),%rax\nmovq <24>(%rax),%r14\nleaq <uint32..d>(%rip),%r12\nleaq <uint32..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovl %edx,(%rax)\nmovq -64(%rbp),%rax\nmovq %rax,%r13\nmovq -136(%rbp),%rax\nmovq %r12,%r8\nmovq %r13,%r9\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall *%r14\n.LVL176:\n.LBE1325:\n.LBE1322:\n.LBB1327:\naddq $1,%rbx\njmp .L1285\n.L1286:\n.LBE1327:\n.LBB1328:\n.LBB1326:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1285:\n.LBE1326:\n.LBE1328:\ncmpq %r15,%rbx\njl .L1290\n.LBE1319:\n.LBE1318:\n.LBE1317:\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rdx\nmovq -152(%rbp),%rax\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.binaryTree.checkGBTPreOrder>\naddq $32,%rsp\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "arr := randomSlice(0, 20, 10)\ngbt := newGBT()\nfor _, v := range arr {\n\tgbt.Insert(uint32(v))\n}\ncheckGBTPreOrder(t, gbt, arr)"}
{"src": ".LFB0:\nleaq -1192(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L2\nmovl $1192,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1144,%rsp\nmovq $1,-1104(%rbp)\nmovq $0,-1096(%rbp)\nmovq $0,-1088(%rbp)\nmovq $0,-1080(%rbp)\nmovq $1,-1072(%rbp)\nmovq $0,-1064(%rbp)\nmovq $1,-1056(%rbp)\nleaq -1104(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $7,-520(%rbp)\nmovq $7,-512(%rbp)\nsubq $8,%rsp\npushq -512(%rbp)\npushq -520(%rbp)\npushq -528(%rbp)\ncall <main.maxDistToClosest>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%rax\nmovq %rax,-1184(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-1048(%rbp)\nmovq -1048(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -1048(%rbp),%rax\nmovq %rax,-1176(%rbp)\nmovdqa -1184(%rbp),%xmm0\nmovups %xmm0,-1040(%rbp)\nleaq -1040(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq $1,-488(%rbp)\nmovq $1,-480(%rbp)\nleaq -464(%rbp),%rax\nsubq $8,%rsp\npushq -480(%rbp)\npushq -488(%rbp)\npushq -496(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-1136(%rbp)\nmovq %rdx,-1128(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-1120(%rbp)\nmovq $1,-992(%rbp)\nmovq $0,-984(%rbp)\nmovq $0,-976(%rbp)\nmovq $0,-968(%rbp)\nleaq -992(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq $4,-424(%rbp)\nmovq $4,-416(%rbp)\nsubq $8,%rsp\npushq -416(%rbp)\npushq -424(%rbp)\npushq -432(%rbp)\ncall <main.maxDistToClosest>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%rax\nmovq %rax,-1168(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-952(%rbp)\nmovq -952(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -952(%rbp),%rax\nmovq %rax,-1160(%rbp)\nmovdqa -1168(%rbp),%xmm1\nmovups %xmm1,-944(%rbp)\nleaq -944(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $1,-392(%rbp)\nmovq $1,-384(%rbp)\nleaq -368(%rbp),%rax\nsubq $8,%rsp\npushq -384(%rbp)\npushq -392(%rbp)\npushq -400(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-1024(%rbp)\nmovq %rdx,-1016(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-1008(%rbp)\nmovq $0,-896(%rbp)\nmovq $1,-888(%rbp)\nleaq -896(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $2,-328(%rbp)\nmovq $2,-320(%rbp)\nsubq $8,%rsp\npushq -320(%rbp)\npushq -328(%rbp)\npushq -336(%rbp)\ncall <main.maxDistToClosest>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%rax\nmovq %rax,-1152(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-872(%rbp)\nmovq -872(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -872(%rbp),%rax\nmovq %rax,-1144(%rbp)\nmovdqa -1152(%rbp),%xmm2\nmovups %xmm2,-864(%rbp)\nleaq -864(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $1,-296(%rbp)\nmovq $1,-288(%rbp)\nleaq -272(%rbp),%rax\nsubq $8,%rsp\npushq -288(%rbp)\npushq -296(%rbp)\npushq -304(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-928(%rbp)\nmovq %rdx,-920(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-912(%rbp)\nmovq $0,-816(%rbp)\nmovq $1,-808(%rbp)\nmovq $1,-800(%rbp)\nmovq $1,-792(%rbp)\nmovq $0,-784(%rbp)\nmovq $0,-776(%rbp)\nmovq $1,-768(%rbp)\nmovq $0,-760(%rbp)\nmovq $0,-752(%rbp)\nleaq -816(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $9,-232(%rbp)\nmovq $9,-224(%rbp)\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\ncall <main.maxDistToClosest>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-744(%rbp)\nmovq -744(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -744(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-736(%rbp)\nmovq %r15,-728(%rbp)\nleaq -736(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nleaq -176(%rbp),%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-832(%rbp)\nmovq $0,-688(%rbp)\nmovq $0,-680(%rbp)\nmovq $0,-672(%rbp)\nmovq $1,-664(%rbp)\nmovq $1,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $1,-640(%rbp)\nmovq $1,-632(%rbp)\nmovq $0,-624(%rbp)\nmovq $0,-616(%rbp)\nmovq $0,-608(%rbp)\nmovq $1,-600(%rbp)\nmovq $0,-592(%rbp)\nmovq $0,-584(%rbp)\nmovq $1,-576(%rbp)\nmovq $0,-568(%rbp)\nmovq $0,-560(%rbp)\nleaq -688(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $17,-136(%rbp)\nmovq $17,-128(%rbp)\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\ncall <main.maxDistToClosest>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-552(%rbp)\nmovq -552(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -552(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-544(%rbp)\nmovq %r13,-536(%rbp)\nleaq -544(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-704(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "fmt.Println(maxDistToClosest([]int{1, 0, 0, 0, 1, 0, 1}))\nfmt.Println(maxDistToClosest([]int{1, 0, 0, 0}))\nfmt.Println(maxDistToClosest([]int{0, 1}))\nfmt.Println(maxDistToClosest([]int{0, 1, 1, 1, 0, 0, 1, 0, 0}))\nfmt.Println(maxDistToClosest([]int{0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0}))"}
{"src": "cmpq %fs:112,%rsp\njnb .L1045\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL117:\nret\n.L1045:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r12\npushq %rbx\nsubq $176,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq %rcx,%rax\nmovq %r8,%rcx\nmovq %rcx,%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB845:\nmovq -96(%rbp),%rdx\nleaq <type...1go.heap.ltHeapElement>(%rip),%rax\ncmpq %rax,%rdx\nje .L1029\nmovq -96(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <type...1go.heap.ltHeapElement>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L1029:\nmovq -88(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -112(%rbp),%rdx\nleaq <type...1go.heap.ltHeapElement>(%rip),%rax\ncmpq %rax,%rdx\nje .L1030\nmovq -112(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <type...1go.heap.ltHeapElement>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L1030:\nmovq -104(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB846:\nmovq -56(%rbp),%rax\ntestq %rax,%rax\njne .L1031\n.LBB847:\n.LBB848:\nmovq -64(%rbp),%rax\nleaq <type...1go.heap.ltHeapElement>(%rip),%rdx\nmovq %rdx,-48(%rbp)\nmovq %rax,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\njmp .L1044\n.L1031:\n.LBE848:\n.LBE847:\n.LBE846:\n.LBB849:\nmovq -64(%rbp),%rax\ntestq %rax,%rax\njne .L1033\n.LBB850:\n.LBB851:\nmovq -56(%rbp),%rax\nleaq <type...1go.heap.ltHeapElement>(%rip),%rdx\nmovq %rdx,-48(%rbp)\nmovq %rax,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\njmp .L1044\n.L1033:\n.LBE851:\n.LBE850:\n.LBE849:\n.LBB852:\nleaq <type...1go.heap.ltHeapElement>(%rip),%r10\nmovq -56(%rbp),%rax\nmovq %rax,%r11\nmovq %r10,%rcx\nmovq %r11,%rbx\nmovq %r10,%rax\nmovq %r11,%rdx\nmovq -72(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.heap.ltHeapArray.Key>\nmovq %rax,%r12\nleaq <type...1go.heap.ltHeapElement>(%rip),%r14\nmovq -64(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -72(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.heap.ltHeapArray.Key>\ncmpq %rax,%r12\njge .L1034\n.LBB853:\nleaq <type...1.1go.heap.ltHeapElement>(%rip),%rbx\nmovq %rbx,-208(%rbp)\nleaq -64(%rbp),%rax\nmovq %rax,-200(%rbp)\nmovq %rbx,-192(%rbp)\nleaq -56(%rbp),%rax\nmovq %rax,-184(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -72(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.heap.ltHeapArray.Swap>\n.L1034:\n.LBE853:\n.LBE852:\nleaq <type...1go.heap.ltHeapElement>(%rip),%rbx\nmovq %rbx,-176(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-168(%rbp)\nmovq %rbx,-160(%rbp)\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -72(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.heap.ltHeapArray.merge>\nmovq -56(%rbp),%rcx\naddq $8,%rcx\nmovq %rax,%rdi\nleaq <type...1go.heap.ltHeapElement>(%rip),%rsi\ncmpq %rsi,%rdi\nje .L1035\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <type...1go.heap.ltHeapElement>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L1035:\nmovq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L1036\n.LBB854:\nmovq %rax,(%rcx)\njmp .L1037\n.L1036:\n.LBE854:\n.LBB855:\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L1037:\n.LBE855:\n.LBB856:\n.LBB857:\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L1038\n.LBB858:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq <16>(%rax),%rdx\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq <16>(%rax),%rax\ncmpq %rax,%rdx\nsetg %al\n.L1038:\n.LBE858:\n.LBE857:\ntestb %al,%al\nje .L1039\n.LBB859:\nleaq <type...1.1go.heap.ltHeapElement>(%rip),%rax\nmovq %rax,-144(%rbp)\nmovq -56(%rbp),%rax\ntestq %rax,%rax\njne .L1040\ncall <runtime.panicmem@PLT>\n.L1040:\nmovq -56(%rbp),%rax\naddq $8,%rax\nmovq %rax,-136(%rbp)\nleaq <type...1.1go.heap.ltHeapElement>(%rip),%rax\nmovq %rax,-128(%rbp)\nmovq -56(%rbp),%rax\ntestq %rax,%rax\njne .L1041\ncall <runtime.panicmem@PLT>\n.L1041:\nmovq -56(%rbp),%rax\nmovq %rax,-120(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -72(%rbp),%rax\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.heap.ltHeapArray.Swap>\n.L1039:\n.LBE859:\n.LBE856:\n.LBB860:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\njne .L1042\n.LBB861:\nmovq -56(%rbp),%rax\nmovq $0,<16>(%rax)\njmp .L1043\n.L1042:\n.LBE861:\n.LBB862:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq <16>(%rax),%rdx\nmovq -56(%rbp),%rax\naddq $1,%rdx\nmovq %rdx,<16>(%rax)\n.L1043:\n.LBE862:\n.LBE860:\n.LBB863:\nmovq -56(%rbp),%rax\nleaq <type...1go.heap.ltHeapElement>(%rip),%rdx\nmovq %rdx,-48(%rbp)\nmovq %rax,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\n.L1044:\n.LBE863:\n.LBE845:\naddq $176,%rsp\npopq %rbx\npopq %r12\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "iE := i.(*ltHeapElement)\njE := j.(*ltHeapElement)\nif iE == nil {\n\treturn jE\n}\nif jE == nil {\n\treturn iE\n}\nif h.Key(iE) < h.Key(jE) {\n\th.Swap(&iE, &jE)\n}\niE.right = h.merge(iE.right, jE).(*ltHeapElement)\nif iE.left == nil || iE.right.dist > iE.left.dist {\n\th.Swap(&iE.left, &iE.right)\n}\nif iE.right == nil {\n\tiE.dist = 0\n} else {\n\tiE.dist = iE.right.dist + 1\n}\nreturn iE"}
{"src": "cmpq %fs:112,%rsp\njnb .L199\nmovl $136,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL22:\nret\n.L199:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $120,%rsp\nmovq %rdi,-104(%rbp)\nmovq %rsi,-112(%rbp)\nmovq $0,-56(%rbp)\n.LBB157:\nmovq -104(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -104(%rbp),%rax\nmovq (%rax),%rax\nmovq %rdx,%rbx\nimulq %rax,%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <float64..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rcx\nmovq -104(%rbp),%rax\nmovq (%rax),%rdx\nmovq -104(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rcx,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq %rbx,-80(%rbp)\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.matrix.MakeMatrix>\naddq $32,%rsp\nmovq %rax,-64(%rbp)\n.LBB158:\nmovq $0,-24(%rbp)\n.LBB159:\njmp .L183\n.L198:\n.LBB160:\nnop\n.LBE160:\n.LBB161:\n.LBB162:\nmovq $0,-32(%rbp)\n.LBB163:\njmp .L184\n.L197:\n.LBB164:\nnop\n.LBE164:\n.LBB165:\npxor %xmm0,%xmm0\nmovsd %xmm0,-40(%rbp)\n.LBB166:\nmovq $0,-48(%rbp)\n.LBB167:\njmp .L185\n.L196:\n.LBB168:\nnop\n.LBE168:\n.LBB169:\nmovq -48(%rbp),%rdx\nmovq -24(%rbp),%rcx\nmovq -104(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.matrix.Matrix.GetElm>\nmovsd %xmm0,-120(%rbp)\nmovq -32(%rbp),%rdx\nmovq -48(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.matrix.Matrix.GetElm>\nmulsd -120(%rbp),%xmm0\naddsd -40(%rbp),%xmm0\nmovsd %xmm0,-40(%rbp)\n.LBE169:\n.LBB170:\naddq $1,-48(%rbp)\n.L185:\n.LBE170:\nmovq -104(%rbp),%rax\nmovq <8>(%rax),%rax\ncmpq %rax,-48(%rbp)\njl .L196\n.LBE167:\n.LBE166:\nmovq -40(%rbp),%rsi\nmovq -32(%rbp),%rdx\nmovq -24(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq %rsi,%xmm0\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.matrix.Matrix.SetElm>\n.LBE165:\n.LBB171:\naddq $1,-32(%rbp)\n.L184:\n.LBE171:\nmovq -104(%rbp),%rax\nmovq <8>(%rax),%rax\ncmpq %rax,-32(%rbp)\njl .L197\n.LBE163:\n.LBE162:\n.LBE161:\n.LBB172:\naddq $1,-24(%rbp)\n.L183:\n.LBE172:\nmovq -104(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-24(%rbp)\njl .L198\n.LBE159:\n.LBE158:\n.LBB173:\nmovq -64(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\n.LBE173:\n.LBE157:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "result := MakeMatrix(make([]float64, A.cols*A.rows), A.cols, A.rows)\nfor i := 0; i < A.rows; i++ {\n\tfor j := 0; j < A.cols; j++ {\n\t\tsum := float64(0)\n\t\tfor k := 0; k < A.cols; k++ {\n\t\t\tsum += A.GetElm(i, k) * B.GetElm(k, j)\n\t\t}\n\t\tresult.SetElm(i, j, sum)\n\t}\n}\nreturn result"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L41\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L41:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB30:\n.LBB31:\ncmpq $0,-40(%rbp)\njne .L27\n.LBB32:\n.LBB33:\nmovq $0,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L28\n.L27:\n.LBE33:\n.LBE32:\n.LBE31:\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -40(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-16(%rbp)\n.LBB34:\n.LBB35:\njmp .L29\n.L40:\n.LBB36:\nnop\n.LBE36:\n.LBB37:\nmovq -8(%rbp),%rax\naddq $8,%rax\nmovq -16(%rbp),%rdx\nmovq <8>(%rdx),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L30\n.LBB38:\nmovq %rdx,(%rax)\n.LBE38:\njmp .L31\n.L30:\n.LBB39:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L31:\n.LBE39:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-8(%rbp)\nmovq -16(%rbp),%rax\naddq $8,%rax\nmovq -8(%rbp),%rdx\nmovq <8>(%rdx),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L32\n.LBB40:\nmovq %rdx,(%rax)\n.LBE40:\njmp .L33\n.L32:\n.LBB41:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L33:\n.LBE41:\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-16(%rbp)\n.L29:\n.LBE37:\n.LBB42:\ncmpq $0,-16(%rbp)\nsetne %al\ntestb %al,%al\nje .L34\n.LBB43:\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsetne %al\n.L34:\n.LBE43:\n.LBE42:\ntestb %al,%al\njne .L40\n.LBE35:\n.LBE34:\nmovq -8(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L37\n.LBB44:\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE44:\njmp .L38\n.L37:\n.LBB45:\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L38:\n.LBE45:\n.LBB46:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L28:\n.LBE46:\n.LBE30:\nleave\nret", "tgt": "if head == nil {\n\treturn nil\n}\neven := head.Next\np, q := head, head.Next\nfor q != nil && q.Next != nil {\n\tp.Next = q.Next\n\tp = p.Next\n\tq.Next = p.Next\n\tq = q.Next\n}\np.Next = even\nreturn head"}
{"src": "cmpq %fs:112,%rsp\njnb .L113\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL23:\nret\n.L113:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,-88(%rbp)\nmovq %rdx,%rcx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\n.LBB107:\nmovq $0,-56(%rbp)\n.LBB108:\njmp .L108\n.L112:\n.LBB109:\nnop\n.LBE109:\n.LBB110:\nmovl $128,%edi\ncall <math..z2frand.Intn@PLT>\nmovq %rax,%rbx\nmovq -112(%rbp),%rax\nmovq <24>(%rax),%rax\nmovq %rax,-96(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -64(%rbp),%rax\nmovq %rax,%r15\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -72(%rbp),%rax\nmovq %rax,%r13\nmovq -104(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rsi,%r8\nmovq %rbx,%r9\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nmovq %r8,%rcx\nmovq %r9,%r8\nmovq %rax,%rdi\nmovq -96(%rbp),%rax\ncall *%rax\n.LVL24:\n.LBE110:\n.LBB111:\naddq $1,-56(%rbp)\n.L108:\n.LBE111:\nmovq -88(%rbp),%rax\nmovq <272>(%rax),%rax\ncmpq %rax,-56(%rbp)\njl .L112\n.LBE108:\n.LBE107:\naddq $72,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "for i := 0; i < b.N; i++ {\n\thmap.HashInsert(rand.Intn(128), i)\n}"}
{"src": ".LFB0:\nleaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L37\nmovl $296,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L37:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $280,%rsp\nmovq $0,-56(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB3:\ncmpq $1,-64(%rbp)\njg .L2\n.LBB4:\n.LBB5:\nmovq $0,-56(%rbp)\nmovq -56(%rbp),%rax\njmp .L28\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -264(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $0,-280(%rbp)\nmovq $0,-272(%rbp)\nmovq $0,-24(%rbp)\n.LBB6:\nmovq $1,-40(%rbp)\n.LBB7:\njmp .L4\n.L35:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L5\ncmpq %rax,-40(%rbp)\njl .L29\n.L5:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njl .L30\n.L7:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rcx\nmovq %rdx,%rax\nsubq %rcx,%rax\nmovq %rax,-72(%rbp)\n.LBB10:\nmovq -24(%rbp),%rax\nimulq -72(%rbp),%rax\ntestq %rax,%rax\njs .L9\n.LBB11:\nmovq -72(%rbp),%rax\naddq %rax,-24(%rbp)\njmp .L10\n.L9:\n.LBE11:\n.LBE10:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -240(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L11\n.LBB12:\nmovq -256(%rbp),%rsi\nleaq -192(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-272(%rbp)\n.LBE12:\njmp .L12\n.L11:\n.LBB13:\nmovq -256(%rbp),%rcx\nmovq -240(%rbp),%rdx\nmovq %rcx,-288(%rbp)\nmovq %rax,-280(%rbp)\nmovq %rdx,-272(%rbp)\n.L12:\n.LBE13:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -256(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -24(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -72(%rbp),%rax\nmovq %rax,-24(%rbp)\n.L10:\n.LBE9:\n.LBB14:\naddq $1,-40(%rbp)\n.L4:\n.LBE14:\nmovq -40(%rbp),%rax\ncmpq -64(%rbp),%rax\njl .L35\n.LBE7:\n.LBE6:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L15\n.LBB15:\nmovq -224(%rbp),%rsi\nleaq -160(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-272(%rbp)\n.LBE15:\njmp .L16\n.L15:\n.LBB16:\nmovq -224(%rbp),%rcx\nmovq -208(%rbp),%rdx\nmovq %rcx,-288(%rbp)\nmovq %rax,-280(%rbp)\nmovq %rdx,-272(%rbp)\n.L16:\n.LBE16:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -24(%rbp),%rax\nmovq %rax,(%rdx)\nmovq $0,-32(%rbp)\n.LBB17:\nmovq $0,-48(%rbp)\n.LBB18:\njmp .L17\n.L36:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\nmovq -272(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L18\ncmpq %rax,-48(%rbp)\njg .L18\ncmpq $0,-48(%rbp)\njns .L19\njmp .L32\n.L18:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L32:\nmovq -48(%rbp),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L19:\nmovq -288(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-120(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-112(%rbp)\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\ncall <go.problem0123.max>\naddq $32,%rsp\nmovq %rax,%rbx\nmovq -272(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L21\ncmpq %rax,-48(%rbp)\njle .L33\n.L21:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L33:\nmovq -288(%rbp),%rdx\nmovq -272(%rbp),%rax\ncmpq %rax,-48(%rbp)\nje .L23\nmovq -48(%rbp),%rax\nsalq $3,%rax\njmp .L24\n.L23:\nmovl $0,%eax\n.L24:\naddq %rdx,%rax\nmovq %rax,-96(%rbp)\nmovq -280(%rbp),%rax\nsubq -48(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -272(%rbp),%rax\nsubq -48(%rbp),%rax\nmovq %rax,-80(%rbp)\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\ncall <go.problem0123.max>\naddq $32,%rsp\naddq %rbx,%rax\nmovq %rax,-24(%rbp)\n.LBB21:\nmovq -32(%rbp),%rax\ncmpq -24(%rbp),%rax\njge .L25\n.LBB22:\nmovq -24(%rbp),%rax\nmovq %rax,-32(%rbp)\n.L25:\n.LBE22:\n.LBE21:\n.LBE20:\n.LBB23:\naddq $1,-48(%rbp)\n.L17:\n.LBE23:\nmovq -280(%rbp),%rax\ncmpq %rax,-48(%rbp)\njl .L36\n.LBE18:\n.LBE17:\n.LBB24:\nmovq -32(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\n.L28:\n.LBE24:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "size := len(prices)\nif size <= 1 {\n\treturn 0\n}\nprofits := []int{}\ntemp := 0\nfor i := 1; i < size; i++ {\n\tdiff := prices[i] - prices[i-1]\n\tif temp*diff >= 0 {\n\t\ttemp += diff\n\t\tcontinue\n\t}\n\tprofits = append(profits, temp)\n\ttemp = diff\n}\nprofits = append(profits, temp)\nres := 0\nfor i := 0; i < len(profits); i++ {\n\ttemp = max(profits[:i]) + max(profits[i:])\n\tif res < temp {\n\t\tres = temp\n\t}\n}\nreturn res"}
{"src": "cmpq %fs:112,%rsp\njnb .L19\nmovl $136,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-120(%rbp)\nmovq %rsi,-128(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-80(%rbp)\n.LBB8:\nmovq -120(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-96(%rbp)\n.LBB9:\ncmpq $0,-120(%rbp)\njns .L6\n.LBB10:\nnegq -120(%rbp)\n.L6:\n.LBE10:\n.LBE9:\n.LBB11:\ncmpq $0,-128(%rbp)\njns .L7\n.LBB12:\nnegq -128(%rbp)\n.L7:\n.LBE12:\n.LBE11:\nmovq $0,-40(%rbp)\nmovq $1,-48(%rbp)\nmovq $1,-56(%rbp)\nmovq $0,-64(%rbp)\n.LBB13:\n.LBB14:\njmp .L8\n.L18:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\ncmpq $-1,-128(%rbp)\njne .L9\nmovq -120(%rbp),%rax\nnegq %rax\njmp .L10\n.L9:\ncmpq $0,-128(%rbp)\njne .L11\ncall <runtime.panicdivide@PLT>\n.L11:\nmovq -120(%rbp),%rax\ncqto\nidivq -128(%rbp)\n.L10:\nmovq %rax,-104(%rbp)\n.LBB17:\nmovq -128(%rbp),%rbx\nmovq -128(%rbp),%rdx\nmovq -120(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.division.divide>\nmovq %rbx,-120(%rbp)\nmovq %rax,-128(%rbp)\n.LBE17:\n.LBB18:\nmovq -104(%rbp),%rax\nimulq -56(%rbp),%rax\nmovq %rax,%rcx\nmovq -40(%rbp),%rax\nsubq %rcx,%rax\nmovq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,-56(%rbp)\nmovq %rax,-40(%rbp)\n.LBE18:\n.LBB19:\nmovq -104(%rbp),%rax\nimulq -64(%rbp),%rax\nmovq %rax,%rcx\nmovq -48(%rbp),%rax\nsubq %rcx,%rax\nmovq %rax,%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,-64(%rbp)\nmovq %rax,-48(%rbp)\n.L8:\n.LBE19:\n.LBE16:\ncmpq $0,-128(%rbp)\njne .L18\n.LBE14:\n.LBE13:\n.LBB20:\ncmpq $0,-88(%rbp)\njns .L14\n.LBB21:\nnegq -48(%rbp)\n.L14:\n.LBE21:\n.LBE20:\n.LBB22:\ncmpq $0,-96(%rbp)\njns .L15\n.LBB23:\nnegq -40(%rbp)\n.L15:\n.LBE23:\n.LBE22:\n.LBB24:\n.LBB25:\nmovq -48(%rbp),%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,-72(%rbp)\nmovq %rax,-80(%rbp)\n.LBE25:\nmovq -72(%rbp),%r12\nmovq -80(%rbp),%r13\nmovq %r12,%rax\nmovq %r13,%rdx\n.LBE24:\n.LBE8:\naddq $104,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "_a := a\n_b := b\nif a < 0 {\n\ta *= -1\n}\nif b < 0 {\n\tb *= -1\n}\nx0, y0 := 0, 1\nx1, y1 := 1, 0\nfor b != 0 {\n\tquotient := a / b\n\ta, b = b, divide(a, b)\n\tx1, x0 = x0-quotient*x1, x1\n\ty1, y0 = y0-quotient*y1, y1\n}\nif _a < 0 {\n\ty0 *= -1\n}\nif _b < 0 {\n\tx0 *= -1\n}\nreturn y0, x0"}
{"src": ".LFB3:\ncmpq %fs:112,%rsp\njnb .L2\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $24,%rsp\nmovq %rdi,-40(%rbp)\nleaq <.LC12>(%rip),%rax\nmovl $6,%edx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -40(%rbp),%rax\nleaq <go.Solution.TestSolution..func1..f>(%rip),%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\nleaq <.LC13>(%rip),%r12\nmovl $6,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rsi\nmovq -40(%rbp),%rax\nleaq <go.Solution.TestSolution..func2..f>(%rip),%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\naddq $24,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "t.Run(\"STR\", func(t *testing.T) {\n\tdata := []int{1, 1, 2}\n\tgot := removeDuplicates(data)\n\twant := 2\n\tif got != want {\n\t\tt.Error(\"STR\", got, \"STR\", want)\n\t}\n})\nt.Run(\"STR\", func(t *testing.T) {\n\tdata := []int{0, 0, 1, 1, 1, 2, 2, 3, 3, 4}\n\tgot := removeDuplicates(data)\n\twant := 5\n\tif got != want {\n\t\tt.Error(\"STR\", got, \"STR\", want)\n\t}\n})"}
{"src": "leaq -584(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L360\nmovl $584,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL20:\n.LEHB20:\nret\n.L360:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $536,%rsp\n.LEHE20:\nmovq %rdi,-520(%rbp)\nmovb $0,-497(%rbp)\n.LBB338:\n.LBB339:\n.LBB340:\ncmpq $0,-520(%rbp)\nsete %cl\nmovl %ecx,%esi\nxorl $1,%esi\ntestb %sil,%sil\nje .L342\n.LBB341:\nmovq -520(%rbp),%rcx\n.LEHB21:\nmovq <24>(%rcx),%rcx\ntestq %rcx,%rcx\nsete %cl\n.L342:\n.LBE341:\n.LBE340:\ntestb %cl,%cl\nje .L343\n.LBB342:\nleaq <string..d>(%rip),%rax\nleaq <go..C159>(%rip),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nleaq -464(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq $1,-248(%rbp)\nmovq $1,-240(%rbp)\nleaq -224(%rbp),%rax\nsubq $8,%rsp\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovl $0,%ebx\njmp .L353\n.L343:\n.LBE342:\n.LBE339:\nmovq -520(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rdi\ncall <sync.RWMutex.RLock@PLT>\n.LBB343:\nmovq -520(%rbp),%rax\nmovq (%rax),%rdx\nmovq $0,-384(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-376(%rbp)\nmovq -376(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -376(%rbp),%rax\nleaq <go.Solution.go.Solution..thunk4>(%rip),%rdx\nleaq -497(%rbp),%rsi\nleaq -448(%rbp),%rdi\nmovq %rax,%rcx\ncall <runtime.deferprocStack@PLT>\n.LBE343:\nleaq <uint..d>(%rip),%rax\nmovq %rax,-576(%rbp)\nleaq <uint..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -344(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq <24>(%rdx),%rdx\nmovq %rdx,(%rax)\nmovq -344(%rbp),%rax\nmovq %rax,-568(%rbp)\nmovdqa -576(%rbp),%xmm0\nmovups %xmm0,-336(%rbp)\nleaq -336(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $1,-184(%rbp)\nmovq $1,-176(%rbp)\nleaq <.LC81>(%rip),%r12\nmovl $29,%r13d\nleaq -160(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -176(%rbp)\npushq -184(%rbp)\npushq -192(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -520(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-56(%rbp)\nmovq $0,-64(%rbp)\n.LBB344:\nmovq $0,-64(%rbp)\n.LBB345:\njmp .L345\n.L359:\n.LBB346:\nnop\n.LBE346:\n.LBB347:\nmovq -56(%rbp),%rax\nmovq (%rax),%r12\nmovq <8>(%rax),%r13\nleaq <uint..d>(%rip),%rax\nmovq %rax,-560(%rbp)\nleaq <uint..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovq -296(%rbp),%rax\nmovq -64(%rbp),%rdx\naddq $1,%rdx\nmovq %rdx,(%rax)\nmovq -296(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovq %r12,%rax\nmovq %rax,-544(%rbp)\nmovq %r13,%rax\nmovq %rax,-536(%rbp)\nmovdqa -560(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nmovdqa -544(%rbp),%xmm2\nmovups %xmm2,-272(%rbp)\nleaq -288(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $2,-120(%rbp)\nmovq $2,-112(%rbp)\nleaq <.LC82>(%rip),%r14\nmovl $17,%r15d\nleaq -96(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -56(%rbp),%rax\nmovq <16>(%rax),%rax\nmovq %rax,-56(%rbp)\n.LBE347:\n.LBB348:\naddq $1,-64(%rbp)\n.L345:\n.LBE348:\nmovq -520(%rbp),%rax\nmovq <24>(%rax),%rax\n.LEHE21:\ncmpq %rax,-64(%rbp)\njb .L359\n.L346:\n.LBE345:\n.LBE344:\n.LBE338:\nmovl $2,%ebx\n.L353:\nleaq -497(%rbp),%rax\nmovq %rax,%rdi\n.LEHB22:\ncall <runtime.deferreturn@PLT>\n.LEHE22:\ncmpl $1,%ebx\nje .L348\njmp .L358\n.L354:\nleaq -497(%rbp),%rax\nmovq %rax,%rdi\n.LEHB23:\ncall <runtime.checkdefer@PLT>\n.LEHE23:\njmp .L346\n.L355:\nmovq %rax,-528(%rbp)\nmovl $1,%ebx\njmp .L353\n.L348:\nmovq -528(%rbp),%rax\nmovq %rax,%rdi\n.LEHB24:\ncall <_Unwind_Resume@PLT>\n.L356:\nleaq -497(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L353\n.L358:\nleaq -40(%rbp),%rsp\n.LEHE24:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "if list == nil || list.Size == 0 {\n\tfmt.Println(\"STR\")\n\treturn\n}\nlist.mutex.RLock()\ndefer list.mutex.RUnlock()\nfmt.Printf(\"STR\", list.Size)\nptr := list.Head\nvar i uint\nfor i = 0; i < list.Size; i++ {\n\tfmt.Printf(\"STR\", i+1, ptr.Data)\n\tptr = ptr.Next\n}"}
{"src": ".LFB2:\nleaq -680(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L108\nmovl $680,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L108:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $648,%rsp\nmovq %rdi,-664(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nmovq $0,-176(%rbp)\n.LBB42:\nmovl $0,%edx\nmovl $0,%esi\nleaq <string..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-224(%rbp)\nmovq $0,-216(%rbp)\nmovq $0,-208(%rbp)\n.LBB43:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njne .L45\n.LBB44:\n.LBB45:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -664(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L44\n.L45:\n.LBE45:\n.LBE44:\n.LBE43:\nleaq -656(%rbp),%rdx\nmovl $0,%eax\nmovl $26,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB46:\nmovq $0,-56(%rbp)\n.LBB47:\n.LBB48:\n.LBB49:\nmovl $26,%ecx\nmovl $0,%eax\n.LBE49:\njmp .L47\n.L102:\n.LBB50:\nnop\n.LBE50:\n.LBB51:\nmovq %rax,-56(%rbp)\n.LBB52:\ncmpq $0,-56(%rbp)\njs .L48\ncmpq $25,-56(%rbp)\njle .L91\n.L48:\nmovq -56(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L91:\nmovq -56(%rbp),%rdx\nmovq $2147483647,-656(%rbp,%rdx,8)\n.LBE52:\n.LBE51:\n.LBB53:\naddq $1,%rax\n.L47:\n.LBE53:\ncmpq %rcx,%rax\njl .L102\n.LBE48:\n.LBE47:\n.LBE46:\n.LBB54:\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\n.LBB55:\n.LBB56:\n.LBB57:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%r12\nmovl $0,%ebx\n.LBE57:\njmp .L52\n.L105:\n.LBB58:\nnop\n.LBE58:\n.LBB59:\n.LBB60:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L53\ncmpq %rax,%rbx\njge .L53\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE60:\n.LBB61:\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\n.LBE61:\n.LBB62:\nleaq -448(%rbp),%rdx\nmovl $0,%eax\nmovl $26,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB63:\nmovl $0,-60(%rbp)\n.LBB64:\n.LBB65:\n.LBB66:\nmovq -232(%rbp),%r13\nmovl $0,%eax\n.LBE66:\njmp .L54\n.L53:\n.LBE65:\n.LBE64:\n.LBE63:\n.LBE62:\n.LBB82:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L103:\n.LBE82:\n.LBB83:\n.LBB76:\n.LBB75:\n.LBB74:\n.LBB67:\nnop\n.LBE67:\n.LBB68:\n.LBB69:\nmovq -232(%rbp),%rdx\ntestq %rax,%rax\njs .L55\ncmpq %rdx,%rax\njge .L55\nmovq -240(%rbp),%rdx\nmovq %rax,%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nmovzbl %dl,%edx\ncmpl $127,%edx\njle .L56\njmp .L93\n.L55:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L56:\n.LBB70:\naddq $1,%rax\n.LBE70:\njmp .L58\n.L93:\n.LBB71:\nmovq -240(%rbp),%rsi\nmovq -232(%rbp),%rcx\nmovq %rax,%rdx\nmovq %rsi,%rdi\nmovq %rcx,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovl %esi,%edx\nmovq %rdi,%rax\n.L58:\n.LBE71:\n.LBE69:\n.LBB72:\nmovl %edx,-60(%rbp)\n.LBE72:\n.LBB73:\nmovl -60(%rbp),%edx\nleal -97(%rdx),%ecx\ntestl %ecx,%ecx\njs .L59\ncmpl $25,%ecx\njg .L59\nmovl -60(%rbp),%edx\nsubl $97,%edx\ntestl %edx,%edx\njns .L60\njmp .L61\n.L59:\nmovslq %ecx,%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L60:\ncmpl $25,%edx\njg .L61\nmovslq %edx,%rdx\nmovq -448(%rbp,%rdx,8),%rsi\nmovslq %ecx,%rdx\nleaq <1>(%rsi),%rcx\nmovq %rcx,-448(%rbp,%rdx,8)\njmp .L54\n.L61:\nmovslq %edx,%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\n.LBE73:\n.LBE68:\ncmpq %r13,%rax\njl .L103\n.LBE74:\n.LBE75:\n.LBE76:\n.LBB77:\nmovq $0,-40(%rbp)\n.LBB78:\njmp .L64\n.L104:\n.LBB79:\nnop\n.LBE79:\n.LBB80:\ncmpq $0,-40(%rbp)\njs .L65\ncmpq $25,-40(%rbp)\njle .L95\n.L65:\nmovq -40(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L95:\ncmpq $0,-40(%rbp)\njs .L67\ncmpq $25,-40(%rbp)\njle .L96\n.L67:\nmovq -40(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L96:\nmovq -40(%rbp),%rax\nmovq -448(%rbp,%rax,8),%rdx\nmovq -40(%rbp),%rax\nmovq -656(%rbp,%rax,8),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.Solution.min>\ncmpq $0,-40(%rbp)\njs .L69\ncmpq $25,-40(%rbp)\njle .L97\n.L69:\nmovq -40(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L97:\nmovq -40(%rbp),%rdx\nmovq %rax,-656(%rbp,%rdx,8)\n.LBE80:\n.LBB81:\naddq $1,-40(%rbp)\n.L64:\n.LBE81:\ncmpq $25,-40(%rbp)\njle .L104\n.LBE78:\n.LBE77:\n.LBE83:\n.LBE59:\n.LBB84:\naddq $1,%rbx\n.L52:\n.LBE84:\ncmpq %r12,%rbx\njl .L105\n.LBE56:\n.LBE55:\n.LBE54:\n.LBB85:\nmovq $0,-48(%rbp)\n.LBB86:\njmp .L75\n.L107:\n.LBB87:\nnop\n.LBE87:\n.LBB88:\n.LBB89:\n.LBB90:\njmp .L76\n.L106:\n.LBB91:\nnop\n.LBE91:\n.LBB92:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rbx\nmovq -48(%rbp),%rax\naddl $97,%eax\ncltq\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.intstring@PLT>\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <1>(%rbx),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L77\n.LBB93:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-208(%rbp)\n.LBE93:\njmp .L78\n.L77:\n.LBB94:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-224(%rbp)\nmovq %rax,-216(%rbp)\nmovq %rdx,-208(%rbp)\n.L78:\n.LBE94:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L79\n.LBB95:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L80\n.L79:\n.LBE95:\n.LBB96:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L80:\n.LBE96:\ncmpq $0,-48(%rbp)\njs .L81\ncmpq $25,-48(%rbp)\njg .L81\ncmpq $0,-48(%rbp)\njns .L82\njmp .L83\n.L81:\nmovq -48(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L82:\ncmpq $25,-48(%rbp)\njg .L83\nmovq -48(%rbp),%rax\nmovq -656(%rbp,%rax,8),%rax\nleaq -1(%rax),%rdx\nmovq -48(%rbp),%rax\nmovq %rdx,-656(%rbp,%rax,8)\njmp .L76\n.L83:\nmovq -48(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L76:\n.LBE92:\ncmpq $0,-48(%rbp)\njs .L84\ncmpq $25,-48(%rbp)\njg .L84\nmovq -48(%rbp),%rax\nmovq -656(%rbp,%rax,8),%rax\ntestq %rax,%rax\njg .L106\njmp .L100\n.L84:\nmovq -48(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L100:\n.LBE90:\n.LBE89:\n.LBE88:\n.LBB97:\naddq $1,-48(%rbp)\n.L75:\n.LBE97:\ncmpq $25,-48(%rbp)\njle .L107\n.LBE86:\n.LBE85:\n.LBB98:\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -664(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L44:\n.LBE98:\n.LBE42:\nmovq -664(%rbp),%rax\naddq $648,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "commonChars := make([]string, 0)\nif len(A) == 0 {\n\treturn commonChars\n}\nminFrequencies := [26]int{}\nfor i := range minFrequencies {\n\tminFrequencies[i] = math.MaxInt32\n}\nfor _, word := range A {\n\tcharFrequencies := [26]int{}\n\tfor _, char := range word {\n\t\tcharFrequencies[char-\"STR\"]++\n\t}\n\tfor i := 0; i < 26; i++ {\n\t\tminFrequencies[i] = min(minFrequencies[i], charFrequencies[i])\n\t}\n}\nfor i := 0; i < 26; i++ {\n\tfor minFrequencies[i] > 0 {\n\t\tcommonChars = append(commonChars, string(rune(i)+\"STR\"))\n\t\tminFrequencies[i]--\n\t}\n}\nreturn commonChars"}
{"src": ".LFB3:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\nmovq -24(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\nsete %al\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE3:\n.LBE2:\npopq %rbp\nret", "tgt": "return N&1 == 0"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nmovq $0,-16(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\nmovq -8(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.LBE3:\n.LBE2:\npopq %rbp\nret", "tgt": "var head *event\nreturn MyCalendar{head: head}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,-136(%rbp)\nmovl $0,-52(%rbp)\nmovq $0,-64(%rbp)\nmovl $521,-52(%rbp)\nmovq $3,-64(%rbp)\n.LBB2:\nmovl -52(%rbp),%eax\nmovl %eax,%edi\ncall <go.leetcode.hammingWeight>\ncmpq %rax,-64(%rbp)\nje .L1\n.LBB3:\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L3\n.LBB4:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE4:\njmp .L4\n.L3:\n.LBB5:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L4:\n.LBE5:\nmovq -120(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq <.LC5>(%rip),%r12\nmovl $14,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -136(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L1:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var num uint32\nvar ret int\nnum = 00000000000000000000000000001011\nret = 3\nif ret != hammingWeight(num) {\n\tt.Fatalf(\"STR\", ret)\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L11\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L11:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $32,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\ncmpq $0,-40(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsete %al\n.L2:\n.LBE5:\n.LBE4:\ntestb %al,%al\nje .L3\n.LBB6:\n.LBB7:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L4\n.L3:\n.LBE7:\n.LBE6:\n.LBE3:\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-32(%rbp)\n.LBB8:\nmovq -32(%rbp),%rcx\nmovq -40(%rbp),%r12\nmovq -40(%rbp),%rdx\nmovq -40(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq <8>(%rax),%rbx\nleaq <8>(%rcx),%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L5\n.LBB9:\nmovq %rdx,(%rax)\n.LBE9:\njmp .L6\n.L5:\n.LBB10:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L6:\n.LBE10:\nleaq <8>(%r12),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L7\n.LBB11:\nmovq %rbx,(%rax)\n.LBE11:\njmp .L8\n.L7:\n.LBB12:\nmovq %rbx,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L8:\n.LBE12:\n.LBE8:\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq <8>(%rax),%rax\nmovq %rax,%rdi\ncall <go.day145.SwapEveryTwo>\nmovq %rax,%rdx\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L9\n.LBB13:\nmovq %rdx,(%rax)\n.LBE13:\njmp .L10\n.L9:\n.LBB14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L10:\n.LBE14:\n.LBB15:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L4:\n.LBE15:\n.LBE2:\naddq $32,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "if head == nil || head.Next == nil {\n\treturn head\n}\nresult := head.Next\nresult.Next, head.Next = head, head.Next.Next\nresult.Next.Next = SwapEveryTwo(result.Next.Next)\nreturn result"}
{"src": ".LFB4:\nleaq -424(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L122\nmovl $424,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L122:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $376,%rsp\nmovq %rdi,-360(%rbp)\nmovq -360(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB107:\nmovq $0,-56(%rbp)\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\n.LBB108:\n.LBB109:\n.LBB110:\nmovq <go.day345.testcases>(%rip),%rax\nmovq <8+go.day345.testcases>(%rip),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16+go.day345.testcases>(%rip),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r13\nmovl $0,%r12d\n.LBE110:\njmp .L112\n.L121:\n.LBB111:\nnop\n.LBE111:\n.LBB112:\n.LBB113:\nmovq -248(%rbp),%rax\ntestq %r12,%r12\njs .L113\ncmpq %rax,%r12\njge .L113\nmovq -256(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-304(%rbp)\nmovq %rbx,-296(%rbp)\nmovq <16>(%rax),%rcx\nmovq <24>(%rax),%rbx\nmovq %rcx,-288(%rbp)\nmovq %rbx,-280(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\n.LBE113:\n.LBB114:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq %r12,-56(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\n.LBE114:\n.LBB115:\n.LBB116:\nmovq -320(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq -352(%rbp),%rsi\nmovq -344(%rbp),%r9\nmovq %rcx,%r8\nmovq %rdx,%rcx\nmovq %rax,%rdx\nmovq %rsi,%rdi\nmovq %r9,%rsi\ncall <go.day345.AreSentencesEquivalentTransitive>\nmovb %al,-57(%rbp)\nmovzbl -311(%rbp),%eax\ncmpb %al,-57(%rbp)\njne .L114\njmp .L115\n.L113:\n.LBE116:\n.LBE115:\n.LBB121:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L114:\n.LBE121:\n.LBB122:\n.LBB120:\n.LBB117:\nleaq <int..d>(%rip),%rax\nmovq %rax,-416(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-408(%rbp)\nleaq <bool..d>(%rip),%rbx\nmovq %rbx,-400(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovzbl -311(%rbp),%edx\nmovb %dl,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,-392(%rbp)\nmovq %rbx,-384(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovzbl -57(%rbp),%edx\nmovb %dl,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-376(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovdqa -416(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovdqa -400(%rbp),%xmm1\nmovups %xmm1,-128(%rbp)\nmovdqa -384(%rbp),%xmm2\nmovups %xmm2,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L116\n.LBB118:\nmovq -152(%rbp),%rax\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE118:\njmp .L117\n.L116:\n.LBB119:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L117:\n.LBE119:\nmovq -152(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $3,-88(%rbp)\nmovq $3,-80(%rbp)\nleaq <.LC42>(%rip),%r14\nmovl $27,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -360(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L115:\n.LBE117:\n.LBE120:\n.LBE122:\n.LBE112:\n.LBB123:\naddq $1,%r12\n.L112:\n.LBE123:\ncmpq %r13,%r12\njl .L121\n.LBE109:\n.LBE108:\n.LBE107:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor tcid, tc := range testcases {\n\tif result := AreSentencesEquivalentTransitive(tc.sentence1,\n\t\ttc.sentence2, tc.thesaurus); result != tc.expectedTransitive {\n\t\tt.Errorf(\"STR\", tcid,\n\t\t\ttc.expectedTransitive, result)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L13\nmovl $184,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-168(%rbp)\nmovq %rsi,-176(%rbp)\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\n.LBB2:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-40(%rbp)\n.LBB3:\nmovq $0,-48(%rbp)\nmovq $0,-56(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r13\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L12:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -120(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rbx,-48(%rbp)\nmovq %rax,-56(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq $0,-64(%rbp)\nmovb $0,-65(%rbp)\n.LBB13:\nmovq -176(%rbp),%rax\nsubq -56(%rbp),%rax\nmovq %rax,-96(%rbp)\nleaq -96(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq %rax,-64(%rbp)\nmovb %dl,-65(%rbp)\n.LBE13:\ncmpb $0,-65(%rbp)\njne .L4\njmp .L10\n.L3:\n.LBE12:\n.LBE11:\n.LBB18:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE18:\n.LBB19:\n.LBB16:\n.LBB14:\n.LBB15:\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -48(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -88(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $2,-152(%rbp)\nmovq $2,-144(%rbp)\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L10:\n.LBE15:\n.LBE14:\n.LBE16:\n.LBB17:\nmovq -56(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -48(%rbp),%r12\nleaq -80(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r12,(%rax)\n.LBE17:\n.LBE19:\n.LBE8:\n.LBB20:\naddq $1,%rbx\n.L2:\n.LBE20:\ncmpq %r13,%rbx\njl .L12\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB21:\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nmovq $0,-144(%rbp)\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE21:\n.LBE2:\nmovq -168(%rbp),%rax\naddq $152,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "m := make(map[int]int)\nfor k, v := range nums {\n\tif idx, ok := m[target-v]; ok {\n\t\treturn []int{idx, k}\n\t}\n\tm[v] = k\n}\nreturn nil"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L7\nmovl $168,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $144,%rsp\nmovq $5050,-40(%rbp)\nmovq -40(%rbp),%rax\nimulq %rax,%rax\nmovq %rax,-48(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $1,-32(%rbp)\n.LBB3:\njmp .L2\n.L6:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\nmovq -32(%rbp),%rax\nimulq %rax,%rax\naddq %rax,-24(%rbp)\n.LBE5:\n.LBB6:\naddq $1,-32(%rbp)\n.L2:\n.LBE6:\ncmpq $100,-32(%rbp)\njle .L6\n.LBE3:\n.LBE2:\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq -48(%rbp),%rdx\nsubq -24(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-128(%rbp)\nmovq %r13,-120(%rbp)\nleaq -128(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "sum := 100 * 101 / 2\nsqSum := sum * sum\nsumSq := 0\nfor i := 1; i <= 100; i++ {\n\tsumSq += i * i\n}\nfmt.Println(sqSum - sumSq)"}
{"src": ".LFB27:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-24(%rbp)\nmovq %rsi,-32(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\nmovq -24(%rbp),%rax\ncmpq -32(%rbp),%rax\njle .L2\n.LBB4:\n.LBB5:\nmovq -32(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq -24(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L3:\n.LBE6:\n.LBE2:\npopq %rbp\nret", "tgt": "if a > b {\n\treturn b\n}\nreturn a"}
{"src": "cmpq %fs:112,%rsp\njnb .L89\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L89:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,-72(%rbp)\ncmpq $0,-72(%rbp)\njne .L87\ncall <runtime.panicmem@PLT>\n.L87:\nmovq -72(%rbp),%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nmovq <16>(%rax),%rcx\nmovq <24>(%rax),%rbx\nmovq %rcx,-48(%rbp)\nmovq %rbx,-40(%rbp)\nmovq <32>(%rax),%rax\nmovq %rax,-32(%rbp)\nmovq $0,-24(%rbp)\n.LBB82:\n.LBB83:\nmovq -64(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE83:\n.LBE82:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return this.Val"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L28\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L28:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq $0,-32(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB3:\n.LBB4:\ncmpq $0,-40(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\ncmpq $1,-40(%rbp)\nsete %al\n.L2:\n.LBE5:\n.LBE4:\ntestb %al,%al\nje .L3\n.LBB6:\n.LBB7:\nmovq $0,-32(%rbp)\nmovq -32(%rbp),%rax\njmp .L4\n.L3:\n.LBE7:\n.LBE6:\n.LBE3:\nmovq $0,-8(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L5\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L5:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-16(%rbp)\n.LBB8:\nmovq $1,-24(%rbp)\n.LBB9:\njmp .L6\n.L27:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L7\ncmpq %rax,-24(%rbp)\njl .L21\n.L7:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L9\ncmpq %rdx,%rax\njl .L22\n.L9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njge .L11\n.LBB13:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L12\ncmpq %rdx,%rax\njl .L23\n.L12:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nsubq -16(%rbp),%rax\naddq %rax,-8(%rbp)\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L14\ncmpq %rax,-24(%rbp)\njl .L24\n.L14:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-16(%rbp)\n.L11:\n.LBE13:\n.LBE12:\n.LBB14:\nmovq -40(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-24(%rbp)\njne .L16\n.LBB15:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L17\ncmpq %rax,-24(%rbp)\njl .L25\n.L17:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nsubq -16(%rbp),%rax\naddq %rax,-8(%rbp)\n.L16:\n.LBE15:\n.LBE14:\n.LBE11:\n.LBB16:\naddq $1,-24(%rbp)\n.L6:\n.LBE16:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L27\n.LBE9:\n.LBE8:\n.LBB17:\nmovq -8(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.L4:\n.LBE17:\n.LBE2:\nleave\nret", "tgt": "n := len(prices)\nif 0 == n || 1 == n {\n\treturn 0\n}\nvar (\n\tres      int\n\tminPrice = prices[0]\n)\nfor i := 1; i < n; i++ {\n\tif prices[i] < prices[i-1] {\n\t\tres += prices[i-1] - minPrice\n\t\tminPrice = prices[i]\n\t}\n\tif i == n-1 {\n\t\tres += prices[i] - minPrice\n\t}\n}\nreturn res"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\nsubq $176,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovb $0,-17(%rbp)\n.LBB2:\nleaq -64(%rbp),%rdi\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nleaq -128(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicebyte@PLT>\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $0,-32(%rbp)\nleaq <go.leetcode0680.validPalindrome..func1>(%rip),%rcx\nleaq -160(%rbp),%rdx\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nleaq -96(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -72(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB3:\nmovq $0,-8(%rbp)\nmovq -168(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBB4:\njmp .L2\n.L19:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq -152(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L3\ncmpq %rax,-8(%rbp)\njl .L14\n.L3:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq -152(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L5\ncmpq %rax,-16(%rbp)\njl .L15\n.L5:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq -160(%rbp),%rdx\nmovq -8(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -160(%rbp),%rcx\nmovq -16(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%eax\ncmpb %al,%dl\nje .L18\n.LBE7:\n.LBB9:\n.LBB10:\nmovq -32(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -8(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -16(%rbp),%rax\nmovq -32(%rbp),%r10\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall *%rcx\n.LVL1:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L9\n.LBB11:\nmovq -32(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -16(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -8(%rbp),%rax\nmovq -32(%rbp),%r10\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL2:\n.L9:\n.LBE11:\n.LBE10:\nmovb %al,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L13\n.L18:\n.LBE9:\n.LBB12:\n.LBB8:\nnop\n.LBE8:\n.LBE12:\n.LBE6:\n.LBB13:\n.LBB14:\nmovq -8(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -16(%rbp),%rax\nsubq $1,%rax\nmovq %rdx,-8(%rbp)\nmovq %rax,-16(%rbp)\n.L2:\n.LBE14:\n.LBE13:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njl .L19\n.LBE4:\n.LBE3:\n.LBB15:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L13:\n.LBE15:\n.LBE2:\nleave\nret", "tgt": "bs := []byte(s)\nvar recur func(int, int) bool\nrecur = func(l, r int) bool {\n\tfor l < r {\n\t\tif bs[l] != bs[r] {\n\t\t\treturn false\n\t\t}\n\t\tl++\n\t\tr--\n\t}\n\treturn true\n}\nfor l, r := 0, len(s)-1; l < r; l, r = l+1, r-1 {\n\tif bs[l] == bs[r] {\n\t\tcontinue\n\t}\n\treturn recur(l+1, r) || recur(l, r-1)\n}\nreturn true"}
{"src": ".LFB0:\nleaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $536,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $488,%rsp\nmovq %rdi,-472(%rbp)\nleaq <.LC27>(%rip),%r10\nmovl $9,%r11d\nmovq %r10,-432(%rbp)\nmovq %r11,-424(%rbp)\nmovq $1,-416(%rbp)\nleaq <.LC28>(%rip),%r8\nmovl $16,%r9d\nmovq %r8,-408(%rbp)\nmovq %r9,-400(%rbp)\nmovq $2,-392(%rbp)\nleaq <.LC29>(%rip),%rcx\nmovl $8,%ebx\nmovq %rcx,-384(%rbp)\nmovq %rbx,-376(%rbp)\nmovq $0,-368(%rbp)\nleaq <.LC30>(%rip),%rax\nmovl $4,%edx\nmovq %rax,-360(%rbp)\nmovq %rdx,-352(%rbp)\nmovq $0,-344(%rbp)\n.LBB2:\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovl $4,%r12d\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %rbx,%rbx\njs .L3\ncmpq $3,%rbx\njg .L3\nmovq %rbx,%rax\naddq %rax,%rax\naddq %rbx,%rax\nsalq $3,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nleaq -256(%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-320(%rbp)\n.LBE8:\n.LBB9:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-448(%rbp)\n.LBE9:\n.LBB10:\nmovq -464(%rbp),%rdx\nmovq -456(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem1189.maxNumberOfBalloons>\nmovq %rax,-56(%rbp)\n.LBB11:\nmovq -448(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB18:\nmovl $4,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB12:\nleaq <string..d>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -184(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <int..d>(%rip),%r13\nmovq %r13,-512(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq %r13,-496(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -448(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,-488(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -512(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovdqa -496(%rbp),%xmm2\nmovups %xmm2,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB15:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE15:\njmp .L9\n.L8:\n.LBB16:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE16:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC31>(%rip),%r14\nmovl $25,%r15d\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq -472(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE17:\n.LBE19:\n.LBE7:\n.LBB20:\naddq $1,%rbx\n.L2:\n.LBE20:\ncmpq %r12,%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   \"STR\",\n\t\twant: 1,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: 2,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: 0,\n\t},\n\t{\n\t\tin:   \"STR\",\n\t\twant: 0,\n\t},\n}\nfor _, tt := range tests {\n\tgot := maxNumberOfBalloons(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": ".LFB1:\nleaq -888(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L64\nmovl $888,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L64:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $840,%rsp\nmovq %rdi,-792(%rbp)\nleaq <type...62x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-584(%rbp)\nleaq <.LC33>(%rip),%rax\nmovq %rax,-576(%rbp)\nmovq $5,-568(%rbp)\nleaq <.LC34>(%rip),%rax\nmovq %rax,-560(%rbp)\nmovq $8,-552(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L46\n.LBB43:\nmovq -584(%rbp),%rcx\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE43:\njmp .L47\n.L46:\n.LBB44:\nmovq -584(%rbp),%rcx\nleaq -576(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...62x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L47:\n.LBE44:\nmovq -584(%rbp),%rax\nmovq %rax,-736(%rbp)\nmovq $2,-728(%rbp)\nmovq $2,-720(%rbp)\nleaq <.LC35>(%rip),%r12\nmovl $26,%r13d\nmovq %r12,-712(%rbp)\nmovq %r13,-704(%rbp)\nmovb $1,-696(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-536(%rbp)\nleaq <.LC36>(%rip),%rax\nmovq %rax,-528(%rbp)\nmovq $4,-520(%rbp)\nleaq <.LC37>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $5,-504(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-496(%rbp)\nmovq $3,-488(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L48\n.LBB45:\nmovq -536(%rbp),%rcx\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE45:\njmp .L49\n.L48:\n.LBB46:\nmovq -536(%rbp),%rax\nleaq -528(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L49:\n.LBE46:\nmovq -536(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $3,-680(%rbp)\nmovq $3,-672(%rbp)\nleaq <.LC39>(%rip),%rax\nmovq %rax,-832(%rbp)\nmovq $26,-824(%rbp)\nmovdqa -832(%rbp),%xmm0\nmovups %xmm0,-664(%rbp)\nmovb $0,-648(%rbp)\nleaq <type...62x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-472(%rbp)\nleaq <.LC40>(%rip),%rax\nmovq %rax,-464(%rbp)\nmovq $5,-456(%rbp)\nleaq <.LC41>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $3,-440(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L50\n.LBB47:\nmovq -472(%rbp),%rcx\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE47:\njmp .L51\n.L50:\n.LBB48:\nmovq -472(%rbp),%rax\nleaq -464(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L51:\n.LBE48:\nmovq -472(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq $2,-632(%rbp)\nmovq $2,-624(%rbp)\nleaq <.LC42>(%rip),%rax\nmovq %rax,-816(%rbp)\nmovq $26,-808(%rbp)\nmovdqa -816(%rbp),%xmm1\nmovups %xmm1,-616(%rbp)\nmovb $0,-600(%rbp)\n.LBB49:\nmovq $0,-784(%rbp)\nmovq $0,-776(%rbp)\nmovq $0,-768(%rbp)\nmovq $0,-760(%rbp)\nmovq $0,-752(%rbp)\nmovq $0,-744(%rbp)\n.LBB50:\n.LBB51:\n.LBB52:\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovl $3,%r12d\nmovl $0,%ebx\n.LBE52:\njmp .L52\n.L63:\n.LBB53:\nnop\n.LBE53:\n.LBB54:\n.LBB55:\ntestq %rbx,%rbx\njs .L53\ncmpq $2,%rbx\njg .L53\nmovq %rbx,%rax\naddq %rax,%rax\naddq %rbx,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rdi\naddq %rdi,%rax\nsubq $336,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-432(%rbp)\nmovq %rdi,-424(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-416(%rbp)\nmovq %rdi,-408(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\n.LBE55:\n.LBB56:\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-768(%rbp)\nmovq %rdx,-760(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\n.LBE56:\n.LBB57:\nmovq -760(%rbp),%rdx\nmovq -752(%rbp),%rax\nsubq $8,%rsp\npushq -768(%rbp)\npushq -776(%rbp)\npushq -784(%rbp)\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem953.isAlienSorted>\naddq $32,%rsp\nmovb %al,-49(%rbp)\n.LBB58:\nmovzbl -744(%rbp),%eax\ncmpb %al,-49(%rbp)\njne .L54\njmp .L55\n.L53:\n.LBE58:\n.LBE57:\n.LBB65:\nmovl $3,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\n.LBE65:\n.LBB66:\n.LBB64:\n.LBB59:\nleaq <type...6.7string>(%rip),%rax\nmovq %rax,-880(%rbp)\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -784(%rbp),%rax\nmovq -776(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -768(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L56\n.LBB60:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE60:\njmp .L57\n.L56:\n.LBB61:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L57:\n.LBE61:\nmovq -184(%rbp),%rax\nmovq %rax,-872(%rbp)\nleaq <bool..d>(%rip),%r13\nmovq %r13,-864(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovzbl -49(%rbp),%edx\nmovb %dl,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-856(%rbp)\nmovq %r13,-848(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovzbl -744(%rbp),%edx\nmovb %dl,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,-840(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -880(%rbp),%xmm2\nmovups %xmm2,-128(%rbp)\nmovdqa -864(%rbp),%xmm3\nmovups %xmm3,-112(%rbp)\nmovdqa -848(%rbp),%xmm4\nmovups %xmm4,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L58\n.LBB62:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE62:\njmp .L59\n.L58:\n.LBB63:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L59:\n.LBE63:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC43>(%rip),%r14\nmovl $25,%r15d\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rsi,%rcx\nmovq -792(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L55:\n.LBE59:\n.LBE64:\n.LBE66:\n.LBE54:\n.LBB67:\naddq $1,%rbx\n.L52:\n.LBE67:\ncmpq %r12,%rbx\njl .L63\n.LBE51:\n.LBE50:\n.LBE49:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\twords: []string{\"STR\", \"STR\"},\n\t\torder: \"STR\",\n\t\twant:  true,\n\t},\n\t{\n\t\twords: []string{\"STR\", \"STR\", \"STR\"},\n\t\torder: \"STR\",\n\t\twant:  false,\n\t},\n\t{\n\t\twords: []string{\"STR\", \"STR\"},\n\t\torder: \"STR\",\n\t\twant:  false,\n\t},\n}\nfor _, tt := range tests {\n\tgot := isAlienSorted(tt.words, tt.order)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.words, got, tt.want)\n\t}\n}"}
{"src": ".LFB1:\nleaq -824(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L29\nmovl $824,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L29:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $776,%rsp\nmovq %rdi,-760(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-656(%rbp)\nmovq -656(%rbp),%rax\nmovq $1,(%rax)\nmovq $1,<8>(%rax)\nmovq $4,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq $3,<40>(%rax)\nmovq -656(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $6,-616(%rbp)\nmovq $6,-608(%rbp)\nmovq $3,-600(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq $5,(%rax)\nmovq $1,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $4,<32>(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $5,-584(%rbp)\nmovq $5,-576(%rbp)\nmovq $5,-568(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-640(%rbp)\nmovq -640(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $4,<24>(%rax)\nmovq $5,<32>(%rax)\nmovq -640(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $5,-552(%rbp)\nmovq $5,-544(%rbp)\nmovq $0,-536(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nmovq -632(%rbp),%rax\nmovq $5,(%rax)\nmovq $4,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $2,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -632(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $5,-520(%rbp)\nmovq $5,-512(%rbp)\nmovq $4,-504(%rbp)\nleaq -624(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $4,-680(%rbp)\nmovq $4,-672(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC17>(%rip),%rax\nmovq %rax,-784(%rbp)\nmovq $70,-776(%rbp)\nleaq -208(%rbp),%rax\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB13:\nmovq $0,-752(%rbp)\nmovq $0,-744(%rbp)\nmovq $0,-736(%rbp)\nmovq $0,-728(%rbp)\n.LBB14:\n.LBB15:\n.LBB16:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-784(%rbp)\nmovl $0,%ebx\n.LBE16:\njmp .L19\n.L28:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L20\ncmpq %rax,%rbx\njge .L20\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE19:\n.LBB20:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\n.LBE20:\n.LBB21:\nmovq -728(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -736(%rbp),%rax\nmovq %rax,-704(%rbp)\nsubq $8,%rsp\npushq -704(%rbp)\npushq -712(%rbp)\npushq -720(%rbp)\ncall <go.leetcode.heightChecker>\naddq $32,%rsp\nmovq %rax,-768(%rbp)\nleaq <go.leetcode..go.leetcode.para1051..d>(%rip),%rax\nmovq %rax,-816(%rbp)\nleaq <go.leetcode..go.leetcode.para1051..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -704(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L21\njmp .L26\n.L20:\n.LBE21:\n.LBB24:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\n.LBE24:\n.LBB25:\n.LBB22:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE22:\njmp .L23\n.L26:\n.LBB23:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para1051..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L23:\n.LBE23:\nmovq -344(%rbp),%rax\nmovq %rax,-808(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-800(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -768(%rbp),%rdi\nmovq %rdi,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-792(%rbp)\nmovdqa -816(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -800(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC18>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE25:\n.LBE18:\n.LBB26:\naddq $1,%rbx\n.L19:\n.LBE26:\ncmpq -784(%rbp),%rbx\njl .L28\n.LBE15:\n.LBE14:\n.LBE13:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC19>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1051{\n\t{\n\t\tpara1051{[]int{1, 1, 4, 2, 1, 3}},\n\t\tans1051{3},\n\t},\n\t{\n\t\tpara1051{[]int{5, 1, 2, 3, 4}},\n\t\tans1051{5},\n\t},\n\t{\n\t\tpara1051{[]int{1, 2, 3, 4, 5}},\n\t\tans1051{0},\n\t},\n\t{\n\t\tpara1051{[]int{5, 4, 3, 2, 1}},\n\t\tans1051{4},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1051, q.para1051\n\tfmt.Printf(\"STR\", p, heightChecker(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $24,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovq $1,-8(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\n.LBB3:\njmp .L2\n.L25:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\n.LBB6:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L3\ncmpq %rax,-8(%rbp)\njl .L18\n.L3:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq -8(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njl .L19\n.L5:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq <16>(%rbp),%rcx\nmovq -8(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njl .L7\n.LBB7:\naddq $1,-8(%rbp)\n.LBE7:\njmp .L2\n.L7:\n.LBB8:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L8\ncmpq %rax,-8(%rbp)\njl .L20\n.L8:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-16(%rbp)\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L10\ncmpq %rax,-8(%rbp)\njl .L21\n.L10:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -8(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L12\ncmpq %rdx,%rax\njl .L22\n.L12:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq <16>(%rbp),%rcx\nmovq -8(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\nmovq -8(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L14\ncmpq %rdx,%rax\njl .L23\n.L14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rax,%rdx\nmovq -16(%rbp),%rax\nmovq %rax,(%rdx)\n.LBB9:\ncmpq $1,-8(%rbp)\njle .L2\n.LBB10:\nsubq $1,-8(%rbp)\n.L2:\n.LBE10:\n.LBE9:\n.LBE8:\n.LBE6:\n.LBE5:\nmovq <24>(%rbp),%rax\ncmpq %rax,-8(%rbp)\njl .L25\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "i := 1\ntmp := 0\nfor i < len(arr) {\n\tif arr[i] >= arr[i-1] {\n\t\ti++\n\t} else {\n\t\ttmp = arr[i]\n\t\tarr[i] = arr[i-1]\n\t\tarr[i-1] = tmp\n\t\tif i > 1 {\n\t\t\ti--\n\t\t}\n\t}\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L55\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL11:\nret\n.L55:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq $0,-8(%rbp)\n.LBB36:\n.LBB37:\ncmpq $0,-72(%rbp)\nje .L49\n.LBB38:\nleaq <go.rtarea.Stack..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L50\n.LBB39:\nmovq -56(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -32(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE39:\njmp .L51\n.L50:\n.LBB40:\nmovq -56(%rbp),%rax\nleaq -48(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.rtarea.Stack..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L51:\n.LBE40:\nmovq -56(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L52\n.LBB41:\nmovq $0,(%rax)\n.LBE41:\njmp .L53\n.L52:\n.LBB42:\nmovl $0,%esi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L53:\n.LBE42:\nmovq -16(%rbp),%rax\nmovq $0,<8>(%rax)\nmovq -16(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,<16>(%rax)\n.LBB43:\nmovq -16(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L54\n.L49:\n.LBE43:\n.LBE38:\n.LBE37:\n.LBB44:\nmovq $0,-8(%rbp)\nmovq -8(%rbp),%rax\n.L54:\n.LBE44:\n.LBE36:\nleave\nret", "tgt": "if maxSize > 0 {\n\tstack := &Stack{}\n\tstack.top = nil\n\tstack.size = 0\n\tstack.maxSize = maxSize\n\treturn stack\n}\nreturn nil"}
{"src": ".LFB0:\nleaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L13\nmovl $520,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nleaq <.LC28>(%rip),%rax\nmovl $15,%edx\nleaq -160(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <io..z2fioutil.ReadFile@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -344(%rbp),%rax\nmovq -336(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nleaq <.LC29>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $1,-504(%rbp)\nleaq <.LC30>(%rip),%r14\nmovl $1,%r15d\nsubq $8,%rsp\npushq -384(%rbp)\npushq -392(%rbp)\npushq -400(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq $-1\nmovq -512(%rbp),%r8\nmovq -504(%rbp),%r9\nmovq %r14,%rdx\nmovq %r15,%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <strings.Replace@PLT>\naddq $16,%rsp\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nleaq <.LC29>(%rip),%r12\nmovl $1,%r13d\nleaq -464(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rsi,%rdi\nmovq %rbx,%r8\nmovq -432(%rbp),%rsi\nmovq -424(%rbp),%rdx\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <strings.Split@PLT>\n.LBB2:\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -280(%rbp),%r14\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L12:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -280(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -288(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE8:\n.LBB9:\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBE9:\n.LBB10:\nleaq -112(%rbp),%rax\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <strconv.Atoi@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -248(%rbp),%rax\nmovq -240(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\n.LBB11:\nmovq -496(%rbp),%rax\ntestq %rax,%rax\nje .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB18:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE18:\n.LBB19:\n.LBB17:\n.LBB12:\nmovq <main.data>(%rip),%rax\nmovq <8+main.data>(%rip),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <16+main.data>(%rip),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r13\nleaq <1>(%r13),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L6\n.LBB13:\nleaq <main.data>(%rip),%r12\nmovq -224(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r13,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\nmovq %rax,<8>(%r12)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%r12)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB14:\nmovq -192(%rbp),%rax\nmovq %rax,(%r12)\njmp .L8\n.L7:\n.LBE14:\n.LBB15:\nmovq -192(%rbp),%rax\nmovq %rax,%rdx\nmovq %r12,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L8\n.L6:\n.LBE15:\n.LBE13:\n.LBB16:\nmovq -224(%rbp),%rcx\nmovq -208(%rbp),%rdx\nmovq %rcx,<main.data>(%rip)\nmovq %rax,<8+main.data>(%rip)\nmovq %rdx,<16+main.data>(%rip)\n.L8:\n.LBE16:\nmovq <main.data>(%rip),%rax\nmovq <8+main.data>(%rip),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <16+main.data>(%rip),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq %r13,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\n.L5:\n.LBE12:\n.LBE17:\n.LBE19:\n.LBE7:\n.LBB20:\naddq $1,%rbx\n.L2:\n.LBE20:\ncmpq %r14,%rbx\njl .L12\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "b, _ := ioutil.ReadFile(\"STR\")\ns := strings.Replace(string(b), \"STR\", \"STR\", -1)\nnumData := strings.Split(s, \"STR\")\nfor _, n := range numData {\n\tnumber, err := strconv.Atoi(n)\n\tif err == nil {\n\t\tdata = append(data, number)\n\t}\n}"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L23\nmovl $136,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\naddq $-128,%rsp\nmovq %rdi,-120(%rbp)\nmovq %rsi,-128(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\n.LBB22:\n.LBB23:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njne .L20\n.LBB24:\n.LBB25:\nleaq <type...60x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\nmovq -120(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -32(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L19\n.L20:\n.LBE25:\n.LBE24:\n.LBE23:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nleaq <type...60x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\nleaq -112(%rbp),%rdx\nmovq -128(%rbp),%rax\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.leetcode.findcombinationSum>\naddq $48,%rsp\n.LBB26:\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -120(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -32(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L19:\n.LBE26:\n.LBE22:\nmovq -120(%rbp),%rax\nleave\nret", "tgt": "if len(candidates) == 0 {\n\treturn [][]int{}\n}\nc, res := []int{}, [][]int{}\nsort.Ints(candidates)\nfindcombinationSum(candidates, target, 0, c, &res)\nreturn res"}
{"src": ".LFB0:\nleaq -1160(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $1160,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1112,%rsp\nmovq %rdi,-1096(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-928(%rbp)\nmovq -928(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $5,<24>(%rax)\nmovq -928(%rbp),%rax\nmovq %rax,-864(%rbp)\nmovq $4,-856(%rbp)\nmovq $4,-848(%rbp)\nmovq $3,-840(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-920(%rbp)\nmovq -920(%rbp),%rax\nmovq $2,(%rax)\nmovq $5,<8>(%rax)\nmovq -920(%rbp),%rax\nmovq %rax,-832(%rbp)\nmovq $2,-824(%rbp)\nmovq $2,-816(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-912(%rbp)\nmovq -912(%rbp),%rax\nmovq $1,(%rax)\nmovq $7,<8>(%rax)\nmovq -912(%rbp),%rax\nmovq %rax,-808(%rbp)\nmovq $2,-800(%rbp)\nmovq $2,-792(%rbp)\nmovq $1,-784(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-904(%rbp)\nmovq -904(%rbp),%rax\nmovq $1,(%rax)\nmovq $7,<8>(%rax)\nmovq -904(%rbp),%rax\nmovq %rax,-776(%rbp)\nmovq $2,-768(%rbp)\nmovq $2,-760(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-896(%rbp)\nmovq -896(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq -896(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovq $2,-744(%rbp)\nmovq $2,-736(%rbp)\nmovq $1,-728(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-888(%rbp)\nmovq -888(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq -888(%rbp),%rax\nmovq %rax,-720(%rbp)\nmovq $2,-712(%rbp)\nmovq $2,-704(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-880(%rbp)\nmovq -880(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $5,<24>(%rax)\nmovq $7,<32>(%rax)\nmovq -880(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovq $5,-688(%rbp)\nmovq $5,-680(%rbp)\nmovq $6,-672(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-872(%rbp)\nmovq -872(%rbp),%rax\nmovq $3,(%rax)\nmovq $7,<8>(%rax)\nmovq -872(%rbp),%rax\nmovq %rax,-664(%rbp)\nmovq $2,-656(%rbp)\nmovq $2,-648(%rbp)\nleaq -864(%rbp),%rax\nmovq %rax,-960(%rbp)\nmovq $4,-952(%rbp)\nmovq $4,-944(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC45>(%rip),%rax\nmovq %rax,-1120(%rbp)\nmovq $69,-1112(%rbp)\nleaq -208(%rbp),%rax\nmovq -1120(%rbp),%rcx\nmovq -1112(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-624(%rbp)\n.LBB2:\nmovq $0,-1056(%rbp)\nmovq $0,-1048(%rbp)\nmovq $0,-1040(%rbp)\nmovq $0,-1032(%rbp)\nmovq $0,-1024(%rbp)\nmovq $0,-1016(%rbp)\nmovq $0,-1008(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -944(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq -536(%rbp),%rax\nmovq %rax,-1120(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L13:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -536(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -544(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $3,%rax\nsubq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-608(%rbp)\nmovq %rdi,-600(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-592(%rbp)\nmovq %rdi,-584(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-576(%rbp)\nmovq %rdi,-568(%rbp)\nmovq <48>(%rax),%rax\nmovq %rax,-560(%rbp)\n.LBE8:\n.LBB9:\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -560(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-1056(%rbp)\nmovq %rdx,-1048(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-1040(%rbp)\nmovq %rdx,-1032(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-1024(%rbp)\nmovq %rdx,-1016(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-1008(%rbp)\n.LBE9:\n.LBB10:\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-992(%rbp)\nmovq %rdx,-984(%rbp)\nmovq -1008(%rbp),%rax\nmovq %rax,-976(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-1088(%rbp)\nmovq %rdx,-1080(%rbp)\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,-1072(%rbp)\nmovq %rdx,-1064(%rbp)\nmovq -1064(%rbp),%rdx\nleaq -416(%rbp),%rax\nsubq $8,%rsp\npushq -1072(%rbp)\npushq -1080(%rbp)\npushq -1088(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.kthSmallestPrimeFraction>\naddq $32,%rsp\nleaq <go.leetcode..go.leetcode.para786..d>(%rip),%rax\nmovq %rax,-1152(%rbp)\nleaq <go.leetcode..go.leetcode.para786..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nmovq -1088(%rbp),%rax\nmovq -1080(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -1072(%rbp),%rax\nmovq -1064(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L11\n.L3:\n.LBE10:\n.LBB15:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE15:\n.LBB16:\n.LBB11:\nmovq -392(%rbp),%rcx\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE11:\njmp .L6\n.L11:\n.LBB12:\nmovq -392(%rbp),%rax\nleaq -384(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para786..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -392(%rbp),%rax\nmovq %rax,-1144(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-1136(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB13:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE13:\njmp .L8\n.L7:\n.LBB14:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE14:\nmovq -344(%rbp),%rax\nmovq %rax,-1128(%rbp)\nmovdqa -1152(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -1136(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC46>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-432(%rbp)\n.LBE16:\n.LBE7:\n.LBB17:\naddq $1,%rbx\n.L2:\n.LBE17:\ncmpq -1120(%rbp),%rbx\njl .L13\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC47>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question786{\n\t{\n\t\tpara786{[]int{1, 2, 3, 5}, 3},\n\t\tans786{[]int{2, 5}},\n\t},\n\t{\n\t\tpara786{[]int{1, 7}, 1},\n\t\tans786{[]int{1, 7}},\n\t},\n\t{\n\t\tpara786{[]int{1, 2}, 1},\n\t\tans786{[]int{1, 2}},\n\t},\n\t{\n\t\tpara786{[]int{1, 2, 3, 5, 7}, 6},\n\t\tans786{[]int{3, 7}},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans786, q.para786\n\tfmt.Printf(\"STR\", p, kthSmallestPrimeFraction(p.A, p.K))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\nleaq -536(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L7\nmovl $536,%r10d\nmovl $8,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L7:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $488,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r10\nmovq %r10,%rsi\nmovq %r11,%rdi\nmovq %rax,%rdi\nmovq %rsi,-448(%rbp)\nmovq %rdi,-440(%rbp)\nmovq %rdx,-464(%rbp)\nmovq %rcx,-456(%rbp)\nmovq %r8,-480(%rbp)\nmovq %r9,-472(%rbp)\nmovq -464(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -456(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL1:\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <16>(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -464(%rbp),%rax\ntestq %rax,%rax\njne .L2\nmovl $0,%eax\njmp .L3\n.L2:\nmovq -464(%rbp),%rax\nmovq (%rax),%rax\n.L3:\nmovq %rax,-528(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,-520(%rbp)\nmovdqa -528(%rbp),%xmm0\nmovups %xmm0,-336(%rbp)\nleaq -336(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $1,-152(%rbp)\nmovq $1,-144(%rbp)\nleaq <.LC32>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $14,-504(%rbp)\nmovq <go.apputil.Error>(%rip),%rax\nmovq -512(%rbp),%rcx\nmovq -504(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rax,%rdi\ncall <log.Logger.Printf@PLT>\naddq $32,%rsp\nmovq -448(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -440(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL2:\nmovq %rax,%rdi\nleaq <.LC33>(%rip),%rax\nmovq %rax,-496(%rbp)\nmovq $31,-488(%rbp)\nleaq <.LC34>(%rip),%r14\nmovl $12,%r15d\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%r8\nmovq %rdx,%r9\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %r8,%rcx\nmovq %r9,%r8\nmovq %rax,%rdx\ncall <net..z2fhttp.Header.Set@PLT>\nmovq -448(%rbp),%rax\nmovq <24>(%rax),%rdx\nmovq -440(%rbp),%rax\nmovq <16>(%rbp),%rsi\nmovq %rax,%rdi\ncall *%rdx\n.LVL3:\n.LBB2:\nleaq <go.apputil..go.apputil.errorResource..d>(%rip),%r12\nleaq <go.apputil..go.apputil.errorResource..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-240(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB3:\nmovq -280(%rbp),%rax\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -256(%rbp),%rcx\nmovq -248(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -240(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.LBE3:\njmp .L5\n.L4:\n.LBB4:\nmovq -280(%rbp),%rax\nleaq -272(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.apputil..go.apputil.errorResource..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE4:\nmovq -280(%rbp),%rax\nmovq %rax,%r13\nleaq -128(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nmovq %rax,%rdi\ncall <encoding..z2fjson.Marshal@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq -296(%rbp),%rax\nmovq -288(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -432(%rbp),%rax\ntestq %rax,%rax\njne .L1\n.LBB5:\nmovq -448(%rbp),%rax\nmovq <16>(%rax),%rcx\nmovq -440(%rbp),%rdx\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -400(%rbp)\npushq -408(%rbp)\npushq -416(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL4:\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-176(%rbp)\n.L1:\n.LBE5:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "errObj := appError{\n\tError:      handlerError.Error(),\n\tMessage:    message,\n\tHTTPStatus: code,\n}\nError.Printf(\"STR\", handlerError)\nw.Header().Set(\"STR\", \"STR\")\nw.WriteHeader(code)\nif j, err := json.Marshal(errorResource{Data: errObj}); err == nil {\n\tw.Write(j)\n}"}
{"src": ".LFB0:\nleaq -1048(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L52\nmovl $1048,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L52:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1000,%rsp\nmovq %rdi,-1032(%rbp)\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\n.LBB2:\n.LBB3:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\nmovq -1032(%rbp),%rcx\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -848(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-64(%rbp)\n.LBB6:\nmovq $0,-912(%rbp)\nmovq $0,-904(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq -824(%rbp),%r15\nmovl $0,%ebx\n.LBE9:\njmp .L4\n.L50:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -824(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -832(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE12:\n.LBB13:\nmovq %rax,-912(%rbp)\nmovq %rdx,-904(%rbp)\n.LBE13:\n.LBB14:\nleaq -800(%rbp),%rdx\nmovl $0,%eax\nmovl $26,%ecx\nmovq %rdx,%rdi\nrep stosqleaq -800(%rbp),%rax\nmovq %rax,-944(%rbp)\nmovq $26,-936(%rbp)\nmovq $26,-928(%rbp)\n.LBB15:\nmovb $0,-65(%rbp)\n.LBB16:\nleaq -144(%rbp),%rdi\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nleaq -592(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicebyte@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-544(%rbp)\n.LBB17:\n.LBB18:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovq -520(%rbp),%rdi\nmovl $0,%eax\n.LBE18:\njmp .L6\n.L5:\n.LBE17:\n.LBE16:\n.LBE15:\n.LBE14:\n.LBB47:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L48:\n.LBE47:\n.LBB48:\n.LBB29:\n.LBB28:\n.LBB27:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -520(%rbp),%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njge .L7\nmovq -528(%rbp),%rdx\nmovq %rax,%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\n.LBE21:\n.LBB22:\nmovb %dl,-65(%rbp)\n.LBE22:\n.LBB23:\nmovzbl -65(%rbp),%edx\nsubl $97,%edx\nmovq -936(%rbp),%rcx\nmovzbl %dl,%esi\ncmpq %rsi,%rcx\njg .L8\njmp .L40\n.L7:\n.LBE23:\n.LBB24:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\n.LBE24:\n.LBB25:\nmovzbl %dl,%eax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L8:\nmovzbl -65(%rbp),%ecx\nsubl $97,%ecx\nmovq -936(%rbp),%rsi\nmovzbl %cl,%r8d\ncmpq %r8,%rsi\njg .L10\nmovzbl %cl,%eax\nmovq %rax,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L10:\nmovq -944(%rbp),%rsi\nmovzbl %cl,%ecx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rcx\nmovq -944(%rbp),%rsi\nmovzbl %dl,%edx\nsalq $3,%rdx\naddq %rsi,%rdx\naddq $1,%rcx\nmovq %rcx,(%rdx)\n.LBE25:\n.LBE20:\n.LBB26:\naddq $1,%rax\n.L6:\n.LBE26:\ncmpq %rdi,%rax\njl .L48\n.LBE27:\n.LBE28:\n.LBE29:\nmovq $0,-496(%rbp)\nmovq $0,-488(%rbp)\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovl $0,-448(%rbp)\nleaq -496(%rbp),%rax\nmovq %rax,-976(%rbp)\nmovq $52,-968(%rbp)\nmovq $52,-960(%rbp)\n.LBB30:\nmovq $0,-80(%rbp)\nmovq $0,-88(%rbp)\n.LBB31:\n.LBB32:\n.LBB33:\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -928(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rsi\nmovl $0,%eax\n.LBE33:\njmp .L13\n.L49:\n.LBB34:\nnop\n.LBE34:\n.LBB35:\n.LBB36:\nmovq -424(%rbp),%rdx\ntestq %rax,%rax\njs .L14\ncmpq %rdx,%rax\njge .L14\nmovq -432(%rbp),%rdx\nmovq %rax,%rcx\nsalq $3,%rcx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\n.LBE36:\n.LBB37:\nmovq %rax,-80(%rbp)\nmovq %rdx,-88(%rbp)\n.LBE37:\n.LBB38:\nmovq -80(%rbp),%rdx\naddq %rdx,%rdx\nmovq -968(%rbp),%rcx\ntestq %rdx,%rdx\njns .L15\njmp .L16\n.L14:\n.LBE38:\n.LBB39:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\n.LBE39:\n.LBB40:\ncmpq %rcx,%rdx\njl .L42\n.L16:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nmovq -976(%rbp),%rcx\naddq %rcx,%rdx\nmovb $35,(%rdx)\nmovq -80(%rbp),%rdx\naddq %rdx,%rdx\naddq $1,%rdx\nmovq -968(%rbp),%rcx\ntestq %rdx,%rdx\njs .L18\ncmpq %rcx,%rdx\njl .L43\n.L18:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq -88(%rbp),%rcx\nmovl %ecx,%edi\nmovq -976(%rbp),%rcx\naddq %rcx,%rdx\nleal <48>(%rdi),%ecx\nmovb %cl,(%rdx)\n.LBE40:\n.LBE35:\n.LBB41:\naddq $1,%rax\n.L13:\n.LBE41:\ncmpq %rsi,%rax\njl .L49\n.LBE32:\n.LBE31:\n.LBE30:\nsubq $8,%rsp\npushq -960(%rbp)\npushq -968(%rbp)\npushq -976(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,-992(%rbp)\nmovq %rdx,-984(%rbp)\n.LBB42:\nmovq -992(%rbp),%r12\nmovq -984(%rbp),%r13\nmovq -992(%rbp),%rax\nmovq -984(%rbp),%rdx\nmovq -64(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7.6.7string>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-384(%rbp)\nmovq -392(%rbp),%r14\nleaq <1>(%r14),%rax\nmovq -384(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L22\nmovq -400(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-384(%rbp)\njmp .L23\n.L22:\nmovq -400(%rbp),%rcx\nmovq -384(%rbp),%rdx\nmovq %rcx,-400(%rbp)\nmovq %rax,-392(%rbp)\nmovq %rdx,-384(%rbp)\n.L23:\nmovq -400(%rbp),%rax\nmovq %r14,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq -904(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L24\n.LBB43:\nmovq -912(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L25\n.L24:\n.LBE43:\n.LBB44:\nmovq -912(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L25:\n.LBE44:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -64(%rbp),%rax\nmovq %r12,%rdx\nmovq %r13,%rcx\nmovq %rax,%rsi\nleaq <type..map.6string.7.6.7string>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq -360(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -352(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L26\n.LBB45:\nmovq -368(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L27\n.L26:\n.LBE45:\n.LBB46:\nmovq -368(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L27:\n.LBE46:\n.LBE42:\n.LBE48:\n.LBE11:\n.LBB49:\naddq $1,%rbx\n.L4:\n.LBE49:\ncmpq %r15,%rbx\njl .L50\n.LBE8:\n.LBE7:\n.LBE6:\ncmpq $0,-64(%rbp)\nje .L30\nmovq -64(%rbp),%rax\nmovq (%rax),%rbx\njmp .L31\n.L30:\nmovl $0,%ebx\n.L31:\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-896(%rbp)\nmovq %rbx,-888(%rbp)\nmovq %rbx,-880(%rbp)\nmovq $0,-56(%rbp)\n.LBB50:\nmovq $0,-1024(%rbp)\nmovq $0,-1016(%rbp)\nmovq $0,-1008(%rbp)\n.LBB51:\n.LBB52:\n.LBB53:\nleaq -304(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6string.7.6.7string>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE53:\njmp .L32\n.L51:\n.LBB54:\nnop\n.LBE54:\n.LBB55:\n.LBB56:\nmovq -304(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq -296(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-320(%rbp)\n.LBE56:\n.LBB57:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-1024(%rbp)\nmovq %rdx,-1016(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-1008(%rbp)\n.LBE57:\n.LBB58:\nmovq -888(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L33\ncmpq %rax,-56(%rbp)\njl .L46\n.L33:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L46:\nmovq -896(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq -1024(%rbp),%rcx\nmovq -1016(%rbp),%rbx\nmovq %rcx,-176(%rbp)\nmovq %rbx,-168(%rbp)\nmovq -1008(%rbp),%rdx\nmovq %rdx,-160(%rbp)\nmovq -168(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -160(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L35\n.LBB59:\nmovq -176(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L36\n.L35:\n.LBE59:\n.LBB60:\nmovq -176(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L36:\n.LBE60:\naddq $1,-56(%rbp)\n.LBE58:\n.LBE55:\n.LBB61:\nleaq -304(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L32:\n.LBE61:\nmovq -304(%rbp),%rax\ntestq %rax,%rax\njne .L51\n.LBE52:\n.LBE51:\n.LBE50:\n.LBB62:\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -880(%rbp),%rax\nmovq %rax,-848(%rbp)\nmovq -1032(%rbp),%rcx\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -848(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE62:\n.LBE2:\nmovq -1032(%rbp),%rax\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "if len(strs) == 0 {\n\treturn nil\n}\nr := make(map[string][]string)\nfor _, str := range strs {\n\tcount := make([]int, 26)\n\tfor _, b := range []byte(str) {\n\t\tcount[b-'a']++\n\t}\n\tbs := make([]byte, 26*2)\n\tfor i, c := range count {\n\t\tbs[2*i] = '#'\n\t\tbs[2*i+1] = byte(c) + '0'\n\t}\n\tkey := string(bs)\n\tr[key] = append(r[key], str)\n}\nres := make([][]string, len(r))\ni := 0\nfor _, l := range r {\n\tres[i] = l\n\ti++\n}\nreturn res"}
{"src": "leaq -696(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L1651\nmovl $696,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL167:\n.LEHB40:\nret\n.L1651:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $648,%rsp\n.LEHE40:\nmovq %rdi,-568(%rbp)\nmovb $0,-521(%rbp)\n.LBB1621:\nleaq <go.structs.Person..d>(%rip),%rdi\n.LEHB41:\ncall <runtime.newobject@PLT>\nmovq %rax,-520(%rbp)\nleaq <.LC570>(%rip),%r12\nmovl $4,%r13d\nmovq %r12,-512(%rbp)\nmovq %r13,-504(%rbp)\nmovq $23,-496(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1622\n.LBB1622:\nmovq -520(%rbp),%rcx\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -496(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE1622:\njmp .L1623\n.L1622:\n.LBB1623:\nmovq -520(%rbp),%rcx\nleaq -512(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <go.structs.Person..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1623:\n.LBE1623:\nmovq -520(%rbp),%rax\nmovq %rax,-56(%rbp)\nleaq <.LC579>(%rip),%rax\nmovq %rax,-656(%rbp)\nmovq $2,-648(%rbp)\nmovq -656(%rbp),%r12\nmovq -648(%rbp),%r13\nleaq <go.structs.TestTagWithStringOption.go.structs.Address..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-488(%rbp)\nmovq %r12,-480(%rbp)\nmovq %r13,-472(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-464(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1624\n.LBB1624:\nmovq -488(%rbp),%rcx\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -464(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE1624:\njmp .L1625\n.L1624:\n.LBB1625:\nmovq -488(%rbp),%rcx\nleaq -480(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <go.structs.TestTagWithStringOption.go.structs.Address..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1625:\n.LBE1625:\nmovq -488(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB1626:\nleaq <go.structs.TestTagWithStringOption..func1>(%rip),%rcx\nleaq -568(%rbp),%rdx\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nleaq -448(%rbp),%rax\nmovq %rax,-424(%rbp)\nmovq -424(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -424(%rbp),%rdx\nmovq $0,-352(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-344(%rbp)\nmovq -344(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -344(%rbp),%rdx\nleaq <go.structs.go.structs..thunk8>(%rip),%rdi\nleaq -521(%rbp),%rsi\nleaq -416(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\ncall <runtime.deferprocStack@PLT>\n.LBE1626:\nleaq <type...1go.structs.TestTagWithStringOption.Address>(%rip),%r14\nmovq -64(%rbp),%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.structs.New>\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\nleaq <40>(%rax),%rdx\nmovq $4,<8>(%rdx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1626\n.LBB1627:\nleaq <.LC499>(%rip),%rax\nmovq %rax,(%rdx)\njmp .L1627\n.L1626:\n.LBE1627:\n.LBB1628:\nleaq <.LC499>(%rip),%rax\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L1627:\n.LBE1628:\nmovq -72(%rbp),%rax\nmovq %rax,%rdi\ncall <go.structs.Struct.Map>\nmovq %rax,-80(%rbp)\n.LBB1629:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.structs.Person.String>\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nleaq <.LC282>(%rip),%rbx\nmovq %rbx,-640(%rbp)\nmovq $6,-632(%rbp)\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq -80(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7interface.4.5>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nleaq -336(%rbp),%rdx\nmovq (%rax),%rsi\nmovq <8>(%rax),%rax\nmovq %rdx,%rcx\nleaq <string..d>(%rip),%rdx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L1628\n.LBB1630:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.structs.Person.String>\nmovq %rax,%r12\nmovq %rdx,%r13\nmovq %rbx,-624(%rbp)\nmovq $6,-616(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq -80(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7interface.4.5>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq %rax,%rbx\nleaq <string..d>(%rip),%rax\nmovq %rax,-688(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq %r12,-304(%rbp)\nmovq %r13,-296(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1629\n.LBB1631:\nmovq -312(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1631:\njmp .L1630\n.L1629:\n.LBB1632:\nmovq -312(%rbp),%rax\nleaq -304(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1630:\n.LBE1632:\nmovq -312(%rbp),%rax\nmovq %rax,-680(%rbp)\nmovq (%rbx),%r12\nmovq <8>(%rbx),%r13\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovdqa -688(%rbp),%xmm0\nmovups %xmm0,-272(%rbp)\nmovq %r12,-256(%rbp)\nmovq %r13,-248(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1631\n.LBB1633:\nmovq -280(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE1633:\njmp .L1632\n.L1631:\n.LBB1634:\nmovq -280(%rbp),%rax\nleaq -272(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1632:\n.LBE1634:\nmovq -280(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $2,-136(%rbp)\nmovq $2,-128(%rbp)\nleaq <.LC580>(%rip),%rax\nmovq %rax,-608(%rbp)\nmovq $44,-600(%rbp)\nmovq -568(%rbp),%rax\nmovq -608(%rbp),%rcx\nmovq -600(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L1628:\n.LBE1630:\n.LBE1629:\nleaq -560(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.structs.Struct.Values>\n.LBB1635:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.structs.Person.String>\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -552(%rbp),%rax\ncmpq $1,%rax\njg .L1633\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1633:\nmovq -560(%rbp),%rax\naddq $16,%rax\nleaq -240(%rbp),%rdx\nmovq (%rax),%rsi\nmovq <8>(%rax),%rax\nmovq %rdx,%rcx\nleaq <string..d>(%rip),%rdx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L1642\n.LBB1636:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.structs.Person.String>\nmovq %rax,%r12\nmovq %rdx,%r13\nmovq -552(%rbp),%rax\ncmpq $1,%rax\njg .L1635\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L1635:\nleaq <string..d>(%rip),%rax\nmovq %rax,-672(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq %r12,-208(%rbp)\nmovq %r13,-200(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1636\n.LBB1637:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1637:\njmp .L1637\n.L1636:\n.LBB1638:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1637:\n.LBE1638:\nmovq -216(%rbp),%rax\nmovq %rax,-664(%rbp)\nmovq -560(%rbp),%rax\nmovq <16>(%rax),%r12\nmovq <24>(%rax),%r13\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovdqa -672(%rbp),%xmm1\nmovups %xmm1,-176(%rbp)\nmovq %r12,-160(%rbp)\nmovq %r13,-152(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1638\n.LBB1639:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE1639:\njmp .L1639\n.L1638:\n.LBB1640:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1639:\n.LBE1640:\nmovq -184(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq <.LC581>(%rip),%rax\nmovq %rax,-592(%rbp)\nmovq $50,-584(%rbp)\nmovq -568(%rbp),%rax\nmovq -592(%rbp),%rcx\nmovq -584(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\n.LEHE41:\naddq $32,%rsp\n.L1642:\n.LBE1636:\n.LBE1635:\n.LBE1621:\nmovl $1,%ebx\n.L1646:\nleaq -521(%rbp),%rax\nmovq %rax,%rdi\n.LEHB42:\ncall <runtime.deferreturn@PLT>\n.LEHE42:\ncmpl $1,%ebx\njne .L1640\njmp .L1650\n.L1647:\nleaq -521(%rbp),%rax\nmovq %rax,%rdi\n.LEHB43:\ncall <runtime.checkdefer@PLT>\n.LEHE43:\njmp .L1642\n.L1648:\nmovq %rax,-576(%rbp)\nmovl $0,%ebx\njmp .L1646\n.L1640:\nmovq -576(%rbp),%rax\nmovq %rax,%rdi\n.LEHB44:\ncall <_Unwind_Resume@PLT>\n.L1649:\nleaq -521(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L1646\n.L1650:\nleaq -40(%rbp),%rsp\n.LEHE44:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "type Address struct {\n\tCountry string  `json:\"STR\"`\n\tPerson  *Person `json:\"STR\"`\n}\nperson := &Person{\n\tName: \"STR\",\n\tAge:  23,\n}\naddress := &Address{\n\tCountry: \"STR\",\n\tPerson:  person,\n}\ndefer func() {\n\terr := recover()\n\tif err != nil {\n\t\tfmt.Printf(\"STR\", err)\n\t\tt.Error(\"STR\")\n\t}\n}()\ns := New(address)\ns.TagName = \"STR\"\nm := s.Map()\nif m[\"STR\"] != person.String() {\n\tt.Errorf(\"STR\", person.String(), m[\"STR\"])\n}\nvs := s.Values()\nif vs[1] != person.String() {\n\tt.Errorf(\"STR\", person.String(), vs[1])\n}"}
{"src": ".LFB49:\nleaq -728(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L1655\nmovl $728,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL57:\nret\n.L1655:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $704,%rsp\nmovq %rdi,-696(%rbp)\nmovq %rsi,-704(%rbp)\nmovq %rdx,-712(%rbp)\n.LBB1881:\n.LBB1882:\nmovq -696(%rbp),%rax\nmovq <320>(%rax),%rax\ntestq %rax,%rax\nsetg %al\ntestb %al,%al\nje .L1621\n.LBB1883:\nmovq -696(%rbp),%rax\nmovq <304>(%rax),%rdx\nmovq -696(%rbp),%rax\nmovq <312>(%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L1621:\n.LBE1883:\n.LBE1882:\ntestb %al,%al\nje .L1622\n.LBB1884:\n.LBB1885:\nmovq -696(%rbp),%rax\nmovq <320>(%rax),%rdx\nmovq -696(%rbp),%rax\nmovq <304>(%rax),%rax\ncmpq %rax,%rdx\nje .L1623\n.LBB1886:\nmovq -696(%rbp),%rcx\nmovq <296>(%rcx),%rax\nmovq <304>(%rcx),%rdx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nmovq <312>(%rcx),%rax\nmovq %rax,-672(%rbp)\nmovq -696(%rbp),%rax\nmovq <320>(%rax),%rax\nmovq -672(%rbp),%rdx\ntestq %rax,%rax\njs .L1624\ncmpq %rdx,%rax\njle .L1649\n.L1624:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L1649:\nmovq -696(%rbp),%rdx\nmovq <296>(%rdx),%rcx\nmovq <304>(%rdx),%rbx\nmovq %rcx,-656(%rbp)\nmovq %rbx,-648(%rbp)\nmovq <312>(%rdx),%rdx\nmovq %rdx,-640(%rbp)\nmovq -688(%rbp),%rcx\nmovq -672(%rbp),%rdx\ncmpq %rdx,%rax\nje .L1626\nmovq %rax,%rsi\nmovq %rsi,%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nsalq $4,%rdx\njmp .L1627\n.L1626:\nmovl $0,%edx\n.L1627:\naddq %rcx,%rdx\nmovq %rdx,-624(%rbp)\nmovq -680(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-616(%rbp)\nmovq -672(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-608(%rbp)\npushq -608(%rbp)\npushq -616(%rbp)\npushq -624(%rbp)\npushq -640(%rbp)\npushq -648(%rbp)\npushq -656(%rbp)\nleaq <go.yaml..go.yaml.yaml_token_t..d>(%rip),%rdi\ncall <runtime.typedslicecopy@PLT>\naddq $48,%rsp\n.L1623:\n.LBE1886:\n.LBE1885:\nmovq -696(%rbp),%rax\nmovq <304>(%rax),%rsi\nmovq -696(%rbp),%rcx\nmovq <296>(%rcx),%rax\nmovq <304>(%rcx),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq <312>(%rcx),%rax\nmovq %rax,-576(%rbp)\nmovq -696(%rbp),%rax\nmovq <320>(%rax),%rax\nmovq %rsi,%rdi\nsubq %rax,%rdi\nmovq -576(%rbp),%rax\ntestq %rdi,%rdi\njs .L1628\ncmpq %rax,%rdi\njg .L1628\ntestq %rdi,%rdi\njns .L1629\njmp .L1650\n.L1628:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L1650:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L1629:\nmovq -592(%rbp),%rcx\nmovq -576(%rbp),%rdx\nmovq -696(%rbp),%rax\nmovq %rcx,<296>(%rax)\nmovq -696(%rbp),%rax\nmovq %rdi,<304>(%rax)\nmovq -696(%rbp),%rax\nmovq %rdx,<312>(%rax)\nmovq -696(%rbp),%rax\nmovq $0,<320>(%rax)\n.L1622:\n.LBE1884:\n.LBE1881:\nmovq -696(%rbp),%rcx\nmovq <296>(%rcx),%rax\nmovq <304>(%rcx),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq <312>(%rcx),%rax\nmovq %rax,-544(%rbp)\nmovq -552(%rbp),%r12\nmovq -712(%rbp),%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-528(%rbp)\nmovq %rbx,-520(%rbp)\nmovq <16>(%rax),%rcx\nmovq <24>(%rax),%rbx\nmovq %rcx,-512(%rbp)\nmovq %rbx,-504(%rbp)\nmovq <32>(%rax),%rcx\nmovq <40>(%rax),%rbx\nmovq %rcx,-496(%rbp)\nmovq %rbx,-488(%rbp)\nmovq <48>(%rax),%rcx\nmovq <56>(%rax),%rbx\nmovq %rcx,-480(%rbp)\nmovq %rbx,-472(%rbp)\nmovq <64>(%rax),%rcx\nmovq <72>(%rax),%rbx\nmovq %rcx,-464(%rbp)\nmovq %rbx,-456(%rbp)\nmovq <80>(%rax),%rcx\nmovq <88>(%rax),%rbx\nmovq %rcx,-448(%rbp)\nmovq %rbx,-440(%rbp)\nmovq <96>(%rax),%rcx\nmovq <104>(%rax),%rbx\nmovq %rcx,-432(%rbp)\nmovq %rbx,-424(%rbp)\nmovq <112>(%rax),%rcx\nmovq <120>(%rax),%rbx\nmovq %rcx,-416(%rbp)\nmovq %rbx,-408(%rbp)\nmovq <136>(%rax),%rdx\nmovq <128>(%rax),%rax\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nleaq <1>(%r12),%rax\nmovq -544(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L1631\n.LBB1887:\nmovq -696(%rbp),%rcx\nleaq <296>(%rcx),%rbx\nmovq -560(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <go.yaml..go.yaml.yaml_token_t..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -368(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1632\n.LBB1888:\nmovq -384(%rbp),%rax\nmovq %rax,(%rbx)\n.LBE1888:\njmp .L1633\n.L1632:\n.LBB1889:\nmovq -384(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L1633\n.L1631:\n.LBE1889:\n.LBE1887:\n.LBB1890:\nmovq -560(%rbp),%rsi\nmovq -544(%rbp),%rdx\nmovq -696(%rbp),%rcx\nmovq %rsi,<296>(%rcx)\nmovq -696(%rbp),%rcx\nmovq %rax,<304>(%rcx)\nmovq -696(%rbp),%rax\nmovq %rdx,<312>(%rax)\n.L1633:\n.LBE1890:\nmovq -696(%rbp),%rcx\nmovq <296>(%rcx),%rax\nmovq <304>(%rcx),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq <312>(%rcx),%rax\nmovq %rax,-544(%rbp)\nmovq -560(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L1634\n.LBB1891:\nmovq -528(%rbp),%rcx\nmovq -520(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -512(%rbp),%rcx\nmovq -504(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -496(%rbp),%rcx\nmovq -488(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -464(%rbp),%rcx\nmovq -456(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -448(%rbp),%rcx\nmovq -440(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -432(%rbp),%rcx\nmovq -424(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -416(%rbp),%rcx\nmovq -408(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -400(%rbp),%rcx\nmovq -392(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE1891:\njmp .L1635\n.L1634:\n.LBB1892:\nleaq -528(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.yaml..go.yaml.yaml_token_t..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1635:\n.LBE1892:\n.LBB1893:\ncmpq $0,-704(%rbp)\njs .L1654\n.LBE1893:\nmovq -696(%rbp),%rcx\nmovq <296>(%rcx),%rax\nmovq <304>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <312>(%rcx),%rax\nmovq %rax,-336(%rbp)\nmovq -696(%rbp),%rax\nmovq <320>(%rax),%rdx\nmovq -704(%rbp),%rax\naddq %rdx,%rax\nleaq <1>(%rax),%rdx\nmovq -336(%rbp),%rax\ntestq %rdx,%rdx\njs .L1638\ncmpq %rax,%rdx\njle .L1651\n.L1638:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L1651:\nmovq -696(%rbp),%rax\nmovq <296>(%rax),%rcx\nmovq <304>(%rax),%rbx\nmovq %rcx,-320(%rbp)\nmovq %rbx,-312(%rbp)\nmovq <312>(%rax),%rax\nmovq %rax,-304(%rbp)\nmovq -696(%rbp),%rax\nmovq <320>(%rax),%rcx\nmovq -704(%rbp),%rax\naddq %rcx,%rax\nmovq -304(%rbp),%rcx\ntestq %rax,%rax\njs .L1640\ncmpq %rcx,%rax\njle .L1652\n.L1640:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L1652:\nmovq -352(%rbp),%rsi\nmovq -336(%rbp),%rcx\ncmpq %rcx,%rdx\nje .L1642\nmovq %rdx,%rdi\nmovq %rdi,%rcx\nsalq $3,%rcx\naddq %rdi,%rcx\nsalq $4,%rcx\njmp .L1643\n.L1642:\nmovl $0,%ecx\n.L1643:\naddq %rsi,%rcx\nmovq %rcx,-288(%rbp)\nmovq -344(%rbp),%rcx\nsubq %rdx,%rcx\nmovq %rcx,-280(%rbp)\nmovq -336(%rbp),%rcx\nsubq %rdx,%rcx\nmovq %rcx,-272(%rbp)\nmovq -320(%rbp),%rcx\nmovq -304(%rbp),%rdx\ncmpq %rdx,%rax\nje .L1644\nmovq %rax,%rsi\nmovq %rsi,%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nsalq $4,%rdx\njmp .L1645\n.L1644:\nmovl $0,%edx\n.L1645:\naddq %rcx,%rdx\nmovq %rdx,-256(%rbp)\nmovq -312(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-248(%rbp)\nmovq -304(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-240(%rbp)\npushq -240(%rbp)\npushq -248(%rbp)\npushq -256(%rbp)\npushq -272(%rbp)\npushq -280(%rbp)\npushq -288(%rbp)\nleaq <go.yaml..go.yaml.yaml_token_t..d>(%rip),%rdi\ncall <runtime.typedslicecopy@PLT>\naddq $48,%rsp\nmovq -696(%rbp),%rcx\nmovq <296>(%rcx),%rax\nmovq <304>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <312>(%rcx),%rax\nmovq %rax,-208(%rbp)\nmovq -696(%rbp),%rax\nmovq <320>(%rax),%rdx\nmovq -704(%rbp),%rax\naddq %rdx,%rax\nmovq -216(%rbp),%rdx\ntestq %rax,%rax\njs .L1646\ncmpq %rdx,%rax\njge .L1646\nmovq -224(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq -712(%rbp),%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\nmovq %rcx,-192(%rbp)\nmovq %rbx,-184(%rbp)\nmovq <16>(%rdx),%rcx\nmovq <24>(%rdx),%rbx\nmovq %rcx,-176(%rbp)\nmovq %rbx,-168(%rbp)\nmovq <32>(%rdx),%rcx\nmovq <40>(%rdx),%rbx\nmovq %rcx,-160(%rbp)\nmovq %rbx,-152(%rbp)\nmovq <48>(%rdx),%rcx\nmovq <56>(%rdx),%rbx\nmovq %rcx,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq <64>(%rdx),%rcx\nmovq <72>(%rdx),%rbx\nmovq %rcx,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq <80>(%rdx),%rcx\nmovq <88>(%rdx),%rbx\nmovq %rcx,-112(%rbp)\nmovq %rbx,-104(%rbp)\nmovq <96>(%rdx),%rcx\nmovq <104>(%rdx),%rbx\nmovq %rcx,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq <112>(%rdx),%rcx\nmovq <120>(%rdx),%rbx\nmovq %rcx,-80(%rbp)\nmovq %rbx,-72(%rbp)\nmovq <128>(%rdx),%rcx\nmovq <136>(%rdx),%rbx\nmovq %rcx,-64(%rbp)\nmovq %rbx,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L1647\njmp .L1653\n.L1646:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L1647:\n.LBB1895:\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE1895:\njmp .L1620\n.L1653:\n.LBB1896:\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.yaml..go.yaml.yaml_token_t..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\njmp .L1620\n.L1654:\n.LBE1896:\n.LBB1897:\n.LBB1894:\nnop\n.L1620:\n.LBE1894:\n.LBE1897:\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "if parser.tokens_head > 0 && len(parser.tokens) == cap(parser.tokens) {\n\tif parser.tokens_head != len(parser.tokens) {\n\t\tcopy(parser.tokens, parser.tokens[parser.tokens_head:])\n\t}\n\tparser.tokens = parser.tokens[:len(parser.tokens)-parser.tokens_head]\n\tparser.tokens_head = 0\n}\nparser.tokens = append(parser.tokens, *token)\nif pos < 0 {\n\treturn\n}\ncopy(parser.tokens[parser.tokens_head+pos+1:], parser.tokens[parser.tokens_head+pos:])\nparser.tokens[parser.tokens_head+pos] = *token"}
{"src": "leaq -1000(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L89\nmovl $1000,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL12:\nret\n.L89:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $952,%rsp\nmovq %rdi,-952(%rbp)\nmovq $0,-928(%rbp)\nmovq $0,-920(%rbp)\nmovq $0,-912(%rbp)\nmovq $0,-904(%rbp)\nmovq $0,-896(%rbp)\nmovq $0,-888(%rbp)\nmovq $0,-880(%rbp)\nmovq $0,-872(%rbp)\nmovb $0,-49(%rbp)\nmovq $0,-944(%rbp)\nmovq $0,-936(%rbp)\n.LBB56:\nleaq -864(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <bytes.TrimSpace@PLT>\naddq $32,%rsp\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,<16>(%rbp)\nmovq %rdx,<24>(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,<32>(%rbp)\n.LBB57:\n.LBB58:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L59\n.LBB59:\nmovb $35,-833(%rbp)\nleaq -833(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq $1,-112(%rbp)\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <bytes.HasPrefix@PLT>\naddq $48,%rsp\n.L59:\n.LBE59:\n.LBE58:\ntestb %al,%al\nje .L60\n.LBB60:\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,-816(%rbp)\nmovq %rdx,-808(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-768(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-760(%rbp)\nmovq %rdx,-752(%rbp)\nmovq -952(%rbp),%rax\nmovq -832(%rbp),%rcx\nmovq -824(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -816(%rbp),%rcx\nmovq -808(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -800(%rbp),%rcx\nmovq -792(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -768(%rbp),%rcx\nmovq -760(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -752(%rbp),%rdx\nmovq %rdx,<80>(%rax)\njmp .L58\n.L60:\n.LBE60:\n.LBE57:\nleaq <.LC48>(%rip),%rax\nmovq %rax,-992(%rbp)\nmovq $1,-984(%rbp)\nmovq -992(%rbp),%rax\nmovq -984(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <bytes.LastIndexAny@PLT>\naddq $32,%rsp\nmovq %rax,-64(%rbp)\n.LBB61:\ncmpq $-1,-64(%rbp)\njne .L62\n.LBB62:\nleaq <.LC49>(%rip),%rax\nmovq %rax,-976(%rbp)\nmovq $13,-968(%rbp)\nmovq -976(%rbp),%rax\nmovq -968(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %rax,-944(%rbp)\nmovq %rdx,-936(%rbp)\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-672(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-664(%rbp)\nmovq %rdx,-656(%rbp)\nmovq -952(%rbp),%rax\nmovq -736(%rbp),%rcx\nmovq -728(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -720(%rbp),%rcx\nmovq -712(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -704(%rbp),%rcx\nmovq -696(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -688(%rbp),%rcx\nmovq -680(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -672(%rbp),%rcx\nmovq -664(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -656(%rbp),%rdx\nmovq %rdx,<80>(%rax)\njmp .L58\n.L62:\n.LBE62:\n.LBE61:\nmovq -64(%rbp),%rax\naddq $1,%rax\nmovq <32>(%rbp),%rdx\ntestq %rax,%rax\njs .L63\ncmpq %rdx,%rax\njle .L85\n.L63:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L85:\nmovq <16>(%rbp),%rcx\nmovq <32>(%rbp),%rdx\ncmpq %rdx,%rax\nje .L65\nmovq %rax,%rdx\njmp .L66\n.L65:\nmovl $0,%edx\n.L66:\naddq %rcx,%rdx\nmovq %rdx,-96(%rbp)\nmovq <24>(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-88(%rbp)\nmovq <32>(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-80(%rbp)\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovl $45,%edi\ncall <bytes.IndexByte@PLT>\naddq $32,%rsp\nmovq %rax,-72(%rbp)\n.LBB63:\ncmpq $-1,-72(%rbp)\njne .L67\n.LBB64:\nleaq <.LC50>(%rip),%r14\nmovl $14,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %rax,-944(%rbp)\nmovq %rdx,-936(%rbp)\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-576(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-568(%rbp)\nmovq %rdx,-560(%rbp)\nmovq -952(%rbp),%rax\nmovq -640(%rbp),%rcx\nmovq -632(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -624(%rbp),%rcx\nmovq -616(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -608(%rbp),%rcx\nmovq -600(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -592(%rbp),%rcx\nmovq -584(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -576(%rbp),%rcx\nmovq -568(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -560(%rbp),%rdx\nmovq %rdx,<80>(%rax)\njmp .L58\n.L67:\n.LBE64:\n.LBE63:\nmovq -64(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\naddq $1,%rax\nmovq %rax,-72(%rbp)\nmovq <32>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L68\ncmpq %rax,-64(%rbp)\njg .L68\ncmpq $0,-64(%rbp)\njns .L69\njmp .L86\n.L68:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L86:\nmovq -64(%rbp),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L69:\nmovq <16>(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-528(%rbp)\nsubq $8,%rsp\npushq -528(%rbp)\npushq -536(%rbp)\npushq -544(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,-880(%rbp)\nmovq %rdx,-872(%rbp)\nmovq -64(%rbp),%rax\naddq $1,%rax\nmovq <32>(%rbp),%rdx\ncmpq $0,-72(%rbp)\njs .L71\ncmpq %rdx,-72(%rbp)\njg .L71\ntestq %rax,%rax\njns .L72\njmp .L73\n.L71:\nmovq -72(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L72:\ncmpq -72(%rbp),%rax\njle .L87\n.L73:\nmovq -72(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L87:\nmovq <16>(%rbp),%rcx\nmovq <32>(%rbp),%rdx\ncmpq %rdx,%rax\nje .L75\nmovq %rax,%rdx\njmp .L76\n.L75:\nmovl $0,%edx\n.L76:\naddq %rcx,%rdx\nmovq %rdx,-512(%rbp)\nmovq -72(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-504(%rbp)\nmovq <32>(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-496(%rbp)\nleaq -480(%rbp),%rax\nsubq $8,%rsp\npushq -496(%rbp)\npushq -504(%rbp)\npushq -512(%rbp)\nmovq %rax,%rdi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nleaq -448(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <net.ParseIP@PLT>\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-928(%rbp)\nmovq %rdx,-920(%rbp)\nmovq -432(%rbp),%rax\nmovq %rax,-912(%rbp)\nleaq -928(%rbp),%rax\nmovq %rax,%rdi\ncall <go.iplist.minifyIP>\nmovq -72(%rbp),%rax\naddq $1,%rax\nmovq <32>(%rbp),%rdx\ntestq %rax,%rax\njs .L77\ncmpq %rdx,%rax\njle .L88\n.L77:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L88:\nmovq <16>(%rbp),%rcx\nmovq <32>(%rbp),%rdx\ncmpq %rdx,%rax\nje .L79\nmovq %rax,%rdx\njmp .L80\n.L79:\nmovl $0,%edx\n.L80:\naddq %rcx,%rdx\nmovq %rdx,-416(%rbp)\nmovq <24>(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-408(%rbp)\nmovq <32>(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,-400(%rbp)\nleaq -384(%rbp),%rax\nsubq $8,%rsp\npushq -400(%rbp)\npushq -408(%rbp)\npushq -416(%rbp)\nmovq %rax,%rdi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nleaq -352(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <net.ParseIP@PLT>\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-904(%rbp)\nmovq %rdx,-896(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,-888(%rbp)\nleaq -928(%rbp),%rax\naddq $24,%rax\nmovq %rax,%rdi\ncall <go.iplist.minifyIP>\n.LBB65:\n.LBB66:\n.LBB67:\nmovq -928(%rbp),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L81\n.LBB68:\nmovq -904(%rbp),%rax\ntestq %rax,%rax\nsete %al\n.L81:\n.LBE68:\n.LBE67:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L82\n.LBB69:\nmovq -920(%rbp),%rdx\nmovq -896(%rbp),%rax\ncmpq %rax,%rdx\nsetne %al\n.L82:\n.LBE69:\n.LBE66:\ntestb %al,%al\nje .L83\n.LBB70:\nleaq <.LC51>(%rip),%r12\nmovl $12,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <errors.New@PLT>\nmovq %rax,-944(%rbp)\nmovq %rdx,-936(%rbp)\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-256(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-248(%rbp)\nmovq %rdx,-240(%rbp)\nmovq -952(%rbp),%rax\nmovq -320(%rbp),%rcx\nmovq -312(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -256(%rbp),%rcx\nmovq -248(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -240(%rbp),%rdx\nmovq %rdx,<80>(%rax)\njmp .L58\n.L83:\n.LBE70:\n.LBE65:\nmovb $1,-49(%rbp)\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovzbl -49(%rbp),%eax\nmovb %al,-160(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-152(%rbp)\nmovq %rdx,-144(%rbp)\nmovq -952(%rbp),%rax\nmovq -224(%rbp),%rcx\nmovq -216(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -208(%rbp),%rcx\nmovq -200(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -144(%rbp),%rdx\nmovq %rdx,<80>(%rax)\n.L58:\n.LBE56:\nmovq -952(%rbp),%rax\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "l = bytes.TrimSpace(l)\nif len(l) == 0 || bytes.HasPrefix(l, []byte(\"STR\")) {\n\treturn\n}\ncolon := bytes.LastIndexAny(l, \"STR\")\nif colon == -1 {\n\terr = errors.New(\"STR\")\n\treturn\n}\nhyphen := bytes.IndexByte(l[colon+1:], \"STR\")\nif hyphen == -1 {\n\terr = errors.New(\"STR\")\n\treturn\n}\nhyphen += colon + 1\nr.Description = string(l[:colon])\nr.First = net.ParseIP(string(l[colon+1 : hyphen]))\nminifyIP(&r.First)\nr.Last = net.ParseIP(string(l[hyphen+1:]))\nminifyIP(&r.Last)\nif r.First == nil || r.Last == nil || len(r.First) != len(r.Last) {\n\terr = errors.New(\"STR\")\n\treturn\n}\nok = true\nreturn"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-168(%rbp)\nleaq <.LC16>(%rip),%rax\nmovl $8,%edx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -160(%rbp),%rdx\nmovq -152(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.problem409.longestPalindrome>\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "str := \"STR\"\nfmt.Println(longestPalindrome(str))"}
{"src": ".LFB0:\nleaq -488(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12\nmovl $488,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $440,%rsp\nmovq %rdi,-440(%rbp)\nmovq $5,-416(%rbp)\nmovq $2,-408(%rbp)\nmovq $8,-400(%rbp)\nmovq $3,-392(%rbp)\nmovq $0,-384(%rbp)\nmovq $0,-376(%rbp)\nmovq $1,-368(%rbp)\nmovq $1,-360(%rbp)\nmovq $2,-352(%rbp)\nmovq $1,-344(%rbp)\nmovq $3,-336(%rbp)\nmovq $2,-328(%rbp)\nmovq $13,-320(%rbp)\nmovq $4,-312(%rbp)\nmovq $130,-304(%rbp)\nmovq $15,-296(%rbp)\n.LBB2:\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq $8,-448(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L11:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\ntestq %rbx,%rbx\njs .L3\ncmpq $7,%rbx\njg .L3\nmovq %rbx,%rax\nsalq $4,%rax\nleaq -48(%rbp),%rcx\naddq %rcx,%rax\nsubq $240,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE8:\n.LBB9:\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\n.LBE9:\n.LBB10:\nmovq -432(%rbp),%rax\nmovq %rax,%rdi\ncall <go.problem441.arrangeCoins>\nmovq %rax,-56(%rbp)\n.LBB11:\nmovq -424(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L4\njmp .L5\n.L3:\n.LBE11:\n.LBE10:\n.LBB16:\nmovl $8,%esi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE16:\n.LBB17:\n.LBB15:\n.LBB12:\nleaq <int..d>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-472(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-464(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-456(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -480(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -464(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB13:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE13:\njmp .L7\n.L6:\n.LBB14:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE14:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC11>(%rip),%r12\nmovl $25,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -440(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Fatalf..stub@PLT>\naddq $32,%rsp\n.L5:\n.LBE12:\n.LBE15:\n.LBE17:\n.LBE7:\n.LBB18:\naddq $1,%rbx\n.L2:\n.LBE18:\ncmpq -448(%rbp),%rbx\njl .L11\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tests := [...]testType{\n\t{\n\t\tin:   5,\n\t\twant: 2,\n\t},\n\t{\n\t\tin:   8,\n\t\twant: 3,\n\t},\n\t{\n\t\tin:   0,\n\t\twant: 0,\n\t},\n\t{\n\t\tin:   1,\n\t\twant: 1,\n\t},\n\t{\n\t\tin:   2,\n\t\twant: 1,\n\t},\n\t{\n\t\tin:   3,\n\t\twant: 2,\n\t},\n\t{\n\t\tin:   13,\n\t\twant: 4,\n\t},\n\t{\n\t\tin:   130,\n\t\twant: 15,\n\t},\n}\nfor _, tt := range tests {\n\tgot := arrangeCoins(tt.in)\n\tif got != tt.want {\n\t\tt.Fatalf(\"STR\", tt.in, got, tt.want)\n\t}\n}"}
{"src": ".LFB4:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $144,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\naddq $-128,%rsp\nmovq %rdi,-248(%rbp)\nleaq -240(%rbp),%rdx\nmovl $0,%eax\nmovl $27,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB2:\n.LBB3:\nleaq -240(%rbp),%rdx\nmovl $0,%eax\nmovl $27,%ecx\nmovq %rdx,%rdi\nrep stosqmovq -248(%rbp),%rax\nmovq -240(%rbp),%rcx\nmovq -232(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -224(%rbp),%rcx\nmovq -216(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -208(%rbp),%rcx\nmovq -200(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -112(%rbp),%rcx\nmovq -104(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rbx\nmovq %rcx,<144>(%rax)\nmovq %rbx,<152>(%rax)\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rbx\nmovq %rcx,<160>(%rax)\nmovq %rbx,<168>(%rax)\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rbx\nmovq %rcx,<176>(%rax)\nmovq %rbx,<184>(%rax)\nmovq -48(%rbp),%rcx\nmovq -40(%rbp),%rbx\nmovq %rcx,<192>(%rax)\nmovq %rbx,<200>(%rax)\nmovq -32(%rbp),%rdx\nmovq %rdx,<208>(%rax)\n.LBE3:\n.LBE2:\nmovq -248(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return WordDictionary{}"}
{"src": ".LFB0:\nleaq -728(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12\nmovl $728,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L12:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $680,%rsp\nmovq %rdi,-664(%rbp)\nleaq <.LC8>(%rip),%rax\nmovl $2,%edx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovb $0,-576(%rbp)\nleaq <.LC9>(%rip),%r12\nmovl $1,%r13d\nmovq %r12,-568(%rbp)\nmovq %r13,-560(%rbp)\nmovb $1,-552(%rbp)\nleaq <.LC10>(%rip),%r10\nmovl $10,%r11d\nmovq %r10,-544(%rbp)\nmovq %r11,-536(%rbp)\nmovb $0,-528(%rbp)\nleaq <.LC11>(%rip),%r8\nmovl $30,%r9d\nmovq %r8,-520(%rbp)\nmovq %r9,-512(%rbp)\nmovb $1,-504(%rbp)\nleaq -592(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $4,-616(%rbp)\nmovq $4,-608(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC12>(%rip),%rcx\nmovl $69,%ebx\nleaq -208(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB2:\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%r13\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L11:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -432(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-448(%rbp)\n.LBE8:\n.LBB9:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-640(%rbp)\n.LBE9:\n.LBB10:\nmovq -656(%rbp),%rdx\nmovq -648(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode.isPalindrome>\nmovl %eax,%r12d\nleaq <type..struct.4.go.leetcode.s.0string.2.go.leetcode.ans.0bool.5>(%rip),%rax\nmovq %rax,-720(%rbp)\nleaq <type..struct.4.go.leetcode.s.0string.2.go.leetcode.ans.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -640(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L4\njmp .L9\n.L3:\n.LBE10:\n.LBB13:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE13:\n.LBB14:\n.LBB11:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\njmp .L6\n.L9:\n.LBB12:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.leetcode.s.0string.2.go.leetcode.ans.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE12:\nmovq -344(%rbp),%rax\nmovq %rax,-712(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-704(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovb %r12b,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovdqa -720(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -704(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC13>(%rip),%rax\nmovq %rax,-688(%rbp)\nmovq $37,-680(%rbp)\nleaq -144(%rbp),%rax\nmovq -688(%rbp),%rsi\nmovq -680(%rbp),%rdi\nmovq %rsi,%r8\nmovq %rdi,%r9\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE14:\n.LBE7:\n.LBB15:\naddq $1,%rbx\n.L2:\n.LBE15:\ncmpq %r13,%rbx\njl .L11\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC14>(%rip),%r14\nmovl $3,%r15d\nleaq -80(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "tcs := []struct {\n\ts   string\n\tans bool\n}{\n\t{\n\t\t\"STR\",\n\t\tfalse,\n\t},\n\t{\n\t\t\"STR\",\n\t\ttrue,\n\t},\n\t{\n\t\t\"STR\",\n\t\tfalse,\n\t},\n\t{\n\t\t\"STR\",\n\t\ttrue,\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, tc := range tcs {\n\tfmt.Printf(\"STR\", tc, isPalindrome(tc.s))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\nleaq -984(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L53\nmovl $984,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L53:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $936,%rsp\nmovq %rdi,-968(%rbp)\nmovq %rsi,-976(%rbp)\nmovq $0,-832(%rbp)\nmovq $0,-824(%rbp)\nmovq $0,-816(%rbp)\n.LBB2:\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\ncall <runtime.makemap_small@PLT>\nmovq %rax,-80(%rbp)\n.LBB3:\nmovq $0,-88(%rbp)\nmovq $0,-896(%rbp)\nmovq $0,-888(%rbp)\nmovq $0,-880(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nleaq -768(%rbp),%rdx\nmovq -976(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Customer.7.6.7go.day297.Drink>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE6:\njmp .L2\n.L48:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -768(%rbp),%rax\nmovq (%rax),%rsi\nmovq -760(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-784(%rbp)\n.LBE9:\n.LBB10:\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq %rsi,-88(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-896(%rbp)\nmovq %rdx,-888(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-880(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq $0,-144(%rbp)\n.LBB13:\n.LBB14:\n.LBB15:\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -880(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq -632(%rbp),%r15\nmovl $0,%ebx\n.LBE15:\njmp .L3\n.L47:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -632(%rbp),%rax\ntestq %rbx,%rbx\njs .L4\ncmpq %rax,%rbx\njge .L4\nmovq -640(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE18:\n.LBB19:\nmovq %rax,-144(%rbp)\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -144(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-216(%rbp)\nleaq -216(%rbp),%rax\nmovq (%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Drink.7.6.7go.day297.Customer>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-592(%rbp)\nmovq -600(%rbp),%r14\nleaq <1>(%r14),%rax\nmovq -592(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L5\njmp .L40\n.L4:\n.LBE21:\n.LBE20:\n.LBB25:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L5:\n.LBE25:\n.LBB26:\n.LBB24:\nmovq -608(%rbp),%rsi\nleaq -208(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %rsi,%rdx\nleaq <go.day297.Customer..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-592(%rbp)\njmp .L7\n.L40:\nmovq -608(%rbp),%rcx\nmovq -592(%rbp),%rdx\nmovq %rcx,-608(%rbp)\nmovq %rax,-600(%rbp)\nmovq %rdx,-592(%rbp)\n.L7:\nmovq -608(%rbp),%rax\nmovq %r14,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -88(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -592(%rbp),%rax\nmovq %rax,-560(%rbp)\nleaq -616(%rbp),%rax\nmovq (%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Drink.7.6.7go.day297.Customer>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq -568(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -560(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L8\n.LBB22:\nmovq -576(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L9\n.L8:\n.LBE22:\n.LBB23:\nmovq -576(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L9:\n.LBE23:\n.LBE24:\n.LBE26:\n.LBE17:\n.LBB27:\naddq $1,%rbx\n.L3:\n.LBE27:\ncmpq %r15,%rbx\njl .L47\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBE8:\n.LBB28:\nleaq -768(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L2:\n.LBE28:\nmovq -768(%rbp),%rax\ntestq %rax,%rax\njne .L48\n.LBE5:\n.LBE4:\n.LBE3:\ncmpq $0,-976(%rbp)\nje .L14\nmovq -976(%rbp),%rax\nmovq (%rax),%rax\njmp .L15\n.L14:\nmovl $0,%eax\n.L15:\nmovq %rax,-96(%rbp)\nmovq -96(%rbp),%rax\nmovl $0,%edx\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Customer.7struct.4.5>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,-104(%rbp)\n.LBB29:\n.LBB30:\njmp .L16\n.L52:\n.LBB31:\nnop\n.LBE31:\n.LBB32:\nmovq $0,-928(%rbp)\nmovq $0,-920(%rbp)\nmovq $0,-912(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-64(%rbp)\n.LBB33:\nmovq $0,-112(%rbp)\nmovq $0,-960(%rbp)\nmovq $0,-952(%rbp)\nmovq $0,-944(%rbp)\n.LBB34:\n.LBB35:\n.LBB36:\nleaq -512(%rbp),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Drink.7.6.7go.day297.Customer>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE36:\njmp .L17\n.L50:\n.LBB37:\nnop\n.LBE37:\n.LBB38:\n.LBB39:\nmovq -512(%rbp),%rax\nmovq (%rax),%rsi\nmovq -504(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-528(%rbp)\n.LBE39:\n.LBB40:\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq %rsi,-112(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-960(%rbp)\nmovq %rdx,-952(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-944(%rbp)\n.LBE40:\n.LBB41:\nmovq $0,-72(%rbp)\n.LBB42:\nmovq $0,-128(%rbp)\n.LBB43:\n.LBB44:\n.LBB45:\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -944(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -376(%rbp),%r14\nmovl $0,%ebx\n.LBE45:\njmp .L18\n.L49:\n.LBB46:\nnop\n.LBE46:\n.LBB47:\n.LBB48:\nmovq -376(%rbp),%rax\ntestq %rbx,%rbx\njs .L19\ncmpq %rax,%rbx\njge .L19\nmovq -384(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE48:\n.LBB49:\nmovq %rax,-128(%rbp)\n.LBE49:\n.LBB50:\n.LBB51:\nmovb $0,-129(%rbp)\n.LBB52:\nmovq -128(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq -360(%rbp),%rax\nmovq (%rax),%rdx\nmovq -104(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Customer.7struct.4.5>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovl %edx,%eax\nmovb %al,-129(%rbp)\n.LBE52:\nmovzbl -129(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\njne .L20\njmp .L21\n.L19:\n.LBE51:\n.LBE50:\n.LBB55:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\n.LBE55:\n.LBB56:\n.LBB54:\n.LBB53:\naddq $1,-72(%rbp)\n.L21:\n.LBE53:\n.LBE54:\n.LBE56:\n.LBE47:\n.LBB57:\naddq $1,%rbx\n.L18:\n.LBE57:\ncmpq %r14,%rbx\njl .L49\n.LBE44:\n.LBE43:\n.LBE42:\n.LBB58:\nmovq -72(%rbp),%rax\ncmpq -64(%rbp),%rax\njle .L24\n.LBB59:\nmovq -72(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,-928(%rbp)\nmovq %rdx,-920(%rbp)\nmovq -944(%rbp),%rax\nmovq %rax,-912(%rbp)\n.L24:\n.LBE59:\n.LBE58:\n.LBE41:\n.LBE38:\n.LBB60:\nleaq -512(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L17:\n.LBE60:\nmovq -512(%rbp),%rax\ntestq %rax,%rax\njne .L50\n.LBE35:\n.LBE34:\n.LBE33:\nmovq -80(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,-184(%rbp)\nleaq -184(%rbp),%rdx\nmovq (%rdx),%rdx\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Drink.7.6.7go.day297.Customer>(%rip),%rdi\ncall <runtime.mapdelete_fast64@PLT>\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -344(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -336(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L27\n.LBB61:\nmovq -352(%rbp),%rsi\nleaq -176(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <go.day297.Drink..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-848(%rbp)\n.LBE61:\njmp .L28\n.L27:\n.LBB62:\nmovq -352(%rbp),%rcx\nmovq -336(%rbp),%rdx\nmovq %rcx,-864(%rbp)\nmovq %rax,-856(%rbp)\nmovq %rdx,-848(%rbp)\n.L28:\n.LBE62:\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -352(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\n.LBB63:\nmovq $0,-120(%rbp)\n.LBB64:\n.LBB65:\n.LBB66:\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -912(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%r14\nmovl $0,%ebx\n.LBE66:\njmp .L29\n.L51:\n.LBB67:\nnop\n.LBE67:\n.LBB68:\n.LBB69:\nmovq -312(%rbp),%rax\ntestq %rbx,%rbx\njs .L30\ncmpq %rax,%rbx\njge .L30\nmovq -320(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE69:\n.LBB70:\nmovq %rax,-120(%rbp)\n.LBE70:\n.LBB71:\n.LBB72:\nmovq -120(%rbp),%rax\nmovq %rax,-288(%rbp)\nleaq -288(%rbp),%rax\nmovq (%rax),%rdx\nmovq -104(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6go.day297.Customer.7struct.4.5>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\n.LBE72:\n.LBE71:\n.LBE68:\n.LBB74:\naddq $1,%rbx\njmp .L29\n.L30:\n.LBE74:\n.LBB75:\n.LBB73:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\n.LBE73:\n.LBE75:\ncmpq %r14,%rbx\njl .L51\n.L16:\n.LBE65:\n.LBE64:\n.LBE63:\n.LBE32:\ncmpq $0,-104(%rbp)\nje .L33\nmovq -104(%rbp),%rax\nmovq (%rax),%rax\njmp .L34\n.L33:\nmovl $0,%eax\n.L34:\ncmpq -96(%rbp),%rax\njl .L52\n.LBE30:\n.LBE29:\nleaq <go.day297.LazyBartender..func1>(%rip),%rcx\nleaq -864(%rbp),%rdx\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -224(%rbp),%rax\nmovq %rcx,(%rax)\nmovq %rdx,<8>(%rax)\nmovq -224(%rbp),%rbx\nleaq <type...6.7go.day297.Drink>(%rip),%r12\nleaq <type...6.7go.day297.Drink>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L37\n.LBB76:\nmovq -280(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -256(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE76:\njmp .L38\n.L37:\n.LBB77:\nmovq -280(%rbp),%rax\nleaq -272(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7go.day297.Drink>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L38:\n.LBE77:\nmovq -280(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\n.LBB78:\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq -968(%rbp),%rcx\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -816(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE78:\n.LBE2:\nmovq -968(%rbp),%rax\naddq $936,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var drinks []Drink\ninverted := make(map[Drink][]Customer)\nfor cust, favorites := range prefs {\n\tfor _, drink := range favorites {\n\t\tinverted[drink] = append(inverted[drink], cust)\n\t}\n}\ntotalCustomers := len(prefs)\nserved := make(map[Customer]struct{}, totalCustomers)\nfor len(served) < totalCustomers {\n\tvar largest []Customer\n\tvar largestDrink Drink\n\tvar largestIncrease int\n\tfor drink, custs := range inverted {\n\t\tvar newlyServed int\n\t\tfor _, cust := range custs {\n\t\t\tif _, found := served[cust]; !found {\n\t\t\t\tnewlyServed++\n\t\t\t}\n\t\t}\n\t\tif newlyServed > largestIncrease {\n\t\t\tlargestIncrease = newlyServed\n\t\t\tlargestDrink = drink\n\t\t\tlargest = custs\n\t\t}\n\t}\n\tdelete(inverted, largestDrink)\n\tdrinks = append(drinks, largestDrink)\n\tfor _, cust := range largest {\n\t\tserved[cust] = struct{}{}\n\t}\n}\nsort.Slice(drinks, func(i, j int) bool {\n\treturn drinks[i] < drinks[j]\n})\nreturn drinks"}
{"src": "cmpq %fs:112,%rsp\njnb .L16\nmovl $184,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\nsubq $144,%rsp\nmovl $2,%esi\nleaq <main.wg>(%rip),%rdi\ncall <sync.WaitGroup.Add@PLT>\n.LBB6:\nleaq <type..struct.4.4x.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nleaq <main.main..thunk0>(%rip),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <__go_go@PLT>\n.LBE6:\n.LBB7:\nleaq <type..struct.4.4x.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nleaq <main.main..thunk1>(%rip),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <__go_go@PLT>\n.LBE7:\nleaq <main.wg>(%rip),%rdi\ncall <sync.WaitGroup.Wait@PLT>\nleaq <string..d>(%rip),%r12\nleaq <go..C8>(%rip),%r13\nleaq <int64..d>(%rip),%r14\nleaq <int64..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq <main.counter>(%rip),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,%r15\nmovq %r12,-128(%rbp)\nmovq %r13,-120(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq -128(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq -32(%rbp),%rsp\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "wg.Add(2)\ngoincCounter(1)\ngoincCounter(2)\nwg.Wait()\nfmt.Println(\"STR\", counter)"}
{"src": ".LFB345:\nleaq -888(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L9131\nmovl $888,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL428:\nret\n.L9131:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $848,%rsp\nmovq %rdi,-872(%rbp)\nmovq %rsi,-880(%rbp)\nmovq $0,-768(%rbp)\nmovq $0,-760(%rbp)\nmovq $0,-752(%rbp)\n.LBB7314:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-48(%rbp)\ncall <runtime.makemap_small@PLT>\nmovq %rax,-56(%rbp)\n.LBB7315:\nmovq $0,-40(%rbp)\n.LBB7316:\njmp .L9078\n.L9126:\n.LBB7317:\nnop\n.LBE7317:\n.LBB7318:\n.LBB7319:\nmovq -40(%rbp),%rax\nmovq %rax,-744(%rbp)\nmovl $0,%edx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-736(%rbp)\nmovq $0,-728(%rbp)\nmovq $0,-720(%rbp)\nleaq -744(%rbp),%rax\nmovq (%rax),%rdx\nmovq -48(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq -728(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -720(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L9079\n.LBB7320:\nmovq -736(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L9080\n.L9079:\n.LBE7320:\n.LBB7321:\nmovq -736(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L9080:\n.LBE7321:\n.LBE7319:\n.LBB7322:\nmovq -40(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovl $0,%ebx\nleaq -712(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %rbx,(%rax)\n.LBE7322:\n.LBE7318:\n.LBB7323:\naddq $1,-40(%rbp)\n.L9078:\n.LBE7323:\nmovq -40(%rbp),%rax\ncmpq -880(%rbp),%rax\njl .L9126\n.LBE7316:\n.LBE7315:\n.LBB7324:\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\n.LBB7325:\n.LBB7326:\n.LBB7327:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq -664(%rbp),%r14\nmovl $0,%ebx\n.LBE7327:\njmp .L9083\n.L9127:\n.LBB7328:\nnop\n.LBE7328:\n.LBB7329:\n.LBB7330:\nmovq -664(%rbp),%rax\ntestq %rbx,%rbx\njs .L9084\ncmpq %rax,%rbx\njge .L9084\nmovq -672(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-688(%rbp)\n.LBE7330:\n.LBB7331:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -624(%rbp),%rax\nmovq %rax,-848(%rbp)\n.LBE7331:\n.LBB7332:\n.LBB7333:\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq -600(%rbp),%rax\ncmpq $1,%rax\njg .L9085\njmp .L9121\n.L9084:\n.LBE7333:\n.LBE7332:\n.LBB7339:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9121:\n.LBE7339:\n.LBB7340:\n.LBB7336:\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9085:\nmovq -608(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-584(%rbp)\nmovq -856(%rbp),%rax\ncmpq $1,%rax\njg .L9087\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9087:\nmovq -864(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-232(%rbp)\nleaq -232(%rbp),%rax\nmovq (%rax),%rdx\nmovq -48(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq %rax,%rcx\nmovq -856(%rbp),%rax\ntestq %rax,%rax\njg .L9088\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9088:\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-560(%rbp)\nmovq -568(%rbp),%r12\nmovq -864(%rbp),%rax\nmovq (%rax),%r13\nleaq <1>(%r12),%rax\nmovq -560(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L9089\nmovq -576(%rbp),%rsi\nleaq -224(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-560(%rbp)\njmp .L9090\n.L9089:\nmovq -576(%rbp),%rcx\nmovq -560(%rbp),%rdx\nmovq %rcx,-576(%rbp)\nmovq %rax,-568(%rbp)\nmovq %rdx,-560(%rbp)\n.L9090:\nmovq -576(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r13,(%rax)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -560(%rbp),%rax\nmovq %rax,-528(%rbp)\nleaq -584(%rbp),%rax\nmovq (%rax),%rdx\nmovq -48(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq -536(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -528(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L9091\n.LBB7334:\nmovq -544(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L9092\n.L9091:\n.LBE7334:\n.LBB7335:\nmovq -544(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L9092:\n.LBE7335:\n.LBE7336:\n.LBB7337:\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -848(%rbp),%rax\nmovq %rax,-496(%rbp)\n.LBB7338:\nmovq -504(%rbp),%rax\ntestq %rax,%rax\njg .L9093\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9093:\nmovq -512(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-488(%rbp)\nmovq -504(%rbp),%rax\ntestq %rax,%rax\njg .L9094\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9094:\nmovq -512(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-200(%rbp)\nleaq -200(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nleaq <1>(%rax),%r12\nleaq -488(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r12,(%rax)\n.LBE7338:\n.LBE7337:\n.LBE7340:\n.LBE7329:\n.LBB7341:\naddq $1,%rbx\n.L9083:\n.LBE7341:\ncmpq %r14,%rbx\njl .L9127\n.LBE7326:\n.LBE7325:\n.LBE7324:\nleaq -480(%rbp),%rax\nmovq %rax,-800(%rbp)\nmovq $0,-792(%rbp)\nmovq $0,-784(%rbp)\n.LBB7342:\nmovq $0,-64(%rbp)\nmovq $0,-72(%rbp)\n.LBB7343:\n.LBB7344:\n.LBB7345:\nleaq -480(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE7345:\njmp .L9097\n.L9128:\n.LBB7346:\nnop\n.LBE7346:\n.LBB7347:\n.LBB7348:\nmovq -480(%rbp),%rax\nmovq (%rax),%rdx\nmovq -472(%rbp),%rax\nmovq (%rax),%rax\n.LBE7348:\n.LBB7349:\nmovq %rdx,-64(%rbp)\nmovq %rax,-72(%rbp)\n.LBE7349:\n.LBB7350:\n.LBB7351:\ncmpq $0,-72(%rbp)\njne .L9098\n.LBB7352:\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -376(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -368(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L9099\n.LBB7353:\nmovq -384(%rbp),%rsi\nleaq -192(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-784(%rbp)\n.LBE7353:\njmp .L9100\n.L9099:\n.LBB7354:\nmovq -384(%rbp),%rcx\nmovq -368(%rbp),%rdx\nmovq %rcx,-800(%rbp)\nmovq %rax,-792(%rbp)\nmovq %rdx,-784(%rbp)\n.L9100:\n.LBE7354:\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -384(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -64(%rbp),%rax\nmovq %rax,(%rdx)\n.L9098:\n.LBE7352:\n.LBE7351:\n.LBE7350:\n.LBE7347:\n.LBB7355:\nleaq -480(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L9097:\n.LBE7355:\nmovq -480(%rbp),%rax\ntestq %rax,%rax\njne .L9128\n.LBE7344:\n.LBE7343:\n.LBE7342:\nmovl $0,%edx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-832(%rbp)\nmovq $0,-824(%rbp)\nmovq $0,-816(%rbp)\n.LBB7356:\n.LBB7357:\njmp .L9103\n.L9130:\n.LBB7358:\nnop\n.LBE7358:\n.LBB7359:\nmovq -792(%rbp),%rax\ntestq %rax,%rax\njg .L9104\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L9104:\nmovq -800(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-80(%rbp)\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -816(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -344(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -336(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L9105\n.LBB7360:\nmovq -352(%rbp),%rsi\nleaq -160(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-816(%rbp)\n.LBE7360:\njmp .L9106\n.L9105:\n.LBB7361:\nmovq -352(%rbp),%rcx\nmovq -336(%rbp),%rdx\nmovq %rcx,-832(%rbp)\nmovq %rax,-824(%rbp)\nmovq %rdx,-816(%rbp)\n.L9106:\n.LBE7361:\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -816(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -352(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -80(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -784(%rbp),%rax\ntestq %rax,%rax\njg .L9107\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L9107:\nmovq -800(%rbp),%rdx\nmovq -784(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq -792(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -784(%rbp),%rax\nsubq $1,%rax\nmovq %rcx,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq %rax,-784(%rbp)\n.LBB7362:\nmovq $0,-88(%rbp)\n.LBB7363:\nmovq -80(%rbp),%rax\nmovq %rax,-136(%rbp)\nleaq -136(%rbp),%rax\nmovq (%rax),%rdx\nmovq -48(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-304(%rbp)\n.LBB7364:\n.LBB7365:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -280(%rbp),%r13\nmovl $0,%ebx\n.LBE7365:\njmp .L9108\n.L9129:\n.LBB7366:\nnop\n.LBE7366:\n.LBB7367:\n.LBB7368:\nmovq -280(%rbp),%rax\ntestq %rbx,%rbx\njs .L9109\ncmpq %rax,%rbx\njge .L9109\nmovq -288(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE7368:\n.LBB7369:\nmovq %rax,-88(%rbp)\n.LBE7369:\n.LBB7370:\n.LBB7371:\nmovq -88(%rbp),%rax\nmovq %rax,-264(%rbp)\nmovq -88(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -128(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nleaq -1(%rax),%r12\nleaq -264(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r12,(%rax)\n.LBE7371:\n.LBB7372:\nmovq -88(%rbp),%rax\nmovq %rax,-120(%rbp)\nleaq -120(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\ntestq %rax,%rax\nje .L9110\njmp .L9111\n.L9109:\n.LBE7372:\n.LBE7370:\n.LBB7377:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9110:\n.LBE7377:\n.LBB7378:\n.LBB7376:\n.LBB7373:\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -240(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L9112\n.LBB7374:\nmovq -256(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-784(%rbp)\n.LBE7374:\njmp .L9113\n.L9112:\n.LBB7375:\nmovq -256(%rbp),%rcx\nmovq -240(%rbp),%rdx\nmovq %rcx,-800(%rbp)\nmovq %rax,-792(%rbp)\nmovq %rdx,-784(%rbp)\n.L9113:\n.LBE7375:\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -784(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -256(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -88(%rbp),%rax\nmovq %rax,(%rdx)\n.L9111:\n.LBE7373:\n.LBE7376:\n.LBE7378:\n.LBE7367:\n.LBB7379:\naddq $1,%rbx\n.L9108:\n.LBE7379:\ncmpq %r13,%rbx\njl .L9129\n.L9103:\n.LBE7364:\n.LBE7363:\n.LBE7362:\n.LBE7359:\nmovq -792(%rbp),%rax\ntestq %rax,%rax\njg .L9130\n.LBE7357:\n.LBE7356:\n.LBB7380:\nmovq -824(%rbp),%rax\ncmpq %rax,-880(%rbp)\njle .L9117\n.LBB7381:\n.LBB7382:\nmovl $0,%edx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-768(%rbp)\nmovq $0,-760(%rbp)\nmovq $0,-752(%rbp)\nmovq -872(%rbp),%rcx\nmovq -768(%rbp),%rax\nmovq -760(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -752(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L9077\n.L9117:\n.LBE7382:\n.LBE7381:\n.LBE7380:\n.LBB7383:\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,-768(%rbp)\nmovq %rdx,-760(%rbp)\nmovq -816(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovq -872(%rbp),%rcx\nmovq -768(%rbp),%rax\nmovq -760(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -752(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L9077:\n.LBE7383:\n.LBE7314:\nmovq -872(%rbp),%rax\naddq $848,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "graph := make(map[int][]int)\ninCounts := make(map[int]int)\nfor i := 0; i < numCourses; i++ {\n\tgraph[i] = make([]int, 0)\n\tinCounts[i] = 0\n}\nfor _, pair := range prerequisites {\n\tgraph[pair[1]] = append(graph[pair[1]], pair[0])\n\tinCounts[pair[0]]++\n}\nqueue := make([]int, 0)\nfor k, count := range inCounts {\n\tif count == 0 {\n\t\tqueue = append(queue, k)\n\t}\n}\norder := make([]int, 0)\nfor len(queue) > 0 {\n\tcourse := queue[0]\n\torder = append(order, course)\n\tqueue = queue[1:]\n\tfor _, neighbor := range graph[course] {\n\t\tinCounts[neighbor]--\n\t\tif inCounts[neighbor] == 0 {\n\t\t\tqueue = append(queue, neighbor)\n\t\t}\n\t}\n}\nif len(order) < numCourses {\n\treturn make([]int, 0)\n}\nreturn order"}
{"src": ".LFB0:\nleaq -392(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L18\nmovl $392,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $352,%rsp\nmovq %rdi,-376(%rbp)\nleaq <type...61x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-336(%rbp)\nleaq <.LC23>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-256(%rbp)\nmovq %r13,-248(%rbp)\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-320(%rbp)\nmovq -320(%rbp),%rax\nmovq $-1,(%rax)\nmovq $2,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $-4,<24>(%rax)\nmovq -320(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $4,-296(%rbp)\nmovq $4,-288(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq $1,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-280(%rbp)\nmovq $1,-272(%rbp)\nmovq $1,-264(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -328(%rbp),%rax\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -328(%rbp),%rax\nleaq -304(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -328(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $2,-232(%rbp)\nmovq $2,-224(%rbp)\nmovq $2,-216(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -336(%rbp),%rax\nmovq -256(%rbp),%rcx\nmovq -248(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -240(%rbp),%rcx\nmovq -232(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -224(%rbp),%rcx\nmovq -216(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -336(%rbp),%rax\nleaq -256(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -336(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $1,-360(%rbp)\nmovq $1,-352(%rbp)\n.LBB6:\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%r13\nmovl $0,%ebx\n.LBE9:\njmp .L6\n.L17:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L7\ncmpq %rax,%rbx\njge .L7\nmovq -160(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-208(%rbp)\nmovq %rdi,-200(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-192(%rbp)\nmovq %rdi,-184(%rbp)\nmovq <40>(%rax),%rdx\nmovq <32>(%rax),%rax\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\n.LBE12:\n.LBB13:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -40(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L8\njmp .L15\n.L7:\n.LBE13:\n.LBB16:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE16:\n.LBB17:\n.LBB14:\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\njmp .L10\n.L15:\n.LBE14:\n.LBB15:\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE15:\n.LBE17:\n.LBB18:\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -40(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq %r14,-64(%rbp)\nmovq %r12,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L11\n.LBB19:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE19:\njmp .L12\n.L11:\n.LBB20:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7.6.7int.2.go.Solution.expect.0int.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L12:\n.LBE20:\nmovq -72(%rbp),%rcx\nmovq -40(%rbp),%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdx\nmovq -376(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE18:\n.LBE11:\n.LBB21:\naddq $1,%rbx\n.L6:\n.LBE21:\ncmpq %r13,%rbx\njl .L17\n.LBE8:\n.LBE7:\n.LBE6:\naddq $352,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs [][]int\n\texpect int\n}{\n\t{\"STR\", [][]int{{-1, 2, 1, -4}, {1}}, 2},\n}\nfor _, c := range cases {\n\tt.Run(c.name, func(t *testing.T) {\n\t\tret := threeSumClosest(c.inputs[0], c.inputs[1][0])\n\t\tif !reflect.DeepEqual(ret, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, ret, c.inputs)\n\t\t}\n\t})\n}"}
{"src": ".LFB0:\nleaq -952(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $952,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $904,%rsp\nmovq %rdi,-888(%rbp)\nleaq <type...63x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-784(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-776(%rbp)\nmovq -776(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq -776(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovq $2,-744(%rbp)\nmovq $2,-736(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-768(%rbp)\nmovq -768(%rbp),%rax\nmovq $2,(%rax)\nmovq $3,<8>(%rax)\nmovq -768(%rbp),%rax\nmovq %rax,-728(%rbp)\nmovq $2,-720(%rbp)\nmovq $2,-712(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-760(%rbp)\nmovq -760(%rbp),%rax\nmovq $3,(%rax)\nmovq $2,<8>(%rax)\nmovq -760(%rbp),%rax\nmovq %rax,-704(%rbp)\nmovq $2,-696(%rbp)\nmovq $2,-688(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -784(%rbp),%rax\nmovq -752(%rbp),%rcx\nmovq -744(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -736(%rbp),%rcx\nmovq -728(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -720(%rbp),%rcx\nmovq -712(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -704(%rbp),%rcx\nmovq -696(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -688(%rbp),%rdx\nmovq %rdx,<64>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -784(%rbp),%rax\nleaq -752(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -784(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $3,-552(%rbp)\nmovq $3,-544(%rbp)\nmovb $1,-536(%rbp)\nleaq <type...63x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-672(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-664(%rbp)\nmovq -664(%rbp),%rax\nmovq $1,(%rax)\nmovq $1,<8>(%rax)\nmovq -664(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq $2,-632(%rbp)\nmovq $2,-624(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-656(%rbp)\nmovq -656(%rbp),%rax\nmovq $2,(%rax)\nmovq $2,<8>(%rax)\nmovq -656(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq $2,-608(%rbp)\nmovq $2,-600(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq $3,(%rax)\nmovq $3,<8>(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $2,-584(%rbp)\nmovq $2,-576(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -672(%rbp),%rax\nmovq -640(%rbp),%rcx\nmovq -632(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -624(%rbp),%rcx\nmovq -616(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -608(%rbp),%rcx\nmovq -600(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -592(%rbp),%rcx\nmovq -584(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -576(%rbp),%rdx\nmovq %rdx,<64>(%rax)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -672(%rbp),%rax\nleaq -640(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -672(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $3,-520(%rbp)\nmovq $3,-512(%rbp)\nmovb $0,-504(%rbp)\nleaq -560(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq $2,-808(%rbp)\nmovq $2,-800(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC19>(%rip),%rax\nmovq %rax,-912(%rbp)\nmovq $70,-904(%rbp)\nleaq -208(%rbp),%rax\nmovq -912(%rbp),%rcx\nmovq -904(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB6:\nmovq $0,-880(%rbp)\nmovq $0,-872(%rbp)\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -800(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-912(%rbp)\nmovl $0,%ebx\n.LBE9:\njmp .L6\n.L15:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L7\ncmpq %rax,%rbx\njge .L7\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE12:\n.LBB13:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-880(%rbp)\nmovq %rdx,-872(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\n.LBE13:\n.LBB14:\nmovzbl -856(%rbp),%eax\nmovb %al,-817(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\nmovq -864(%rbp),%rax\nmovq %rax,-832(%rbp)\nsubq $8,%rsp\npushq -832(%rbp)\npushq -840(%rbp)\npushq -848(%rbp)\ncall <go.leetcode.isBoomerang>\naddq $32,%rsp\nmovb %al,-889(%rbp)\nleaq <go.leetcode..go.leetcode.para1037..d>(%rip),%rax\nmovq %rax,-944(%rbp)\nleaq <go.leetcode..go.leetcode.para1037..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -848(%rbp),%rax\nmovq -840(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -832(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L8\njmp .L13\n.L7:\n.LBE14:\n.LBB17:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE17:\n.LBB18:\n.LBB15:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE15:\njmp .L10\n.L13:\n.LBB16:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para1037..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE16:\nmovq -344(%rbp),%rax\nmovq %rax,-936(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-928(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovzbl -889(%rbp),%esi\nmovb %sil,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-920(%rbp)\nmovdqa -944(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -928(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC20>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE18:\n.LBE11:\n.LBB19:\naddq $1,%rbx\n.L6:\n.LBE19:\ncmpq -912(%rbp),%rbx\njl .L15\n.LBE8:\n.LBE7:\n.LBE6:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1037{\n\t{\n\t\tpara1037{[][]int{{1, 2}, {2, 3}, {3, 2}}},\n\t\tans1037{true},\n\t},\n\t{\n\t\tpara1037{[][]int{{1, 1}, {2, 2}, {3, 3}}},\n\t\tans1037{false},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1037, q.para1037\n\tfmt.Printf(\"STR\", p, isBoomerang(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L24\nmovl $216,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L24:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $168,%rsp\nmovq $0,-72(%rbp)\n.LBB2:\nleaq <go.problem0820.minimumLengthEncoding..func1>(%rip),%rdx\nleaq <16>(%rbp),%rcx\nmovq $0,-160(%rbp)\nmovq $0,-152(%rbp)\nleaq -160(%rbp),%rax\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq %rdx,(%rax)\nmovq %rcx,<8>(%rax)\nmovq -136(%rbp),%rbx\nleaq <type...6.7string>(%rip),%r12\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-176(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -200(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rbx\nleaq <.LC3>(%rip),%r14\nmovl $0,%r15d\nmovq %r14,%r12\nmovq %r15,%r13\nleaq <1>(%rbx),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L4\n.LBB5:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rbp)\nmovq %rdx,<24>(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,<32>(%rbp)\n.LBE5:\njmp .L5\n.L4:\n.LBB6:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,<16>(%rbp)\nmovq %rax,<24>(%rbp)\nmovq %rdx,<32>(%rbp)\n.L5:\n.LBE6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L6\n.LBB7:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\n.LBE7:\njmp .L7\n.L6:\n.LBB8:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L7:\n.LBE8:\nmovq $0,-56(%rbp)\nmovq $1,-64(%rbp)\n.LBB9:\n.LBB10:\njmp .L8\n.L23:\n.LBB11:\nnop\n.LBE11:\n.LBB12:\n.LBB13:\nmovq <24>(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L9\ncmpq %rax,-64(%rbp)\njl .L19\n.L9:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq -64(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L11\ncmpq %rdx,%rax\njl .L20\n.L11:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq <16>(%rbp),%rdx\nsalq $4,%rax\naddq %rdx,%rax\nmovq <16>(%rbp),%rcx\nmovq -64(%rbp),%rdx\nsalq $4,%rdx\naddq %rdx,%rcx\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq (%rcx),%rdi\nmovq <8>(%rcx),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <go.problem0820.endWith>\nxorl $1,%eax\ntestb %al,%al\nje .L13\n.LBB14:\nmovq -64(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L14\ncmpq %rdx,%rax\njl .L21\n.L14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq <16>(%rbp),%rdx\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq -56(%rbp),%rax\naddq %rdx,%rax\naddq $1,%rax\nmovq %rax,-56(%rbp)\n.L13:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBB15:\naddq $1,-64(%rbp)\n.L8:\n.LBE15:\nmovq <24>(%rbp),%rax\ncmpq %rax,-64(%rbp)\njl .L23\n.LBE10:\n.LBE9:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\n.LBE16:\n.LBE2:\naddq $168,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "sort.Slice(words, func(i, j int) bool {\n\tcuri := len(words[i])\n\tcurj := len(words[j])\n\tfor curi > 0 && curj > 0 {\n\t\tcuri--\n\t\tcurj--\n\t\tif words[i][curi] == words[j][curj] {\n\t\t\tcontinue\n\t\t}\n\t\tif words[i][curi] > words[j][curj] {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\treturn curi == 0\n})\nwords = append(words, \"STR\")\nres, i := 0, 1\nfor ; i < len(words); i++ {\n\tif !endWith(words[i], words[i-1]) {\n\t\tres += len(words[i-1]) + 1\n\t}\n}\nreturn res"}
{"src": ".LFB0:\nleaq -504(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $504,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $456,%rsp\nleaq <.LC4>(%rip),%rax\nmovl $5,%edx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <main.badLongestPalindrome>\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-408(%rbp)\nmovdqa -496(%rbp),%xmm0\nmovups %xmm0,-400(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -408(%rbp),%rcx\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -408(%rbp),%rax\nleaq -400(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -408(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovdqa -480(%rbp),%xmm1\nmovups %xmm1,-384(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nleaq -208(%rbp),%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-416(%rbp)\nleaq <.LC4>(%rip),%r14\nmovl $5,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <main.goodLongestPalindrome>\nmovq %rax,%r14\nmovq %rdx,%r15\nleaq <string..d>(%rip),%rax\nmovq %rax,-464(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq %r14,-336(%rbp)\nmovq %r15,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -344(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovdqa -464(%rbp),%xmm2\nmovups %xmm2,-320(%rbp)\nleaq -320(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nleaq -144(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\nleaq <.LC4>(%rip),%r12\nmovl $5,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <main.bestLongestPalindrome>\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <string..d>(%rip),%rax\nmovq %rax,-448(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq %r12,-272(%rbp)\nmovq %r13,-264(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB6:\nmovq -280(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE6:\njmp .L7\n.L6:\n.LBB7:\nmovq -280(%rbp),%rax\nleaq -272(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE7:\nmovq -280(%rbp),%rax\nmovq %rax,-440(%rbp)\nmovdqa -448(%rbp),%xmm3\nmovups %xmm3,-256(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-288(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "fmt.Println(badLongestPalindrome(\"STR\"))\nfmt.Println(goodLongestPalindrome(\"STR\"))\nfmt.Println(bestLongestPalindrome(\"STR\"))"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L22\nmovl $24,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\nsubq $16,%rsp\nmovb $0,-9(%rbp)\n.LBB2:\n.LBB3:\nmovq $0,-8(%rbp)\n.LBB4:\njmp .L2\n.L21:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L3\ncmpq %rax,-8(%rbp)\njl .L16\n.L3:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-8(%rbp)\nje .L20\n.LBE7:\n.LBB9:\n.LBB10:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L7\ncmpq %rax,-8(%rbp)\njl .L17\n.L7:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -8(%rbp),%rdx\naddq $1,%rdx\ncmpq %rdx,%rax\nsete %al\ntestb %al,%al\nje .L9\n.LBB11:\nmovq -8(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L10\ncmpq %rdx,%rax\njl .L18\n.L10:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-8(%rbp)\nsete %al\n.L9:\n.LBE11:\n.LBE10:\ntestb %al,%al\nje .L12\n.LBB12:\naddq $1,-8(%rbp)\n.LBE12:\njmp .L6\n.L12:\n.LBB13:\n.LBB14:\nmovb $0,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L13\n.L20:\n.LBE14:\n.LBE13:\n.LBE9:\n.LBB15:\n.LBB8:\nnop\n.L6:\n.LBE8:\n.LBE15:\n.LBE6:\n.LBB16:\naddq $1,-8(%rbp)\n.L2:\n.LBE16:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-8(%rbp)\njl .L21\n.LBE4:\n.LBE3:\n.LBB17:\nmovb $1,-9(%rbp)\nmovzbl -9(%rbp),%eax\n.L13:\n.LBE17:\n.LBE2:\nleave\nret", "tgt": "for i := 0; i < len(A)-1; i++ {\n\tif A[i] == i {\n\t\tcontinue\n\t}\n\tif A[i] == i+1 && A[i+1] == i {\n\t\ti++\n\t} else {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": "cmpq %fs:112,%rsp\njnb .L179\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL11:\nret\n.L179:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovl $0,-36(%rbp)\nmovl $0,-40(%rbp)\n.LBB154:\nmovl $0,-4(%rbp)\n.LBB155:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-24(%rbp)\n.LBB156:\njmp .L164\n.L177:\n.LBB157:\nnop\n.LBE157:\n.LBB158:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L165\ncmpq %rax,-24(%rbp)\njl .L174\n.L165:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L174:\nmovl -4(%rbp),%eax\nimull $16777619,%eax,%ecx\nmovq <16>(%rbp),%rsi\nmovq -24(%rbp),%rax\naddq %rsi,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\naddl %ecx,%eax\nmovl %eax,-4(%rbp)\n.LBE158:\n.LBB159:\nsubq $1,-24(%rbp)\n.L164:\n.LBE159:\ncmpq $0,-24(%rbp)\njns .L177\n.LBE156:\n.LBE155:\nmovl $1,-8(%rbp)\nmovl $16777619,-12(%rbp)\n.LBB160:\nmovq <24>(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB161:\njmp .L169\n.L178:\n.LBB162:\nnop\n.LBE162:\n.LBB163:\n.LBB164:\nmovq -32(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\nje .L170\n.LBB165:\nmovl -8(%rbp),%eax\nimull -12(%rbp),%eax\nmovl %eax,-8(%rbp)\n.L170:\n.LBE165:\n.LBE164:\nmovl -12(%rbp),%eax\nimull %eax,%eax\nmovl %eax,-12(%rbp)\n.LBE163:\n.LBB166:\nsarq -32(%rbp)\n.L169:\n.LBE166:\ncmpq $0,-32(%rbp)\njg .L178\n.LBE161:\n.LBE160:\n.LBB167:\n.LBB168:\nmovl -4(%rbp),%ecx\nmovl -8(%rbp),%eax\nmovl %ecx,-36(%rbp)\nmovl %eax,-40(%rbp)\n.LBE168:\nmovl -36(%rbp),%eax\nmovabsq $-4294967296,%rcx\nandq %rcx,%rdx\norq %rdx,%rax\nmovq %rax,%rdx\nmovl -40(%rbp),%eax\nsalq $32,%rax\nmovl %edx,%edx\norq %rdx,%rax\nmovq %rax,%rdx\nmovq %rdx,%rax\n.LBE167:\n.LBE154:\nleave\nret", "tgt": "hash := uint32(0)\nfor i := len(sep) - 1; i >= 0; i-- {\n\thash = hash*PrimeRK + uint32(sep[i])\n}\nvar pow, sq uint32 = 1, PrimeRK\nfor i := len(sep); i > 0; i >>= 1 {\n\tif i&1 != 0 {\n\t\tpow *= sq\n\t}\n\tsq *= sq\n}\nreturn hash, pow"}
{"src": ".LFB2:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L19\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB14:\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\n.LBB15:\n.LBB16:\n.LBB17:\nmovq <go.day343.testcases>(%rip),%rax\nmovq <8+go.day343.testcases>(%rip),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <16+go.day343.testcases>(%rip),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovl $0,%ebx\n.LBE17:\njmp .L9\n.L18:\n.LBB18:\nnop\n.LBE18:\n.LBB19:\n.LBB20:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L10\ncmpq %rax,%rbx\njge .L10\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\n.LBE20:\n.LBB21:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBE21:\n.LBB22:\n.LBB23:\nmovq -256(%rbp),%rdx\nmovq -264(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.day343.SumBSTRange>\nmovq %rax,-56(%rbp)\nmovq -248(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L11\njmp .L12\n.L10:\n.LBE23:\n.LBE22:\n.LBB28:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE28:\n.LBB29:\n.LBB27:\n.LBB24:\nleaq <int..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB25:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE25:\njmp .L14\n.L13:\n.LBB26:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE26:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC19>(%rip),%r12\nmovl $19,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -280(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L12:\n.LBE24:\n.LBE27:\n.LBE29:\n.LBE19:\n.LBB30:\naddq $1,%rbx\n.L9:\n.LBE30:\ncmpq -288(%rbp),%rbx\njl .L18\n.LBE16:\n.LBE15:\n.LBE14:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif sum := SumBSTRange(tc.root, tc.a, tc.b); sum != tc.expected {\n\t\tt.Errorf(\"STR\", tc.expected, sum)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\nsubq $112,%rsp\nmovl $105000,%edx\nmovl $105000,%esi\nleaq <bool..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-112(%rbp)\nmovq $105000,-104(%rbp)\nmovq $105000,-96(%rbp)\n.LBB2:\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovl $1,%ecx\nmovl $1,%edx\nmovq -72(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq -80(%rbp),%rax\nmovb %cl,(%rax)\nmovq -40(%rbp),%rax\ncmpq $1,%rax\njg .L3\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L3:\nmovq -48(%rbp),%rax\naddq $1,%rax\nmovb %dl,(%rax)\n.LBE2:\nmovq $2,-8(%rbp)\nmovq $3,-16(%rbp)\nmovq $0,-24(%rbp)\n.L18:\n.LBB3:\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -16(%rbp),%rax\naddq %rax,%rax\nmovq %rax,-24(%rbp)\n.LBB7:\njmp .L4\n.L23:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -104(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L5\ncmpq %rax,-24(%rbp)\njl .L19\n.L5:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq -112(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovb $1,(%rax)\n.LBE9:\n.LBB10:\nmovq -16(%rbp),%rax\naddq %rax,-24(%rbp)\n.L4:\n.LBE10:\nmovq -104(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L23\n.LBE7:\n.LBE6:\n.LBB11:\nmovq -16(%rbp),%rax\naddq $2,%rax\nmovq %rax,-24(%rbp)\n.LBB12:\njmp .L9\n.L24:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\naddq $2,-24(%rbp)\n.L9:\n.LBE14:\n.LBB15:\nmovq -104(%rbp),%rax\ncmpq %rax,-24(%rbp)\nsetl %al\ntestb %al,%al\nje .L10\n.LBB16:\nmovq -104(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L11\ncmpq %rax,-24(%rbp)\njl .L21\n.L11:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -112(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\n.L10:\n.LBE16:\n.LBE15:\ntestb %al,%al\njne .L24\n.LBE12:\n.LBE11:\n.LBB17:\nmovq -104(%rbp),%rax\ncmpq %rax,-24(%rbp)\njge .L25\n.LBB18:\nmovq -24(%rbp),%rax\nmovq %rax,-16(%rbp)\naddq $1,-8(%rbp)\n.LBB19:\ncmpq $10001,-8(%rbp)\njne .L18\n.LBB20:\ncall <runtime.printlock@PLT>\nmovq -16(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\njmp .L1\n.L25:\n.LBE20:\n.LBE19:\n.LBE18:\n.LBB21:\nnop\n.L1:\n.LBE21:\n.LBE17:\n.LBE5:\n.LBE4:\n.LBE3:\nleave\nret", "tgt": "arr := make([]bool, 105000)\narr[0], arr[1] = true, true\ncount, prime := 2, 3\nvar k int\nfor {\n\tfor k = 2 * prime; k < len(arr); k += prime {\n\t\tarr[k] = true\n\t}\n\tfor k = prime + 2; k < len(arr) && arr[k]; k += 2 {\n\t}\n\tif k < len(arr) {\n\t\tprime = k\n\t\tcount++\n\t\tif count == 10001 {\n\t\t\tprintln(prime)\n\t\t\tbreak\n\t\t}\n\t} else {\n\t\tbreak\n\t}\n}"}
{"src": ".LFB0:\nleaq -392(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L21\nmovl $392,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L21:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $360,%rsp\nmovq %rdi,-376(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq <48>(%rbp),%rax\nmovq %rax,-48(%rbp)\n.LBB3:\nmovq -40(%rbp),%rax\ncmpq -48(%rbp),%rax\njle .L2\n.LBB4:\n.LBB5:\nmovq -48(%rbp),%rsi\nmovq -40(%rbp),%rcx\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq %rsi,-40(%rbp)\nmovq %rcx,-48(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,<16>(%rbp)\nmovq %rdx,<24>(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,<32>(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,<40>(%rbp)\nmovq %rdx,<48>(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,<56>(%rbp)\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -40(%rbp),%rax\nmovl $0,%edx\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,-56(%rbp)\n.LBB6:\nmovq $0,-64(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r12\nmovl $0,%ebx\n.LBE9:\njmp .L3\n.L19:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -232(%rbp),%rax\ntestq %rbx,%rbx\njs .L4\ncmpq %rax,%rbx\njge .L4\nmovq -240(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE12:\n.LBB13:\nmovq %rax,-64(%rbp)\n.LBE13:\n.LBB14:\n.LBB15:\nmovq -64(%rbp),%rax\nmovq %rax,-216(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-136(%rbp)\nleaq -136(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nleaq <1>(%rax),%r13\nleaq -216(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r13,(%rax)\n.LBE15:\n.LBE14:\n.LBE11:\n.LBB17:\naddq $1,%rbx\njmp .L3\n.L4:\n.LBE17:\n.LBB18:\n.LBB16:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L3:\n.LBE16:\n.LBE18:\ncmpq %r12,%rbx\njl .L19\n.LBE8:\n.LBE7:\n.LBE6:\nmovq -40(%rbp),%rbx\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq %rbx,-352(%rbp)\n.LBB19:\nmovq $0,-72(%rbp)\n.LBB20:\n.LBB21:\n.LBB22:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%r13\nmovl $0,%ebx\n.LBE22:\njmp .L7\n.L20:\n.LBB23:\nnop\n.LBE23:\n.LBB24:\n.LBB25:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L8\ncmpq %rax,%rbx\njge .L8\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE25:\n.LBB26:\nmovq %rax,-72(%rbp)\n.LBE26:\n.LBB27:\n.LBB28:\nmovq $0,-80(%rbp)\nmovb $0,-81(%rbp)\n.LBB29:\nmovq -72(%rbp),%rax\nmovq %rax,-184(%rbp)\nleaq -184(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess2_fast64@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq %rax,-80(%rbp)\nmovb %dl,-81(%rbp)\n.LBE29:\n.LBB30:\nmovzbl -81(%rbp),%eax\ntestb %al,%al\njne .L9\njmp .L10\n.L8:\n.LBE30:\n.LBE28:\n.LBE27:\n.LBB38:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9:\n.LBE38:\n.LBB39:\n.LBB37:\n.LBB32:\n.LBB31:\ncmpq $0,-80(%rbp)\nsetg %al\n.L10:\n.LBE31:\n.LBE32:\ntestb %al,%al\nje .L11\n.LBB33:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -160(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L12\n.LBB34:\nmovq -176(%rbp),%rsi\nleaq -128(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE34:\njmp .L13\n.L12:\n.LBB35:\nmovq -176(%rbp),%rcx\nmovq -160(%rbp),%rdx\nmovq %rcx,-368(%rbp)\nmovq %rax,-360(%rbp)\nmovq %rdx,-352(%rbp)\n.L13:\n.LBE35:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -176(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -72(%rbp),%rax\nmovq %rax,(%rdx)\n.LBB36:\nmovq -72(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-96(%rbp)\nleaq -96(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq (%rax),%rax\nleaq -1(%rax),%r12\nleaq -144(%rbp),%rax\nmovq (%rax),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq %r12,(%rax)\n.L11:\n.LBE36:\n.LBE33:\n.LBE37:\n.LBE39:\n.LBE24:\n.LBB40:\naddq $1,%rbx\n.L7:\n.LBE40:\ncmpq %r13,%rbx\njl .L20\n.LBE21:\n.LBE20:\n.LBE19:\n.LBB41:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -376(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE41:\n.LBE2:\nmovq -376(%rbp),%rax\naddq $360,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "n1, n2 := len(nums1), len(nums2)\nif n1 > n2 {\n\tn1, n2, nums1, nums2 = n2, n1, nums2, nums1\n}\nm := make(map[int]int, n1)\nfor _, num := range nums1 {\n\tm[num]++\n}\nres := make([]int, 0, n1)\nfor _, num := range nums2 {\n\tif v, ok := m[num]; ok && v > 0 {\n\t\tres = append(res, num)\n\t\tm[num]--\n\t}\n}\nreturn res"}
{"src": ".LFB0:\nleaq -648(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L39\nmovl $648,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $608,%rsp\nmovq %rdi,-632(%rbp)\nmovq %rsi,-640(%rbp)\nmovq $0,-496(%rbp)\nmovq $0,-488(%rbp)\nmovq $0,-480(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-640(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-496(%rbp)\nmovq $0,-488(%rbp)\nmovq $0,-480(%rbp)\nmovq -632(%rbp),%rcx\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -480(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -640(%rbp),%rax\nmovq %rax,-464(%rbp)\nleaq -464(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $1,-520(%rbp)\nmovq $1,-512(%rbp)\nleaq <type...60x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-456(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $0,-552(%rbp)\nmovq $0,-544(%rbp)\nmovb $0,-33(%rbp)\n.LBB6:\n.LBB7:\njmp .L4\n.L38:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nleaq <type...60x.7.1go.leetcode0103.TreeNode>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-448(%rbp)\nmovq -448(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $0,-584(%rbp)\nmovq $0,-576(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovq -440(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $0,-616(%rbp)\nmovq $0,-608(%rbp)\n.LBB10:\nmovq $0,-48(%rbp)\nmovq $0,-56(%rbp)\n.LBB11:\n.LBB12:\n.LBB13:\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%r14\nmovl $0,%ebx\n.LBE13:\njmp .L5\n.L37:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\n.LBB16:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L6\ncmpq %rax,%rbx\njge .L6\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE16:\n.LBB17:\nmovq %rbx,-48(%rbp)\nmovq %rax,-56(%rbp)\n.LBE17:\n.LBB18:\n.LBB19:\ncmpb $0,-33(%rbp)\njne .L7\njmp .L33\n.L6:\n.LBE19:\n.LBE18:\n.LBB39:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE39:\n.LBB40:\n.LBB26:\n.LBB20:\nmovq -520(%rbp),%rcx\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -392(%rbp),%r12\nmovq %rcx,%rax\nsubq -48(%rbp),%rax\nsubq $1,%rax\nmovq -520(%rbp),%rdx\ntestq %rax,%rax\njs .L9\ncmpq %rdx,%rax\njl .L34\n.L9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L34:\nmovq -528(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq (%rax),%r13\nleaq <1>(%r12),%rax\nmovq -384(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L11\n.LBB21:\nmovq -400(%rbp),%rsi\nleaq -208(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-608(%rbp)\n.LBE21:\njmp .L12\n.L11:\n.LBB22:\nmovq -400(%rbp),%rcx\nmovq -384(%rbp),%rdx\nmovq %rcx,-624(%rbp)\nmovq %rax,-616(%rbp)\nmovq %rdx,-608(%rbp)\n.L12:\n.LBE22:\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq -400(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r13,(%rax)\n.LBE20:\njmp .L13\n.L33:\n.LBB23:\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r12\nmovq -56(%rbp),%rax\nmovq (%rax),%r13\nleaq <1>(%r12),%rax\nmovq -352(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L14\n.LBB24:\nmovq -368(%rbp),%rsi\nleaq -176(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-608(%rbp)\n.LBE24:\njmp .L15\n.L14:\n.LBB25:\nmovq -368(%rbp),%rcx\nmovq -352(%rbp),%rdx\nmovq %rcx,-624(%rbp)\nmovq %rax,-616(%rbp)\nmovq %rdx,-608(%rbp)\n.L15:\n.LBE25:\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -368(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r13,(%rax)\n.L13:\n.LBE23:\n.LBE26:\n.LBB27:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nje .L16\n.LBB28:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%r12\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%r13\nleaq <1>(%r12),%rax\nmovq -320(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L17\n.LBB29:\nmovq -336(%rbp),%rsi\nleaq -144(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <type...1go.leetcode0103.TreeNode>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-576(%rbp)\n.LBE29:\njmp .L18\n.L17:\n.LBB30:\nmovq -336(%rbp),%rcx\nmovq -320(%rbp),%rdx\nmovq %rcx,-592(%rbp)\nmovq %rax,-584(%rbp)\nmovq %rdx,-576(%rbp)\n.L18:\n.LBE30:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -336(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L19\n.LBB31:\nmovq %r13,(%rax)\njmp .L16\n.L19:\n.LBE31:\n.LBB32:\nmovq %r13,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L16:\n.LBE32:\n.LBE28:\n.LBE27:\n.LBB33:\nmovq -56(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\nje .L20\n.LBB34:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%r12\nmovq -56(%rbp),%rax\nmovq <16>(%rax),%r13\nleaq <1>(%r12),%rax\nmovq -288(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L21\n.LBB35:\nmovq -304(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <type...1go.leetcode0103.TreeNode>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-576(%rbp)\n.LBE35:\njmp .L22\n.L21:\n.LBB36:\nmovq -304(%rbp),%rcx\nmovq -288(%rbp),%rdx\nmovq %rcx,-592(%rbp)\nmovq %rax,-584(%rbp)\nmovq %rdx,-576(%rbp)\n.L22:\n.LBE36:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -304(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L23\n.LBB37:\nmovq %r13,(%rax)\njmp .L20\n.L23:\n.LBE37:\n.LBB38:\nmovq %r13,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L20:\n.LBE38:\n.LBE34:\n.LBE33:\n.LBE40:\n.LBE15:\n.LBB41:\naddq $1,%rbx\n.L5:\n.LBE41:\ncmpq %r14,%rbx\njl .L37\n.LBE12:\n.LBE11:\n.LBE10:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -256(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L26\n.LBB42:\nmovq -272(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-544(%rbp)\n.LBE42:\njmp .L27\n.L26:\n.LBB43:\nmovq -272(%rbp),%rcx\nmovq -256(%rbp),%rdx\nmovq %rcx,-560(%rbp)\nmovq %rax,-552(%rbp)\nmovq %rdx,-544(%rbp)\n.L27:\n.LBE43:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -272(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -624(%rbp),%rcx\nmovq -616(%rbp),%rbx\nmovq %rcx,-240(%rbp)\nmovq %rbx,-232(%rbp)\nmovq -608(%rbp),%rdx\nmovq %rdx,-224(%rbp)\nmovq -232(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -224(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L28\n.LBB44:\nmovq -240(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L29\n.L28:\n.LBE44:\n.LBB45:\nmovq -240(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L29:\n.LBE45:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-512(%rbp)\nxorb $1,-33(%rbp)\n.L4:\n.LBE9:\nmovq -520(%rbp),%rax\ntestq %rax,%rax\njne .L38\n.LBE7:\n.LBE6:\n.LBB46:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-480(%rbp)\nmovq -632(%rbp),%rcx\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -480(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE46:\n.LBE2:\nmovq -632(%rbp),%rax\naddq $608,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "if root == nil {\n\treturn nil\n}\ns := []*TreeNode{root}\nres := [][]int{}\nzigzag := false\nfor len(s) != 0 {\n\ttmp := []*TreeNode{}\n\tl := []int{}\n\tfor i, node := range s {\n\t\tif zigzag {\n\t\t\tl = append(l, s[len(s)-i-1].Val)\n\t\t} else {\n\t\t\tl = append(l, node.Val)\n\t\t}\n\t\tif node.Left != nil {\n\t\t\ttmp = append(tmp, node.Left)\n\t\t}\n\t\tif node.Right != nil {\n\t\t\ttmp = append(tmp, node.Right)\n\t\t}\n\t}\n\tres = append(res, l)\n\ts = tmp\n\tzigzag = !zigzag\n}\nreturn res"}
{"src": ".LFB6:\nleaq -1096(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L151\nmovl $1096,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL12:\nret\n.L151:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1048,%rsp\n.LBB59:\nmovq $0,-56(%rbp)\n.LBB60:\njmp .L102\n.L150:\n.LBB61:\nnop\n.LBE61:\n.LBB62:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L103\ncmpq %rdx,-56(%rbp)\njl .L138\n.L103:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L138:\nleaq <int..d>(%rip),%rax\nmovq %rax,-1088(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-856(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq -856(%rbp),%rdx\nmovq <88>(%rax),%rax\nmovq %rax,(%rdx)\nmovq -856(%rbp),%rax\nmovq %rax,-1080(%rbp)\nmovdqa -1088(%rbp),%xmm0\nmovups %xmm0,-848(%rbp)\nleaq -848(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $1,-344(%rbp)\nmovq $1,-336(%rbp)\nleaq <.LC112>(%rip),%rax\nmovq %rax,-976(%rbp)\nmovq $40,-968(%rbp)\nmovq -976(%rbp),%rax\nmovq -968(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -336(%rbp)\npushq -344(%rbp)\npushq -352(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <log.Printf@PLT>\naddq $32,%rsp\n.LBB63:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L105\ncmpq %rdx,-56(%rbp)\njl .L139\n.L105:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L139:\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\njne .L107\n.LBB64:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L108\ncmpq %rdx,-56(%rbp)\njl .L140\n.L108:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L140:\nleaq <int..d>(%rip),%rax\nmovq %rax,-1072(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-824(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq -824(%rbp),%rdx\nmovq <88>(%rax),%rax\nmovq %rax,(%rdx)\nmovq -824(%rbp),%rax\nmovq %rax,-1064(%rbp)\nmovdqa -1072(%rbp),%xmm1\nmovups %xmm1,-816(%rbp)\nleaq -816(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq $1,-312(%rbp)\nmovq $1,-304(%rbp)\nleaq <.LC113>(%rip),%r14\nmovl $36,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -304(%rbp)\npushq -312(%rbp)\npushq -320(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <log.Printf@PLT>\naddq $32,%rsp\n.L107:\n.LBE64:\n.LBE63:\n.LBB65:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L110\ncmpq %rdx,-56(%rbp)\njl .L141\n.L110:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L141:\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovzbl <120>(%rax),%eax\ntestb %al,%al\nje .L112\n.LBB66:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L113\ncmpq %rdx,-56(%rbp)\njl .L142\n.L113:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L142:\nleaq <int..d>(%rip),%rax\nmovq %rax,-1056(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-792(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq -792(%rbp),%rdx\nmovq <88>(%rax),%rax\nmovq %rax,(%rdx)\nmovq -792(%rbp),%rax\nmovq %rax,-1048(%rbp)\nmovdqa -1056(%rbp),%xmm2\nmovups %xmm2,-784(%rbp)\nleaq -784(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $1,-280(%rbp)\nmovq $1,-272(%rbp)\nleaq <.LC114>(%rip),%rax\nmovq %rax,-960(%rbp)\nmovq $69,-952(%rbp)\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -272(%rbp)\npushq -280(%rbp)\npushq -288(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <log.Printf@PLT>\naddq $32,%rsp\njmp .L115\n.L112:\n.LBE66:\n.LBE65:\n.LBB67:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L116\ncmpq %rdx,-56(%rbp)\njl .L143\n.L116:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L143:\nleaq <.LC108>(%rip),%rax\nmovq %rax,-736(%rbp)\nmovq $9,-728(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq <152>(%rax),%rdx\nmovq <144>(%rax),%rax\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nleaq -736(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nleaq -256(%rbp),%rdi\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <go.leetcode.PathExists>\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-768(%rbp)\nmovq %rdx,-760(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovzbl -768(%rbp),%eax\nmovb %al,-57(%rbp)\nmovq -760(%rbp),%rax\nmovq -752(%rbp),%rdx\nmovq %rax,-880(%rbp)\nmovq %rdx,-872(%rbp)\ncmpb $0,-57(%rbp)\nje .L118\n.LBB68:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L119\ncmpq %rdx,-56(%rbp)\njl .L144\n.L119:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L144:\nleaq <.LC108>(%rip),%rax\nmovq %rax,-704(%rbp)\nmovq $9,-696(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq <152>(%rax),%rdx\nmovq <144>(%rax),%rax\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-1040(%rbp)\nleaq <go..C100>(%rip),%rbx\nmovq %rbx,-1032(%rbp)\nmovq %rax,-1024(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-664(%rbp)\nleaq -704(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L121\n.LBB69:\nmovq -664(%rbp),%rcx\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE69:\njmp .L122\n.L121:\n.LBB70:\nmovq -664(%rbp),%rcx\nleaq -656(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L122:\n.LBE70:\nmovq -664(%rbp),%rax\nmovq %rax,-1016(%rbp)\nmovdqa -1040(%rbp),%xmm3\nmovups %xmm3,-640(%rbp)\nmovdqa -1024(%rbp),%xmm4\nmovups %xmm4,-624(%rbp)\nleaq -640(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq $2,-216(%rbp)\nmovq $2,-208(%rbp)\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\ncall <log.Println@PLT>\naddq $32,%rsp\njmp .L115\n.L118:\n.LBE68:\n.LBB71:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L124\ncmpq %rdx,-56(%rbp)\njl .L145\n.L124:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L145:\nleaq <.LC108>(%rip),%rax\nmovq %rax,-608(%rbp)\nmovq $9,-600(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq <152>(%rax),%rdx\nmovq <144>(%rax),%rax\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nleaq -608(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovl $511,%edx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <os.Mkdir@PLT>\nmovq %rax,-896(%rbp)\nmovq %rdx,-888(%rbp)\n.LBB72:\nmovq -896(%rbp),%rax\ntestq %rax,%rax\nje .L126\n.LBB73:\nmovq -896(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -888(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL13:\nmovq %rax,%r12\nmovq %rdx,%r13\nleaq <string..d>(%rip),%rax\nmovq %rax,-1008(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-568(%rbp)\nmovq %r12,-560(%rbp)\nmovq %r13,-552(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L127\n.LBB74:\nmovq -568(%rbp),%rcx\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE74:\njmp .L128\n.L127:\n.LBB75:\nmovq -568(%rbp),%rcx\nleaq -560(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L128:\n.LBE75:\nmovq -568(%rbp),%rax\nmovq %rax,-1000(%rbp)\nmovdqa -1008(%rbp),%xmm5\nmovups %xmm5,-544(%rbp)\nleaq -544(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $1,-184(%rbp)\nmovq $1,-176(%rbp)\nleaq <.LC115>(%rip),%rax\nmovq %rax,-944(%rbp)\nmovq $21,-936(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -176(%rbp)\npushq -184(%rbp)\npushq -192(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <log.Printf@PLT>\naddq $32,%rsp\njmp .L115\n.L126:\n.LBE73:\n.LBB76:\nleaq <string..d>(%rip),%rax\nmovq %rax,-992(%rbp)\nleaq <go..C101>(%rip),%rax\nmovq %rax,-984(%rbp)\nmovdqa -992(%rbp),%xmm6\nmovups %xmm6,-528(%rbp)\nleaq -528(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $1,-152(%rbp)\nmovq $1,-144(%rbp)\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\ncall <log.Println@PLT>\naddq $32,%rsp\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L130\ncmpq %rdx,-56(%rbp)\njl .L146\n.L130:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L146:\nleaq <.LC108>(%rip),%rax\nmovq %rax,-480(%rbp)\nmovq $9,-472(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq <152>(%rax),%rdx\nmovq <144>(%rax),%rax\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nleaq <.LC116>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $12,-440(%rbp)\nleaq -480(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nleaq <.LC117>(%rip),%rbx\nmovq %rbx,-928(%rbp)\nmovq $33,-920(%rbp)\nleaq -128(%rbp),%r9\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -928(%rbp),%rax\nmovq -920(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %rdi,%rcx\nmovq %rax,%rdx\nmovq %r9,%rdi\ncall <go.leetcode.copy>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L132\ncmpq %rdx,-56(%rbp)\njl .L147\n.L132:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L147:\nleaq <.LC108>(%rip),%rax\nmovq %rax,-400(%rbp)\nmovq $9,-392(%rbp)\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\nmovq <152>(%rax),%rdx\nmovq <144>(%rax),%rax\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nleaq <.LC118>(%rip),%rax\nmovq %rax,-368(%rbp)\nmovq $17,-360(%rbp)\nleaq -400(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nleaq <.LC119>(%rip),%rbx\nmovq %rbx,-912(%rbp)\nmovq $38,-904(%rbp)\nleaq -96(%rbp),%r9\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -912(%rbp),%rax\nmovq -904(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %rdi,%rcx\nmovq %rax,%rdx\nmovq %r9,%rdi\ncall <go.leetcode.copy>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L134\ncmpq %rdx,-56(%rbp)\njl .L148\n.L134:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L148:\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\nsalq $2,%rax\naddq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $4,%rax\naddq %rcx,%rax\npushq <168>(%rax)\npushq <160>(%rax)\npushq <152>(%rax)\npushq <144>(%rax)\npushq <136>(%rax)\npushq <128>(%rax)\npushq <120>(%rax)\npushq <112>(%rax)\npushq <104>(%rax)\npushq <96>(%rax)\npushq <88>(%rax)\npushq <80>(%rax)\npushq <72>(%rax)\npushq <64>(%rax)\npushq <56>(%rax)\npushq <48>(%rax)\npushq <40>(%rax)\npushq <32>(%rax)\npushq <24>(%rax)\npushq <16>(%rax)\npushq <8>(%rax)\npushq (%rax)\ncall <go.leetcode.GenerateReadme>\naddq $176,%rsp\n.L115:\n.LBE76:\n.LBE72:\n.LBE71:\n.LBE67:\n.LBE62:\n.LBB77:\naddq $1,-56(%rbp)\n.L102:\n.LBE77:\nmovq <24>(%rbp),%rax\ncmpq %rax,-56(%rbp)\njl .L150\n.LBE60:\n.LBE59:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "for i := 0; i < len(problems); i++ {\n\tlog.Printf(\"STR\", problems[i].Stat.FrontendQuestionID)\n\tif problems[i].Stat.QuestionID == 0 {\n\t\tlog.Printf(\"STR\", problems[i].Stat.FrontendQuestionID)\n\t}\n\tif problems[i].PaidOnly {\n\t\tlog.Printf(\"STR\", problems[i].Stat.FrontendQuestionID)\n\t\tcontinue\n\t}\n\tif is_DirExists, _ := PathExists(SOLUTIONS_PATH + problems[i].PathName); is_DirExists {\n\t\tlog.Println(\"STR\", SOLUTIONS_PATH+problems[i].PathName)\n\t} else {\n\t\terr := os.Mkdir(SOLUTIONS_PATH+problems[i].PathName, os.ModePerm)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"STR\", err.Error())\n\t\t} else {\n\t\t\tlog.Println(\"STR\")\n\t\t\tcopy(SOURCE_SOLUTION_FILE_PATH, SOLUTIONS_PATH+problems[i].PathName+\"STR\")\n\t\t\tcopy(SOURCE_SOLUTION_TEST_FILE_PATH, SOLUTIONS_PATH+problems[i].PathName+\"STR\")\n\t\t\tGenerateReadme(problems[i])\n\t\t}\n\t}\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L35\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L35:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\naddq $-128,%rsp\nmovq $0,-24(%rbp)\n.LBB23:\nmovq $0,-32(%rbp)\n.LBB24:\njmp .L29\n.L34:\n.LBB25:\nnop\n.LBE25:\n.LBB26:\n.LBB27:\nmovq -32(%rbp),%rax\nmovq %rax,%rdi\ncall <main.isL>\ntestb %al,%al\nje .L30\n.LBB28:\naddq $1,-24(%rbp)\n.L30:\n.LBE28:\n.LBE27:\n.LBE26:\n.LBB29:\naddq $1,-32(%rbp)\n.L29:\n.LBE29:\ncmpq $9999,-32(%rbp)\njle .L34\n.LBE24:\n.LBE23:\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -16(%rbp),%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "count := 0\nfor i := 0; i < 10000; i++ {\n\tif isL(i) {\n\t\tcount++\n\t}\n}\nfmt.Println(count)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L53\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L53:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $64,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\n.LBB3:\nmovq -72(%rbp),%rax\ntestq %rax,%rax\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq $0,-24(%rbp)\nmovb $0,-25(%rbp)\n.LBB6:\nmovq $0,-48(%rbp)\nmovl $0,-52(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq -72(%rbp),%r12\nmovl $0,%ebx\n.LBE9:\njmp .L4\n.L50:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -72(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -80(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L6\njmp .L42\n.L5:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBB13:\nleaq <1>(%rbx),%rdx\n.LBE13:\njmp .L8\n.L42:\n.LBB14:\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovl %esi,%eax\nmovq %rdi,%rdx\n.L8:\n.LBE14:\n.LBE12:\n.LBB15:\nmovq %rbx,-48(%rbp)\nmovl %eax,-52(%rbp)\n.LBE15:\n.LBB16:\n.LBB17:\ncmpl $32,-52(%rbp)\nje .L9\n.LBB18:\nmovq -72(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L10\ncmpq %rax,-48(%rbp)\njg .L10\nmovq -80(%rbp),%rdx\nmovq -72(%rbp),%rax\ncmpq %rax,-48(%rbp)\njne .L11\njmp .L43\n.L10:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L11:\nmovq -48(%rbp),%rax\njmp .L13\n.L43:\nmovl $0,%eax\n.L13:\naddq %rax,%rdx\nmovq -72(%rbp),%rax\nsubq -48(%rbp),%rax\nmovq %rdx,-80(%rbp)\nmovq %rax,-72(%rbp)\njmp .L14\n.L9:\n.LBE18:\n.LBE17:\n.LBE16:\n.LBE11:\n.LBB19:\nmovq %rdx,%rbx\n.L4:\n.LBE19:\ncmpq %r12,%rbx\njl .L50\n.L14:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB20:\nmovl $0,%eax\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L16\ncmpq %rdx,%rax\njge .L16\nmovq -80(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $43,%al\nje .L17\njmp .L45\n.L16:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L17:\n.LBB21:\nmovl $1,%eax\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L19\ncmpq %rdx,%rax\njg .L19\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rdx\ncmpq %rdx,%rax\njne .L20\njmp .L46\n.L19:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L20:\nmovq %rax,%rdx\njmp .L22\n.L46:\nmovl $0,%edx\n.L22:\naddq %rdx,%rcx\nmovq -72(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rcx,-80(%rbp)\nmovq %rdx,-72(%rbp)\n.LBE21:\njmp .L23\n.L45:\n.LBB22:\n.LBB23:\nmovl $0,%eax\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L24\ncmpq %rdx,%rax\njge .L24\nmovq -80(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $45,%al\nje .L25\njmp .L23\n.L24:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\n.LBB24:\nmovl $1,%eax\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L26\ncmpq %rdx,%rax\njg .L26\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rdx\ncmpq %rdx,%rax\njne .L27\njmp .L47\n.L26:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L27:\nmovq %rax,%rdx\njmp .L29\n.L47:\nmovl $0,%edx\n.L29:\naddq %rdx,%rcx\nmovq -72(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rcx,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovb $1,-25(%rbp)\n.L23:\n.LBE24:\n.LBE23:\n.LBE22:\n.LBE20:\n.LBB25:\nmovl $0,-56(%rbp)\n.LBB26:\n.LBB27:\n.LBB28:\nmovq -72(%rbp),%r12\nmovl $0,%eax\n.LBE28:\njmp .L30\n.L52:\n.LBB29:\nnop\n.LBE29:\n.LBB30:\n.LBB31:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L31\ncmpq %rdx,%rax\njge .L31\nmovq -80(%rbp),%rdx\nmovq %rax,%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nmovzbl %dl,%edx\ncmpl $127,%edx\njle .L32\njmp .L48\n.L31:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\n.LBB32:\naddq $1,%rax\n.LBE32:\njmp .L34\n.L48:\n.LBB33:\nmovq -80(%rbp),%rsi\nmovq -72(%rbp),%rcx\nmovq %rax,%rdx\nmovq %rsi,%rdi\nmovq %rcx,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovl %ecx,%edx\nmovq %rbx,%rax\n.L34:\n.LBE33:\n.LBE31:\n.LBB34:\nmovl %edx,-56(%rbp)\n.LBE34:\n.LBB35:\n.LBB36:\n.LBB37:\ncmpl $47,-56(%rbp)\nsetle %dl\nmovl %edx,%ecx\nxorl $1,%ecx\ntestb %cl,%cl\nje .L35\n.LBB38:\ncmpl $57,-56(%rbp)\nsetg %dl\n.L35:\n.LBE38:\n.LBE37:\ntestb %dl,%dl\njne .L51\n.LBE36:\nmovq -24(%rbp),%rcx\nmovq %rcx,%rdx\nsalq $2,%rdx\naddq %rcx,%rdx\naddq %rdx,%rdx\nmovq %rdx,%rcx\nmovl -56(%rbp),%edx\nsubl $48,%edx\nmovslq %edx,%rdx\naddq %rcx,%rdx\nmovq %rdx,-24(%rbp)\n.LBB40:\nmovl $2147483648,%edx\ncmpq %rdx,-24(%rbp)\njle .L30\n.LBB41:\nmovl $2147483648,%eax\nmovq %rax,-24(%rbp)\njmp .L37\n.L30:\n.LBE41:\n.LBE40:\n.LBE35:\n.LBE30:\ncmpq %r12,%rax\njl .L52\njmp .L37\n.L51:\n.LBB44:\n.LBB43:\n.LBB42:\n.LBB39:\nnop\n.L37:\n.LBE39:\n.LBE42:\n.LBE43:\n.LBE44:\n.LBE27:\n.LBE26:\n.LBE25:\n.LBB45:\ncmpb $0,-25(%rbp)\nje .L40\n.LBB46:\nnegq -24(%rbp)\n.LBE46:\njmp .L41\n.L40:\n.LBB47:\n.LBB48:\nmovl $2147483648,%eax\ncmpq %rax,-24(%rbp)\njl .L41\n.LBB49:\nmovq $2147483647,-24(%rbp)\n.L41:\n.LBE49:\n.LBE48:\n.LBE47:\n.LBE45:\n.LBB50:\nmovq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.L3:\n.LBE50:\n.LBE2:\naddq $64,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "if len(str) == 0 {\n\treturn 0\n}\nvar (\n\tnum int\n\tneg bool\n)\nfor i, s := range str {\n\tif s != ' ' {\n\t\tstr = str[i:]\n\t\tbreak\n\t}\n}\nif str[0] == '+' {\n\tstr = str[1:]\n} else if str[0] == '-' {\n\tstr = str[1:]\n\tneg = true\n}\nfor _, s := range str {\n\tif s < '0' || s > '9' {\n\t\tbreak\n\t}\n\tnum = num*10 + int(s-'0')\n\tif num > 2147483648 {\n\t\tnum = 2147483648\n\t\tbreak\n\t}\n}\nif neg {\n\tnum *= -1\n} else if num > 2147483647 {\n\tnum = 2147483647\n}\nreturn num"}
{"src": ".LFB2:\nleaq -280(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L71\nmovl $280,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L71:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-264(%rbp)\nmovq $0,-224(%rbp)\nmovq $0,-216(%rbp)\nmovq $0,-208(%rbp)\n.LBB40:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L43\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-64(%rbp)\n.LBB41:\nmovq $0,-24(%rbp)\n.LBB42:\njmp .L44\n.L70:\n.LBB43:\nnop\n.LBE43:\n.LBB44:\nmovq $1,-32(%rbp)\nmovq $0,-40(%rbp)\n.LBB45:\nmovq $0,-48(%rbp)\n.LBB46:\njmp .L45\n.L69:\n.LBB47:\nnop\n.LBE47:\n.LBB48:\n.LBB49:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L46\ncmpq %rax,-48(%rbp)\njl .L64\n.L46:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L48\ncmpq %rax,-24(%rbp)\njge .L48\nmovq -192(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-32(%rbp)\njl .L49\njmp .L50\n.L48:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L49:\n.LBB50:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L51\ncmpq %rax,-48(%rbp)\njl .L65\n.L51:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L65:\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L53\ncmpq %rax,-24(%rbp)\njge .L53\nmovq -160(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-40(%rbp)\njmp .L50\n.L53:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L50:\n.LBE50:\n.LBE49:\n.LBE48:\n.LBB51:\naddq $1,-48(%rbp)\n.L45:\n.LBE51:\nmovq -48(%rbp),%rax\ncmpq -56(%rbp),%rax\njl .L69\n.LBE46:\n.LBE45:\n.LBB52:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L56\ncmpq %rax,-40(%rbp)\njl .L67\n.L56:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L67:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nsubq $8,%rsp\npushq <16>(%rax)\npushq <8>(%rax)\npushq (%rax)\ncall <go.Solution.Min>\naddq $32,%rsp\ncmpq %rax,-32(%rbp)\njne .L58\n.LBB53:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L59\n.LBB54:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-240(%rbp)\n.LBE54:\njmp .L60\n.L59:\n.LBB55:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-256(%rbp)\nmovq %rax,-248(%rbp)\nmovq %rdx,-240(%rbp)\n.L60:\n.LBE55:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -32(%rbp),%rax\nmovq %rax,(%rdx)\n.L58:\n.LBE53:\n.LBE52:\n.LBE44:\n.LBB56:\naddq $1,-24(%rbp)\n.L44:\n.LBE56:\nmovq -24(%rbp),%rax\ncmpq -64(%rbp),%rax\njl .L70\n.LBE42:\n.LBE41:\n.LBB57:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -264(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE57:\n.LBE40:\nmovq -264(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "ans, m, n := []int{}, len(matrix), len(matrix[0])\nfor j := 0; j < n; j++ {\n\tmax, rowIndex := 1, 0\n\tfor i := 0; i < m; i++ {\n\t\tif matrix[i][j] > max {\n\t\t\tmax = matrix[i][j]\n\t\t\trowIndex = i\n\t\t}\n\t}\n\tif Min(matrix[rowIndex]) == max {\n\t\tans = append(ans, max)\n\t}\n}\nreturn ans"}
{"src": ".LFB1:\nleaq -408(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L13\nmovl $408,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L13:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $376,%rsp\nmovq %rdi,-392(%rbp)\nmovq %rsi,-400(%rbp)\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\n.LBB2:\nmovq -400(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\n.LBB3:\nmovl $0,-36(%rbp)\n.LBB4:\nleaq -112(%rbp),%rdi\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nleaq -336(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicerune@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBB5:\n.LBB6:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r13\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L12:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -168(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -176(%rbp),%rax\nmovq %rbx,%rdx\nsalq $2,%rdx\naddq %rdx,%rax\nmovl (%rax),%eax\n.LBE9:\n.LBB10:\nmovl %eax,-36(%rbp)\n.LBE10:\n.LBB11:\nmovl -36(%rbp),%eax\nsubl $48,%eax\ncltq\nmovq %rax,-48(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L4\njmp .L10\n.L3:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -144(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE12:\njmp .L6\n.L10:\n.LBB13:\nmovq -144(%rbp),%rcx\nmovq -128(%rbp),%rdx\nmovq %rcx,-368(%rbp)\nmovq %rax,-360(%rbp)\nmovq %rdx,-352(%rbp)\n.L6:\n.LBE13:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -48(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE15:\n.LBE8:\n.LBB16:\naddq $1,%rbx\n.L2:\n.LBE16:\ncmpq %r13,%rbx\njl .L12\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -392(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE2:\nmovq -392(%rbp),%rax\naddq $376,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "strNumber := strconv.Itoa(number)\nfor _, runeDigit := range []rune(strNumber) {\n\tdigit := int(runeDigit - '0')\n\tlist = append(list, digit)\n}\nreturn"}
{"src": ".LFB0:\nleaq -408(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $408,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $392,%rsp\nmovq %rdi,-392(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-392(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nleaq <.LC0>(%rip),%rcx\nmovl $1,%ebx\nmovq %rcx,-336(%rbp)\nmovq %rbx,-328(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\njmp .L10\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nleaq <.LC0>(%rip),%rcx\nmovq %rcx,-320(%rbp)\nmovq $1,-312(%rbp)\nleaq <.LC1>(%rip),%rcx\nmovq %rcx,-304(%rbp)\nmovq $1,-296(%rbp)\nleaq <.LC2>(%rip),%rcx\nmovq %rcx,-288(%rbp)\nmovq $1,-280(%rbp)\nleaq <.LC3>(%rip),%rcx\nmovq %rcx,-272(%rbp)\nmovq $1,-264(%rbp)\nleaq <.LC4>(%rip),%rcx\nmovq %rcx,-256(%rbp)\nmovq $1,-248(%rbp)\nleaq <.LC5>(%rip),%rcx\nmovq %rcx,-240(%rbp)\nmovq $1,-232(%rbp)\nleaq <.LC6>(%rip),%rcx\nmovq %rcx,-224(%rbp)\nmovq $1,-216(%rbp)\nleaq <.LC7>(%rip),%rcx\nmovq %rcx,-208(%rbp)\nmovq $1,-200(%rbp)\nleaq <.LC8>(%rip),%rcx\nmovq %rcx,-192(%rbp)\nmovq $1,-184(%rbp)\nleaq <.LC9>(%rip),%rcx\nmovq %rcx,-176(%rbp)\nmovq $1,-168(%rbp)\nleaq <.LC10>(%rip),%rcx\nmovq %rcx,-160(%rbp)\nmovq $1,-152(%rbp)\nleaq <.LC11>(%rip),%rcx\nmovq %rcx,-144(%rbp)\nmovq $1,-136(%rbp)\nleaq <.LC12>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nleaq <.LC13>(%rip),%rcx\nmovq %rcx,-112(%rbp)\nmovq $1,-104(%rbp)\nleaq <.LC14>(%rip),%rcx\nmovq %rcx,-96(%rbp)\nmovq $1,-88(%rbp)\nleaq <.LC15>(%rip),%rcx\nmovq %rcx,-80(%rbp)\nmovq $1,-72(%rbp)\nleaq -320(%rbp),%rcx\nmovq %rcx,-368(%rbp)\nmovq $16,-360(%rbp)\nmovq $16,-352(%rbp)\nleaq <.LC16>(%rip),%rax\nmovl $0,%edx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\n.LBB6:\nmovq $0,-24(%rbp)\n.LBB7:\njmp .L4\n.L13:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -392(%rbp),%rax\nandl $15,%eax\nmovq -360(%rbp),%rdx\ntestq %rax,%rax\njs .L5\ncmpq %rdx,%rax\njl .L11\n.L5:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\nmovq -368(%rbp),%rdx\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nleaq -64(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nsarq $4,-392(%rbp)\n.LBE9:\n.LBB10:\naddq $1,-24(%rbp)\n.L4:\n.LBE10:\n.LBB11:\ncmpq $7,-24(%rbp)\nsetle %al\ntestb %al,%al\nje .L7\n.LBB12:\ncmpq $0,-392(%rbp)\nsetne %al\n.L7:\n.LBE12:\n.LBE11:\ntestb %al,%al\njne .L13\n.LBE7:\n.LBE6:\n.LBB13:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\n.L10:\n.LBE13:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if num == 0 {\n\treturn \"STR\"\n}\nh := []string{\"STR\", \"STR\", \"STR\", \"STR\", \"STR\", \"STR\", \"STR\", \"STR\", \"STR\", \"STR\",\n\t\"STR\", \"STR\", \"STR\", \"STR\", \"STR\", \"STR\"}\nres := \"STR\"\nfor i := 0; i < 8 && num != 0; i++ {\n\tres = h[num&15] + res\n\tnum >>= 4\n}\nreturn res"}
{"src": "leaq -760(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L392\nmovl $760,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL49:\nret\n.L392:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $712,%rsp\nmovq %rdi,-664(%rbp)\nmovq %rsi,-672(%rbp)\nmovq %rdx,-688(%rbp)\nmovq %rcx,-680(%rbp)\nmovl $0,-52(%rbp)\nmovq $0,-608(%rbp)\nmovq $0,-600(%rbp)\n.LBB376:\n.LBB377:\nmovq -672(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\njne .L370\n.LBB378:\n.LBB379:\n.LBB380:\nmovl $8,%eax\nmovl $0,%r8d\nmovl $0,%r9d\nmovl %eax,-52(%rbp)\nmovq %r8,-608(%rbp)\nmovq %r9,-600(%rbp)\n.LBE380:\nmovl -52(%rbp),%eax\nmovl %eax,-592(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-584(%rbp)\nmovq %rdx,-576(%rbp)\nmovq -664(%rbp),%rcx\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -576(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L369\n.L370:\n.LBE379:\n.LBE378:\n.LBE377:\n.LBB381:\nmovq -672(%rbp),%rax\nmovq <8>(%rax),%rax\ncmpq $1,%rax\njne .L372\n.LBB382:\nmovq -672(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-512(%rbp)\nmovq -520(%rbp),%rax\ntestq %rax,%rax\njg .L373\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L373:\nmovq -528(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq <24>(%rcx),%r8\nmovq %rdx,%rsi\nleaq -160(%rbp),%rdi\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall *%r8\n.LVL50:\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovl -560(%rbp),%eax\nmovl %eax,-56(%rbp)\nmovq -552(%rbp),%rax\nmovq -544(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\n.LBB383:\nmovq -624(%rbp),%rax\ntestq %rax,%rax\nje .L374\n.LBB384:\n.LBB385:\n.LBB386:\nmovl $0,%ecx\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovl %ecx,-52(%rbp)\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\n.LBE386:\nmovl -52(%rbp),%eax\nmovl %eax,-496(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-488(%rbp)\nmovq %rdx,-480(%rbp)\nmovq -664(%rbp),%rcx\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -480(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L369\n.L374:\n.LBE385:\n.LBE384:\n.LBE383:\n.LBB387:\ncmpl $64,-56(%rbp)\nje .L376\ncmpl $128,-56(%rbp)\nje .L377\njmp .L372\n.L376:\n.LBB388:\n.LBB389:\n.LBB390:\nmovl $64,%eax\nmovq $0,-752(%rbp)\nmovq $0,-744(%rbp)\nmovl %eax,-52(%rbp)\nmovdqa -752(%rbp),%xmm0\nmovups %xmm0,-608(%rbp)\n.LBE390:\nmovl -52(%rbp),%eax\nmovl %eax,-464(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-456(%rbp)\nmovq %rdx,-448(%rbp)\nmovq -664(%rbp),%rcx\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -448(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L369\n.L377:\n.LBE389:\n.LBE388:\n.LBB391:\n.LBB392:\n.LBB393:\nmovl $128,%eax\nmovl $0,%r12d\nmovl $0,%r13d\nmovl %eax,-52(%rbp)\nmovq %r12,-608(%rbp)\nmovq %r13,-600(%rbp)\n.LBE393:\nmovl -52(%rbp),%eax\nmovl %eax,-432(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-424(%rbp)\nmovq %rdx,-416(%rbp)\nmovq -664(%rbp),%rcx\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -416(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L369\n.L372:\n.LBE392:\n.LBE391:\n.LBE387:\n.LBE382:\n.LBE381:\n.LBB394:\nmovq $0,-64(%rbp)\nmovq $0,-640(%rbp)\nmovq $0,-632(%rbp)\n.LBB395:\nmovq -672(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-384(%rbp)\n.LBB396:\n.LBB397:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r12\nmovl $0,%ebx\n.LBE397:\njmp .L379\n.L391:\n.LBB398:\nnop\n.LBE398:\n.LBB399:\n.LBB400:\nmovq -360(%rbp),%rax\ntestq %rbx,%rbx\njs .L380\ncmpq %rax,%rbx\njge .L380\nmovq -368(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE400:\n.LBB401:\nmovq %rbx,-64(%rbp)\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\n.LBE401:\n.LBB402:\nmovq -640(%rbp),%rax\nmovq <24>(%rax),%r8\nmovq -632(%rbp),%rsi\nleaq -128(%rbp),%rdi\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall *%r8\n.LVL51:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovl -336(%rbp),%eax\nmovl %eax,-68(%rbp)\nmovq -328(%rbp),%rax\nmovq -320(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\n.LBB403:\nmovq -656(%rbp),%rax\ntestq %rax,%rax\njne .L381\njmp .L389\n.L380:\n.LBE403:\n.LBE402:\n.LBB414:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L381:\n.LBE414:\n.LBB415:\n.LBB407:\n.LBB404:\n.LBB405:\n.LBB406:\nmovl $0,%ecx\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovl %ecx,-52(%rbp)\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\n.LBE406:\nmovl -52(%rbp),%eax\nmovl %eax,-304(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-296(%rbp)\nmovq %rdx,-288(%rbp)\nmovq -664(%rbp),%rcx\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -288(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L369\n.L389:\n.LBE405:\n.LBE404:\n.LBE407:\n.LBB408:\n.LBB409:\ncmpl $64,-68(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L384\n.LBB410:\ncmpl $128,-68(%rbp)\nsete %al\n.L384:\n.LBE410:\n.LBE409:\ntestb %al,%al\nje .L385\n.LBB411:\n.LBB412:\n.LBB413:\nmovl $0,%r12d\nleaq <int..d>(%rip),%rax\nmovq %rax,-736(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-272(%rbp)\nmovq -272(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -272(%rbp),%rax\nmovq %rax,-728(%rbp)\nleaq <go.ast.Type..d>(%rip),%rax\nmovq %rax,-720(%rbp)\nleaq <go.ast.Type..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -264(%rbp),%rax\nmovl -68(%rbp),%edx\nmovl %edx,(%rax)\nmovq -264(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovdqa -736(%rbp),%xmm1\nmovups %xmm1,-256(%rbp)\nmovdqa -720(%rbp),%xmm2\nmovups %xmm2,-240(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\nleaq <.LC269>(%rip),%r14\nmovl $71,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <fmt.Errorf@PLT>\naddq $32,%rsp\nmovl %r12d,-52(%rbp)\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\n.LBE413:\nmovl -52(%rbp),%eax\nmovl %eax,-224(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-216(%rbp)\nmovq %rdx,-208(%rbp)\nmovq -664(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L369\n.L385:\n.LBE412:\n.LBE411:\n.LBE408:\n.LBE415:\n.LBE399:\n.LBB416:\naddq $1,%rbx\n.L379:\n.LBE416:\ncmpq %r12,%rbx\njl .L391\n.LBE396:\n.LBE395:\n.LBE394:\n.LBB417:\n.LBB418:\nmovl $8,%eax\nmovq $0,-704(%rbp)\nmovq $0,-696(%rbp)\nmovl %eax,-52(%rbp)\nmovdqa -704(%rbp),%xmm3\nmovups %xmm3,-608(%rbp)\n.LBE418:\nmovl -52(%rbp),%eax\nmovl %eax,-192(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-184(%rbp)\nmovq %rdx,-176(%rbp)\nmovq -664(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L369:\n.LBE417:\n.LBE376:\nmovq -664(%rbp),%rax\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "if len(n.Exprs) == 0 {\n\treturn TypeString, nil\n}\nif len(n.Exprs) == 1 {\n\texprType, err := n.Exprs[0].Type(s)\n\tif err != nil {\n\t\treturn TypeInvalid, err\n\t}\n\tswitch exprType {\n\tcase TypeList:\n\t\treturn TypeList, nil\n\tcase TypeMap:\n\t\treturn TypeMap, nil\n\t}\n}\nfor index, expr := range n.Exprs {\n\texprType, err := expr.Type(s)\n\tif err != nil {\n\t\treturn TypeInvalid, err\n\t}\n\tif exprType == TypeList || exprType == TypeMap {\n\t\treturn TypeInvalid, fmt.Errorf(\n\t\t\t\"STR\",\n\t\t\tindex, exprType)\n\t}\n}\nreturn TypeString, nil"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L39\nmovl $72,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L39:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq $0,-24(%rbp)\n.LBB26:\nmovq $0,-8(%rbp)\nmovq $1,-16(%rbp)\n.LBB27:\nmovq $0,-32(%rbp)\n.LBB28:\n.LBB29:\n.LBB30:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -56(%rbp),%rcx\nmovl $0,%eax\n.LBE30:\njmp .L29\n.L38:\n.LBB31:\nnop\n.LBE31:\n.LBB32:\n.LBB33:\nmovq -56(%rbp),%rdx\ntestq %rax,%rax\njs .L30\ncmpq %rdx,%rax\njge .L30\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE33:\n.LBB34:\nmovq %rdx,-32(%rbp)\n.LBE34:\n.LBB35:\nmovq -32(%rbp),%rdx\naddq %rdx,-8(%rbp)\n.LBB36:\nmovq -8(%rbp),%rdx\ncmpq -16(%rbp),%rdx\njl .L31\njmp .L32\n.L30:\n.LBE36:\n.LBE35:\n.LBB39:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\n.LBE39:\n.LBB40:\n.LBB38:\n.LBB37:\nmovq -8(%rbp),%rdx\nmovq %rdx,-16(%rbp)\n.L32:\n.LBE37:\n.LBE38:\n.LBE40:\n.LBE32:\n.LBB41:\naddq $1,%rax\n.L29:\n.LBE41:\ncmpq %rcx,%rax\njl .L38\n.LBE29:\n.LBE28:\n.LBE27:\n.LBB42:\ncmpq $0,-16(%rbp)\njle .L35\n.LBB43:\n.LBB44:\nmovq -16(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L36\n.L35:\n.LBE44:\n.LBE43:\n.LBE42:\n.LBB45:\nmovl $1,%eax\nsubq -16(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L36:\n.LBE45:\n.LBE26:\nleave\nret", "tgt": "psum, min := 0, 1\nfor _, val := range nums {\n\tpsum += val\n\tif psum < min {\n\t\tmin = psum\n\t}\n}\nif min > 0 {\n\treturn min\n}\nreturn -min + 1"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\nsubq $112,%rsp\nmovl $2000000,%edx\nmovl $2000000,%esi\nleaq <bool..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-112(%rbp)\nmovq $2000000,-104(%rbp)\nmovq $2000000,-96(%rbp)\n.LBB2:\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovl $1,%ecx\nmovl $1,%edx\nmovq -72(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq -80(%rbp),%rax\nmovb %cl,(%rax)\nmovq -40(%rbp),%rax\ncmpq $1,%rax\njg .L3\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L3:\nmovq -48(%rbp),%rax\naddq $1,%rax\nmovb %dl,(%rax)\n.LBE2:\nmovq $5,-8(%rbp)\nmovq $3,-16(%rbp)\nmovq $0,-24(%rbp)\n.L18:\n.LBB3:\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -16(%rbp),%rax\naddq %rax,%rax\nmovq %rax,-24(%rbp)\n.LBB7:\njmp .L4\n.L23:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\nmovq -104(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L5\ncmpq %rax,-24(%rbp)\njl .L19\n.L5:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq -112(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovb $1,(%rax)\n.LBE9:\n.LBB10:\nmovq -16(%rbp),%rax\naddq %rax,-24(%rbp)\n.L4:\n.LBE10:\nmovq -104(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L23\n.LBE7:\n.LBE6:\n.LBB11:\nmovq -16(%rbp),%rax\naddq $2,%rax\nmovq %rax,-24(%rbp)\n.LBB12:\njmp .L9\n.L24:\n.LBB13:\nnop\n.LBE13:\n.LBB14:\naddq $2,-24(%rbp)\n.L9:\n.LBE14:\n.LBB15:\nmovq -104(%rbp),%rax\ncmpq %rax,-24(%rbp)\nsetl %al\ntestb %al,%al\nje .L10\n.LBB16:\nmovq -104(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L11\ncmpq %rax,-24(%rbp)\njl .L21\n.L11:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -112(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\n.L10:\n.LBE16:\n.LBE15:\ntestb %al,%al\njne .L24\n.LBE12:\n.LBE11:\n.LBB17:\nmovq -104(%rbp),%rax\ncmpq %rax,-24(%rbp)\njge .L25\n.LBB18:\nmovq -24(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -24(%rbp),%rax\naddq %rax,-8(%rbp)\n.LBE18:\n.LBE17:\n.LBE5:\njmp .L18\n.L25:\n.LBB21:\n.LBB20:\n.LBB19:\nnop\n.LBE19:\n.LBE20:\n.LBE21:\n.LBE4:\n.LBE3:\ncall <runtime.printlock@PLT>\nmovq -8(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\nleave\nret", "tgt": "arr := make([]bool, 2000000)\narr[0], arr[1] = true, true\nsum, prime := int64(5), 3\nvar k int\nfor {\n\tfor k = 2 * prime; k < len(arr); k += prime {\n\t\tarr[k] = true\n\t}\n\tfor k = prime + 2; k < len(arr) && arr[k]; k += 2 {\n\t}\n\tif k < len(arr) {\n\t\tprime = k\n\t\tsum += int64(k)\n\t} else {\n\t\tbreak\n\t}\n}\nprintln(sum)"}
{"src": ".LFB1:\nleaq -616(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L19\nmovl $616,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $568,%rsp\nmovq %rdi,-552(%rbp)\nmovq $5,-480(%rbp)\nmovb $1,-472(%rbp)\nmovq $7,-464(%rbp)\nmovb $0,-456(%rbp)\nmovq $11,-448(%rbp)\nmovb $0,-440(%rbp)\nmovq $10,-432(%rbp)\nmovb $1,-424(%rbp)\nleaq -480(%rbp),%rcx\nmovq %rcx,-512(%rbp)\nmovq $4,-504(%rbp)\nmovq $4,-496(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC15>(%rip),%rax\nmovl $69,%edx\nleaq -208(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBB13:\nmovq $0,-528(%rbp)\nmovq $0,-520(%rbp)\n.LBB14:\n.LBB15:\n.LBB16:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -496(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovl $0,%ebx\n.LBE16:\njmp .L13\n.L18:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -376(%rbp),%rax\ntestq %rbx,%rbx\njs .L14\ncmpq %rax,%rbx\njge .L14\nmovq -384(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE19:\n.LBB20:\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\n.LBE20:\n.LBB21:\nmovzbl -520(%rbp),%eax\nmovb %al,-529(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.hasAlternatingBits>\nmovb %al,-593(%rbp)\nleaq <go.leetcode..go.leetcode.para693..d>(%rip),%rcx\nmovq %rcx,-592(%rbp)\nleaq <go.leetcode..go.leetcode.para693..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-320(%rbp)\nmovq -320(%rbp),%rax\nmovq -544(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -320(%rbp),%rax\nmovq %rax,-584(%rbp)\nleaq <bool..d>(%rip),%rdi\nmovq %rdi,-576(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovzbl -593(%rbp),%ecx\nmovb %cl,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-568(%rbp)\nmovdqa -592(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -576(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC16>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-336(%rbp)\n.LBE21:\n.LBE18:\n.LBB23:\naddq $1,%rbx\njmp .L13\n.L14:\n.LBE23:\n.LBB24:\n.LBB22:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\n.LBE22:\n.LBE24:\ncmpq -560(%rbp),%rbx\njl .L18\n.LBE15:\n.LBE14:\n.LBE13:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC17>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question693{\n\t{\n\t\tpara693{5},\n\t\tans693{true},\n\t},\n\t{\n\t\tpara693{7},\n\t\tans693{false},\n\t},\n\t{\n\t\tpara693{11},\n\t\tans693{false},\n\t},\n\t{\n\t\tpara693{10},\n\t\tans693{true},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans693, q.para693\n\tfmt.Printf(\"STR\", p, hasAlternatingBits(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L8\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\nmovq $1,-16(%rbp)\n.LBB4:\njmp .L2\n.L7:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -16(%rbp),%rax\nimulq %rax,%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\naddq %rax,-8(%rbp)\n.LBE6:\n.LBB7:\naddq $1,-16(%rbp)\n.L2:\n.LBE7:\nmovq -16(%rbp),%rax\ncmpq -40(%rbp),%rax\njle .L7\n.LBE4:\n.LBE3:\n.LBB8:\nmovq -8(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE8:\n.LBE2:\npopq %rbp\nret", "tgt": "sum := 0\nfor i := 1; i <= n; i++ {\n\tsquare := i * i\n\tsum += square\n}\nreturn sum"}
{"src": ".LFB1:\nleaq -552(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L42\nmovl $552,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L42:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $504,%rsp\nmovq %rdi,-472(%rbp)\nmovq -472(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB25:\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\n.LBB26:\n.LBB27:\n.LBB28:\nmovq <go.day165.testcases>(%rip),%rax\nmovq <8+go.day165.testcases>(%rip),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16+go.day165.testcases>(%rip),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%r13\nmovl $0,%r12d\n.LBE28:\njmp .L23\n.L41:\n.LBB29:\nnop\n.LBE29:\n.LBB30:\n.LBB31:\nmovq -328(%rbp),%rax\ntestq %r12,%r12\njs .L24\ncmpq %rax,%r12\njge .L24\nmovq -336(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\n.LBE31:\n.LBB32:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\n.LBE32:\n.LBB33:\n.LBB34:\nleaq -416(%rbp),%rax\nsubq $8,%rsp\npushq -448(%rbp)\npushq -456(%rbp)\npushq -464(%rbp)\nmovq %rax,%rdi\ncall <go.day165.SmallerRightCount>\naddq $32,%rsp\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L25\njmp .L39\n.L24:\n.LBE34:\n.LBE33:\n.LBB47:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\n.LBE47:\n.LBB48:\n.LBB46:\n.LBB35:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE35:\njmp .L27\n.L39:\n.LBB36:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L27:\n.LBE36:\nmovq -216(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L28\n.LBB37:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE37:\njmp .L29\n.L28:\n.LBB38:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L29:\n.LBE38:\nmovq -248(%rbp),%rax\nmovq %rax,-488(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -512(%rbp),%rdx\nmovq -504(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L30\n.LBB39:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-544(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L31\n.LBB40:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE40:\njmp .L32\n.L31:\n.LBB41:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L32:\n.LBE41:\nmovq -184(%rbp),%rax\nmovq %rax,-536(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L33\n.LBB42:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE42:\njmp .L34\n.L33:\n.LBB43:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L34:\n.LBE43:\nmovq -152(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -544(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -528(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L35\n.LBB44:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE44:\njmp .L36\n.L35:\n.LBB45:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L36:\n.LBE45:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC6>(%rip),%r14\nmovl $18,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -472(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L30:\n.LBE39:\n.LBE46:\n.LBE48:\n.LBE30:\n.LBB49:\naddq $1,%r12\n.L23:\n.LBE49:\ncmpq %r13,%r12\njl .L41\n.LBE27:\n.LBE26:\n.LBE25:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := SmallerRightCount(tc.nums); !reflect.DeepEqual(result, tc.expected) {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L27\nmovl $40,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq $0,-32(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\nmovq $0,-16(%rbp)\nmovq $0,-24(%rbp)\n.LBB4:\njmp .L2\n.L26:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\n.LBB8:\njmp .L3\n.L25:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\n.LBB11:\nmovq -16(%rbp),%rax\naddq $2,%rax\ncmpq %rax,-24(%rbp)\njge .L4\n.LBB12:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L5\ncmpq %rax,-8(%rbp)\njl .L19\n.L5:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L7\ncmpq %rax,-24(%rbp)\njl .L20\n.L7:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq <16>(%rbp),%rcx\nmovq -8(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\naddq $1,-8(%rbp)\n.L4:\n.LBE12:\n.LBE11:\naddq $1,-24(%rbp)\n.L3:\n.LBE10:\n.LBB13:\nmovq <24>(%rbp),%rax\ncmpq %rax,-24(%rbp)\nsetl %al\ntestb %al,%al\nje .L9\n.LBB14:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L10\ncmpq %rax,-16(%rbp)\njl .L21\n.L10:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L12\ncmpq %rax,-24(%rbp)\njl .L22\n.L12:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L9:\n.LBE14:\n.LBE13:\ntestb %al,%al\njne .L25\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB15:\nmovq -24(%rbp),%rax\nmovq %rax,-16(%rbp)\n.L2:\n.LBE15:\nmovq <24>(%rbp),%rax\ncmpq %rax,-16(%rbp)\njl .L26\n.LBE4:\n.LBE3:\n.LBB16:\nmovq -8(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE16:\n.LBE2:\nleave\nret", "tgt": "var i int\nfor j, k := 0, 0; j < len(nums); j = k {\n\tfor k < len(nums) && nums[j] == nums[k] {\n\t\tif k < j+2 {\n\t\t\tnums[i] = nums[k]\n\t\t\ti++\n\t\t}\n\t\tk++\n\t}\n}\nreturn i"}
{"src": ".LFB0:\nleaq -424(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L27\nmovl $424,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $400,%rsp\nmovq %rdi,-408(%rbp)\nmovq $0,-368(%rbp)\nmovq $0,-360(%rbp)\nmovq $0,-352(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rdx\nmovq <48>(%rbp),%rax\nleaq (%rdx,%rax),%rbx\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-400(%rbp)\nmovq $0,-392(%rbp)\nmovq %rbx,-384(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L26:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njne .L3\n.LBB8:\n.LBB9:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%rbx\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%r12\nleaq (%rbx,%r12),%rax\nmovq -320(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L4\nmovq -336(%rbp),%rsi\nleaq -144(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-320(%rbp)\njmp .L5\n.L4:\nmovq -336(%rbp),%rcx\nmovq -320(%rbp),%rdx\nmovq %rcx,-336(%rbp)\nmovq %rax,-328(%rbp)\nmovq %rdx,-320(%rbp)\n.L5:\nmovq %r12,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -304(%rbp),%rax\nmovq -336(%rbp),%rcx\nmovq %rbx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -408(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L3:\n.LBE9:\n.LBE8:\n.LBE7:\n.LBB10:\nmovq <48>(%rbp),%rax\ntestq %rax,%rax\njne .L7\n.LBB11:\n.LBB12:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%rbx\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r12\nleaq (%rbx,%r12),%rax\nmovq -256(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L8\nmovq -272(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-256(%rbp)\njmp .L9\n.L8:\nmovq -272(%rbp),%rcx\nmovq -256(%rbp),%rdx\nmovq %rcx,-272(%rbp)\nmovq %rax,-264(%rbp)\nmovq %rdx,-256(%rbp)\n.L9:\nmovq %r12,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -240(%rbp),%rax\nmovq -272(%rbp),%rcx\nmovq %rbx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -408(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L7:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB13:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L10\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L10:\nmovq <48>(%rbp),%rax\ntestq %rax,%rax\njg .L11\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L11:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rdx\nmovq <40>(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njg .L12\n.LBB14:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rbx\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L13\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L13:\nmovq <16>(%rbp),%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L14\n.LBB15:\nmovq -208(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE15:\njmp .L15\n.L14:\n.LBB16:\nmovq -208(%rbp),%rcx\nmovq -192(%rbp),%rdx\nmovq %rcx,-400(%rbp)\nmovq %rax,-392(%rbp)\nmovq %rdx,-384(%rbp)\n.L15:\n.LBE16:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\nmovq <32>(%rbp),%rax\ntestq %rax,%rax\njg .L16\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L16:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq <24>(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq <32>(%rbp),%rax\nsubq $1,%rax\nmovq %rcx,<16>(%rbp)\nmovq %rdx,<24>(%rbp)\nmovq %rax,<32>(%rbp)\n.LBE14:\njmp .L2\n.L12:\n.LBB17:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%rbx\nmovq <48>(%rbp),%rax\ntestq %rax,%rax\njg .L17\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L17:\nmovq <40>(%rbp),%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -160(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L18\n.LBB18:\nmovq -176(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-384(%rbp)\n.LBE18:\njmp .L19\n.L18:\n.LBB19:\nmovq -176(%rbp),%rcx\nmovq -160(%rbp),%rdx\nmovq %rcx,-400(%rbp)\nmovq %rax,-392(%rbp)\nmovq %rdx,-384(%rbp)\n.L19:\n.LBE19:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -176(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\nmovq <56>(%rbp),%rax\ntestq %rax,%rax\njg .L20\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L20:\nmovq <40>(%rbp),%rdx\nmovq <56>(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq <48>(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq <56>(%rbp),%rax\nsubq $1,%rax\nmovq %rcx,<40>(%rbp)\nmovq %rdx,<48>(%rbp)\nmovq %rax,<56>(%rbp)\n.L2:\n.LBE17:\n.LBE13:\n.LBE6:\n.LBB20:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\nsetg %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L21\n.LBB21:\nmovq <48>(%rbp),%rax\ntestq %rax,%rax\nsetg %al\n.L21:\n.LBE21:\n.LBE20:\ntestb %al,%al\njne .L26\n.LBE4:\n.LBE3:\n.LBB22:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -408(%rbp),%rcx\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -352(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE22:\n.LBE2:\nmovq -408(%rbp),%rax\naddq $400,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "result := make([]int, 0, len(left)+len(right))\nfor len(left) > 0 || len(right) > 0 {\n\tif len(left) == 0 {\n\t\treturn append(result, right...)\n\t}\n\tif len(right) == 0 {\n\t\treturn append(result, left...)\n\t}\n\tif left[0] <= right[0] {\n\t\tresult = append(result, left[0])\n\t\tleft = left[1:]\n\t} else {\n\t\tresult = append(result, right[0])\n\t\tright = right[1:]\n\t}\n}\nreturn result"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\n.LBB3:\ncmpq $0,-24(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-8(%rbp)\nmovq -8(%rbp),%rax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBB6:\n.LBB7:\nmovq -24(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\nmovq %rax,%rdi\ncall <go.problem172.trailingZeroes>\nmovq %rax,%rsi\nmovq -24(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq %rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\naddq %rsi,%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.L3:\n.LBE7:\n.LBE6:\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "if 0 == n {\n\treturn 0\n} else {\n\treturn n/5 + trailingZeroes(n/5)\n}"}
{"src": ".LFB0:\nleaq -856(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L49\nmovl $856,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L49:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $808,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\nmovq $0,-704(%rbp)\nmovq $0,-696(%rbp)\n.LBB2:\nmovq -840(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <go.problem1202.newUnionFind>\nmovq %rax,-72(%rbp)\n.LBB3:\nmovq $0,-800(%rbp)\nmovq $0,-792(%rbp)\nmovq $0,-784(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-608(%rbp)\nmovq -616(%rbp),%r14\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L45:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -616(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -624(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-640(%rbp)\n.LBE9:\n.LBB10:\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -640(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-784(%rbp)\n.LBE10:\n.LBB11:\nmovq -792(%rbp),%rax\ntestq %rax,%rax\njg .L4\njmp .L35\n.L3:\n.LBE11:\n.LBB12:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L35:\n.LBE12:\n.LBB13:\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L4:\nmovq -792(%rbp),%rax\ncmpq $1,%rax\njg .L6\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L6:\nmovq -800(%rbp),%rax\naddq $8,%rax\nmovq (%rax),%rdx\nmovq -800(%rbp),%rax\nmovq (%rax),%rcx\nmovq -72(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.problem1202.unionFind.connect>\n.LBE13:\n.LBE8:\n.LBB14:\naddq $1,%rbx\n.L2:\n.LBE14:\ncmpq %r14,%rbx\njl .L45\n.LBE5:\n.LBE4:\n.LBE3:\nmovq -64(%rbp),%rax\nmovl $0,%edx\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.makemap@PLT>\nmovq %rax,-80(%rbp)\n.LBB15:\nmovq $0,-88(%rbp)\nmovq $0,-96(%rbp)\n.LBB16:\nmovq -72(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-544(%rbp)\n.LBB17:\n.LBB18:\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -544(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovq -520(%rbp),%r15\nmovl $0,%ebx\n.LBE18:\njmp .L9\n.L46:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -520(%rbp),%rax\ntestq %rbx,%rbx\njs .L10\ncmpq %rax,%rbx\njge .L10\nmovq -528(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE21:\n.LBB22:\nmovq %rbx,-88(%rbp)\nmovq %rax,-96(%rbp)\n.LBE22:\n.LBB23:\nmovq -96(%rbp),%rdx\nmovq -72(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem1202.unionFind.find>\nmovq %rax,-96(%rbp)\n.LBB24:\nmovq -96(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-168(%rbp)\nleaq -168(%rbp),%rax\nmovq (%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.mapaccess1_fast64@PLT>\nmovq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-480(%rbp)\nmovq -488(%rbp),%r14\nleaq <1>(%r14),%rax\nmovq -480(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L11\njmp .L37\n.L10:\n.LBE24:\n.LBE23:\n.LBB28:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE28:\n.LBB29:\n.LBB27:\nmovq -496(%rbp),%rsi\nleaq -160(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-480(%rbp)\njmp .L13\n.L37:\nmovq -496(%rbp),%rcx\nmovq -480(%rbp),%rdx\nmovq %rcx,-496(%rbp)\nmovq %rax,-488(%rbp)\nmovq %rdx,-480(%rbp)\n.L13:\nmovq -496(%rbp),%rax\nmovq %r14,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -88(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-448(%rbp)\nleaq -504(%rbp),%rax\nmovq (%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.mapassign_fast64@PLT>\nmovq -456(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -448(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L14\n.LBB25:\nmovq -464(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L15\n.L14:\n.LBE25:\n.LBB26:\nmovq -464(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L15:\n.LBE26:\n.LBE27:\n.LBE29:\n.LBE20:\n.LBB30:\naddq $1,%rbx\n.L9:\n.LBE30:\ncmpq %r15,%rbx\njl .L46\n.LBE17:\n.LBE16:\n.LBE15:\nleaq -128(%rbp),%rdi\nmovq -848(%rbp),%rax\nmovq -840(%rbp),%rdx\nleaq -432(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.stringtoslicebyte@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-720(%rbp)\nmovq -64(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <uint8..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-768(%rbp)\nmovq %rbx,-760(%rbp)\nmovq %rbx,-752(%rbp)\n.LBB31:\nmovq $0,-832(%rbp)\nmovq $0,-824(%rbp)\nmovq $0,-816(%rbp)\n.LBB32:\n.LBB33:\n.LBB34:\nleaq -368(%rbp),%rdx\nmovq -80(%rbp),%rax\nmovq %rax,%rsi\nleaq <type..map.6int.7.6.7int>(%rip),%rdi\ncall <runtime.mapiterinit@PLT>\n.LBE34:\njmp .L18\n.L48:\n.LBB35:\nnop\n.LBE35:\n.LBB36:\n.LBB37:\nmovq -368(%rbp),%rax\nmovq (%rax),%rax\nmovq -360(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-384(%rbp)\n.LBE37:\n.LBB38:\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -384(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-816(%rbp)\n.LBE38:\n.LBB39:\nmovq -824(%rbp),%rax\nmovq %rax,-104(%rbp)\nmovq -104(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-688(%rbp)\nmovq %rbx,-680(%rbp)\nmovq %rbx,-672(%rbp)\nmovq -680(%rbp),%rax\nmovq -824(%rbp),%rdx\ncmpq %rax,%rdx\ncmovle %rdx,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -832(%rbp),%rcx\nmovq -688(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memmove@PLT>\nleaq <go.problem1202.smallestStringWithSwaps..func1>(%rip),%rsi\nleaq -736(%rbp),%rcx\nleaq -688(%rbp),%rdx\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nleaq -208(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq %rsi,(%rax)\nmovq %rcx,<8>(%rax)\nmovq %rdx,<16>(%rax)\nmovq -176(%rbp),%rbx\nleaq <type...6.7int>(%rip),%r12\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L19\n.LBB40:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE40:\njmp .L20\n.L19:\n.LBB41:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L20:\n.LBE41:\nmovq -248(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq %rdx,%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Slice@PLT>\nsubq $8,%rsp\npushq -816(%rbp)\npushq -824(%rbp)\npushq -832(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\n.LBB42:\nmovq $0,-56(%rbp)\n.LBB43:\njmp .L21\n.L47:\n.LBB44:\nnop\n.LBE44:\n.LBB45:\nmovq -824(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L22\ncmpq %rax,-56(%rbp)\njl .L39\n.L22:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq -832(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -760(%rbp),%rdx\ntestq %rax,%rax\njs .L24\ncmpq %rdx,%rax\njl .L40\n.L24:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -680(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L26\ncmpq %rdx,-56(%rbp)\njl .L41\n.L26:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -688(%rbp),%rcx\nmovq -56(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq -728(%rbp),%rcx\ntestq %rdx,%rdx\njs .L28\ncmpq %rcx,%rdx\njl .L42\n.L28:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nmovq -736(%rbp),%rcx\naddq %rdx,%rcx\nmovq -768(%rbp),%rdx\naddq %rax,%rdx\nmovzbl (%rcx),%eax\nmovb %al,(%rdx)\n.LBE45:\n.LBB46:\naddq $1,-56(%rbp)\n.L21:\n.LBE46:\nmovq -56(%rbp),%rax\ncmpq -104(%rbp),%rax\njl .L47\n.LBE43:\n.LBE42:\n.LBE39:\n.LBE36:\n.LBB47:\nleaq -368(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.mapiternext@PLT>\n.L18:\n.LBE47:\nmovq -368(%rbp),%rax\ntestq %rax,%rax\njne .L48\n.LBE33:\n.LBE32:\n.LBE31:\n.LBB48:\nsubq $8,%rsp\npushq -752(%rbp)\npushq -760(%rbp)\npushq -768(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\n.LBE48:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "n := len(s)\nuf := newUnionFind(n)\nfor _, p := range pairs {\n\tuf.connect(p[0], p[1])\n}\ngroups := make(map[int][]int, n)\nfor c, p := range uf.parent {\n\tp = uf.find(p)\n\tgroups[p] = append(groups[p], c)\n}\nbytes := []byte(s)\nres := make([]byte, n)\nfor _, g := range groups {\n\tsize := len(g)\n\ta := make([]int, size)\n\tcopy(a, g)\n\tsort.Slice(a, func(i, j int) bool {\n\t\treturn bytes[a[i]] < bytes[a[j]]\n\t})\n\tsort.Ints(g)\n\tfor i := 0; i < size; i++ {\n\t\tres[g[i]] = bytes[a[i]]\n\t}\n}\nreturn string(res)"}
{"src": ".LFB1:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L36\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L36:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $344,%rsp\nmovq %rdi,-360(%rbp)\nmovq $2,-328(%rbp)\nmovq $3,-320(%rbp)\nmovq $4,-312(%rbp)\nmovq $6,-304(%rbp)\nmovq $5,-296(%rbp)\nmovq $7,-288(%rbp)\nmovq $4,-272(%rbp)\nmovq $1,-264(%rbp)\nmovq $8,-256(%rbp)\nmovq $3,-248(%rbp)\nleaq -328(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nleaq -320(%rbp),%rax\nmovq %rax,-216(%rbp)\nmovq $2,-208(%rbp)\nmovq $2,-200(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $3,-184(%rbp)\nmovq $3,-176(%rbp)\nleaq -272(%rbp),%rax\nmovq %rax,-168(%rbp)\nmovq $4,-160(%rbp)\nmovq $4,-152(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $4,-344(%rbp)\nmovq $4,-336(%rbp)\nsubq $8,%rsp\npushq -336(%rbp)\npushq -344(%rbp)\npushq -352(%rbp)\ncall <go.problem120.minimumTotal>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "data := [][]int{\n\t{2},\n\t{3, 4},\n\t{6, 5, 7},\n\t{4, 1, 8, 3}}\nfmt.Println(minimumTotal(data))"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L28\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L28:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r9\nmovq %r9,%rsi\nmovq %r10,%rdi\nmovq %rax,%rdi\nmovq %rsi,-48(%rbp)\nmovq %rdi,-40(%rbp)\nmovq %rdx,-64(%rbp)\nmovq %rcx,-56(%rbp)\nmovq %r8,-72(%rbp)\nmovq $0,-32(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq $-1,-16(%rbp)\nmovq $0,-24(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L27:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\n.LBB8:\nmovq -16(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -40(%rbp),%rax\ncmpq %rax,%rdx\nsetl %al\ntestb %al,%al\nje .L3\n.LBB9:\nmovq -16(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -40(%rbp),%rax\ntestq %rdx,%rdx\njs .L4\ncmpq %rax,%rdx\njl .L20\n.L4:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq -16(%rbp),%rax\naddq $1,%rax\nmovq -56(%rbp),%rcx\ntestq %rax,%rax\njs .L6\ncmpq %rcx,%rax\njl .L21\n.L6:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq -48(%rbp),%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nsubl $97,%edx\nmovzbl %dl,%edx\nmovq -64(%rbp),%rcx\naddq %rcx,%rax\nmovzbl (%rax),%eax\nsubl $97,%eax\nmovzbl %al,%ecx\nmovq %rdx,%rax\nsubq %rcx,%rax\nmovq %rax,%rdi\ncall <go.leetcode.abs>\nmovq %rax,%rdx\nmovq -72(%rbp),%rax\nsubq %rdx,%rax\nnotq %rax\nshrq $63,%rax\n.L3:\n.LBE9:\n.LBE8:\ntestb %al,%al\nje .L8\n.LBB10:\naddq $1,-16(%rbp)\nmovq -40(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L9\ncmpq %rax,-16(%rbp)\njl .L22\n.L9:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\nmovq -56(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L11\ncmpq %rax,-16(%rbp)\njl .L23\n.L11:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq -48(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nsubl $97,%eax\nmovzbl %al,%eax\nmovq -64(%rbp),%rcx\nmovq -16(%rbp),%rdx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nsubl $97,%edx\nmovzbl %dl,%edx\nsubq %rdx,%rax\nmovq %rax,%rdi\ncall <go.leetcode.abs>\nsubq %rax,-72(%rbp)\n.LBE10:\njmp .L2\n.L8:\n.LBB11:\nmovq -16(%rbp),%rax\nsubq -8(%rbp),%rax\nleaq <1>(%rax),%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.max>\nmovq %rax,-24(%rbp)\nmovq -40(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L13\ncmpq %rax,-8(%rbp)\njl .L24\n.L13:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq -56(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L15\ncmpq %rax,-8(%rbp)\njl .L25\n.L15:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq -48(%rbp),%rdx\nmovq -8(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nsubl $97,%eax\nmovzbl %al,%eax\nmovq -64(%rbp),%rcx\nmovq -8(%rbp),%rdx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nsubl $97,%edx\nmovzbl %dl,%edx\nsubq %rdx,%rax\nmovq %rax,%rdi\ncall <go.leetcode.abs>\naddq %rax,-72(%rbp)\naddq $1,-8(%rbp)\n.L2:\n.LBE11:\n.LBE7:\n.LBE6:\nmovq -40(%rbp),%rax\ncmpq %rax,-8(%rbp)\njl .L27\n.LBE4:\n.LBE3:\n.LBB12:\nmovq -24(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE12:\n.LBE2:\nleave\nret", "tgt": "left, right, res := 0, -1, 0\nfor left < len(s) {\n\tif right+1 < len(s) && maxCost-abs(int(s[right+1]-'a')-int(t[right+1]-'a')) >= 0 {\n\t\tright++\n\t\tmaxCost -= abs(int(s[right]-'a') - int(t[right]-'a'))\n\t} else {\n\t\tres = max(res, right-left+1)\n\t\tmaxCost += abs(int(s[left]-'a') - int(t[left]-'a'))\n\t\tleft++\n\t}\n}\nreturn res"}
{"src": ".LFB0:\nleaq -360(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L75\nmovl $360,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L75:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $336,%rsp\nmovq %rdi,-344(%rbp)\nmovq $0,-64(%rbp)\n.LBB2:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L68:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%r12\nmovq -344(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $2,%rax\nmovq %rcx,%rdx\nsarq $63,%rdx\nsubq %rdx,%rax\nmovq %rax,%rbx\nmovq %rbx,%rax\nsalq $2,%rax\naddq %rbx,%rax\naddq %rax,%rax\nmovq %rcx,%rbx\nsubq %rax,%rbx\nleaq <1>(%r12),%rax\nmovq -288(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L3\n.LBB7:\nmovq -304(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-320(%rbp)\n.LBE7:\njmp .L4\n.L3:\n.LBB8:\nmovq -304(%rbp),%rcx\nmovq -288(%rbp),%rdx\nmovq %rcx,-336(%rbp)\nmovq %rax,-328(%rbp)\nmovq %rdx,-320(%rbp)\n.L4:\n.LBE8:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -304(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %rbx,(%rax)\nmovq -344(%rbp),%rcx\nmovabsq $7378697629483820647,%rdx\nmovq %rcx,%rax\nimulq %rdx\nmovq %rdx,%rax\nsarq $2,%rax\nsarq $63,%rcx\nmovq %rcx,%rdx\nsubq %rdx,%rax\nmovq %rax,-344(%rbp)\n.L2:\n.LBE6:\ncmpq $0,-344(%rbp)\njne .L68\n.LBE4:\n.LBE3:\nmovq -328(%rbp),%rax\nmovq %rax,-72(%rbp)\n.LBB9:\ncmpq $1,-72(%rbp)\njg .L7\n.LBB10:\n.LBB11:\nmovq $-1,-64(%rbp)\nmovq -64(%rbp),%rax\njmp .L50\n.L7:\n.LBE11:\n.LBE10:\n.LBE9:\nmovq $1,-24(%rbp)\n.LBB12:\n.LBB13:\njmp .L9\n.L70:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\n.LBB16:\nmovq -328(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L10\ncmpq %rax,-24(%rbp)\njl .L52\n.L10:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L52:\nmovq -24(%rbp),%rax\nsubq $1,%rax\nmovq -328(%rbp),%rdx\ntestq %rax,%rax\njs .L12\ncmpq %rdx,%rax\njl .L53\n.L12:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L53:\nmovq -336(%rbp),%rcx\nmovq -24(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq -336(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njl .L69\n.LBE16:\naddq $1,-24(%rbp)\n.L9:\n.LBE15:\nmovq -24(%rbp),%rax\ncmpq -72(%rbp),%rax\njl .L70\njmp .L15\n.L69:\n.LBB19:\n.LBB18:\n.LBB17:\nnop\n.L15:\n.LBE17:\n.LBE18:\n.LBE19:\n.LBE13:\n.LBE12:\n.LBB20:\nmovq -24(%rbp),%rax\ncmpq -72(%rbp),%rax\njne .L17\n.LBB21:\n.LBB22:\nmovq $-1,-64(%rbp)\nmovq -64(%rbp),%rax\njmp .L50\n.L17:\n.LBE22:\n.LBE21:\n.LBE20:\nmovq $0,-32(%rbp)\n.LBB23:\n.LBB24:\njmp .L18\n.L72:\n.LBB25:\nnop\n.LBE25:\n.LBB26:\n.LBB27:\nmovq -328(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L19\ncmpq %rax,-32(%rbp)\njl .L55\n.L19:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\nmovq -328(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L21\ncmpq %rax,-24(%rbp)\njl .L56\n.L21:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L56:\nmovq -336(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -336(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njg .L71\n.LBE27:\naddq $1,-32(%rbp)\n.L18:\n.LBE26:\nmovq -32(%rbp),%rax\ncmpq -24(%rbp),%rax\njl .L72\njmp .L24\n.L71:\n.LBB30:\n.LBB29:\n.LBB28:\nnop\n.L24:\n.LBE28:\n.LBE29:\n.LBE30:\n.LBE24:\n.LBE23:\n.LBB31:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -24(%rbp),%rdx\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,-240(%rbp)\nmovq %rbx,-232(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -32(%rbp),%rax\nmovq -328(%rbp),%rcx\ncmpq $0,-32(%rbp)\njs .L26\ncmpq %rcx,-32(%rbp)\njl .L58\n.L26:\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\nmovq -336(%rbp),%rsi\nmovq -32(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq -328(%rbp),%rcx\ncmpq $0,-24(%rbp)\njs .L28\ncmpq %rcx,-24(%rbp)\njl .L59\n.L28:\nmovq -24(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L59:\nmovq -336(%rbp),%rsi\nmovq -24(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -264(%rbp),%rcx\ntestq %rdx,%rdx\njs .L30\ncmpq %rcx,%rdx\njl .L60\n.L30:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L60:\nmovq -272(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq %rdi,(%rdx)\nmovq -232(%rbp),%rdx\ntestq %rax,%rax\njs .L32\ncmpq %rdx,%rax\njl .L61\n.L32:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L61:\nmovq -240(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE31:\n.LBB32:\nmovq $0,-56(%rbp)\n.LBB33:\njmp .L34\n.L73:\n.LBB34:\nnop\n.LBE34:\n.LBB35:\n.LBB36:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -56(%rbp),%rax\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,-176(%rbp)\nmovq %rbx,-168(%rbp)\nmovq -320(%rbp),%rdx\nmovq %rdx,-160(%rbp)\nmovq -24(%rbp),%rdx\nsubq -56(%rbp),%rdx\nsubq $1,%rdx\nmovq -24(%rbp),%rcx\nsubq -56(%rbp),%rcx\nsubq $1,%rcx\nmovq -328(%rbp),%rsi\ntestq %rcx,%rcx\njs .L35\ncmpq %rsi,%rcx\njl .L62\n.L35:\nmovq %rcx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\nmovq -336(%rbp),%rsi\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rdi\nmovq -328(%rbp),%rcx\ncmpq $0,-56(%rbp)\njs .L37\ncmpq %rcx,-56(%rbp)\njl .L63\n.L37:\nmovq -56(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\nmovq -336(%rbp),%rsi\nmovq -56(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rsi\nmovq -200(%rbp),%rcx\ntestq %rax,%rax\njs .L39\ncmpq %rcx,%rax\njl .L64\n.L39:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq -208(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rdi,(%rax)\nmovq -168(%rbp),%rax\ntestq %rdx,%rdx\njs .L41\ncmpq %rax,%rdx\njl .L65\n.L41:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L65:\nmovq -176(%rbp),%rax\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %rsi,(%rax)\n.LBE36:\n.LBE35:\n.LBB37:\naddq $1,-56(%rbp)\n.L34:\n.LBE37:\nmovq -24(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\ncmpq -56(%rbp),%rax\njg .L73\n.LBE33:\n.LBE32:\nmovq $0,-40(%rbp)\nmovq $1,-48(%rbp)\n.LBB38:\nmovq $0,-80(%rbp)\n.LBB39:\n.LBB40:\n.LBB41:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rsi\nmovl $0,%eax\n.LBE41:\njmp .L45\n.L74:\n.LBB42:\nnop\n.LBE42:\n.LBB43:\n.LBB44:\nmovq -136(%rbp),%rdx\ntestq %rax,%rax\njs .L46\ncmpq %rdx,%rax\njge .L46\nmovq -144(%rbp),%rdx\nmovq %rax,%rcx\nsalq $3,%rcx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\n.LBE44:\n.LBB45:\nmovq %rdx,-80(%rbp)\n.LBE45:\n.LBB46:\nmovq -80(%rbp),%rdx\nimulq -48(%rbp),%rdx\naddq %rdx,-40(%rbp)\nmovq -48(%rbp),%rcx\nmovq %rcx,%rdx\nsalq $2,%rdx\naddq %rcx,%rdx\naddq %rdx,%rdx\nmovq %rdx,-48(%rbp)\n.LBE46:\n.LBE43:\n.LBB48:\naddq $1,%rax\njmp .L45\n.L46:\n.LBE48:\n.LBB49:\n.LBB47:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L45:\n.LBE47:\n.LBE49:\ncmpq %rsi,%rax\njl .L74\n.LBE40:\n.LBE39:\n.LBE38:\n.LBB50:\nmovl $2147483648,%eax\ncmpq %rax,-40(%rbp)\njl .L49\n.LBB51:\n.LBB52:\nmovq $-1,-64(%rbp)\nmovq -64(%rbp),%rax\njmp .L50\n.L49:\n.LBE52:\n.LBE51:\n.LBE50:\n.LBB53:\nmovq -40(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\n.L50:\n.LBE53:\n.LBE2:\naddq $336,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "nums := []int{}\nfor n != 0 {\n\tnums = append(nums, n%10)\n\tn /= 10\n}\nm := len(nums)\nif m < 2 {\n\treturn -1\n}\ni := 1\nfor i < m {\n\tif nums[i] < nums[i-1] {\n\t\tbreak\n\t}\n\ti++\n}\nif i == m {\n\treturn -1\n}\nj := 0\nfor j < i {\n\tif nums[j] > nums[i] {\n\t\tbreak\n\t}\n\tj++\n}\nnums[i], nums[j] = nums[j], nums[i]\nfor k := 0; k < i/2; k++ {\n\tnums[k], nums[i-k-1] = nums[i-k-1], nums[k]\n}\nres := 0\np := 1\nfor _, n := range nums {\n\tres += n * p\n\tp *= 10\n}\nif res > math.MaxInt32 {\n\treturn -1\n}\nreturn res"}
{"src": ".LFB0:\nleaq -360(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $360,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $312,%rsp\nmovq $10,-288(%rbp)\nmovq $20,-280(%rbp)\nmovq $30,-272(%rbp)\nmovq $40,-264(%rbp)\nmovq $50,-256(%rbp)\nleaq -288(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq $5,-312(%rbp)\nmovq $5,-304(%rbp)\n.LBB2:\nmovq $0,-56(%rbp)\nmovq $0,-64(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rax\nmovq %rax,-344(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L7:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -232(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -240(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE8:\n.LBB9:\nmovq %rbx,-56(%rbp)\nmovq %rax,-64(%rbp)\n.LBE9:\n.LBB10:\nleaq <int..d>(%rip),%rax\nmovq %rax,-336(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-328(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -168(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -168(%rbp),%rax\nmovq %rax,%r15\nmovdqa -336(%rbp),%xmm0\nmovups %xmm0,-160(%rbp)\nmovq %r14,-144(%rbp)\nmovq %r15,-136(%rbp)\nleaq -160(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq $2,-120(%rbp)\nmovq $2,-112(%rbp)\nleaq <.LC2>(%rip),%r12\nmovl $10,%r13d\nleaq -96(%rbp),%rax\nmovq %r12,%r8\nmovq %r13,%r9\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -112(%rbp)\npushq -120(%rbp)\npushq -128(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE10:\n.LBE7:\n.LBB12:\naddq $1,%rbx\njmp .L2\n.L3:\n.LBE12:\n.LBB13:\n.LBB11:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE11:\n.LBE13:\ncmpq -344(%rbp),%rbx\njl .L7\n.LBE4:\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "x := []int{10, 20, 30, 40, 50}\nfor k, v := range x {\n\tfmt.Printf(\"STR\", k, v)\n}"}
{"src": ".LFB2:\nleaq -520(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L42\nmovl $520,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L42:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $472,%rsp\nmovq %rdi,-424(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB30:\nmovq $0,-416(%rbp)\nmovq $0,-408(%rbp)\nmovq $0,-400(%rbp)\nmovq $0,-392(%rbp)\nmovq $0,-384(%rbp)\nmovq $0,-376(%rbp)\n.LBB31:\n.LBB32:\n.LBB33:\nmovq <go.day245.testcases>(%rip),%rax\nmovq <8+go.day245.testcases>(%rip),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16+go.day245.testcases>(%rip),%rax\nmovq %rax,-288(%rbp)\nmovq -296(%rbp),%r15\nmovl $0,%r14d\n.LBE33:\njmp .L27\n.L41:\n.LBB34:\nnop\n.LBE34:\n.LBB35:\n.LBB36:\nmovq -296(%rbp),%rax\ntestq %r14,%r14\njs .L28\ncmpq %rax,%r14\njge .L28\nmovq -304(%rbp),%rdx\nmovq %r14,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\n.LBE36:\n.LBB37:\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\n.LBE37:\n.LBB38:\n.LBB39:\nleaq -112(%rbp),%rax\nsubq $8,%rsp\npushq -400(%rbp)\npushq -408(%rbp)\npushq -416(%rbp)\nmovq %rax,%rdi\ncall <go.day245.MinimumJumps>\naddq $32,%rsp\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -216(%rbp),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\n.LBB40:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq -368(%rbp),%rdi\nmovq -360(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <runtime.ifaceeq@PLT>\nxorl $1,%eax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\njne .L29\njmp .L30\n.L28:\n.LBE40:\n.LBE39:\n.LBE38:\n.LBB47:\nmovq %rax,%rsi\nmovq %r14,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\n.LBE47:\n.LBB48:\n.LBB46:\n.LBB42:\n.LBB41:\nmovq -392(%rbp),%rax\ncmpq %rax,-56(%rbp)\nsetne %al\n.L30:\n.LBE41:\n.LBE42:\ntestb %al,%al\nje .L31\n.LBB43:\nmovq -384(%rbp),%r12\nmovq -376(%rbp),%r13\nleaq <int..d>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rdx\nmovq -392(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -200(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq %r12,%rax\ntestq %rax,%rax\njne .L32\nmovl $0,%eax\njmp .L33\n.L32:\nmovq %r12,%rax\nmovq (%rax),%rax\n.L33:\nmovq %rax,-496(%rbp)\nmovq %r13,%rax\nmovq %rax,-488(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-192(%rbp)\nmovq -192(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -192(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovq -368(%rbp),%rax\ntestq %rax,%rax\njne .L34\nmovl $0,%eax\njmp .L35\n.L34:\nmovq -368(%rbp),%rax\nmovq (%rax),%rax\n.L35:\nmovq %rax,-464(%rbp)\nmovq -360(%rbp),%rax\nmovq %rax,-456(%rbp)\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovdqa -512(%rbp),%xmm0\nmovups %xmm0,-176(%rbp)\nmovdqa -496(%rbp),%xmm1\nmovups %xmm1,-160(%rbp)\nmovdqa -480(%rbp),%xmm2\nmovups %xmm2,-144(%rbp)\nmovdqa -464(%rbp),%xmm3\nmovups %xmm3,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L36\n.LBB44:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\n.LBE44:\njmp .L37\n.L36:\n.LBB45:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...64x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L37:\n.LBE45:\nmovq -184(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $4,-72(%rbp)\nmovq $4,-64(%rbp)\nleaq <.LC24>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $29,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -424(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L31:\n.LBE43:\n.LBE46:\n.LBE48:\n.LBE35:\n.LBB49:\naddq $1,%r14\n.L27:\n.LBE49:\ncmpq %r15,%r14\njl .L41\n.LBE32:\n.LBE31:\n.LBE30:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif jumps, impassable := MinimumJumps(tc.maxSteps); impassable != tc.impassable || jumps != tc.expectedJumps {\n\t\tt.Errorf(\"STR\", tc.expectedJumps, tc.impassable, jumps, impassable)\n\t}\n}"}
{"src": "leaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L289\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL61:\nret\n.L289:\npushq %rbp\nmovq %rsp,%rbp\nsubq $368,%rsp\nmovq %rdi,-344(%rbp)\nmovq %rsi,%rax\nmovq %rdx,%rsi\nmovq %rsi,%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovl %ecx,-348(%rbp)\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\n.LBB254:\nleaq <.LC195>(%rip),%r8\nmovl $5,%r9d\nmovq -344(%rbp),%rax\nmovq <64>(%rax),%rsi\nleaq -160(%rbp),%rax\nmovq %r8,%rdx\nmovq %r9,%rcx\nmovq %rax,%rdi\ncall <bufio.Writer.WriteString@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovzbl <go.memcache.space>(%rip),%edx\nmovq -344(%rbp),%rax\nmovq <64>(%rax),%rax\nmovl %edx,%esi\nmovq %rax,%rdi\ncall <bufio.Writer.WriteByte@PLT>\nmovq -344(%rbp),%rax\nmovq <64>(%rax),%rsi\nleaq -128(%rbp),%rdi\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <bufio.Writer.WriteString@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovzbl <go.memcache.space>(%rip),%edx\nmovq -344(%rbp),%rax\nmovq <64>(%rax),%rax\nmovl %edx,%esi\nmovq %rax,%rdi\ncall <bufio.Writer.WriteByte@PLT>\nmovl -348(%rbp),%eax\nmovslq %eax,%rcx\nmovq -344(%rbp),%rax\naddq $72,%rax\nmovq %rax,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $40,-80(%rbp)\nleaq -224(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovl $10,%edx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <strconv.AppendInt@PLT>\naddq $32,%rsp\nmovq -344(%rbp),%rax\nmovq <64>(%rax),%rdx\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <bufio.Writer.Write@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-240(%rbp)\n.LBB255:\nmovq -344(%rbp),%rax\nmovq <64>(%rax),%rdx\nleaq -32(%rbp),%rax\nsubq $8,%rsp\npushq <16+go.memcache.crlf>(%rip)\npushq <8+go.memcache.crlf>(%rip)\npushq <go.memcache.crlf>(%rip)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <bufio.Writer.Write@PLT>\naddq $32,%rsp\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -16(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%rax\nmovq -176(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\n.LBE255:\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\n.LBE254:\nleave\nret", "tgt": "c.bw.WriteString(\"STR\")\nc.bw.WriteByte(space)\nc.bw.WriteString(key)\nc.bw.WriteByte(space)\nc.bw.Write(strconv.AppendInt(c.numScratch[:0], int64(timeout), 10))\n_, err = c.bw.Write(crlf)\nreturn"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L40\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L40:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $104,%rsp\nmovq %rdi,%rcx\nmovq %rsi,%rbx\nmovq %rcx,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\n.LBB2:\n.LBB3:\nmovq -120(%rbp),%rcx\ntestq %rcx,%rcx\njne .L2\n.LBB4:\n.LBB5:\nleaq <.LC0>(%rip),%rax\nmovl $0,%edx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\njmp .L33\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq $0,-56(%rbp)\nmovq $1,-64(%rbp)\n.LBB6:\nmovq $0,-72(%rbp)\n.LBB7:\n.LBB8:\n.LBB9:\nmovq -120(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovl $0,%ebx\n.LBE9:\njmp .L4\n.L39:\n.LBB10:\nnop\n.LBE10:\n.LBB11:\n.LBB12:\nmovq -120(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -128(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L6\njmp .L34\n.L5:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBB13:\nleaq <1>(%rbx),%rax\nmovq %rax,-136(%rbp)\n.LBE13:\njmp .L8\n.L34:\n.LBB14:\nmovq -128(%rbp),%rcx\nmovq -120(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rdx,-136(%rbp)\n.L8:\n.LBE14:\n.LBE12:\nmovq %rbx,-72(%rbp)\n.LBB15:\nmovq -72(%rbp),%rax\nsubq -64(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -72(%rbp),%rax\naddq $1,%rax\nmovq %rax,-88(%rbp)\n.LBB16:\n.LBB17:\ncmpq $0,-80(%rbp)\nsetg %al\ntestb %al,%al\nje .L9\n.LBB18:\nmovq -80(%rbp),%rax\nsubq $1,%rax\nmovq -120(%rbp),%rdx\ncmpq $0,-88(%rbp)\njs .L10\ncmpq %rdx,-88(%rbp)\njg .L10\ntestq %rax,%rax\njns .L11\njmp .L12\n.L10:\nmovq -88(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceAlen@PLT>\n.L11:\ncmpq -88(%rbp),%rax\njg .L12\nmovq -128(%rbp),%rdx\ncmpq %rax,-88(%rbp)\njne .L13\njmp .L35\n.L12:\nmovq -88(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L13:\nmovq %rax,%rcx\njmp .L15\n.L35:\nmovl $0,%ecx\n.L15:\naddq %rcx,%rdx\nmovq %rdx,%r14\nmovq -88(%rbp),%rdx\nsubq %rax,%rdx\nmovq %rdx,%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.algorithms.sym>\n.L9:\n.LBE18:\n.LBE17:\ntestb %al,%al\nje .L16\n.LBB19:\nmovq -80(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-56(%rbp)\naddq $2,-64(%rbp)\n.LBE19:\njmp .L17\n.L16:\n.LBB20:\n.LBB21:\n.LBB22:\nmovq -80(%rbp),%rax\nnotq %rax\nshrq $63,%rax\ntestb %al,%al\nje .L18\n.LBB23:\nmovq -120(%rbp),%rax\ncmpq $0,-88(%rbp)\njs .L19\ncmpq %rax,-88(%rbp)\njg .L19\ncmpq $0,-80(%rbp)\njns .L20\njmp .L21\n.L19:\nmovq -88(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAlen@PLT>\n.L20:\nmovq -80(%rbp),%rax\ncmpq -88(%rbp),%rax\njg .L21\nmovq -128(%rbp),%rdx\nmovq -88(%rbp),%rax\ncmpq -80(%rbp),%rax\njne .L22\njmp .L36\n.L21:\nmovq -88(%rbp),%rdx\nmovq -80(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L22:\nmovq -80(%rbp),%rax\njmp .L24\n.L36:\nmovl $0,%eax\n.L24:\naddq %rdx,%rax\nmovq %rax,%r12\nmovq -88(%rbp),%rax\nsubq -80(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.algorithms.sym>\n.L18:\n.LBE23:\n.LBE22:\ntestb %al,%al\nje .L17\n.LBB24:\nmovq -80(%rbp),%rax\nmovq %rax,-56(%rbp)\naddq $1,-64(%rbp)\n.L17:\n.LBE24:\n.LBE21:\n.LBE20:\n.LBE16:\n.LBE15:\n.LBE11:\n.LBB25:\nmovq -136(%rbp),%rbx\n.L4:\n.LBE25:\ncmpq -144(%rbp),%rbx\njl .L39\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB26:\nmovq -56(%rbp),%rdx\nmovq -64(%rbp),%rax\nleaq (%rdx,%rax),%rdi\nmovq -120(%rbp),%rax\ntestq %rdi,%rdi\njs .L27\ncmpq %rax,%rdi\njg .L27\ncmpq $0,-56(%rbp)\njns .L28\njmp .L29\n.L27:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAlen@PLT>\n.L28:\ncmpq %rdi,-56(%rbp)\njg .L29\nmovq -128(%rbp),%rdx\ncmpq -56(%rbp),%rdi\njne .L30\njmp .L38\n.L29:\nmovq -56(%rbp),%rax\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L30:\nmovq -56(%rbp),%rax\njmp .L32\n.L38:\nmovl $0,%eax\n.L32:\naddq %rax,%rdx\nmovq %rdi,%rax\nsubq -56(%rbp),%rax\nmovq %rdx,-112(%rbp)\nmovq %rax,-104(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\n.L33:\n.LBE26:\n.LBE2:\naddq $104,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "if len(s) == 0 {\n\treturn \"STR\"\n}\nstart := 0\nmaxLen := 1\nfor index := range s {\n\tl := index - maxLen\n\tend := index + 1\n\tif l >= 1 && sym(s[l-1:end]) {\n\t\tstart = l - 1\n\t\tmaxLen += 2\n\t} else if l >= 0 && sym(s[l:end]) {\n\t\tstart = l\n\t\tmaxLen += 1\n\t}\n}\nreturn s[start : start+maxLen]"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L11\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L11:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $96,%rsp\nmovq %rdi,%rcx\nmovq %rsi,%rax\nmovq %rax,%rbx\nmovq %rcx,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <type..func.8net..z2fhttp.ResponseWriter.3.1net..z2fhttp.Request.9.8error.9>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\nmovq -104(%rbp),%rax\nmovq %rax,-32(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L7\n.LBB4:\nmovq -40(%rbp),%rax\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE4:\njmp .L8\n.L7:\n.LBB5:\nmovq -32(%rbp),%rax\nmovq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L8:\n.LBE5:\nmovq -40(%rbp),%rax\nmovq %rax,-24(%rbp)\n.LBB6:\nleaq <main.handle..func1>(%rip),%r12\nmovq -24(%rbp),%rbx\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.main.handleFunc1.0.1func.8net..z2fhttp.ResponseWriter.3.1net..z2fhttp.Request.9.8error.9.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq %r12,-64(%rbp)\nmovq %rbx,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB7:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE7:\njmp .L10\n.L9:\n.LBB8:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.main.handleFunc1.0.1func.8net..z2fhttp.ResponseWriter.3.1net..z2fhttp.Request.9.8error.9.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE8:\nmovq -72(%rbp),%rdx\nmovq -96(%rbp),%rcx\nmovq -88(%rbp),%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <net..z2fhttp.HandleFunc@PLT>\n.LBE6:\naddq $96,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "http.HandleFunc(path, func(res http.ResponseWriter, req *http.Request) {\n\terr := handleFunc(res, req)\n\tif err != nil {\n\t\thttp.Error(res, err.Error(), 500)\n\t}\n})"}
{"src": "cmpq %fs:112,%rsp\njnb .L105\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL12:\nret\n.L105:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $72,%rsp\nmovq %rdi,-104(%rbp)\ncmpq $0,-104(%rbp)\njne .L98\ncall <runtime.panicmem@PLT>\n.L98:\nmovq -104(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-96(%rbp)\nmovq $0,-56(%rbp)\n.LBB114:\nleaq -96(%rbp),%rax\nmovq %rax,%rdi\ncall <go.reflect.rawType.Kind>\nmovq %rax,-64(%rbp)\n.LBB115:\n.LBB116:\ncmpq $1,-64(%rbp)\nseta %al\ntestb %al,%al\nje .L99\n.LBB117:\ncmpq $16,-64(%rbp)\nsetbe %al\n.L99:\n.LBE117:\n.LBE116:\ntestb %al,%al\nje .L100\n.LBB118:\n.LBB119:\nleaq -96(%rbp),%rax\nmovq %rax,%rdi\ncall <go.reflect.rawType.Size>\nsalq $3,%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rax\njmp .L104\n.L100:\n.LBE119:\n.LBE118:\n.LBE115:\nleaq <go.reflect.TypeError..d>(%rip),%r12\nleaq <go.reflect.TypeError..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nleaq <.LC22>(%rip),%r14\nmovl $4,%r15d\nmovq %r14,-80(%rbp)\nmovq %r15,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L102\n.LBB120:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE120:\njmp .L103\n.L102:\n.LBB121:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.reflect.TypeError..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L103:\n.LBE121:\nmovq -88(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L104:\n.LBE114:\naddq $72,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "kind := t.Kind()\nif kind >= Int && kind <= Complex128 {\n\treturn int(t.Size()) * 8\n}\npanic(TypeError{\"STR\"})"}
{"src": "cmpq %fs:112,%rsp\njnb .L113\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL20:\nret\n.L113:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $40,%rsp\nmovq %rdi,-56(%rbp)\ncmpq $0,-56(%rbp)\njne .L112\ncall <runtime.panicmem@PLT>\n.L112:\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\n.LBB68:\ncall <runtime.printlock@PLT>\nleaq <.LC165>(%rip),%r12\nmovl $10,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.printstring@PLT>\ncall <runtime.printsp@PLT>\nmovl $4,%edi\ncall <runtime.printint@PLT>\ncall <runtime.printnl@PLT>\ncall <runtime.printunlock@PLT>\n.LBE68:\naddq $40,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "println(\"STR\", len(a))"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\n.LBB3:\nmovq -56(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-16(%rbp)\nmovq -24(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq <8>(%rcx),%rcx\nmovq %rdx,%rax\nmovq %rax,%rdi\ncall *%rcx\n.LVL1:\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return e.Errs[0].Error()"}
{"src": ".LFB451:\nleaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L12156\nmovl $296,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL553:\nret\n.L12156:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-280(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\n.LBB9687:\nleaq -176(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nmovq <24>(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-272(%rbp)\nmovq %rbx,-264(%rbp)\nmovq %rbx,-256(%rbp)\n.LBB9688:\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB9689:\n.LBB9690:\n.LBB9691:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r13\nmovl $0,%ebx\n.LBE9691:\njmp .L12112\n.L12154:\n.LBB9692:\nnop\n.LBE9692:\n.LBB9693:\n.LBB9694:\nmovq -168(%rbp),%rax\ntestq %rbx,%rbx\njs .L12113\ncmpq %rax,%rbx\njge .L12113\nmovq -176(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9694:\n.LBB9695:\nmovq %rbx,-40(%rbp)\nmovq %rax,-48(%rbp)\n.LBE9695:\n.LBB9696:\n.LBB9697:\n.LBB9698:\njmp .L12114\n.L12113:\n.LBE9698:\n.LBE9697:\n.LBE9696:\n.LBB9707:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12153:\n.LBE9707:\n.LBB9708:\n.LBB9704:\n.LBB9703:\n.LBB9699:\nnop\n.LBE9699:\n.LBB9700:\nmovq -232(%rbp),%rax\nmovq -232(%rbp),%rcx\nsubq $1,%rax\nmovq -232(%rbp),%rdx\ntestq %rax,%rax\njs .L12115\ncmpq %rdx,%rax\njl .L12143\n.L12115:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12143:\nmovq -240(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq -264(%rbp),%rdx\ntestq %rax,%rax\njs .L12117\ncmpq %rdx,%rax\njl .L12144\n.L12117:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12144:\nleaq -1(%rcx),%rdx\nmovq -232(%rbp),%rcx\ntestq %rdx,%rdx\njs .L12119\ncmpq %rcx,%rdx\njl .L12145\n.L12119:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12145:\nmovq -240(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq -272(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq -40(%rbp),%rdx\nsubq %rcx,%rdx\nmovq %rdx,(%rax)\nmovq -232(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -224(%rbp),%rax\ntestq %rdi,%rdi\njs .L12121\ncmpq %rax,%rdi\njg .L12121\ntestq %rdi,%rdi\njns .L12122\njmp .L12146\n.L12121:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L12146:\nmovq %rdi,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L12122:\nmovq -240(%rbp),%rdx\nmovq -224(%rbp),%rax\nmovq %rdx,-240(%rbp)\nmovq %rdi,-232(%rbp)\nmovq %rax,-224(%rbp)\n.L12114:\n.LBE9700:\n.LBB9701:\nmovq -232(%rbp),%rax\ntestq %rax,%rax\nsetg %al\ntestb %al,%al\nje .L12124\n.LBB9702:\nmovq -232(%rbp),%rax\nsubq $1,%rax\nmovq -232(%rbp),%rdx\ntestq %rax,%rax\njs .L12125\ncmpq %rdx,%rax\njl .L12147\n.L12125:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12147:\nmovq -240(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L12127\ncmpq %rdx,%rax\njl .L12148\n.L12127:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12148:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-48(%rbp)\nsetg %al\n.L12124:\n.LBE9702:\n.LBE9701:\ntestb %al,%al\njne .L12153\n.LBE9703:\n.LBE9704:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L12131\n.LBB9705:\nmovq -144(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-224(%rbp)\n.LBE9705:\njmp .L12132\n.L12131:\n.LBB9706:\nmovq -144(%rbp),%rcx\nmovq -128(%rbp),%rdx\nmovq %rcx,-240(%rbp)\nmovq %rax,-232(%rbp)\nmovq %rdx,-224(%rbp)\n.L12132:\n.LBE9706:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE9708:\n.LBE9693:\n.LBB9709:\naddq $1,%rbx\n.L12112:\n.LBE9709:\ncmpq %r13,%rbx\njl .L12154\n.LBE9690:\n.LBE9689:\n.LBE9688:\n.LBB9710:\nmovq $0,-56(%rbp)\n.LBB9711:\n.LBB9712:\n.LBB9713:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rcx\nmovl $0,%eax\n.LBE9713:\njmp .L12135\n.L12155:\n.LBB9714:\nnop\n.LBE9714:\n.LBB9715:\n.LBB9716:\nmovq -104(%rbp),%rdx\ntestq %rax,%rax\njs .L12136\ncmpq %rdx,%rax\njge .L12136\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE9716:\n.LBB9717:\nmovq %rdx,-56(%rbp)\n.LBE9717:\n.LBB9718:\nmovq -264(%rbp),%rdx\ncmpq $0,-56(%rbp)\njns .L12137\njmp .L12138\n.L12136:\n.LBE9718:\n.LBB9719:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12137:\n.LBE9719:\n.LBB9720:\ncmpq %rdx,-56(%rbp)\njl .L12151\n.L12138:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L12151:\nmovq -272(%rbp),%rsi\nmovq -56(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq $0,(%rdx)\n.LBE9720:\n.LBE9715:\n.LBB9721:\naddq $1,%rax\n.L12135:\n.LBE9721:\ncmpq %rcx,%rax\njl .L12155\n.LBE9712:\n.LBE9711:\n.LBE9710:\n.LBB9722:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -280(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE9722:\n.LBE9687:\nmovq -280(%rbp),%rax\naddq $264,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "stack := make([]int, 0)\nresult := make([]int, len(T))\nfor i, t := range T {\n\tfor len(stack) > 0 && T[stack[len(stack)-1]] < t {\n\t\tresult[stack[len(stack)-1]] = i - stack[len(stack)-1]\n\t\tstack = stack[:len(stack)-1]\n\t}\n\tstack = append(stack, i)\n}\nfor _, i := range stack {\n\tresult[i] = 0\n}\nreturn result"}
{"src": "cmpq %fs:112,%rsp\njnb .L552\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL56:\nret\n.L552:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $56,%rsp\nmovq $0,-40(%rbp)\n.LBB454:\nleaq <go.heap.IntArray..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\naddq $16,%rax\nmovq <16>(%rbp),%rcx\nmovq <24>(%rbp),%rbx\nmovq %rcx,-80(%rbp)\nmovq %rbx,-72(%rbp)\nmovq <32>(%rbp),%rdx\nmovq %rdx,-64(%rbp)\nmovq -72(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -64(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L546\n.LBB455:\nmovq -80(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE455:\njmp .L547\n.L546:\n.LBB456:\nmovq -80(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L547:\n.LBE456:\nmovq -48(%rbp),%rax\nleaq <pimt..interface.4Append.0func.8interface.4.5.9.8.9.2Head.0func.8.9.8interface.4.5.9.2Key.0func.8interface.4.5.9.8int.9.2Last.0func.8.9.8interface.4.5.9.2Left.0func.8interface.4.5.9.8interface.4.5.9.2Len.0func.8.9.8int.9.2Next.0func.8interface.4.5.9.8interface.4.5.9.2Parent.0func.8interface.4.5.9.8interface.4.5.9.2Pop.0func.8.9.8interface.4.5.9.2Prev.0func.8interface.4.5.9.8interface.4.5.9.2Right.0func.8interface.4.5.9.8interface.4.5.9.2Swap.0func.8interface.4.5.3interface.4.5.9.8.9.2Union.0func.8interface.4.5.9.8interface.4.5.9.2Valid.0func.8interface.4.5.9.8bool.9.2Value.0func.8interface.4.5.9.8interface.4.5.9.5..go.heap.heapIntArrays>(%rip),%r12\ncmpq $0,-48(%rbp)\njne .L548\ncall <runtime.panicmem@PLT>\n.L548:\nmovq -48(%rbp),%rdx\naddq $16,%rdx\nmovq %rdx,%r13\nmovq %r12,%rdx\nmovq %rdx,(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L549\n.LBB457:\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\n.LBE457:\njmp .L550\n.L549:\n.LBB458:\nmovq %r13,%rdx\naddq $8,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L550:\n.LBE458:\nmovq -48(%rbp),%rax\nmovq %rax,%rdi\ncall <go.heap.IntArray.BuildHeap..stub>\n.LBB459:\nmovq -48(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE459:\n.LBE454:\naddq $56,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "h := new(IntArray)\nh.heapIntArrays = arr\nh.heap.binHeapArrayIf = &h.heapIntArrays\nh.BuildHeap()\nreturn h"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L17\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L17:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $40,%rsp\nmovq %rdi,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\ncmpq $1,-40(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\ncmpq $2,-40(%rbp)\nsete %al\n.L2:\n.LBE5:\n.LBE4:\ntestb %al,%al\nje .L3\n.LBB6:\n.LBB7:\nmovl $1,%edi\ncall <math..z2fbig.NewInt@PLT>\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L4\n.L3:\n.LBE7:\n.LBE6:\n.LBE3:\n.LBB8:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L5\ncmpq %rax,-40(%rbp)\njl .L14\n.L5:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq <16>(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\nje .L7\n.LBB9:\n.LBB10:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L8\ncmpq %rax,-40(%rbp)\njl .L15\n.L8:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq <16>(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L4\n.L7:\n.LBE10:\n.LBE9:\n.LBE8:\nmovl $0,%edi\ncall <math..z2fbig.NewInt@PLT>\nmovq %rax,-32(%rbp)\nmovq -40(%rbp),%rax\nsubq $1,%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <go.problem25.FibonacciHelper>\naddq $32,%rsp\nmovq %rax,%rbx\nmovq -40(%rbp),%rax\nsubq $2,%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <go.problem25.FibonacciHelper>\naddq $32,%rsp\nmovq %rax,%rdx\nmovq -32(%rbp),%rax\nmovq %rbx,%rsi\nmovq %rax,%rdi\ncall <math..z2fbig.Int.Add@PLT>\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L10\ncmpq %rax,-40(%rbp)\njl .L16\n.L10:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\nmovq <16>(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L12\n.LBB11:\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE11:\njmp .L13\n.L12:\n.LBB12:\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L13:\n.LBE12:\n.LBB13:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.L4:\n.LBE13:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "if n == 1 || n == 2 {\n\treturn big.NewInt(1)\n}\nif mem[n] != nil {\n\treturn mem[n]\n}\nresult := big.NewInt(0)\nresult.Add(FibonacciHelper(n-1, mem), FibonacciHelper(n-2, mem))\nmem[n] = result\nreturn result"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $136,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\naddq $-128,%rsp\nmovq %rdi,-120(%rbp)\nmovq $0,-8(%rbp)\n.LBB2:\nmovq $1,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $5,-64(%rbp)\nmovq $10,-56(%rbp)\nmovq $20,-48(%rbp)\nmovq $50,-40(%rbp)\nmovq $100,-32(%rbp)\nmovq $200,-24(%rbp)\nleaq -80(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $8,-104(%rbp)\nmovq $8,-96(%rbp)\ncall <runtime.makemap_small@PLT>\nmovq %rax,-16(%rbp)\n.LBB3:\nmovq -16(%rbp),%rdx\nmovq -120(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rsi\nmovl $0,%edi\ncall <go.probs.findAllWays>\naddq $32,%rsp\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "coins := []int{1, 2, 5, 10, 20, 50, 100, 200}\nmemo := make(map[string]int)\nreturn findAllWays(coins, 0, n, memo)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $248,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $216,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB2:\nmovq <encoding..z2fbase64.StdEncoding>(%rip),%rsi\nleaq -80(%rbp),%rdi\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <encoding..z2fbase64.Encoding.DecodeString@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\n.LBB3:\nmovq -224(%rbp),%rax\ntestq %rax,%rax\nje .L2\n.LBB4:\nleaq <string..d>(%rip),%r12\nleaq <go..C6>(%rip),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L2:\n.LBE4:\n.LBE3:\n.LBB5:\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\ncall <encoding..z2fhex.EncodeToString@PLT>\naddq $32,%rsp\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\n.LBE5:\n.LBE2:\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "data, err := base64.StdEncoding.DecodeString(b64)\nif err != nil {\n\tpanic(\"STR\")\n}\nreturn hex.EncodeToString(data)"}
{"src": ".LFB1:\nleaq -968(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L62\nmovl $968,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L62:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $920,%rsp\nmovq %rdi,-904(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-792(%rbp)\nmovq -792(%rbp),%rax\nmovq $186,(%rax)\nmovq $419,<8>(%rax)\nmovq $83,<16>(%rax)\nmovq $408,<24>(%rax)\nmovq -792(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovq $4,-744(%rbp)\nmovq $4,-736(%rbp)\nmovq $6249,-728(%rbp)\nmovq $20,-720(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-784(%rbp)\nmovq -784(%rbp),%rax\nmovq $1,(%rax)\nmovq $2147483647,<8>(%rax)\nmovq -784(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovq $2,-704(%rbp)\nmovq $2,-696(%rbp)\nmovq $2,-688(%rbp)\nmovq $2,-680(%rbp)\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-776(%rbp)\nmovq -776(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $5,<16>(%rax)\nmovq -776(%rbp),%rax\nmovq %rax,-672(%rbp)\nmovq $3,-664(%rbp)\nmovq $3,-656(%rbp)\nmovq $11,-648(%rbp)\nmovq $3,-640(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-768(%rbp)\nmovq -768(%rbp),%rax\nmovq $2,(%rax)\nmovq -768(%rbp),%rax\nmovq %rax,-632(%rbp)\nmovq $1,-624(%rbp)\nmovq $1,-616(%rbp)\nmovq $3,-608(%rbp)\nmovq $-1,-600(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-760(%rbp)\nmovq -760(%rbp),%rax\nmovq $1,(%rax)\nmovq -760(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $1,-584(%rbp)\nmovq $1,-576(%rbp)\nmovq $0,-568(%rbp)\nmovq $0,-560(%rbp)\nleaq -752(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq $5,-808(%rbp)\nmovq $5,-800(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC19>(%rip),%rax\nmovq %rax,-928(%rbp)\nmovq $69,-920(%rbp)\nleaq -208(%rbp),%rax\nmovq -928(%rbp),%rcx\nmovq -920(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB29:\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\nmovq $0,-840(%rbp)\nmovq $0,-832(%rbp)\n.LBB30:\n.LBB31:\n.LBB32:\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -800(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%rax\nmovq %rax,-928(%rbp)\nmovl $0,%ebx\n.LBE32:\njmp .L52\n.L61:\n.LBB33:\nnop\n.LBE33:\n.LBB34:\n.LBB35:\nmovq -456(%rbp),%rax\ntestq %rbx,%rbx\njs .L53\ncmpq %rax,%rbx\njge .L53\nmovq -464(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-512(%rbp)\nmovq %rdi,-504(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-496(%rbp)\nmovq %rdi,-488(%rbp)\nmovq <32>(%rax),%rax\nmovq %rax,-480(%rbp)\n.LBE35:\n.LBB36:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-832(%rbp)\n.LBE36:\n.LBB37:\nmovq -832(%rbp),%rax\nmovq %rax,-824(%rbp)\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-896(%rbp)\nmovq %rdx,-888(%rbp)\nmovq -848(%rbp),%rax\nmovq -840(%rbp),%rdx\nmovq %rax,-880(%rbp)\nmovq %rdx,-872(%rbp)\nmovq -872(%rbp),%rax\nsubq $8,%rsp\npushq -880(%rbp)\npushq -888(%rbp)\npushq -896(%rbp)\nmovq %rax,%rdi\ncall <go.leetcode.coinChange>\naddq $32,%rsp\nmovq %rax,-912(%rbp)\nleaq <go.leetcode..go.leetcode.para322..d>(%rip),%rax\nmovq %rax,-960(%rbp)\nleaq <go.leetcode..go.leetcode.para322..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L54\njmp .L59\n.L53:\n.LBE37:\n.LBB40:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\n.LBE40:\n.LBB41:\n.LBB38:\nmovq -360(%rbp),%rcx\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE38:\njmp .L56\n.L59:\n.LBB39:\nmovq -360(%rbp),%rax\nleaq -352(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para322..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L56:\n.LBE39:\nmovq -360(%rbp),%rax\nmovq %rax,-952(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-944(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -912(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-936(%rbp)\nmovdqa -960(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -944(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC20>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE41:\n.LBE34:\n.LBB42:\naddq $1,%rbx\n.L52:\n.LBE42:\ncmpq -928(%rbp),%rbx\njl .L61\n.LBE31:\n.LBE30:\n.LBE29:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question322{\n\t{\n\t\tpara322{[]int{186, 419, 83, 408}, 6249},\n\t\tans322{20},\n\t},\n\t{\n\t\tpara322{[]int{1, 2147483647}, 2},\n\t\tans322{2},\n\t},\n\t{\n\t\tpara322{[]int{1, 2, 5}, 11},\n\t\tans322{3},\n\t},\n\t{\n\t\tpara322{[]int{2}, 3},\n\t\tans322{-1},\n\t},\n\t{\n\t\tpara322{[]int{1}, 0},\n\t\tans322{0},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans322, q.para322\n\tfmt.Printf(\"STR\", p, coinChange(p.one, p.amount))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB2:\nleaq -552(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L92\nmovl $552,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L92:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $504,%rsp\nmovq %rdi,-472(%rbp)\nmovq -472(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB85:\nmovq $0,-464(%rbp)\nmovq $0,-456(%rbp)\nmovq $0,-448(%rbp)\nmovq $0,-440(%rbp)\nmovq $0,-432(%rbp)\nmovq $0,-424(%rbp)\n.LBB86:\n.LBB87:\n.LBB88:\nmovq <go.day265.testcases>(%rip),%rax\nmovq <8+go.day265.testcases>(%rip),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq <16+go.day265.testcases>(%rip),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%r13\nmovl $0,%r12d\n.LBE88:\njmp .L73\n.L91:\n.LBB89:\nnop\n.LBE89:\n.LBB90:\n.LBB91:\nmovq -328(%rbp),%rax\ntestq %r12,%r12\njs .L74\ncmpq %rax,%r12\njge .L74\nmovq -336(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\n.LBE91:\n.LBB92:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\n.LBE92:\n.LBB93:\n.LBB94:\nleaq -416(%rbp),%rax\nsubq $8,%rsp\npushq -448(%rbp)\npushq -456(%rbp)\npushq -464(%rbp)\nmovq %rax,%rdi\ncall <go.day265.Bonuses>\naddq $32,%rsp\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-512(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-192(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L75\njmp .L89\n.L74:\n.LBE94:\n.LBE93:\n.LBB107:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L75:\n.LBE107:\n.LBB108:\n.LBB106:\n.LBB95:\nmovq -216(%rbp),%rcx\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -192(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE95:\njmp .L77\n.L89:\n.LBB96:\nmovq -216(%rbp),%rax\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L77:\n.LBE96:\nmovq -216(%rbp),%rax\nmovq %rax,-504(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-496(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L78\n.LBB97:\nmovq -248(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE97:\njmp .L79\n.L78:\n.LBB98:\nmovq -248(%rbp),%rax\nleaq -240(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L79:\n.LBE98:\nmovq -248(%rbp),%rax\nmovq %rax,-488(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -512(%rbp),%rdx\nmovq -504(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L80\n.LBB99:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-544(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -440(%rbp),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L81\n.LBB100:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE100:\njmp .L82\n.L81:\n.LBB101:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L82:\n.LBE101:\nmovq -184(%rbp),%rax\nmovq %rax,-536(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-528(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L83\n.LBB102:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE102:\njmp .L84\n.L83:\n.LBB103:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L84:\n.LBE103:\nmovq -152(%rbp),%rax\nmovq %rax,-520(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -544(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovdqa -528(%rbp),%xmm1\nmovups %xmm1,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L85\n.LBB104:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE104:\njmp .L86\n.L85:\n.LBB105:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L86:\n.LBE105:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC15>(%rip),%r14\nmovl $19,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -472(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L80:\n.LBE99:\n.LBE106:\n.LBE108:\n.LBE90:\n.LBB109:\naddq $1,%r12\n.L73:\n.LBE109:\ncmpq %r13,%r12\njl .L91\n.LBE87:\n.LBE86:\n.LBE85:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif bonuses := Bonuses(tc.locs); !reflect.DeepEqual(bonuses, tc.bonuses) {\n\t\tt.Errorf(\"STR\", tc.bonuses, bonuses)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L8\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\nmovl %edi,-20(%rbp)\nmovq $0,-16(%rbp)\n.LBB2:\nmovl $0,-4(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L7:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovl -20(%rbp),%eax\nandl $1,%eax\naddl %eax,-4(%rbp)\nshrl -20(%rbp)\n.L2:\n.LBE6:\ncmpl $0,-20(%rbp)\njne .L7\n.LBE4:\n.LBE3:\n.LBB7:\nmovl -4(%rbp),%eax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\n.LBE7:\n.LBE2:\npopq %rbp\nret", "tgt": "count := uint32(0)\nfor num != 0 {\n\tcount += num & 1\n\tnum = num >> 1\n}\nreturn int(count)"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L67\nmovl $152,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L67:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $136,%rsp\nmovb $0,-49(%rbp)\n.LBB19:\nmovq $0,-24(%rbp)\n.LBB20:\nmovq $0,-64(%rbp)\n.LBB21:\n.LBB22:\n.LBB23:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rcx\nmovl $0,%eax\n.LBE23:\njmp .L20\n.L63:\n.LBB24:\nnop\n.LBE24:\n.LBB25:\n.LBB26:\nmovq -104(%rbp),%rdx\ntestq %rax,%rax\njs .L21\ncmpq %rdx,%rax\njge .L21\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE26:\n.LBB27:\nmovq %rdx,-64(%rbp)\n.LBE27:\n.LBB28:\nmovq -64(%rbp),%rdx\naddq %rdx,-24(%rbp)\n.LBE28:\n.LBE25:\n.LBB30:\naddq $1,%rax\njmp .L20\n.L21:\n.LBE30:\n.LBB31:\n.LBB29:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\n.LBE29:\n.LBE31:\ncmpq %rcx,%rax\njl .L63\n.LBE22:\n.LBE21:\n.LBE20:\n.LBB32:\nmovq -24(%rbp),%rax\nandl $1,%eax\ntestq %rax,%rax\nje .L24\n.LBB33:\n.LBB34:\nmovb $0,-49(%rbp)\nmovzbl -49(%rbp),%eax\njmp .L51\n.L24:\n.LBE34:\n.LBE33:\n.LBE32:\nmovq -24(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-72(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -72(%rbp),%rax\nleaq <1>(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <bool..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-144(%rbp)\nmovq %rbx,-136(%rbp)\nmovq %rbx,-128(%rbp)\n.LBB35:\nmovq $0,-32(%rbp)\n.LBB36:\njmp .L26\n.L64:\n.LBB37:\nnop\n.LBE37:\n.LBB38:\nmovq -136(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L27\ncmpq %rax,-32(%rbp)\njl .L53\n.L27:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L53:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L29\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nmovq -144(%rbp),%rcx\nmovq -32(%rbp),%rdx\naddq %rcx,%rdx\ncmpq %rax,-32(%rbp)\nsete %al\nmovb %al,(%rdx)\n.LBE38:\n.LBB39:\naddq $1,-32(%rbp)\n.L26:\n.LBE39:\nmovq -32(%rbp),%rax\ncmpq -72(%rbp),%rax\njle .L64\n.LBE36:\n.LBE35:\n.LBB40:\nmovq $0,-40(%rbp)\n.LBB41:\njmp .L32\n.L66:\n.LBB42:\nnop\n.LBE42:\n.LBB43:\n.LBB44:\nmovq -72(%rbp),%rax\nmovq %rax,-48(%rbp)\n.LBB45:\njmp .L33\n.L65:\n.LBB46:\nnop\n.LBE46:\n.LBB47:\n.LBB48:\nmovq -136(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L34\ncmpq %rax,-48(%rbp)\njl .L55\n.L34:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\nmovq -144(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L36\n.LBB49:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L37\ncmpq %rax,-40(%rbp)\njl .L56\n.L37:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L56:\nmovq <16>(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -48(%rbp),%rax\nsubq %rdx,%rax\nmovq -136(%rbp),%rdx\ntestq %rax,%rax\njs .L39\ncmpq %rdx,%rax\njl .L57\n.L39:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L57:\nmovq -144(%rbp),%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\n.L36:\n.LBE49:\n.LBE48:\nmovq -136(%rbp),%rdx\ncmpq $0,-48(%rbp)\njs .L41\ncmpq %rdx,-48(%rbp)\njl .L58\n.L41:\nmovq -48(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\nmovq -144(%rbp),%rcx\nmovq -48(%rbp),%rdx\naddq %rcx,%rdx\nmovb %al,(%rdx)\n.LBE47:\n.LBB50:\nsubq $1,-48(%rbp)\n.L33:\n.LBE50:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L43\ncmpq %rax,-40(%rbp)\njl .L59\n.L43:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L59:\nmovq <16>(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-48(%rbp)\njge .L65\n.LBE45:\n.LBE44:\n.LBE43:\n.LBB51:\naddq $1,-40(%rbp)\n.L32:\n.LBE51:\nmovq -40(%rbp),%rax\ncmpq -80(%rbp),%rax\njl .L66\n.LBE41:\n.LBE40:\n.LBB52:\nmovq -136(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L49\ncmpq %rax,-72(%rbp)\njl .L62\n.L49:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\nmovq -144(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovb %al,-49(%rbp)\nmovzbl -49(%rbp),%eax\n.L51:\n.LBE52:\n.LBE19:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "var sum int\nfor _, num := range nums {\n\tsum += num\n}\nif sum%2 != 0 {\n\treturn false\n}\nc := sum / 2\nn := len(nums)\nmemo := make([]bool, c+1)\nfor i := 0; i <= c; i++ {\n\tmemo[i] = nums[0] == i\n}\nfor i := 0; i < n; i++ {\n\tfor j := c; j >= nums[i]; j-- {\n\t\tmemo[j] = memo[j] || memo[j-nums[i]]\n\t}\n}\nreturn memo[c]"}
{"src": ".LFB217:\ncmpq %fs:112,%rsp\njnb .L5736\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL275:\nret\n.L5736:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $64,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq $0,-48(%rbp)\n.LBB4688:\nmovq $0,-24(%rbp)\n.LBB4689:\nmovl $0,-52(%rbp)\n.LBB4690:\n.LBB4691:\n.LBB4692:\nmovq -72(%rbp),%r12\nmovl $0,%eax\n.LBE4692:\njmp .L5713\n.L5734:\n.LBB4693:\nnop\n.LBE4693:\n.LBB4694:\n.LBB4695:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L5714\ncmpq %rdx,%rax\njge .L5714\nmovq -80(%rbp),%rdx\nmovq %rax,%rcx\naddq %rcx,%rdx\nmovzbl (%rdx),%edx\nmovzbl %dl,%edx\ncmpl $127,%edx\njle .L5715\njmp .L5730\n.L5714:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L5715:\n.LBB4696:\naddq $1,%rax\n.LBE4696:\njmp .L5717\n.L5730:\n.LBB4697:\nmovq -80(%rbp),%rsi\nmovq -72(%rbp),%rcx\nmovq %rax,%rdx\nmovq %rsi,%rdi\nmovq %rcx,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovl %ecx,%edx\nmovq %rbx,%rax\n.L5717:\n.LBE4697:\n.LBE4695:\n.LBB4698:\nmovl %edx,-52(%rbp)\n.LBE4698:\n.LBB4699:\n.LBB4700:\ncmpl $40,-52(%rbp)\njne .L5718\n.LBB4701:\naddq $1,-24(%rbp)\n.LBE4701:\njmp .L5713\n.L5718:\n.LBB4702:\n.LBB4703:\ncmpq $0,-24(%rbp)\njle .L5713\n.LBB4704:\nsubq $1,-24(%rbp)\n.L5713:\n.LBE4704:\n.LBE4703:\n.LBE4702:\n.LBE4700:\n.LBE4699:\n.LBE4694:\ncmpq %r12,%rax\njl .L5734\n.LBE4691:\n.LBE4690:\n.LBE4689:\nmovq $0,-32(%rbp)\n.LBB4705:\nmovq -72(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-40(%rbp)\n.LBB4706:\njmp .L5722\n.L5735:\n.LBB4707:\nnop\n.LBE4707:\n.LBB4708:\n.LBB4709:\nmovq -72(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L5723\ncmpq %rax,-40(%rbp)\njge .L5723\nmovq -80(%rbp),%rdx\nmovq -40(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $41,%al\nje .L5724\njmp .L5732\n.L5723:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L5724:\n.LBB4710:\naddq $1,-32(%rbp)\n.LBE4710:\njmp .L5726\n.L5732:\n.LBB4711:\n.LBB4712:\ncmpq $0,-32(%rbp)\njle .L5726\n.LBB4713:\nsubq $1,-32(%rbp)\n.L5726:\n.LBE4713:\n.LBE4712:\n.LBE4711:\n.LBE4709:\n.LBE4708:\n.LBB4714:\nsubq $1,-40(%rbp)\n.L5722:\n.LBE4714:\ncmpq $0,-40(%rbp)\njns .L5735\n.LBE4706:\n.LBE4705:\n.LBB4715:\nmovq -24(%rbp),%rdx\nmovq -32(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.LBE4715:\n.LBE4688:\naddq $64,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "count1 := 0\nfor _, r := range S {\n\tif r == '(' {\n\t\tcount1++\n\t} else if count1 > 0 {\n\t\tcount1--\n\t}\n}\ncount2 := 0\nfor i := len(S) - 1; i >= 0; i-- {\n\tif S[i] == ')' {\n\t\tcount2++\n\t} else if count2 > 0 {\n\t\tcount2--\n\t}\n}\nreturn count1 + count2"}
{"src": ".LFB0:\nleaq -296(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L14\nmovl $296,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $248,%rsp\n.LBB2:\nmovq <main.rangeMin>(%rip),%rax\nmovq %rax,-56(%rbp)\n.LBB3:\njmp .L2\n.L13:\n.LBB4:\nnop\n.LBE4:\n.LBB5:\n.LBB6:\ncmpq $-1,-56(%rbp)\nje .L3\ncmpq $0,-56(%rbp)\njne .L4\ncall <runtime.panicdivide@PLT>\n.L4:\nmovq <main.evenlyDivisble>(%rip),%rax\ncqto\nidivq -56(%rbp)\nmovq %rdx,%rax\ntestq %rax,%rax\nsetne %al\njmp .L5\n.L3:\nmovl $0,%eax\n.L5:\ntestb %al,%al\nje .L6\n.LBB7:\nmovq <main.evenlyDivisble>(%rip),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <main.lcm>\nmovq <main.evenlyDivisble>(%rip),%rdx\nimulq %rdx,%rax\nmovq %rax,<main.evenlyDivisble>(%rip)\n.L6:\n.LBE7:\n.LBE6:\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-288(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-216(%rbp)\nmovq -216(%rbp),%rax\nmovq <main.evenlyDivisble>(%rip),%rdx\nmovq %rdx,(%rax)\nmovq -216(%rbp),%rax\nmovq %rax,-280(%rbp)\nleaq <string..d>(%rip),%r14\nleaq <go..C11>(%rip),%r15\nmovq %rbx,-272(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-208(%rbp)\nmovq -208(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -208(%rbp),%rax\nmovq %rax,-264(%rbp)\nleaq <string..d>(%rip),%r12\nleaq <go..C12>(%rip),%r13\nmovq %rbx,-256(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\ncmpq $-1,-56(%rbp)\njne .L7\nmovq <main.evenlyDivisble>(%rip),%rax\nnegq %rax\nmovq %rax,%rdx\njmp .L8\n.L7:\ncmpq $0,-56(%rbp)\njne .L9\ncall <runtime.panicdivide@PLT>\n.L9:\nmovq <main.evenlyDivisble>(%rip),%rax\ncqto\nidivq -56(%rbp)\nmovq %rax,%rdx\n.L8:\nmovq -200(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -200(%rbp),%rax\nmovq %rax,-248(%rbp)\nmovdqa -288(%rbp),%xmm0\nmovups %xmm0,-192(%rbp)\nmovq %r14,-176(%rbp)\nmovq %r15,-168(%rbp)\nmovdqa -272(%rbp),%xmm1\nmovups %xmm1,-160(%rbp)\nmovq %r12,-144(%rbp)\nmovq %r13,-136(%rbp)\nmovdqa -256(%rbp),%xmm2\nmovups %xmm2,-128(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $5,-104(%rbp)\nmovq $5,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-224(%rbp)\n.LBE5:\n.LBB8:\naddq $1,-56(%rbp)\n.L2:\n.LBE8:\nmovq <main.rangeMax>(%rip),%rax\ncmpq %rax,-56(%rbp)\njle .L13\n.LBE3:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "for i := rangeMin; i <= rangeMax; i++ {\n\tif evenlyDivisble%i != 0 {\n\t\tevenlyDivisble = evenlyDivisble * lcm(evenlyDivisble, i)\n\t}\n\tfmt.Println(evenlyDivisble, \"STR\", i, \"STR\", evenlyDivisble/i)\n}"}
{"src": ".LFB0:\nleaq -488(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L10\nmovl $488,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L10:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $440,%rsp\nmovl $0,%edi\ncall <log.SetFlags@PLT>\nmovq $0,-352(%rbp)\nmovq $0,-344(%rbp)\nleaq <.LC24>(%rip),%r12\nmovl $10,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <html..z2ftemplate.New@PLT>\nmovq %rax,-56(%rbp)\nleaq <type..func.8string.9.8string.9>(%rip),%r14\nleaq <main.main..func1..f>(%rip),%r15\nleaq <.LC25>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $9,-440(%rbp)\nmovdqa -448(%rbp),%xmm0\nmovups %xmm0,-336(%rbp)\nmovq %r14,-320(%rbp)\nmovq %r15,-312(%rbp)\nleaq -336(%rbp),%rax\nmovq %rax,%r8\nmovl $16,%ecx\nmovl $32,%edx\nmovl $1,%esi\nleaq <type..map.6string.7interface.4.5>(%rip),%rdi\ncall <__go_construct_map@PLT>\nmovq %rax,%rdx\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <html..z2ftemplate.Template.Funcs@PLT>\nmovq %rax,-56(%rbp)\n.LBB2:\nleaq <.LC24>(%rip),%rax\nmovq %rax,-272(%rbp)\nmovq $10,-264(%rbp)\nleaq -272(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nleaq -144(%rbp),%rdx\nmovq -56(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <html..z2ftemplate.Template.ParseFiles@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rax\nmovq -288(%rbp),%rdx\nmovq %rcx,-56(%rbp)\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\n.LBE2:\n.LBB3:\nmovq -352(%rbp),%rax\ntestq %rax,%rax\nje .L2\n.LBB4:\nmovq -352(%rbp),%rax\ntestq %rax,%rax\njne .L3\nmovl $0,%eax\njmp .L4\n.L3:\nmovq -352(%rbp),%rax\nmovq (%rax),%rax\n.L4:\nmovq %rax,-480(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,-472(%rbp)\nmovdqa -480(%rbp),%xmm1\nmovups %xmm1,-256(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\ncall <log.Fatalln@PLT>\naddq $32,%rsp\n.L2:\n.LBE4:\n.LBE3:\nleaq <main.Page..d>(%rip),%rax\nmovq %rax,-432(%rbp)\nleaq <main.Page..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-232(%rbp)\nleaq <.LC26>(%rip),%rax\nmovq %rax,-416(%rbp)\nmovq $10,-408(%rbp)\nmovdqa -416(%rbp),%xmm2\nmovups %xmm2,-224(%rbp)\nleaq <.LC27>(%rip),%rax\nmovq %rax,-400(%rbp)\nmovq $41,-392(%rbp)\nmovdqa -400(%rbp),%xmm3\nmovups %xmm3,-208(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L5\n.LBB5:\nmovq -232(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE5:\njmp .L6\n.L5:\n.LBB6:\nmovq -232(%rbp),%rax\nleaq -224(%rbp),%rdx\nmovq %rax,%rsi\nleaq <main.Page..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L6:\n.LBE6:\nmovq -232(%rbp),%rax\nmovq %rax,-424(%rbp)\nleaq <.LC24>(%rip),%rax\nmovq %rax,-384(%rbp)\nmovq $10,-376(%rbp)\nleaq <pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%rax\nmovq %rax,-368(%rbp)\nmovq <os.Stdout>(%rip),%rax\nmovq %rax,-360(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\npushq -424(%rbp)\npushq -432(%rbp)\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <html..z2ftemplate.Template.ExecuteTemplate@PLT>\naddq $16,%rsp\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\n.LBB7:\nmovq -352(%rbp),%rax\ntestq %rax,%rax\nje .L1\n.LBB8:\nmovq -352(%rbp),%rax\ntestq %rax,%rax\njne .L8\nmovl $0,%eax\njmp .L9\n.L8:\nmovq -352(%rbp),%rax\nmovq (%rax),%rax\n.L9:\nmovq %rax,-464(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovdqa -464(%rbp),%xmm4\nmovups %xmm4,-192(%rbp)\nleaq -192(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $1,-72(%rbp)\nmovq $1,-64(%rbp)\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\ncall <log.Fatalln@PLT>\naddq $32,%rsp\n.L1:\n.LBE8:\n.LBE7:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "log.SetFlags(0)\nvar err error\ntpl := template.New(\"STR\")\ntpl = tpl.Funcs(template.FuncMap{\n\t\"STR\": func(str string) string {\n\t\treturn strings.ToUpper(str)\n\t},\n})\ntpl, err = tpl.ParseFiles(\"STR\")\nif err != nil {\n\tlog.Fatalln(err)\n}\nerr = tpl.ExecuteTemplate(os.Stdout, \"STR\", Page{\n\tTitle: \"STR\",\n\tBody:  \"STR\",\n})\nif err != nil {\n\tlog.Fatalln(err)\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L22\nmovl $168,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L22:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $144,%rsp\nmovq %rdi,-152(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\n.LBB10:\n.LBB11:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rbx\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%r12\nleaq (%rbx,%r12),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L19\nmovq -112(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-96(%rbp)\njmp .L20\n.L19:\nmovq -112(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rcx,-112(%rbp)\nmovq %rax,-104(%rbp)\nmovq %rdx,-96(%rbp)\n.L20:\nmovq %r12,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -80(%rbp),%rax\nmovq -112(%rbp),%rcx\nmovq %rbx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\n.LBE10:\nmovq -152(%rbp),%rax\naddq $144,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "return append(ints, added...)"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L44\nmovl $88,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L44:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq $0,-32(%rbp)\n.LBB26:\nmovq $0,-8(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBB27:\n.LBB28:\njmp .L29\n.L43:\n.LBB29:\nnop\n.LBE29:\n.LBB30:\nmovq -8(%rbp),%rdx\nmovq -16(%rbp),%rax\naddq %rdx,%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,-40(%rbp)\nmovq $0,-24(%rbp)\n.LBB31:\nmovq $0,-48(%rbp)\n.LBB32:\n.LBB33:\n.LBB34:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -72(%rbp),%rcx\nmovl $0,%eax\n.LBE34:\njmp .L30\n.L42:\n.LBB35:\nnop\n.LBE35:\n.LBB36:\n.LBB37:\nmovq -72(%rbp),%rdx\ntestq %rax,%rax\njs .L31\ncmpq %rdx,%rax\njge .L31\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nsalq $3,%rsi\naddq %rsi,%rdx\nmovq (%rdx),%rdx\n.LBE37:\n.LBB38:\nmovq %rdx,-48(%rbp)\n.LBE38:\n.LBB39:\n.LBB40:\nmovq -48(%rbp),%rdx\ncmpq -40(%rbp),%rdx\njle .L32\njmp .L33\n.L31:\n.LBE40:\n.LBE39:\n.LBB43:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\n.LBE43:\n.LBB44:\n.LBB42:\n.LBB41:\naddq $1,-24(%rbp)\n.L33:\n.LBE41:\n.LBE42:\n.LBE44:\n.LBE36:\n.LBB45:\naddq $1,%rax\n.L30:\n.LBE45:\ncmpq %rcx,%rax\njl .L42\n.LBE33:\n.LBE32:\n.LBE31:\n.LBB46:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njle .L36\n.LBB47:\nmovq -40(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBE47:\njmp .L29\n.L36:\n.LBB48:\nmovq -40(%rbp),%rax\naddq $1,%rax\nmovq %rax,-8(%rbp)\n.L29:\n.LBE48:\n.LBE46:\n.LBE30:\nmovq -8(%rbp),%rax\ncmpq -16(%rbp),%rax\njl .L43\n.LBE28:\n.LBE27:\n.LBB49:\nmovq -8(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE49:\n.LBE26:\nleave\nret", "tgt": "left, right := 0, len(nums)-1\nfor left < right {\n\tmid := (left + right) / 2\n\tcount := 0\n\tfor _, num := range nums {\n\t\tif num <= mid {\n\t\t\tcount++\n\t\t}\n\t}\n\tif count > mid {\n\t\tright = mid\n\t} else {\n\t\tleft = mid + 1\n\t}\n}\nreturn left"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L53\nmovl $168,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L53:\npushq %rbp\nmovq %rsp,%rbp\nsubq $160,%rsp\nmovq $0,-88(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq $0,-16(%rbp)\n.LBB3:\nmovq $0,-96(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rcx\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L49:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\nmovq %rax,-96(%rbp)\n.LBB9:\n.LBB10:\nmovq <24>(%rbp),%rdx\ncmpq $0,-96(%rbp)\njs .L3\ncmpq %rdx,-96(%rbp)\njl .L39\n.L3:\nmovq -96(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\nmovq <16>(%rbp),%rsi\nmovq -96(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rdx\ncmpq $1,%rdx\njne .L5\n.LBB11:\naddq $1,-16(%rbp)\n.L5:\n.LBE11:\n.LBE10:\n.LBE9:\n.LBE8:\n.LBB12:\naddq $1,%rax\n.L2:\n.LBE12:\ncmpq %rcx,%rax\njl .L49\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB13:\ncmpq $1,-16(%rbp)\njg .L8\n.LBB14:\n.LBB15:\nmovq $0,-88(%rbp)\nmovq -88(%rbp),%rax\njmp .L9\n.L8:\n.LBE15:\n.LBE14:\n.LBE13:\nmovq -16(%rbp),%rax\nmovq %rax,%rdx\nshrq $63,%rdx\naddq %rdx,%rax\nsarq %rax\nmovq %rax,%rcx\nmovq -16(%rbp),%rax\ncqto\nshrq $63,%rdx\naddq %rdx,%rax\nandl $1,%eax\nsubq %rdx,%rax\naddq %rcx,%rax\nmovq %rax,-24(%rbp)\nmovq $0,-32(%rbp)\n.LBB16:\nmovq $0,-104(%rbp)\n.LBB17:\n.LBB18:\n.LBB19:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rcx\nmovl $0,%eax\n.LBE19:\njmp .L10\n.L50:\n.LBB20:\nnop\n.LBE20:\n.LBB21:\nmovq %rax,-104(%rbp)\n.LBB22:\n.LBB23:\nmovq <24>(%rbp),%rdx\ncmpq $0,-104(%rbp)\njs .L11\ncmpq %rdx,-104(%rbp)\njl .L41\n.L11:\nmovq -104(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq <16>(%rbp),%rsi\nmovq -104(%rbp),%rdx\nsalq $3,%rdx\naddq %rsi,%rdx\nmovq (%rdx),%rdx\ncmpq $1,%rdx\njne .L13\n.LBB24:\nsubq $1,-24(%rbp)\n.L13:\n.LBE24:\n.LBE23:\n.LBB25:\ncmpq $0,-24(%rbp)\njne .L14\n.LBB26:\nmovq -104(%rbp),%rax\nmovq %rax,-32(%rbp)\njmp .L15\n.L14:\n.LBE26:\n.LBE25:\n.LBE22:\n.LBE21:\n.LBB27:\naddq $1,%rax\n.L10:\n.LBE27:\ncmpq %rcx,%rax\njl .L50\n.L15:\n.LBE18:\n.LBE17:\n.LBE16:\nmovq $0,-40(%rbp)\nmovb $0,-41(%rbp)\n.LBB28:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-72(%rbp)\n.LBB29:\njmp .L17\n.L51:\n.LBB30:\nnop\n.LBE30:\n.LBB31:\n.LBB32:\n.LBB33:\nmovzbl -41(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L18\n.LBB34:\nmovq <24>(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L19\ncmpq %rax,-72(%rbp)\njl .L43\n.L19:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq <16>(%rbp),%rdx\nmovq -72(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\nsete %al\n.L18:\n.LBE34:\n.LBE33:\ntestb %al,%al\nje .L21\n.LBB35:\nmovq -72(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovb $1,-41(%rbp)\n.LBE35:\njmp .L22\n.L21:\n.LBB36:\n.LBB37:\n.LBB38:\nmovq <24>(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L23\ncmpq %rax,-72(%rbp)\njl .L44\n.L23:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L44:\nmovq <16>(%rbp),%rdx\nmovq -72(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq $1,%rax\nsete %al\ntestb %al,%al\nje .L25\n.LBB39:\nmovq -72(%rbp),%rax\ncmpq -40(%rbp),%rax\nsetl %al\n.L25:\n.LBE39:\n.LBE38:\ntestb %al,%al\nje .L22\n.LBB40:\nmovq -72(%rbp),%rax\nsubq -40(%rbp),%rax\nmovq %rax,%rdi\ncall <go.day309.abs>\naddq %rax,-8(%rbp)\nsubq $1,-40(%rbp)\n.L22:\n.LBE40:\n.LBE37:\n.LBE36:\n.LBE32:\n.LBE31:\n.LBB41:\nsubq $1,-72(%rbp)\n.L17:\n.LBE41:\ncmpq $0,-72(%rbp)\njns .L51\n.LBE29:\n.LBE28:\nmovq $0,-56(%rbp)\nmovb $0,-57(%rbp)\n.LBB42:\nmovq -32(%rbp),%rax\naddq $1,%rax\nmovq %rax,-80(%rbp)\n.LBB43:\njmp .L28\n.L52:\n.LBB44:\nnop\n.LBE44:\n.LBB45:\n.LBB46:\n.LBB47:\nmovzbl -57(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L29\n.LBB48:\nmovq <24>(%rbp),%rax\ncmpq $0,-80(%rbp)\njs .L30\ncmpq %rax,-80(%rbp)\njl .L46\n.L30:\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L46:\nmovq <16>(%rbp),%rdx\nmovq -80(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\nsete %al\n.L29:\n.LBE48:\n.LBE47:\ntestb %al,%al\nje .L32\n.LBB49:\nmovq -80(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovb $1,-57(%rbp)\n.LBE49:\njmp .L33\n.L32:\n.LBB50:\n.LBB51:\n.LBB52:\nmovq <24>(%rbp),%rax\ncmpq $0,-80(%rbp)\njs .L34\ncmpq %rax,-80(%rbp)\njl .L47\n.L34:\nmovq -80(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L47:\nmovq <16>(%rbp),%rdx\nmovq -80(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq $1,%rax\nsete %al\ntestb %al,%al\nje .L36\n.LBB53:\nmovq -80(%rbp),%rax\ncmpq -56(%rbp),%rax\nsetg %al\n.L36:\n.LBE53:\n.LBE52:\ntestb %al,%al\nje .L33\n.LBB54:\nmovq -80(%rbp),%rax\nsubq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <go.day309.abs>\naddq %rax,-8(%rbp)\naddq $1,-56(%rbp)\n.L33:\n.LBE54:\n.LBE51:\n.LBE50:\n.LBE46:\n.LBE45:\n.LBB55:\naddq $1,-80(%rbp)\n.L28:\n.LBE55:\nmovq <24>(%rbp),%rax\ncmpq %rax,-80(%rbp)\njl .L52\n.LBE43:\n.LBE42:\n.LBB56:\nmovq -8(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rax\n.L9:\n.LBE56:\n.LBE2:\nleave\nret", "tgt": "var min int\ntotalPeople := 0\nfor i := range seating {\n\tif seating[i] == 1 {\n\t\ttotalPeople++\n\t}\n}\nif totalPeople < 2 {\n\treturn 0\n}\nmiddle := (totalPeople / 2) + (totalPeople % 2)\nindex := 0\nfor i := range seating {\n\tif seating[i] == 1 {\n\t\tmiddle--\n\t}\n\tif middle == 0 {\n\t\tindex = i\n\t\tbreak\n\t}\n}\nleftZero := 0\nleftZeroFound := false\nfor j := index - 1; j >= 0; j-- {\n\tif !leftZeroFound && seating[j] == 0 {\n\t\tleftZero = j\n\t\tleftZeroFound = true\n\t} else if seating[j] == 1 && j < leftZero {\n\t\tmin += abs(j - leftZero)\n\t\tleftZero--\n\t}\n}\nrightZero := 0\nrightZeroFound := false\nfor j := index + 1; j < len(seating); j++ {\n\tif !rightZeroFound && seating[j] == 0 {\n\t\trightZero = j\n\t\trightZeroFound = true\n\t} else if seating[j] == 1 && j > rightZero {\n\t\tmin += abs(j - rightZero)\n\t\trightZero++\n\t}\n}\nreturn min"}
{"src": ".LFB4:\ncmpq %fs:112,%rsp\njnb .L106\nmovl $104,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL6:\nret\n.L106:\npushq %rbp\nmovq %rsp,%rbp\nsubq $96,%rsp\nmovq %rdi,-88(%rbp)\nmovq %rsi,-96(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\nmovq $0,-32(%rbp)\n.LBB74:\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\nmovq $-1,(%rax)\nmovq $-1,<8>(%rax)\nmovq -24(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\n.LBB75:\nmovq $0,-8(%rbp)\n.LBB76:\njmp .L82\n.L104:\n.LBB77:\nnop\n.LBE77:\n.LBB78:\n.LBB79:\nmovq <24>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L83\ncmpq %rax,-8(%rbp)\njl .L100\n.L83:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L100:\nmovq <16>(%rbp),%rdx\nmovq -8(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-96(%rbp)\njne .L85\n.LBB80:\nmovq -72(%rbp),%rax\ntestq %rax,%rax\njg .L86\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L86:\nmovq -80(%rbp),%rax\nmovq -8(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L87\n.L85:\n.LBE80:\n.LBE79:\n.LBE78:\n.LBB81:\naddq $1,-8(%rbp)\n.L82:\n.LBE81:\nmovq <24>(%rbp),%rax\ncmpq %rax,-8(%rbp)\njl .L104\n.L87:\n.LBE76:\n.LBE75:\n.LBB82:\nmovq -72(%rbp),%rax\ntestq %rax,%rax\njg .L89\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L89:\nmovq -80(%rbp),%rax\nmovq (%rax),%rax\ncmpq $-1,%rax\njne .L90\n.LBB83:\n.LBB84:\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -88(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -32(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L81\n.L90:\n.LBE84:\n.LBE83:\n.LBE82:\n.LBB85:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-16(%rbp)\n.LBB86:\njmp .L92\n.L105:\n.LBB87:\nnop\n.LBE87:\n.LBB88:\n.LBB89:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L93\ncmpq %rax,-16(%rbp)\njl .L102\n.L93:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L102:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-96(%rbp)\njne .L95\n.LBB90:\nmovq -72(%rbp),%rax\ncmpq $1,%rax\njg .L96\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L96:\nmovq -80(%rbp),%rax\nleaq <8>(%rax),%rdx\nmovq -16(%rbp),%rax\nmovq %rax,(%rdx)\njmp .L97\n.L95:\n.LBE90:\n.LBE89:\n.LBE88:\n.LBB91:\nsubq $1,-16(%rbp)\n.L92:\n.LBE91:\ncmpq $0,-16(%rbp)\njns .L105\n.L97:\n.LBE86:\n.LBE85:\n.LBB92:\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -88(%rbp),%rcx\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -32(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L81:\n.LBE92:\n.LBE74:\nmovq -88(%rbp),%rax\nleave\nret", "tgt": "targetRange := []int{-1, -1}\nfor i := 0; i < len(nums); i++ {\n\tif nums[i] == target {\n\t\ttargetRange[0] = i\n\t\tbreak\n\t}\n}\nif targetRange[0] == -1 {\n\treturn targetRange\n}\nfor j := len(nums) - 1; j >= 0; j-- {\n\tif nums[j] == target {\n\t\ttargetRange[1] = j\n\t\tbreak\n\t}\n}\nreturn targetRange"}
{"src": ".LFB3:\nleaq -1144(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L53\nmovl $1144,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L53:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1096,%rsp\nmovq %rdi,-1048(%rbp)\nmovq $1,-984(%rbp)\nleaq -984(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\ncall <go.leetcode.newList>\naddq $32,%rsp\nmovq %rax,%r12\nmovq $1,-976(%rbp)\nmovq $3,-968(%rbp)\nmovq $5,-960(%rbp)\nmovq $2,-952(%rbp)\nmovq $4,-944(%rbp)\nleaq -976(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $5,-168(%rbp)\nmovq $5,-160(%rbp)\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\ncall <go.leetcode.newList>\naddq $32,%rsp\nmovq %rax,-1056(%rbp)\nmovq $1,-928(%rbp)\nmovq $3,-920(%rbp)\nmovq $5,-912(%rbp)\nmovq $2,-904(%rbp)\nmovq $4,-896(%rbp)\nmovq $6,-888(%rbp)\nleaq -928(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $6,-136(%rbp)\nmovq $6,-128(%rbp)\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\ncall <go.leetcode.newList>\naddq $32,%rsp\nmovq %rax,%r13\nmovq $2,-880(%rbp)\nmovq $3,-872(%rbp)\nmovq $6,-864(%rbp)\nmovq $7,-856(%rbp)\nmovq $1,-848(%rbp)\nmovq $5,-840(%rbp)\nmovq $4,-832(%rbp)\nleaq -880(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $7,-104(%rbp)\nmovq $7,-96(%rbp)\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\ncall <go.leetcode.newList>\naddq $32,%rsp\nmovq %rax,%rbx\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-824(%rbp)\nmovq -824(%rbp),%rax\nmovq $1,(%rax)\nmovq -824(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq $1,-808(%rbp)\nmovq $1,-800(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-792(%rbp)\nmovq -792(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $4,<24>(%rax)\nmovq $5,<32>(%rax)\nmovq -792(%rbp),%rax\nmovq %rax,-784(%rbp)\nmovq $5,-776(%rbp)\nmovq $5,-768(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-760(%rbp)\nmovq -760(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $4,<24>(%rax)\nmovq $5,<32>(%rax)\nmovq $6,<40>(%rax)\nmovq -760(%rbp),%rax\nmovq %rax,-752(%rbp)\nmovq $6,-744(%rbp)\nmovq $6,-736(%rbp)\nleaq <type...67x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-728(%rbp)\nmovq -728(%rbp),%rax\nmovq $2,(%rax)\nmovq $1,<8>(%rax)\nmovq $3,<16>(%rax)\nmovq $5,<24>(%rax)\nmovq $6,<32>(%rax)\nmovq $4,<40>(%rax)\nmovq $7,<48>(%rax)\nmovq -728(%rbp),%rax\nmovq %rax,-720(%rbp)\nmovq $7,-712(%rbp)\nmovq $7,-704(%rbp)\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-696(%rbp)\nmovq -696(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $0,-680(%rbp)\nmovq $0,-672(%rbp)\nmovq $0,-664(%rbp)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -800(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq %r12,-632(%rbp)\nmovq -784(%rbp),%rax\nmovq -776(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -768(%rbp),%rax\nmovq %rax,-608(%rbp)\nmovq -1056(%rbp),%rax\nmovq %rax,-600(%rbp)\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -736(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq %r13,-568(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -704(%rbp),%rax\nmovq %rax,-544(%rbp)\nmovq %rbx,-536(%rbp)\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nleaq -528(%rbp),%rax\nmovq %rax,-1008(%rbp)\nmovq $5,-1000(%rbp)\nmovq $5,-992(%rbp)\n.LBB47:\nmovq $0,-1040(%rbp)\nmovq $0,-1032(%rbp)\nmovq $0,-1024(%rbp)\nmovq $0,-1016(%rbp)\n.LBB48:\n.LBB49:\n.LBB50:\nmovq -1008(%rbp),%rax\nmovq -1000(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -992(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovq -328(%rbp),%r13\nmovl $0,%r12d\n.LBE50:\njmp .L43\n.L52:\n.LBB51:\nnop\n.LBE51:\n.LBB52:\n.LBB53:\nmovq -328(%rbp),%rax\ntestq %r12,%r12\njs .L44\ncmpq %rax,%r12\njge .L44\nmovq -336(%rbp),%rdx\nmovq %r12,%rax\nsalq $5,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\n.LBE53:\n.LBB54:\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-1040(%rbp)\nmovq %rdx,-1032(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-1024(%rbp)\nmovq %rdx,-1016(%rbp)\n.LBE54:\n.LBB55:\nsubq $8,%rsp\npushq -1024(%rbp)\npushq -1032(%rbp)\npushq -1040(%rbp)\ncall <go.leetcode.newList>\naddq $32,%rsp\nmovq %rax,%rdi\ncall <go.leetcode.oddEvenList>\nmovq %rax,-56(%rbp)\n.LBB56:\nleaq <type...1go.leetcode.ListNode>(%rip),%rax\nmovq %rax,-1088(%rbp)\nmovq -1016(%rbp),%rax\nmovq %rax,-1080(%rbp)\nleaq <type...1go.leetcode.ListNode>(%rip),%r14\nmovq -56(%rbp),%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -1088(%rbp),%rdx\nmovq -1080(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\njne .L45\njmp .L46\n.L44:\n.LBE56:\n.LBE55:\n.LBB61:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L45:\n.LBE61:\n.LBB62:\n.LBB60:\n.LBB57:\nsubq $8,%rsp\npushq -1024(%rbp)\npushq -1032(%rbp)\npushq -1040(%rbp)\ncall <go.leetcode.newList>\naddq $32,%rsp\nleaq <type...1go.leetcode.ListNode>(%rip),%rbx\nmovq %rbx,-1136(%rbp)\nmovq %rax,-1128(%rbp)\nmovq %rbx,%rax\nmovq %rax,-1120(%rbp)\nmovq -56(%rbp),%rsi\nmovq %rsi,-1112(%rbp)\nmovq %rax,-1104(%rbp)\nmovq -1016(%rbp),%rax\nmovq %rax,-1096(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovdqa -1136(%rbp),%xmm0\nmovups %xmm0,-256(%rbp)\nmovdqa -1120(%rbp),%xmm1\nmovups %xmm1,-240(%rbp)\nmovdqa -1104(%rbp),%xmm2\nmovups %xmm2,-224(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L47\n.LBB58:\nmovq -264(%rbp),%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE58:\njmp .L48\n.L47:\n.LBB59:\nmovq -264(%rbp),%rcx\nleaq -256(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L48:\n.LBE59:\nmovq -264(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC25>(%rip),%rax\nmovq %rax,-1072(%rbp)\nmovq $34,-1064(%rbp)\nmovq -1072(%rbp),%rax\nmovq -1064(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -1048(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L46:\n.LBE57:\n.LBE60:\n.LBE62:\n.LBE52:\n.LBB63:\naddq $1,%r12\n.L43:\n.LBE63:\ncmpq %r13,%r12\njl .L52\n.LBE49:\n.LBE48:\n.LBE47:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var tests = []struct {\n\tbefore []int\n\tafter  *ListNode\n}{\n\t{[]int{}, nil},\n\t{[]int{1}, newList(1)},\n\t{[]int{1, 2, 3, 4, 5}, newList(1, 3, 5, 2, 4)},\n\t{[]int{1, 2, 3, 4, 5, 6}, newList(1, 3, 5, 2, 4, 6)},\n\t{[]int{2, 1, 3, 5, 6, 4, 7}, newList(2, 3, 6, 7, 1, 5, 4)},\n}\nfor _, tt := range tests {\n\tafter := oddEvenList(newList(tt.before...))\n\tif reflect.DeepEqual(after, tt.after) == false {\n\t\tt.Errorf(\"STR\", newList(tt.before...), after, tt.after)\n\t}\n}"}
{"src": ".LFB107:\ncmpq %fs:112,%rsp\njnb .L1763\nmovl $200,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL112:\nret\n.L1763:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-168(%rbp)\nmovq $45228,-56(%rbp)\n.LBB1418:\ncall <main.p32>\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rax\ncmpq -56(%rbp),%rax\nje .L1759\n.LBB1419:\nleaq <int..d>(%rip),%rax\nmovq %rax,-192(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-184(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -192(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1761\n.LBB1420:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE1420:\njmp .L1762\n.L1761:\n.LBB1421:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1762:\n.LBE1421:\nmovq -136(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\nleaq <.LC90>(%rip),%r12\nmovl $24,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq -168(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L1759:\n.LBE1419:\n.LBE1418:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "out := 45228\nif x := p32(); x != out {\n\tt.Errorf(\"STR\", x, out)\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L26\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB15:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB16:\n.LBB17:\n.LBB18:\nmovq <go.day36.testcases>(%rip),%rax\nmovq <8+go.day36.testcases>(%rip),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16+go.day36.testcases>(%rip),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovl $0,%ebx\n.LBE18:\njmp .L16\n.L25:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L17\ncmpq %rax,%rbx\njge .L17\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE21:\n.LBB22:\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\n.LBE22:\n.LBB23:\n.LBB24:\nmovq -176(%rbp),%rax\nmovq %rax,%rdi\ncall <go.day36.SecondLargest>\nmovq %rax,-56(%rbp)\nmovq -168(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L18\njmp .L19\n.L17:\n.LBE24:\n.LBE23:\n.LBB29:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\n.LBE29:\n.LBB30:\n.LBB28:\n.LBB25:\nleaq <int..d>(%rip),%rax\nmovq %rax,-208(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-200(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -208(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L20\n.LBB26:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE26:\njmp .L21\n.L20:\n.LBB27:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L21:\n.LBE27:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC17>(%rip),%r12\nmovl $18,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -184(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L19:\n.LBE25:\n.LBE28:\n.LBE30:\n.LBE20:\n.LBB31:\naddq $1,%rbx\n.L16:\n.LBE31:\ncmpq -192(%rbp),%rbx\njl .L25\n.LBE17:\n.LBE16:\n.LBE15:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := SecondLargest(tc.root); result != tc.expected {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L14\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L14:\npushq %rbp\nmovq %rsp,%rbp\nsubq $224,%rsp\nmovq %rdi,-216(%rbp)\nmovq %rsi,-224(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\nleaq -208(%rbp),%rdx\nmovl $0,%eax\nmovl $20,%ecx\nmovq %rdx,%rdi\nrep stosqmovq $1,-192(%rbp)\nmovq $1,-184(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-152(%rbp)\nmovq $1,-120(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-72(%rbp)\nmovq $1,-56(%rbp)\nmovq $0,-8(%rbp)\n.LBB3:\nmovq -216(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB4:\njmp .L2\n.L13:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq $0,-24(%rbp)\n.LBB7:\nmovq -16(%rbp),%rax\nmovq %rax,-32(%rbp)\n.LBB8:\njmp .L3\n.L12:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\nmovq -32(%rbp),%rax\nandl $1,%eax\naddq %rax,-24(%rbp)\n.LBE10:\n.LBB11:\nsarq -32(%rbp)\n.L3:\n.LBE11:\ncmpq $0,-32(%rbp)\njg .L12\n.LBE8:\n.LBE7:\ncmpq $0,-24(%rbp)\njs .L6\ncmpq $19,-24(%rbp)\njg .L6\nmovq -24(%rbp),%rax\nmovq -208(%rbp,%rax,8),%rax\naddq %rax,-8(%rbp)\n.LBE6:\n.LBB12:\naddq $1,-16(%rbp)\njmp .L2\n.L6:\n.LBE12:\n.LBB13:\nmovq -24(%rbp),%rax\nmovl $20,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE13:\nmovq -16(%rbp),%rax\ncmpq -224(%rbp),%rax\njle .L13\n.LBE4:\n.LBE3:\n.LBB14:\nmovq -8(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE14:\n.LBE2:\nleave\nret", "tgt": "primes := [...]int{2: 1, 3: 1, 5: 1, 7: 1, 11: 1, 13: 1, 17: 1, 19: 1}\nres := 0\nfor i := L; i <= R; i++ {\n\tbits := 0\n\tfor n := i; n > 0; n >>= 1 {\n\t\tbits += n & 1\n\t}\n\tres += primes[bits]\n}\nreturn res"}
{"src": ".LFB1:\nleaq -1128(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L49\nmovl $1128,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L49:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1080,%rsp\nmovq %rdi,-1064(%rbp)\nleaq <type...66x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-968(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-960(%rbp)\nmovq -960(%rbp),%rax\nmovq $1,(%rax)\nmovq $2,<8>(%rax)\nmovq -960(%rbp),%rax\nmovq %rax,-912(%rbp)\nmovq $2,-904(%rbp)\nmovq $2,-896(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-952(%rbp)\nmovq -952(%rbp),%rax\nmovq $2,(%rax)\nmovq $3,<8>(%rax)\nmovq -952(%rbp),%rax\nmovq %rax,-888(%rbp)\nmovq $2,-880(%rbp)\nmovq $2,-872(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-944(%rbp)\nmovq -944(%rbp),%rax\nmovq $3,(%rax)\nmovq $4,<8>(%rax)\nmovq -944(%rbp),%rax\nmovq %rax,-864(%rbp)\nmovq $2,-856(%rbp)\nmovq $2,-848(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-936(%rbp)\nmovq -936(%rbp),%rax\nmovq $4,(%rax)\nmovq $5,<8>(%rax)\nmovq -936(%rbp),%rax\nmovq %rax,-840(%rbp)\nmovq $2,-832(%rbp)\nmovq $2,-824(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-928(%rbp)\nmovq -928(%rbp),%rax\nmovq $5,(%rax)\nmovq $6,<8>(%rax)\nmovq -928(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq $2,-808(%rbp)\nmovq $2,-800(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-920(%rbp)\nmovq -920(%rbp),%rax\nmovq $6,(%rax)\nmovq $7,<8>(%rax)\nmovq -920(%rbp),%rax\nmovq %rax,-792(%rbp)\nmovq $2,-784(%rbp)\nmovq $2,-776(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L35\n.LBB12:\nmovq -968(%rbp),%rax\nmovq -912(%rbp),%rcx\nmovq -904(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -896(%rbp),%rcx\nmovq -888(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -880(%rbp),%rcx\nmovq -872(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -864(%rbp),%rcx\nmovq -856(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -848(%rbp),%rcx\nmovq -840(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -832(%rbp),%rcx\nmovq -824(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -816(%rbp),%rcx\nmovq -808(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -800(%rbp),%rcx\nmovq -792(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -784(%rbp),%rcx\nmovq -776(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE12:\njmp .L36\n.L35:\n.LBB13:\nmovq -968(%rbp),%rax\nleaq -912(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...66x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L36:\n.LBE13:\nmovq -968(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $6,-552(%rbp)\nmovq $6,-544(%rbp)\nmovb $1,-536(%rbp)\nleaq <type...66x.7.6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-760(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-752(%rbp)\nmovq -752(%rbp),%rax\nmovq $1,(%rax)\nmovq $1,<8>(%rax)\nmovq -752(%rbp),%rax\nmovq %rax,-704(%rbp)\nmovq $2,-696(%rbp)\nmovq $2,-688(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-744(%rbp)\nmovq -744(%rbp),%rax\nmovq $2,(%rax)\nmovq $2,<8>(%rax)\nmovq -744(%rbp),%rax\nmovq %rax,-680(%rbp)\nmovq $2,-672(%rbp)\nmovq $2,-664(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-736(%rbp)\nmovq -736(%rbp),%rax\nmovq $3,(%rax)\nmovq $4,<8>(%rax)\nmovq -736(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq $2,-648(%rbp)\nmovq $2,-640(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-728(%rbp)\nmovq -728(%rbp),%rax\nmovq $4,(%rax)\nmovq $5,<8>(%rax)\nmovq -728(%rbp),%rax\nmovq %rax,-632(%rbp)\nmovq $2,-624(%rbp)\nmovq $2,-616(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-720(%rbp)\nmovq -720(%rbp),%rax\nmovq $5,(%rax)\nmovq $6,<8>(%rax)\nmovq -720(%rbp),%rax\nmovq %rax,-608(%rbp)\nmovq $2,-600(%rbp)\nmovq $2,-592(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-712(%rbp)\nmovq -712(%rbp),%rax\nmovq $7,(%rax)\nmovq $7,<8>(%rax)\nmovq -712(%rbp),%rax\nmovq %rax,-584(%rbp)\nmovq $2,-576(%rbp)\nmovq $2,-568(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L37\n.LBB14:\nmovq -760(%rbp),%rax\nmovq -704(%rbp),%rcx\nmovq -696(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -688(%rbp),%rcx\nmovq -680(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -672(%rbp),%rcx\nmovq -664(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -656(%rbp),%rcx\nmovq -648(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -640(%rbp),%rcx\nmovq -632(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -624(%rbp),%rcx\nmovq -616(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\nmovq -608(%rbp),%rcx\nmovq -600(%rbp),%rbx\nmovq %rcx,<96>(%rax)\nmovq %rbx,<104>(%rax)\nmovq -592(%rbp),%rcx\nmovq -584(%rbp),%rbx\nmovq %rcx,<112>(%rax)\nmovq %rbx,<120>(%rax)\nmovq -576(%rbp),%rcx\nmovq -568(%rbp),%rbx\nmovq %rcx,<128>(%rax)\nmovq %rbx,<136>(%rax)\n.LBE14:\njmp .L38\n.L37:\n.LBB15:\nmovq -760(%rbp),%rax\nleaq -704(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...66x.7.6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L38:\n.LBE15:\nmovq -760(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $6,-520(%rbp)\nmovq $6,-512(%rbp)\nmovb $0,-504(%rbp)\nleaq -560(%rbp),%rax\nmovq %rax,-992(%rbp)\nmovq $2,-984(%rbp)\nmovq $2,-976(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC20>(%rip),%rax\nmovq %rax,-1088(%rbp)\nmovq $70,-1080(%rbp)\nleaq -208(%rbp),%rax\nmovq -1088(%rbp),%rcx\nmovq -1080(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB16:\nmovq $0,-1056(%rbp)\nmovq $0,-1048(%rbp)\nmovq $0,-1040(%rbp)\nmovq $0,-1032(%rbp)\n.LBB17:\n.LBB18:\n.LBB19:\nmovq -992(%rbp),%rax\nmovq -984(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -976(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-1088(%rbp)\nmovl $0,%ebx\n.LBE19:\njmp .L39\n.L48:\n.LBB20:\nnop\n.LBE20:\n.LBB21:\n.LBB22:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L40\ncmpq %rax,%rbx\njge .L40\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE22:\n.LBB23:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-1056(%rbp)\nmovq %rdx,-1048(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-1040(%rbp)\nmovq %rdx,-1032(%rbp)\n.LBE23:\n.LBB24:\nmovzbl -1032(%rbp),%eax\nmovb %al,-993(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-1024(%rbp)\nmovq %rdx,-1016(%rbp)\nmovq -1040(%rbp),%rax\nmovq %rax,-1008(%rbp)\nsubq $8,%rsp\npushq -1008(%rbp)\npushq -1016(%rbp)\npushq -1024(%rbp)\ncall <go.leetcode.checkStraightLine>\naddq $32,%rsp\nmovb %al,-1065(%rbp)\nleaq <go.leetcode..go.leetcode.para1232..d>(%rip),%rax\nmovq %rax,-1120(%rbp)\nleaq <go.leetcode..go.leetcode.para1232..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -1008(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L41\njmp .L46\n.L40:\n.LBE24:\n.LBB27:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\n.LBE27:\n.LBB28:\n.LBB25:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE25:\njmp .L43\n.L46:\n.LBB26:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para1232..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L43:\n.LBE26:\nmovq -344(%rbp),%rax\nmovq %rax,-1112(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-1104(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovzbl -1065(%rbp),%esi\nmovb %sil,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-1096(%rbp)\nmovdqa -1120(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -1104(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC21>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE28:\n.LBE21:\n.LBB29:\naddq $1,%rbx\n.L39:\n.LBE29:\ncmpq -1088(%rbp),%rbx\njl .L48\n.LBE18:\n.LBE17:\n.LBE16:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC22>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1232{\n\t{\n\t\tpara1232{[][]int{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}}},\n\t\tans1232{true},\n\t},\n\t{\n\t\tpara1232{[][]int{{1, 1}, {2, 2}, {3, 4}, {4, 5}, {5, 6}, {7, 7}}},\n\t\tans1232{false},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1232, q.para1232\n\tfmt.Printf(\"STR\", p, checkStraightLine(p.arr))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB1:\nleaq -728(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L64\nmovl $728,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L64:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $680,%rsp\nmovq %rdi,-664(%rbp)\nmovq $1,-560(%rbp)\nmovq $1,-552(%rbp)\nmovq $1,-544(%rbp)\nmovq $2,-536(%rbp)\nmovq $0,-528(%rbp)\nmovq $3,-512(%rbp)\nmovq $4,-504(%rbp)\nmovq $-1,-496(%rbp)\nmovq $1,-488(%rbp)\nmovq $7,-480(%rbp)\nmovq $8,-472(%rbp)\nmovq $9,-464(%rbp)\nmovq $11,-456(%rbp)\nmovq $12,-448(%rbp)\nleaq -560(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq $2,-424(%rbp)\nmovq $2,-416(%rbp)\nmovq $2,-408(%rbp)\nleaq -544(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $3,-392(%rbp)\nmovq $3,-384(%rbp)\nmovq $3,-376(%rbp)\nleaq -512(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $4,-360(%rbp)\nmovq $4,-352(%rbp)\nmovq $2,-344(%rbp)\nleaq -480(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $5,-328(%rbp)\nmovq $5,-320(%rbp)\nmovq $1,-312(%rbp)\nleaq -432(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $4,-584(%rbp)\nmovq $4,-576(%rbp)\n.LBB32:\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\nmovq $0,-632(%rbp)\n.LBB33:\n.LBB34:\n.LBB35:\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -576(%rbp),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%r15\nmovl $0,%ebx\n.LBE35:\njmp .L52\n.L63:\n.LBB36:\nnop\n.LBE36:\n.LBB37:\n.LBB38:\nmovq -264(%rbp),%rax\ntestq %rbx,%rbx\njs .L53\ncmpq %rax,%rbx\njge .L53\nmovq -272(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\n.LBE38:\n.LBB39:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\n.LBE39:\n.LBB40:\nmovq -648(%rbp),%r14\nmovq %r14,%rdx\nmovq %r14,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-624(%rbp)\nmovq %r14,-616(%rbp)\nmovq %r14,-608(%rbp)\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -640(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -616(%rbp),%rax\nmovq -200(%rbp),%rdx\ncmpq %rax,%rdx\ncmovle %rdx,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -208(%rbp),%rcx\nmovq -624(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memmove@PLT>\nsubq $8,%rsp\npushq -640(%rbp)\npushq -648(%rbp)\npushq -656(%rbp)\ncall <go.leetcode.firstMissingPositive>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\n.LBB41:\nmovq -632(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L54\njmp .L55\n.L53:\n.LBE41:\n.LBE40:\n.LBB48:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\n.LBE48:\n.LBB49:\n.LBB47:\n.LBB42:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-720(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -608(%rbp),%rax\nmovq %rax,-160(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L56\n.LBB43:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE43:\njmp .L57\n.L56:\n.LBB44:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L57:\n.LBE44:\nmovq -184(%rbp),%rax\nmovq %rax,-712(%rbp)\nleaq <int..d>(%rip),%r14\nmovq %r14,-704(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,-696(%rbp)\nmovq %r14,-688(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-144(%rbp)\nmovq -144(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -144(%rbp),%rax\nmovq %rax,-680(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -720(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -704(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovdqa -688(%rbp),%xmm2\nmovups %xmm2,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L58\n.LBB45:\nmovq -136(%rbp),%rax\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE45:\njmp .L59\n.L58:\n.LBB46:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L59:\n.LBE46:\nmovq -136(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC6>(%rip),%r12\nmovl $43,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -664(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L55:\n.LBE42:\n.LBE47:\n.LBE49:\n.LBE37:\n.LBB50:\naddq $1,%rbx\n.L52:\n.LBE50:\ncmpq %r15,%rbx\njl .L63\n.LBE34:\n.LBE33:\n.LBE32:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var tests = []struct {\n\tnums    []int\n\tmissing int\n}{\n\t{[]int{1, 1}, 2},\n\t{[]int{1, 2, 0}, 3},\n\t{[]int{3, 4, -1, 1}, 2},\n\t{[]int{7, 8, 9, 11, 12}, 1},\n}\nfor _, tt := range tests {\n\tnums := make([]int, len(tt.nums))\n\tcopy(nums, tt.nums)\n\tmissing := firstMissingPositive(tt.nums)\n\tif missing != tt.missing {\n\t\tt.Errorf(\"STR\", nums, missing, tt.missing)\n\t}\n}"}
{"src": ".LFB0:\nleaq -760(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L71\nmovl $760,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L71:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $736,%rsp\nmovq %rdi,-744(%rbp)\nmovq $0,-672(%rbp)\nmovq $0,-664(%rbp)\nmovq $0,-656(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-56(%rbp)\n.LBB3:\ncmpq $0,-56(%rbp)\njne .L2\n.LBB4:\n.LBB5:\nmovq $0,-672(%rbp)\nmovq $0,-664(%rbp)\nmovq $0,-656(%rbp)\nmovq -744(%rbp),%rcx\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -656(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L4:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-64(%rbp)\n.LBB6:\ncmpq $0,-64(%rbp)\njne .L5\n.LBB7:\n.LBB8:\nmovq $0,-672(%rbp)\nmovq $0,-664(%rbp)\nmovq $0,-656(%rbp)\nmovq -744(%rbp),%rcx\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -656(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L5:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB9:\ncmpq $1,-56(%rbp)\njne .L6\n.LBB10:\n.LBB11:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L7\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L7:\nmovq <16>(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-656(%rbp)\nmovq -744(%rbp),%rcx\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -656(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L6:\n.LBE11:\n.LBE10:\n.LBE9:\nmovq -56(%rbp),%rax\nimulq -64(%rbp),%rax\nmovq %rax,%rbx\nmovq %rbx,%rdx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-704(%rbp)\nmovq $0,-696(%rbp)\nmovq %rbx,-688(%rbp)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq -632(%rbp),%rbx\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L8\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L8:\nmovq <16>(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-592(%rbp)\nmovq -600(%rbp),%r12\nleaq (%rbx,%r12),%rax\nmovq -624(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L9\n.LBB12:\nmovq -640(%rbp),%rsi\nleaq -224(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -208(%rbp),%rax\nmovq %rax,-688(%rbp)\n.LBE12:\njmp .L10\n.L9:\n.LBB13:\nmovq -640(%rbp),%rcx\nmovq -624(%rbp),%rdx\nmovq %rcx,-704(%rbp)\nmovq %rax,-696(%rbp)\nmovq %rdx,-688(%rbp)\n.L10:\n.LBE13:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq %r12,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -608(%rbp),%rax\nmovq -640(%rbp),%rcx\nmovq %rbx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\n.LBB14:\nmovq $1,-24(%rbp)\n.LBB15:\njmp .L11\n.L67:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq -568(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L12\ncmpq %rax,-24(%rbp)\njl .L55\n.L12:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-528(%rbp)\nmovq -64(%rbp),%rax\nsubq $1,%rax\nmovq -536(%rbp),%rdx\ntestq %rax,%rax\njs .L14\ncmpq %rdx,%rax\njge .L14\nmovq -544(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -560(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L15\njmp .L56\n.L14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\n.LBB18:\nmovq -576(%rbp),%rsi\nleaq -192(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-688(%rbp)\n.LBE18:\njmp .L17\n.L56:\n.LBB19:\nmovq -576(%rbp),%rcx\nmovq -560(%rbp),%rdx\nmovq %rcx,-704(%rbp)\nmovq %rax,-696(%rbp)\nmovq %rdx,-688(%rbp)\n.L17:\n.LBE19:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq -576(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\n.LBE17:\n.LBB20:\naddq $1,-24(%rbp)\n.L11:\n.LBE20:\nmovq -56(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-24(%rbp)\njl .L67\n.LBE15:\n.LBE14:\n.LBB21:\nmovq -64(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-32(%rbp)\n.LBB22:\njmp .L20\n.L68:\n.LBB23:\nnop\n.LBE23:\n.LBB24:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq -504(%rbp),%rbx\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L21\ncmpq %rdx,%rax\njl .L58\n.L21:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\nmovq <16>(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-464(%rbp)\nmovq -472(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L23\ncmpq %rax,-32(%rbp)\njge .L23\nmovq -480(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -496(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\nja .L24\njmp .L59\n.L23:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\n.LBB25:\nmovq -512(%rbp),%rsi\nleaq -160(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-688(%rbp)\n.LBE25:\njmp .L26\n.L59:\n.LBB26:\nmovq -512(%rbp),%rcx\nmovq -496(%rbp),%rdx\nmovq %rcx,-704(%rbp)\nmovq %rax,-696(%rbp)\nmovq %rdx,-688(%rbp)\n.L26:\n.LBE26:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-496(%rbp)\nmovq -512(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\n.LBE24:\n.LBB27:\nsubq $1,-32(%rbp)\n.L20:\n.LBE27:\ncmpq $0,-32(%rbp)\njns .L68\n.LBE22:\n.LBE21:\n.LBB28:\nmovq -56(%rbp),%rax\nsubq $2,%rax\nmovq %rax,-40(%rbp)\n.LBB29:\njmp .L29\n.L69:\n.LBB30:\nnop\n.LBE30:\n.LBB31:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq -440(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L30\ncmpq %rax,-40(%rbp)\njl .L61\n.L30:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L61:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-400(%rbp)\nmovq -408(%rbp),%rax\ntestq %rax,%rax\njg .L32\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq -416(%rbp),%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -432(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L33\n.LBB32:\nmovq -448(%rbp),%rsi\nleaq -128(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-688(%rbp)\n.LBE32:\njmp .L34\n.L33:\n.LBB33:\nmovq -448(%rbp),%rcx\nmovq -432(%rbp),%rdx\nmovq %rcx,-704(%rbp)\nmovq %rax,-696(%rbp)\nmovq %rdx,-688(%rbp)\n.L34:\n.LBE33:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq -448(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\n.LBE31:\n.LBB34:\nsubq $1,-40(%rbp)\n.L29:\n.LBE34:\n.LBB35:\ncmpq $0,-40(%rbp)\nsetg %al\ntestb %al,%al\nje .L35\n.LBB36:\ncmpq $1,-64(%rbp)\nsetg %al\n.L35:\n.LBE36:\n.LBE35:\ntestb %al,%al\njne .L69\n.LBE29:\n.LBE28:\n.LBB37:\n.LBB38:\ncmpq $2,-56(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L38\n.LBB39:\ncmpq $2,-64(%rbp)\nsetle %al\n.L38:\n.LBE39:\n.LBE38:\ntestb %al,%al\nje .L39\n.LBB40:\n.LBB41:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq -744(%rbp),%rcx\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -656(%rbp),%rax\nmovq %rax,<16>(%rcx)\njmp .L1\n.L39:\n.LBE41:\n.LBE40:\n.LBE37:\nmovq -56(%rbp),%rax\nleaq -2(%rax),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-736(%rbp)\nmovq %rbx,-728(%rbp)\nmovq %rbx,-720(%rbp)\n.LBB42:\nmovq $0,-48(%rbp)\n.LBB43:\njmp .L40\n.L70:\n.LBB44:\nnop\n.LBE44:\n.LBB45:\nmovq -728(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L41\ncmpq %rax,-48(%rbp)\njl .L63\n.L41:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\nmovq -736(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\nleaq (%rcx,%rax),%rdx\nmovq -48(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rcx\ntestq %rax,%rax\njs .L43\ncmpq %rcx,%rax\njl .L64\n.L43:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L64:\nmovq <16>(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rsi,%rax\naddq %rax,%rax\naddq %rsi,%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq %rcx,-384(%rbp)\nmovq %rbx,-376(%rbp)\nmovq <16>(%rax),%rax\nmovq %rax,-368(%rbp)\nmovq -64(%rbp),%rax\nleaq -1(%rax),%rdi\nmovq -368(%rbp),%rax\ntestq %rdi,%rdi\njs .L45\ncmpq %rax,%rdi\njg .L45\ntestq %rdi,%rdi\njg .L46\njmp .L65\n.L45:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAcap@PLT>\n.L65:\nmovq %rdi,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L46:\nmovq -384(%rbp),%rcx\nmovq -368(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rax,-352(%rbp)\nleaq -1(%rdi),%rax\nmovq %rax,-344(%rbp)\nmovq -368(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-336(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,<8>(%rdx)\nmovq -336(%rbp),%rax\nmovq %rax,<16>(%rdx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L48\n.LBB46:\nmovq -352(%rbp),%rax\nmovq %rax,(%rdx)\njmp .L49\n.L48:\n.LBE46:\n.LBB47:\nmovq -352(%rbp),%rax\nmovq %rax,%rcx\nmovq %rdx,%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L49:\n.LBE47:\n.LBE45:\n.LBB48:\naddq $1,-48(%rbp)\n.L40:\n.LBE48:\nmovq -56(%rbp),%rax\nsubq $2,%rax\ncmpq %rax,-48(%rbp)\njl .L70\n.LBE43:\n.LBE42:\n.LBB49:\nleaq -320(%rbp),%rax\nsubq $8,%rsp\npushq -720(%rbp)\npushq -728(%rbp)\npushq -736(%rbp)\nmovq %rax,%rdi\ncall <go.leetcode0054.spiralOrder>\naddq $32,%rsp\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq -280(%rbp),%rbx\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%r12\nleaq (%rbx,%r12),%rax\nmovq -272(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L52\nmovq -288(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-272(%rbp)\njmp .L53\n.L52:\nmovq -288(%rbp),%rcx\nmovq -272(%rbp),%rdx\nmovq %rcx,-288(%rbp)\nmovq %rax,-280(%rbp)\nmovq %rdx,-272(%rbp)\n.L53:\nmovq %r12,%rax\nleaq <0>(,%rax,8),%rdx\nmovq -256(%rbp),%rax\nmovq -288(%rbp),%rcx\nmovq %rbx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq %rax,%rsi\nmovq %rcx,%rdi\ncall <memmove@PLT>\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -272(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq -744(%rbp),%rcx\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -656(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.L1:\n.LBE49:\n.LBE2:\nmovq -744(%rbp),%rax\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "m := len(matrix)\nif m == 0 {\n\treturn nil\n}\nn := len(matrix[0])\nif n == 0 {\n\treturn nil\n}\nif m == 1 {\n\treturn matrix[0]\n}\nres := make([]int, 0, m*n)\nres = append(res, matrix[0]...)\nfor i := 1; i < m-1; i++ {\n\tres = append(res, matrix[i][n-1])\n}\nfor i := n - 1; i >= 0; i-- {\n\tres = append(res, matrix[m-1][i])\n}\nfor i := m - 2; i > 0 && n > 1; i-- {\n\tres = append(res, matrix[i][0])\n}\nif m == 2 || n <= 2 {\n\treturn res\n}\nnext := make([][]int, m-2)\nfor i := 0; i < m-2; i++ {\n\tnext[i] = matrix[i+1][1 : n-1]\n}\nreturn append(res, spiralOrder(next)...)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L27\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\nsubq $96,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,-80(%rbp)\nmovq %rdx,-88(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\n.LBB5:\ncmpq $0,-72(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB6:\nmovq -72(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsete %al\n.L2:\n.LBE6:\n.LBE5:\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L3\n.LBB7:\nmovq -80(%rbp),%rax\ncmpq -88(%rbp),%rax\nsete %al\n.L3:\n.LBE7:\n.LBE4:\ntestb %al,%al\nje .L4\n.LBB8:\n.LBB9:\nmovq -72(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L5\n.L4:\n.LBE9:\n.LBE8:\n.LBE3:\nmovq -88(%rbp),%rax\nsubq -80(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq $0,-16(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-24(%rbp)\n.LBB10:\n.LBB11:\njmp .L6\n.L25:\n.LBB12:\nnop\n.LBE12:\n.LBB13:\nmovq -24(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-24(%rbp)\nsubq $1,-80(%rbp)\n.L6:\n.LBE13:\ncmpq $1,-80(%rbp)\njg .L25\n.LBE11:\n.LBE10:\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-32(%rbp)\nmovq -24(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L9\n.LBB14:\nmovq $0,(%rax)\n.LBE14:\njmp .L10\n.L9:\n.LBB15:\nmovl $0,%esi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L10:\n.LBE15:\nmovq -24(%rbp),%rax\nmovq %rax,-48(%rbp)\n.LBB16:\n.LBB17:\njmp .L11\n.L26:\n.LBB18:\nnop\n.LBE18:\n.LBB19:\nmovq -32(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-56(%rbp)\nmovq -32(%rbp),%rax\naddq $8,%rax\nmovq -24(%rbp),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L12\n.LBB20:\nmovq %rdx,(%rax)\n.LBE20:\njmp .L13\n.L12:\n.LBB21:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L13:\n.LBE21:\nmovq -32(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-32(%rbp)\nsubq $1,-8(%rbp)\n.L11:\n.LBE19:\ncmpq $0,-8(%rbp)\njg .L26\n.LBE17:\n.LBE16:\n.LBB22:\ncmpq $0,-16(%rbp)\njne .L16\n.LBB23:\nmovq -48(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L17\n.LBB24:\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE24:\njmp .L18\n.L17:\n.LBB25:\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L18:\n.LBE25:\n.LBB26:\nmovq -24(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\njmp .L5\n.L16:\n.LBE26:\n.LBE23:\n.LBE22:\nmovq -16(%rbp),%rax\naddq $8,%rax\nmovq -24(%rbp),%rdx\nleaq <runtime.writeBarrier>(%rip),%rcx\nmovl (%rcx),%ecx\ntestl %ecx,%ecx\njne .L19\n.LBB27:\nmovq %rdx,(%rax)\n.LBE27:\njmp .L20\n.L19:\n.LBB28:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L20:\n.LBE28:\nmovq -48(%rbp),%rax\naddq $8,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L21\n.LBB29:\nmovq -32(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE29:\njmp .L22\n.L21:\n.LBB30:\nmovq -32(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L22:\n.LBE30:\n.LBB31:\nmovq -72(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.L5:\n.LBE31:\n.LBE2:\nleave\nret", "tgt": "if nil == head || nil == head.Next ||\n\tm == n {\n\treturn head\n}\nstep := n - m\nvar leftTail *ListNode\np := head\nfor m > 1 {\n\tleftTail = p\n\tp = p.Next\n\tm--\n}\nq := p.Next\np.Next = nil\nmidTail := p\nfor step > 0 {\n\tr := q.Next\n\tq.Next = p\n\tp = q\n\tq = r\n\tstep--\n}\nif nil == leftTail {\n\tmidTail.Next = q\n\treturn p\n}\nleftTail.Next = p\nmidTail.Next = q\nreturn head"}
{"src": ".LFB1:\nleaq -1848(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L19\nmovl $1848,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1800,%rsp\nmovq %rdi,-1144(%rbp)\nleaq <int..d>(%rip),%r12\nleaq <go..C42>(%rip),%r13\nleaq <int..d>(%rip),%r10\nleaq <go..C43>(%rip),%r11\nleaq <int..d>(%rip),%r8\nleaq <go..C44>(%rip),%r9\nmovq $0,-1840(%rbp)\nmovq $0,-1832(%rbp)\nmovq $0,-1824(%rbp)\nmovq $0,-1816(%rbp)\nleaq <int..d>(%rip),%rcx\nleaq <go..C45>(%rip),%rbx\nleaq <int..d>(%rip),%rax\nleaq <go..C46>(%rip),%rdx\nmovq %r12,-1088(%rbp)\nmovq %r13,-1080(%rbp)\nmovq %r10,-1072(%rbp)\nmovq %r11,-1064(%rbp)\nmovq %r8,-1056(%rbp)\nmovq %r9,-1048(%rbp)\nmovdqa -1840(%rbp),%xmm0\nmovups %xmm0,-1040(%rbp)\nmovdqa -1824(%rbp),%xmm1\nmovups %xmm1,-1024(%rbp)\nmovq %rcx,-1008(%rbp)\nmovq %rbx,-1000(%rbp)\nmovq %rax,-992(%rbp)\nmovq %rdx,-984(%rbp)\nleaq -1088(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq $7,-264(%rbp)\nmovq $7,-256(%rbp)\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,-1824(%rbp)\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-1808(%rbp)\nleaq <go..C47>(%rip),%rdi\nmovq %rdi,-1800(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <go..C48>(%rip),%r15\nmovdqa -1808(%rbp),%xmm2\nmovups %xmm2,-976(%rbp)\nmovq %r14,-960(%rbp)\nmovq %r15,-952(%rbp)\nleaq -976(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $2,-232(%rbp)\nmovq $2,-224(%rbp)\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,%r14\nmovq %rbx,-1792(%rbp)\nleaq <go..C49>(%rip),%rdi\nmovq %rdi,-1784(%rbp)\nmovq %rbx,-1776(%rbp)\nleaq <go..C50>(%rip),%rsi\nmovq %rsi,-1768(%rbp)\nmovq %rbx,-1760(%rbp)\nleaq <go..C51>(%rip),%rdi\nmovq %rdi,-1752(%rbp)\nmovq %rbx,-1744(%rbp)\nleaq <go..C52>(%rip),%rsi\nmovq %rsi,-1736(%rbp)\nmovdqa -1792(%rbp),%xmm3\nmovups %xmm3,-944(%rbp)\nmovdqa -1776(%rbp),%xmm4\nmovups %xmm4,-928(%rbp)\nmovdqa -1760(%rbp),%xmm5\nmovups %xmm5,-912(%rbp)\nmovdqa -1744(%rbp),%xmm6\nmovups %xmm6,-896(%rbp)\nleaq -944(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $4,-200(%rbp)\nmovq $4,-192(%rbp)\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,%r13\nmovq %rbx,-1728(%rbp)\nleaq <go..C53>(%rip),%rdi\nmovq %rdi,-1720(%rbp)\nmovq %rbx,-1712(%rbp)\nleaq <go..C54>(%rip),%rsi\nmovq %rsi,-1704(%rbp)\nmovq %rbx,-1696(%rbp)\nleaq <go..C55>(%rip),%rdi\nmovq %rdi,-1688(%rbp)\nmovq %rbx,-1680(%rbp)\nleaq <go..C56>(%rip),%rdx\nmovq %rdx,-1672(%rbp)\nmovq %rbx,-1664(%rbp)\nleaq <go..C57>(%rip),%rsi\nmovq %rsi,-1656(%rbp)\nmovq $0,-1648(%rbp)\nmovq $0,-1640(%rbp)\nmovq $0,-1632(%rbp)\nmovq $0,-1624(%rbp)\nmovq %rbx,-1616(%rbp)\nleaq <go..C58>(%rip),%rdi\nmovq %rdi,-1608(%rbp)\nmovq %rbx,-1600(%rbp)\nleaq <go..C59>(%rip),%rdx\nmovq %rdx,-1592(%rbp)\nmovdqa -1728(%rbp),%xmm7\nmovups %xmm7,-880(%rbp)\nmovdqa -1712(%rbp),%xmm0\nmovups %xmm0,-864(%rbp)\nmovdqa -1696(%rbp),%xmm1\nmovups %xmm1,-848(%rbp)\nmovdqa -1680(%rbp),%xmm2\nmovups %xmm2,-832(%rbp)\nmovdqa -1664(%rbp),%xmm3\nmovups %xmm3,-816(%rbp)\nmovdqa -1648(%rbp),%xmm4\nmovups %xmm4,-800(%rbp)\nmovdqa -1632(%rbp),%xmm5\nmovups %xmm5,-784(%rbp)\nmovdqa -1616(%rbp),%xmm6\nmovups %xmm6,-768(%rbp)\nmovdqa -1600(%rbp),%xmm7\nmovups %xmm7,-752(%rbp)\nleaq -880(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $9,-168(%rbp)\nmovq $9,-160(%rbp)\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rbx,%r15\nmovq %r15,-1584(%rbp)\nleaq <go..C60>(%rip),%rsi\nmovq %rsi,-1576(%rbp)\nmovq %r15,-1568(%rbp)\nleaq <go..C61>(%rip),%rdi\nmovq %rdi,-1560(%rbp)\nmovq %r15,-1552(%rbp)\nleaq <go..C62>(%rip),%rdx\nmovq %rdx,-1544(%rbp)\nmovq %r15,-1536(%rbp)\nleaq <go..C63>(%rip),%rsi\nmovq %rsi,-1528(%rbp)\nmovq $0,-1520(%rbp)\nmovq $0,-1512(%rbp)\nmovq %r15,-1504(%rbp)\nleaq <go..C64>(%rip),%rdi\nmovq %rdi,-1496(%rbp)\nmovq %r15,-1488(%rbp)\nleaq <go..C65>(%rip),%rdx\nmovq %rdx,-1480(%rbp)\nmovq %r15,-1472(%rbp)\nleaq <go..C66>(%rip),%rsi\nmovq %rsi,-1464(%rbp)\nmovdqa -1584(%rbp),%xmm0\nmovups %xmm0,-736(%rbp)\nmovdqa -1568(%rbp),%xmm1\nmovups %xmm1,-720(%rbp)\nmovdqa -1552(%rbp),%xmm2\nmovups %xmm2,-704(%rbp)\nmovdqa -1536(%rbp),%xmm3\nmovups %xmm3,-688(%rbp)\nmovdqa -1520(%rbp),%xmm4\nmovups %xmm4,-672(%rbp)\nmovdqa -1504(%rbp),%xmm5\nmovups %xmm5,-656(%rbp)\nmovdqa -1488(%rbp),%xmm6\nmovups %xmm6,-640(%rbp)\nmovdqa -1472(%rbp),%xmm7\nmovups %xmm7,-624(%rbp)\nleaq -736(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $8,-136(%rbp)\nmovq $8,-128(%rbp)\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,%rbx\nmovq %r15,%rcx\nmovq %rcx,-1456(%rbp)\nleaq <go..C67>(%rip),%rdi\nmovq %rdi,-1448(%rbp)\nmovq %rcx,-1440(%rbp)\nleaq <go..C68>(%rip),%rdx\nmovq %rdx,-1432(%rbp)\nmovq %rcx,-1424(%rbp)\nleaq <go..C69>(%rip),%rsi\nmovq %rsi,-1416(%rbp)\nmovq $0,-1408(%rbp)\nmovq $0,-1400(%rbp)\nmovq $0,-1392(%rbp)\nmovq $0,-1384(%rbp)\nmovq $0,-1376(%rbp)\nmovq $0,-1368(%rbp)\nmovq %rcx,-1360(%rbp)\nleaq <go..C70>(%rip),%rdi\nmovq %rdi,-1352(%rbp)\nmovq %rcx,-1344(%rbp)\nleaq <go..C71>(%rip),%rdx\nmovq %rdx,-1336(%rbp)\nmovq %rcx,-1328(%rbp)\nleaq <go..C72>(%rip),%rsi\nmovq %rsi,-1320(%rbp)\nmovdqa -1456(%rbp),%xmm0\nmovups %xmm0,-608(%rbp)\nmovdqa -1440(%rbp),%xmm1\nmovups %xmm1,-592(%rbp)\nmovdqa -1424(%rbp),%xmm2\nmovups %xmm2,-576(%rbp)\nmovdqa -1408(%rbp),%xmm3\nmovups %xmm3,-560(%rbp)\nmovdqa -1392(%rbp),%xmm4\nmovups %xmm4,-544(%rbp)\nmovdqa -1376(%rbp),%xmm5\nmovups %xmm5,-528(%rbp)\nmovdqa -1360(%rbp),%xmm6\nmovups %xmm6,-512(%rbp)\nmovdqa -1344(%rbp),%xmm7\nmovups %xmm7,-496(%rbp)\nmovdqa -1328(%rbp),%xmm0\nmovups %xmm0,-480(%rbp)\nleaq -608(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $9,-104(%rbp)\nmovq $9,-96(%rbp)\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\ncall <go.leetcode.newTree>\naddq $32,%rsp\nmovq %rax,%rcx\nmovl $2,%eax\nmovl $2,%edx\nmovl $2,%esi\nmovl $2,%edi\nmovl $3,%r8d\nmovl $2,%r9d\nmovq -1824(%rbp),%r11\nmovq %r11,-1312(%rbp)\nmovq %rax,-1304(%rbp)\nmovq %r14,-1296(%rbp)\nmovq %rdx,-1288(%rbp)\nmovq %r13,-1280(%rbp)\nmovq %rsi,-1272(%rbp)\nmovq %r12,-1264(%rbp)\nmovq %rdi,-1256(%rbp)\nmovq %rbx,-1248(%rbp)\nmovq %r8,-1240(%rbp)\nmovq %rcx,-1232(%rbp)\nmovq %r9,-1224(%rbp)\nmovdqa -1312(%rbp),%xmm1\nmovups %xmm1,-464(%rbp)\nmovdqa -1296(%rbp),%xmm2\nmovups %xmm2,-448(%rbp)\nmovdqa -1280(%rbp),%xmm3\nmovups %xmm3,-432(%rbp)\nmovdqa -1264(%rbp),%xmm4\nmovups %xmm4,-416(%rbp)\nmovdqa -1248(%rbp),%xmm5\nmovups %xmm5,-400(%rbp)\nmovdqa -1232(%rbp),%xmm6\nmovups %xmm6,-384(%rbp)\nleaq -464(%rbp),%rax\nmovq %rax,-1120(%rbp)\nmovq $6,-1112(%rbp)\nmovq $6,-1104(%rbp)\n.LBB15:\nmovq $0,-1136(%rbp)\nmovq $0,-1128(%rbp)\n.LBB16:\n.LBB17:\n.LBB18:\nmovq -1120(%rbp),%rax\nmovq -1112(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -1104(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r12\nmovl $0,%ebx\n.LBE18:\njmp .L9\n.L18:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\n.LBB21:\nmovq -360(%rbp),%rax\ntestq %rbx,%rbx\njs .L10\ncmpq %rax,%rbx\njge .L10\nmovq -368(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE21:\n.LBB22:\nmovq %rax,-1136(%rbp)\nmovq %rdx,-1128(%rbp)\n.LBE22:\n.LBB23:\nmovq -1136(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.minDepth>\nmovq %rax,-56(%rbp)\n.LBB24:\nmovq -1128(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L11\njmp .L12\n.L10:\n.LBE24:\n.LBE23:\n.LBB29:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE29:\n.LBB30:\n.LBB28:\n.LBB25:\nleaq <type...1go.leetcode.TreeNode>(%rip),%rax\nmovq %rax,-1216(%rbp)\nmovq -1136(%rbp),%rax\nmovq %rax,-1208(%rbp)\nleaq <int..d>(%rip),%r14\nmovq %r14,-1200(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -344(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -344(%rbp),%rax\nmovq %rax,-1192(%rbp)\nmovq %r14,-1184(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-336(%rbp)\nmovq -336(%rbp),%rax\nmovq -1128(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -336(%rbp),%rax\nmovq %rax,-1176(%rbp)\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-328(%rbp)\nmovdqa -1216(%rbp),%xmm7\nmovups %xmm7,-320(%rbp)\nmovdqa -1200(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -1184(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L13\n.LBB26:\nmovq -328(%rbp),%rax\nmovq -320(%rbp),%rsi\nmovq -312(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -304(%rbp),%rsi\nmovq -296(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -288(%rbp),%rsi\nmovq -280(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\n.LBE26:\njmp .L14\n.L13:\n.LBB27:\nmovq -328(%rbp),%rax\nleaq -320(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L14:\n.LBE27:\nmovq -328(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $3,-72(%rbp)\nmovq $3,-64(%rbp)\nleaq <.LC22>(%rip),%rax\nmovq %rax,-1168(%rbp)\nmovq $31,-1160(%rbp)\nmovq -1168(%rbp),%rax\nmovq -1160(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rsi,%rcx\nmovq -1144(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L12:\n.LBE25:\n.LBE28:\n.LBE30:\n.LBE20:\n.LBB31:\naddq $1,%rbx\n.L9:\n.LBE31:\ncmpq %r12,%rbx\njl .L18\n.LBE17:\n.LBE16:\n.LBE15:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var tests = []struct {\n\ttree  *TreeNode\n\tdepth int\n}{\n\t{newTree(3, 9, 20, nil, nil, 15, 7), 2},\n\t{newTree(1, 2), 2},\n\t{newTree(1, 2, 2, 3), 2},\n\t{newTree(1, 2, 2, 3, 3, nil, nil, 4, 4), 2},\n\t{newTree(1, 2, 2, 3, nil, 3, 3, 4), 3},\n\t{newTree(1, 2, 2, nil, nil, nil, 3, 4, 4), 2},\n}\nfor _, tt := range tests {\n\tdepth := minDepth(tt.tree)\n\tif depth != tt.depth {\n\t\tt.Errorf(\"STR\", tt.tree, depth, tt.depth)\n\t}\n}"}
{"src": ".LFB5:\nleaq -776(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L48\nmovl $776,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L48:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $728,%rsp\nmovq %rdi,-408(%rbp)\nmovq -408(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\ncall <go.day97.NewTimeMap>\nmovq %rax,-56(%rbp)\nleaq <int..d>(%rip),%r12\nleaq <go..C63>(%rip),%r13\nleaq <int..d>(%rip),%r14\nleaq <go..C62>(%rip),%r15\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $0,%r9d\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Set>\nleaq <int..d>(%rip),%r14\nmovq %r14,-768(%rbp)\nleaq <go..C65>(%rip),%rax\nmovq %rax,-760(%rbp)\nmovq %r14,-752(%rbp)\nleaq <go..C64>(%rip),%rax\nmovq %rax,-744(%rbp)\nmovq -768(%rbp),%rax\nmovq -760(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $2,%r9d\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Set>\n.LBB28:\nmovq %r14,-736(%rbp)\nleaq <go..C66>(%rip),%rax\nmovq %rax,-728(%rbp)\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $1,%ecx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Get>\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovl $1,%eax\nmovq %rax,-280(%rbp)\nleaq -280(%rbp),%rax\nmovq -304(%rbp),%rdi\nmovq -296(%rbp),%rsi\nmovq %rax,%rcx\nleaq <int..d>(%rip),%rdx\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L41\n.LBB29:\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\nleaq <.LC35>(%rip),%rax\nmovq %rax,-720(%rbp)\nmovq $31,-712(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -408(%rbp),%rax\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L41:\n.LBE29:\n.LBE28:\n.LBB30:\nleaq <int..d>(%rip),%rax\nmovq %rax,-704(%rbp)\nleaq <go..C67>(%rip),%rax\nmovq %rax,-696(%rbp)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $3,%ecx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Get>\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovl $2,%eax\nmovq %rax,-248(%rbp)\nleaq -248(%rbp),%rax\nmovq -320(%rbp),%rdi\nmovq -312(%rbp),%rsi\nmovq %rax,%rcx\nleaq <int..d>(%rip),%rdx\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L42\n.LBB31:\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC36>(%rip),%rax\nmovq %rax,-688(%rbp)\nmovq $31,-680(%rbp)\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -408(%rbp),%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L42:\n.LBE31:\n.LBE30:\nleaq <int..d>(%rip),%r14\nmovq %r14,-672(%rbp)\nleaq <go..C69>(%rip),%rax\nmovq %rax,-664(%rbp)\nmovq %r14,-656(%rbp)\nleaq <go..C68>(%rip),%rax\nmovq %rax,-648(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $5,%r9d\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Set>\n.LBB32:\nmovq %r14,-640(%rbp)\nleaq <go..C70>(%rip),%rax\nmovq %rax,-632(%rbp)\nmovq -640(%rbp),%rax\nmovq -632(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $0,%ecx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Get>\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovl $1,%eax\nmovq %rax,-216(%rbp)\nleaq -216(%rbp),%rax\nmovq -336(%rbp),%rdi\nmovq -328(%rbp),%rsi\nmovq %rax,%rcx\nleaq <int..d>(%rip),%rdx\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L43\n.LBB33:\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nleaq <.LC37>(%rip),%rax\nmovq %rax,-624(%rbp)\nmovq $31,-616(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -408(%rbp),%rax\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L43:\n.LBE33:\n.LBE32:\n.LBB34:\nleaq <int..d>(%rip),%rax\nmovq %rax,-608(%rbp)\nleaq <go..C71>(%rip),%rax\nmovq %rax,-600(%rbp)\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $10,%ecx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Get>\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovl $1,%eax\nmovq %rax,-184(%rbp)\nleaq -184(%rbp),%rax\nmovq -352(%rbp),%rdi\nmovq -344(%rbp),%rsi\nmovq %rax,%rcx\nleaq <int..d>(%rip),%rdx\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L44\n.LBB35:\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-592(%rbp)\nmovq $32,-584(%rbp)\nmovq -592(%rbp),%rax\nmovq -584(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -408(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L44:\n.LBE35:\n.LBE34:\nleaq <int..d>(%rip),%r15\nmovq %r15,-576(%rbp)\nleaq <go..C73>(%rip),%rax\nmovq %rax,-568(%rbp)\nmovq %r15,-560(%rbp)\nleaq <go..C72>(%rip),%rax\nmovq %rax,-552(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $0,%r9d\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Set>\nmovq %r15,-544(%rbp)\nleaq <go..C75>(%rip),%rax\nmovq %rax,-536(%rbp)\nmovq %r15,-528(%rbp)\nleaq <go..C74>(%rip),%rax\nmovq %rax,-520(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq -528(%rbp),%rax\nmovq -520(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $0,%r9d\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Set>\n.LBB36:\nmovq %r15,-512(%rbp)\nleaq <go..C76>(%rip),%rax\nmovq %rax,-504(%rbp)\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $0,%ecx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Get>\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovl $2,%eax\nmovq %rax,-152(%rbp)\nleaq -152(%rbp),%rdx\nmovq -368(%rbp),%rsi\nmovq -360(%rbp),%rax\nmovq %rdx,%rcx\nleaq <int..d>(%rip),%rdx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <runtime.efacevaleq@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L45\n.LBB37:\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\nleaq <.LC39>(%rip),%rax\nmovq %rax,-496(%rbp)\nmovq $31,-488(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -408(%rbp),%rax\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L45:\n.LBE37:\n.LBE36:\n.LBB38:\nleaq <int..d>(%rip),%rax\nmovq %rax,-480(%rbp)\nleaq <go..C77>(%rip),%rax\nmovq %rax,-472(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovl $0,%ecx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Get>\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -384(%rbp),%rax\ntestq %rax,%rax\nje .L46\n.LBB39:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC40>(%rip),%rax\nmovq %rax,-464(%rbp)\nmovq $29,-456(%rbp)\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -408(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L46:\n.LBE39:\n.LBE38:\n.LBB40:\nleaq <int..d>(%rip),%rax\nmovq %rax,-448(%rbp)\nleaq <go..C78>(%rip),%rax\nmovq %rax,-440(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq -56(%rbp),%rax\nmovq $-1,%rcx\nmovq %rax,%rdi\ncall <go.day97.TimeMap.Get>\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -400(%rbp),%rax\ntestq %rax,%rax\nje .L40\n.LBB41:\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nleaq <.LC41>(%rip),%rax\nmovq %rax,-432(%rbp)\nmovq $36,-424(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq -408(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L40:\n.LBE41:\n.LBE40:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nd := NewTimeMap()\nd.Set(1, 1, 0)\nd.Set(1, 2, 2)\nif result := d.Get(1, 1); result != 1 {\n\tt.Errorf(\"STR\")\n}\nif result := d.Get(1, 3); result != 2 {\n\tt.Errorf(\"STR\")\n}\nd.Set(1, 1, 5)\nif result := d.Get(1, 0); result != 1 {\n\tt.Errorf(\"STR\")\n}\nif result := d.Get(1, 10); result != 1 {\n\tt.Errorf(\"STR\")\n}\nd.Set(1, 1, 0)\nd.Set(1, 2, 0)\nif result := d.Get(1, 0); result != 2 {\n\tt.Errorf(\"STR\")\n}\nif result := d.Get(2, 0); result != nil {\n\tt.Errorf(\"STR\")\n}\nif result := d.Get(1, -1); result != nil {\n\tt.Errorf(\"STR\")\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L17\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L17:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovb $0,-9(%rbp)\n.LBB2:\n.LBB3:\nmovq <24>(%rbp),%rax\ncmpq $1,%rax\njg .L2\n.LBB4:\n.LBB5:\nmovb $1,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L3\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq $1,-8(%rbp)\n.LBB7:\njmp .L4\n.L16:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq <32>(%rbp),%rax\ncmpq $0,-8(%rbp)\njs .L5\ncmpq %rax,-8(%rbp)\njle .L14\n.L5:\nmovq -8(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L14:\nmovq <16>(%rbp),%rdx\nmovq <32>(%rbp),%rax\ncmpq %rax,-8(%rbp)\nje .L7\nmovq -8(%rbp),%rax\nsalq $3,%rax\njmp .L8\n.L7:\nmovl $0,%eax\n.L8:\naddq %rdx,%rax\nmovq %rax,-48(%rbp)\nmovq <24>(%rbp),%rax\nsubq -8(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq <32>(%rbp),%rax\nsubq -8(%rbp),%rax\nmovq %rax,-32(%rbp)\nsubq $8,%rsp\npushq -32(%rbp)\npushq -40(%rbp)\npushq -48(%rbp)\ncall <go.day192.CanAdvanceToEndBrute>\naddq $32,%rsp\ntestb %al,%al\nje .L9\n.LBB11:\n.LBB12:\nmovb $1,-9(%rbp)\nmovzbl -9(%rbp),%eax\njmp .L3\n.L9:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBE9:\n.LBB13:\naddq $1,-8(%rbp)\n.L4:\n.LBE13:\n.LBB14:\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L10\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L10:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,-8(%rbp)\nsetle %al\ntestb %al,%al\nje .L11\n.LBB15:\nmovq <24>(%rbp),%rax\ncmpq %rax,-8(%rbp)\nsetle %al\n.L11:\n.LBE15:\n.LBE14:\ntestb %al,%al\njne .L16\n.LBE7:\n.LBE6:\n.LBB16:\nmovb $0,-9(%rbp)\nmovzbl -9(%rbp),%eax\n.L3:\n.LBE16:\n.LBE2:\nleave\nret", "tgt": "if len(steps) < 2 {\n\treturn true\n}\nfor step := 1; step <= steps[0] && step <= len(steps); step++ {\n\tif CanAdvanceToEndBrute(steps[step:]) {\n\t\treturn true\n\t}\n}\nreturn false"}
{"src": ".LFB4:\nleaq -1272(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L46\nmovl $1272,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL5:\nret\n.L46:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1224,%rsp\nmovq %rdi,-1064(%rbp)\nleaq -1056(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.Constructor225>\nleaq <go.leetcode.MyStack..d>(%rip),%rax\nmovq %rax,-1264(%rbp)\nleaq <go.leetcode.MyStack..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-984(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-976(%rbp)\nmovq %rdx,-968(%rbp)\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,-960(%rbp)\nmovq %rdx,-952(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-944(%rbp)\nmovq %rdx,-936(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L40\n.LBB36:\nmovq -984(%rbp),%rcx\nmovq -976(%rbp),%rax\nmovq -968(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE36:\njmp .L41\n.L40:\n.LBB37:\nmovq -984(%rbp),%rcx\nleaq -976(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <go.leetcode.MyStack..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L41:\n.LBE37:\nmovq -984(%rbp),%rax\nmovq %rax,-1256(%rbp)\nmovdqa -1264(%rbp),%xmm0\nmovups %xmm0,-928(%rbp)\nleaq -928(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $1,-520(%rbp)\nmovq $1,-512(%rbp)\nleaq <.LC23>(%rip),%r12\nmovl $9,%r13d\nleaq -496(%rbp),%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -512(%rbp)\npushq -520(%rbp)\npushq -528(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-1008(%rbp)\nmovq %rdx,-1000(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-992(%rbp)\nleaq -1056(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.MyStack.Empty>\nmovb %al,-49(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-1248(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-888(%rbp)\nmovq -888(%rbp),%rdx\nmovzbl -49(%rbp),%eax\nmovb %al,(%rdx)\nmovq -888(%rbp),%rax\nmovq %rax,-1240(%rbp)\nmovdqa -1248(%rbp),%xmm1\nmovups %xmm1,-880(%rbp)\nleaq -880(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq $1,-456(%rbp)\nmovq $1,-448(%rbp)\nleaq <.LC24>(%rip),%r14\nmovl $13,%r15d\nleaq -432(%rbp),%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -448(%rbp)\npushq -456(%rbp)\npushq -464(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-912(%rbp)\nmovq %rdx,-904(%rbp)\nmovq -416(%rbp),%rax\nmovq %rax,-896(%rbp)\nleaq -1056(%rbp),%rax\nmovl $2,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyStack.Push>\nleaq <go.leetcode.MyStack..d>(%rip),%rax\nmovq %rax,-1232(%rbp)\nleaq <go.leetcode.MyStack..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-840(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-832(%rbp)\nmovq %rdx,-824(%rbp)\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,-816(%rbp)\nmovq %rdx,-808(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-800(%rbp)\nmovq %rdx,-792(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L42\n.LBB38:\nmovq -840(%rbp),%rcx\nmovq -832(%rbp),%rax\nmovq -824(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -800(%rbp),%rax\nmovq -792(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE38:\njmp .L43\n.L42:\n.LBB39:\nmovq -840(%rbp),%rcx\nleaq -832(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <go.leetcode.MyStack..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L43:\n.LBE39:\nmovq -840(%rbp),%rax\nmovq %rax,-1224(%rbp)\nmovdqa -1232(%rbp),%xmm2\nmovups %xmm2,-784(%rbp)\nleaq -784(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq $1,-392(%rbp)\nmovq $1,-384(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-1152(%rbp)\nmovq $9,-1144(%rbp)\nleaq -368(%rbp),%rdi\nmovq -1152(%rbp),%rax\nmovq -1144(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -384(%rbp)\npushq -392(%rbp)\npushq -400(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -368(%rbp),%rax\nmovq -360(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -352(%rbp),%rax\nmovq %rax,-848(%rbp)\nleaq -1056(%rbp),%rax\nmovl $10,%esi\nmovq %rax,%rdi\ncall <go.leetcode.MyStack.Push>\nleaq <go.leetcode.MyStack..d>(%rip),%rax\nmovq %rax,-1216(%rbp)\nleaq <go.leetcode.MyStack..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-744(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-736(%rbp)\nmovq %rdx,-728(%rbp)\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L44\n.LBB40:\nmovq -744(%rbp),%rcx\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\n.LBE40:\njmp .L45\n.L44:\n.LBB41:\nmovq -744(%rbp),%rcx\nleaq -736(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <go.leetcode.MyStack..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L45:\n.LBE41:\nmovq -744(%rbp),%rax\nmovq %rax,-1208(%rbp)\nmovdqa -1216(%rbp),%xmm3\nmovups %xmm3,-688(%rbp)\nleaq -688(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $1,-328(%rbp)\nmovq $1,-320(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-1136(%rbp)\nmovq $9,-1128(%rbp)\nleaq -304(%rbp),%rdi\nmovq -1136(%rbp),%rax\nmovq -1128(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -320(%rbp)\npushq -328(%rbp)\npushq -336(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-768(%rbp)\nmovq %rdx,-760(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-752(%rbp)\nleaq -1056(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.MyStack.Pop>\nmovq %rax,-64(%rbp)\nleaq <int..d>(%rip),%r15\nmovq %r15,-1200(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-648(%rbp)\nmovq -648(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -648(%rbp),%rax\nmovq %rax,-1192(%rbp)\nmovdqa -1200(%rbp),%xmm4\nmovups %xmm4,-640(%rbp)\nleaq -640(%rbp),%rax\nmovq %rax,-272(%rbp)\nmovq $1,-264(%rbp)\nmovq $1,-256(%rbp)\nleaq <.LC25>(%rip),%rax\nmovq %rax,-1120(%rbp)\nmovq $13,-1112(%rbp)\nleaq -240(%rbp),%rax\nmovq -1120(%rbp),%rcx\nmovq -1112(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-656(%rbp)\nleaq -1056(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.MyStack.Top>\nmovq %rax,-72(%rbp)\nmovq %r15,-1184(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-1176(%rbp)\nmovdqa -1184(%rbp),%xmm5\nmovups %xmm5,-592(%rbp)\nleaq -592(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovq $1,-192(%rbp)\nleaq <.LC26>(%rip),%rax\nmovq %rax,-1104(%rbp)\nmovq $13,-1096(%rbp)\nleaq -176(%rbp),%rax\nmovq -1104(%rbp),%rcx\nmovq -1096(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -192(%rbp)\npushq -200(%rbp)\npushq -208(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-608(%rbp)\nleaq -1056(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.MyStack.Empty>\nmovb %al,-73(%rbp)\nleaq <bool..d>(%rip),%rax\nmovq %rax,-1168(%rbp)\nleaq <bool..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-552(%rbp)\nmovq -552(%rbp),%rax\nmovzbl -73(%rbp),%edx\nmovb %dl,(%rax)\nmovq -552(%rbp),%rax\nmovq %rax,-1160(%rbp)\nmovdqa -1168(%rbp),%xmm6\nmovups %xmm6,-544(%rbp)\nleaq -544(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq $1,-136(%rbp)\nmovq $1,-128(%rbp)\nleaq <.LC27>(%rip),%rax\nmovq %rax,-1088(%rbp)\nmovq $13,-1080(%rbp)\nleaq -112(%rbp),%rax\nmovq -1088(%rbp),%rcx\nmovq -1080(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -128(%rbp)\npushq -136(%rbp)\npushq -144(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-560(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "obj := Constructor225()\nfmt.Printf(\"STR\", obj)\nparam5 := obj.Empty()\nfmt.Printf(\"STR\", param5)\nobj.Push(2)\nfmt.Printf(\"STR\", obj)\nobj.Push(10)\nfmt.Printf(\"STR\", obj)\nparam2 := obj.Pop()\nfmt.Printf(\"STR\", param2)\nparam3 := obj.Top()\nfmt.Printf(\"STR\", param3)\nparam4 := obj.Empty()\nfmt.Printf(\"STR\", param4)"}
{"src": ".LFB0:\nleaq -696(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L26\nmovl $696,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $656,%rsp\nmovq %rdi,-680(%rbp)\nleaq <type...61x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7string.2.go.Solution.expect.0.6.7.6.7string.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-640(%rbp)\nleaq <.LC35>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-304(%rbp)\nmovq %r13,-296(%rbp)\nleaq <type...66x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nleaq <.LC36>(%rip),%rax\nmovq %rax,-624(%rbp)\nmovq $3,-616(%rbp)\nleaq <.LC37>(%rip),%rax\nmovq %rax,-608(%rbp)\nmovq $3,-600(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-592(%rbp)\nmovq $3,-584(%rbp)\nleaq <.LC39>(%rip),%rax\nmovq %rax,-576(%rbp)\nmovq $3,-568(%rbp)\nleaq <.LC40>(%rip),%rax\nmovq %rax,-560(%rbp)\nmovq $3,-552(%rbp)\nleaq <.LC41>(%rip),%rax\nmovq %rax,-544(%rbp)\nmovq $3,-536(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -632(%rbp),%rax\nmovq -624(%rbp),%rcx\nmovq -616(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -608(%rbp),%rcx\nmovq -600(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -592(%rbp),%rcx\nmovq -584(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -576(%rbp),%rcx\nmovq -568(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -560(%rbp),%rcx\nmovq -552(%rbp),%rbx\nmovq %rcx,<64>(%rax)\nmovq %rbx,<72>(%rax)\nmovq -544(%rbp),%rcx\nmovq -536(%rbp),%rbx\nmovq %rcx,<80>(%rax)\nmovq %rbx,<88>(%rax)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -632(%rbp),%rax\nleaq -624(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...66x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -632(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $6,-280(%rbp)\nmovq $6,-272(%rbp)\nleaq <type...63x.7.6.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-528(%rbp)\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-520(%rbp)\nleaq <.LC36>(%rip),%rax\nmovq %rax,-512(%rbp)\nmovq $3,-504(%rbp)\nleaq <.LC37>(%rip),%rax\nmovq %rax,-496(%rbp)\nmovq $3,-488(%rbp)\nleaq <.LC39>(%rip),%rax\nmovq %rax,-480(%rbp)\nmovq $3,-472(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L4\n.LBB4:\nmovq -520(%rbp),%rax\nmovq -512(%rbp),%rcx\nmovq -504(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -496(%rbp),%rcx\nmovq -488(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -480(%rbp),%rcx\nmovq -472(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\n.LBE4:\njmp .L5\n.L4:\n.LBB5:\nmovq -520(%rbp),%rax\nleaq -512(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L5:\n.LBE5:\nmovq -520(%rbp),%rax\nmovq %rax,-384(%rbp)\nmovq $3,-376(%rbp)\nmovq $3,-368(%rbp)\nleaq <type...62x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-456(%rbp)\nleaq <.LC38>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq $3,-440(%rbp)\nleaq <.LC40>(%rip),%rax\nmovq %rax,-432(%rbp)\nmovq $3,-424(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L6\n.LBB6:\nmovq -456(%rbp),%rcx\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE6:\njmp .L7\n.L6:\n.LBB7:\nmovq -456(%rbp),%rax\nleaq -448(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L7:\n.LBE7:\nmovq -456(%rbp),%rax\nmovq %rax,-360(%rbp)\nmovq $2,-352(%rbp)\nmovq $2,-344(%rbp)\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-408(%rbp)\nleaq <.LC41>(%rip),%rax\nmovq %rax,-400(%rbp)\nmovq $3,-392(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L8\n.LBB8:\nmovq -408(%rbp),%rcx\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE8:\njmp .L9\n.L8:\n.LBB9:\nmovq -408(%rbp),%rax\nleaq -400(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L9:\n.LBE9:\nmovq -408(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq $1,-328(%rbp)\nmovq $1,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L10\n.LBB10:\nmovq -528(%rbp),%rax\nmovq -384(%rbp),%rcx\nmovq -376(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -368(%rbp),%rcx\nmovq -360(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -352(%rbp),%rcx\nmovq -344(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -336(%rbp),%rcx\nmovq -328(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\nmovq -320(%rbp),%rdx\nmovq %rdx,<64>(%rax)\n.LBE10:\njmp .L11\n.L10:\n.LBB11:\nmovq -528(%rbp),%rax\nleaq -384(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...63x.7.6.7string>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L11:\n.LBE11:\nmovq -528(%rbp),%rax\nmovq %rax,-264(%rbp)\nmovq $3,-256(%rbp)\nmovq $3,-248(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB12:\nmovq -640(%rbp),%rax\nmovq -304(%rbp),%rcx\nmovq -296(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -272(%rbp),%rcx\nmovq -264(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -256(%rbp),%rcx\nmovq -248(%rbp),%rbx\nmovq %rcx,<48>(%rax)\nmovq %rbx,<56>(%rax)\n.LBE12:\njmp .L13\n.L12:\n.LBB13:\nmovq -640(%rbp),%rax\nleaq -304(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7string.2.go.Solution.expect.0.6.7.6.7string.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L13:\n.LBE13:\nmovq -640(%rbp),%rax\nmovq %rax,-672(%rbp)\nmovq $1,-664(%rbp)\nmovq $1,-656(%rbp)\n.LBB14:\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7string.2.go.Solution.expect.0.6.7.6.7string.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-40(%rbp)\n.LBB15:\n.LBB16:\n.LBB17:\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%r13\nmovl $0,%ebx\n.LBE17:\njmp .L14\n.L25:\n.LBB18:\nnop\n.LBE18:\n.LBB19:\n.LBB20:\nmovq -168(%rbp),%rax\ntestq %rbx,%rbx\njs .L15\ncmpq %rax,%rbx\njge .L15\nmovq -176(%rbp),%rax\nmovq %rbx,%rdx\nsalq $6,%rdx\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-240(%rbp)\nmovq %rdi,-232(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-224(%rbp)\nmovq %rdi,-216(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-208(%rbp)\nmovq %rdi,-200(%rbp)\nmovq <56>(%rax),%rdx\nmovq <48>(%rax),%rax\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBE20:\n.LBB21:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -40(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L16\njmp .L23\n.L15:\n.LBE21:\n.LBB24:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\n.LBE24:\n.LBB25:\n.LBB22:\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -128(%rbp),%rsi\nmovq -120(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -112(%rbp),%rsi\nmovq -104(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -96(%rbp),%rsi\nmovq -88(%rbp),%rdi\nmovq %rsi,<48>(%rax)\nmovq %rdi,<56>(%rax)\njmp .L18\n.L23:\n.LBE22:\n.LBB23:\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7string.2.go.Solution.expect.0.6.7.6.7string.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L18:\n.LBE23:\n.LBE25:\n.LBB26:\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -40(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7string.2.go.Solution.expect.0.6.7.6.7string.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-72(%rbp)\nmovq %r14,-64(%rbp)\nmovq %r12,-56(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L19\n.LBB27:\nmovq -72(%rbp),%rcx\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE27:\njmp .L20\n.L19:\n.LBB28:\nmovq -72(%rbp),%rax\nleaq -64(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.inputs.0.6.7string.2.go.Solution.expect.0.6.7.6.7string.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L20:\n.LBE28:\nmovq -72(%rbp),%rcx\nmovq -40(%rbp),%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdx\nmovq -680(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE26:\n.LBE19:\n.LBB29:\naddq $1,%rbx\n.L14:\n.LBE29:\ncmpq %r13,%rbx\njl .L25\n.LBE16:\n.LBE15:\n.LBE14:\naddq $656,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname   string\n\tinputs []string\n\texpect [][]string\n}{\n\t{\"STR\", []string{\"STR\", \"STR\", \"STR\", \"STR\", \"STR\", \"STR\"},\n\t\t[][]string{\n\t\t\t{\"STR\", \"STR\", \"STR\"},\n\t\t\t{\"STR\", \"STR\"},\n\t\t\t{\"STR\"},\n\t\t},\n\t},\n}\nfor _, c := range cases {\n\tt.Run(c.name, func(t *testing.T) {\n\t\tgot := groupAnagrams(c.inputs)\n\t\tfmt.Println(got)\n\t})\n}"}
{"src": ".LFB97:\ncmpq %fs:112,%rsp\njnb .L2378\nmovl $88,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL122:\nret\n.L2378:\npushq %rbp\nmovq %rsp,%rbp\nsubq $80,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-64(%rbp)\nmovq %rdi,-56(%rbp)\nmovq %rdx,-80(%rbp)\nmovq %rcx,-72(%rbp)\nmovq $0,-24(%rbp)\n.LBB1922:\nmovq $0,-8(%rbp)\nmovq $0,-16(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-40(%rbp)\n.LBB1923:\n.LBB1924:\njmp .L2368\n.L2377:\n.LBB1925:\nnop\n.LBE1925:\n.LBB1926:\n.LBB1927:\nmovq -8(%rbp),%rdx\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode.parseSeg>\nmovq %rax,%rcx\nmovq %rdx,%rax\nmovq %rcx,-32(%rbp)\nmovq %rax,-8(%rbp)\n.LBE1927:\n.LBB1928:\nmovq -16(%rbp),%rdx\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.leetcode.parseSeg>\nmovq %rax,%rcx\nmovq %rdx,%rax\nmovq %rcx,-40(%rbp)\nmovq %rax,-16(%rbp)\n.LBE1928:\n.LBB1929:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njle .L2369\n.LBB1930:\n.LBB1931:\nmovq $1,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L2370\n.L2369:\n.LBE1931:\n.LBE1930:\n.LBE1929:\n.LBB1932:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njge .L2368\n.LBB1933:\n.LBB1934:\nmovq $-1,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L2370\n.L2368:\n.LBE1934:\n.LBE1933:\n.LBE1932:\n.LBE1926:\n.LBB1935:\nmovq -56(%rbp),%rax\ncmpq %rax,-8(%rbp)\nsetl %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2371\n.LBB1936:\nmovq -72(%rbp),%rax\ncmpq %rax,-16(%rbp)\nsetl %al\n.L2371:\n.LBE1936:\n.LBE1935:\ntestb %al,%al\njne .L2377\n.LBE1924:\n.LBE1923:\n.LBB1937:\nmovq -56(%rbp),%rax\ncmpq %rax,-8(%rbp)\njge .L2374\n.LBB1938:\n.LBB1939:\nmovq $1,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L2370\n.L2374:\n.LBE1939:\n.LBE1938:\n.LBE1937:\n.LBB1940:\nmovq -72(%rbp),%rax\ncmpq %rax,-16(%rbp)\njge .L2375\n.LBB1941:\n.LBB1942:\nmovq $-1,-24(%rbp)\nmovq -24(%rbp),%rax\njmp .L2370\n.L2375:\n.LBE1942:\n.LBE1941:\n.LBE1940:\n.LBB1943:\nmovq $0,-24(%rbp)\nmovq -24(%rbp),%rax\n.L2370:\n.LBE1943:\n.LBE1922:\nleave\nret", "tgt": "i1 := 0\ni2 := 0\nval1 := 0\nval2 := 0\nfor i1 < len(version1) || i2 < len(version2) {\n\tval1, i1 = parseSeg(version1, i1)\n\tval2, i2 = parseSeg(version2, i2)\n\tif val1 > val2 {\n\t\treturn 1\n\t}\n\tif val1 < val2 {\n\t\treturn -1\n\t}\n}\nif i1 < len(version1) {\n\treturn 1\n}\nif i2 < len(version2) {\n\treturn -1\n}\nreturn 0"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L18\nmovl $232,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L18:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $208,%rsp\nmovq %rdi,-216(%rbp)\nmovq %rsi,-224(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\n.LBB2:\nmovl $0,%edx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\n.LBB3:\nmovq $0,-24(%rbp)\n.LBB4:\njmp .L2\n.L17:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rbx\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L3\ncmpq %rax,-24(%rbp)\njl .L14\n.L3:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L14:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L5\n.LBB7:\nmovq -144(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE7:\njmp .L6\n.L5:\n.LBB8:\nmovq -144(%rbp),%rcx\nmovq -128(%rbp),%rdx\nmovq %rcx,-208(%rbp)\nmovq %rax,-200(%rbp)\nmovq %rdx,-192(%rbp)\n.L6:\n.LBE8:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rbx\nmovq -224(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njl .L15\n.L7:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L9\n.LBB9:\nmovq -112(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE9:\njmp .L10\n.L9:\n.LBB10:\nmovq -112(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rcx,-208(%rbp)\nmovq %rax,-200(%rbp)\nmovq %rdx,-192(%rbp)\n.L10:\n.LBE10:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\n.LBE6:\n.LBB11:\naddq $1,-24(%rbp)\n.L2:\n.LBE11:\nmovq -24(%rbp),%rax\ncmpq -224(%rbp),%rax\njl .L17\n.LBE4:\n.LBE3:\n.LBB12:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -216(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE12:\n.LBE2:\nmovq -216(%rbp),%rax\naddq $208,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "result := make([]int, 0)\nfor i := 0; i < n; i++ {\n\tresult = append(result, nums[i])\n\tresult = append(result, nums[n+i])\n}\nreturn result"}
{"src": ".LFB305:\ncmpq %fs:112,%rsp\njnb .L7626\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL379:\nret\n.L7626:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $88,%rsp\nmovq %rdi,-88(%rbp)\nmovq %rsi,-96(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB6329:\nmovq -88(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <uint8..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-80(%rbp)\nmovq %rbx,-72(%rbp)\nmovq %rbx,-64(%rbp)\n.LBB6330:\nmovq $0,-24(%rbp)\n.LBB6331:\njmp .L7612\n.L7624:\n.LBB6332:\nnop\n.LBE6332:\n.LBB6333:\nmovq -72(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L7613\ncmpq %rax,-24(%rbp)\njl .L7621\n.L7613:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7621:\nmovq -24(%rbp),%rax\nmovl %eax,%ecx\nmovq -80(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nleal <49>(%rcx),%edx\nmovb %dl,(%rax)\n.LBE6333:\n.LBB6334:\naddq $1,-24(%rbp)\n.L7612:\n.LBE6334:\nmovq -24(%rbp),%rax\ncmpq -88(%rbp),%rax\njl .L7624\n.LBE6331:\n.LBE6330:\n.LBB6335:\nmovq $2,-32(%rbp)\n.LBB6336:\njmp .L7617\n.L7625:\n.LBB6337:\nnop\n.LBE6337:\n.LBB6338:\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\ncall <go.leetcode.nextPermutation60>\naddq $32,%rsp\n.LBE6338:\n.LBB6339:\naddq $1,-32(%rbp)\n.L7617:\n.LBE6339:\nmovq -32(%rbp),%rax\ncmpq -96(%rbp),%rax\njle .L7625\n.LBE6336:\n.LBE6335:\n.LBB6340:\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovl $0,%edi\ncall <runtime.slicebytetostring@PLT>\naddq $32,%rsp\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\n.LBE6340:\n.LBE6329:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "nums := make([]byte, n)\nfor i := 0; i < n; i++ {\n\tnums[i] = byte(i) + '1'\n}\nfor i := 2; i <= k; i++ {\n\tnextPermutation60(nums)\n}\nreturn string(nums)"}
{"src": ".LFB2:\nleaq -376(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L100\nmovl $376,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L100:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $328,%rsp\nmovq %rdi,-344(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB37:\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\nmovq $0,-312(%rbp)\n.LBB38:\n.LBB39:\n.LBB40:\nmovq <go.day34.testcases>(%rip),%rax\nmovq <8+go.day34.testcases>(%rip),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16+go.day34.testcases>(%rip),%rax\nmovq %rax,-240(%rbp)\nmovq -248(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovl $0,%ebx\n.LBE40:\njmp .L84\n.L99:\n.LBB41:\nnop\n.LBE41:\n.LBB42:\n.LBB43:\nmovq -248(%rbp),%rax\ntestq %rbx,%rbx\njs .L85\ncmpq %rax,%rbx\njge .L85\nmovq -256(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\n.LBE43:\n.LBB44:\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\n.LBE44:\n.LBB45:\n.LBB46:\nmovq -336(%rbp),%rdx\nmovq -328(%rbp),%rax\nmovq %rdx,%rdi\nmovq %rax,%rsi\ncall <go.day34.MakePalindrome>\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq -296(%rbp),%rcx\nmovq %rdx,%rsi\ncmpq %rsi,%rcx\njne .L86\njmp .L97\n.L85:\n.LBE46:\n.LBE45:\n.LBB55:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L97:\n.LBE55:\n.LBB56:\n.LBB54:\nmovq -304(%rbp),%rcx\nmovq %rax,%rsi\ncmpq %rsi,%rcx\nje .L88\nmovq %rdx,%rcx\nmovq %rcx,%rsi\nmovq %rax,%rcx\nmovq -304(%rbp),%rax\nmovq %rsi,%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L88\n.L86:\n.LBB47:\nleaq <string..d>(%rip),%rax\nmovq %rax,-368(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L89\n.LBB48:\nmovq -184(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE48:\njmp .L90\n.L89:\n.LBB49:\nmovq -184(%rbp),%rax\nleaq -176(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L90:\n.LBE49:\nmovq -184(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq <string..d>(%rip),%r14\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L91\n.LBB50:\nmovq -152(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE50:\njmp .L92\n.L91:\n.LBB51:\nmovq -152(%rbp),%rax\nleaq -144(%rbp),%rdx\nmovq %rax,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L92:\n.LBE51:\nmovq -152(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -368(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L93\n.LBB52:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE52:\njmp .L94\n.L93:\n.LBB53:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L94:\n.LBE53:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC17>(%rip),%r12\nmovl $18,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -344(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L88:\n.LBE47:\n.LBE54:\n.LBE56:\n.LBE42:\n.LBB57:\naddq $1,%rbx\n.L84:\n.LBE57:\ncmpq -352(%rbp),%rbx\njl .L99\n.LBE39:\n.LBE38:\n.LBE37:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := MakePalindrome(tc.input); result != tc.expected {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": ".LFB0:\nleaq -744(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L27\nmovl $744,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\n.LEHB0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $696,%rsp\n.LEHE0:\nmovb $0,-577(%rbp)\n.LBB2:\nleaq <.LC3>(%rip),%rax\nmovl $5,%edx\nleaq <.LC4>(%rip),%rsi\nmovl $3,%edi\nleaq -240(%rbp),%r9\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%r8\nmovq %rdx,%r10\nmovq %rsi,%rcx\nmovq %rdi,%rbx\nmovq %rsi,%rax\nmovq %rdi,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %r8,%rcx\nmovq %r10,%r8\nmovq %rax,%rdx\nmovq %r9,%rdi\n.LEHB1:\ncall <net.Listen@PLT>\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -576(%rbp),%rax\nmovq -568(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -560(%rbp),%rax\nmovq -552(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\n.LBB3:\nmovq -624(%rbp),%rax\ntestq %rax,%rax\nje .L2\n.LBB4:\nmovq -624(%rbp),%rax\ntestq %rax,%rax\njne .L3\nmovl $0,%eax\njmp .L4\n.L3:\nmovq -624(%rbp),%rax\nmovq (%rax),%rax\n.L4:\nmovq %rax,%r12\nmovq -616(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L2:\n.LBE4:\n.LBE3:\n.LBB5:\nmovq $0,-480(%rbp)\nmovq $0,-472(%rbp)\nleaq -480(%rbp),%rax\nmovq %rax,-456(%rbp)\nmovq -456(%rbp),%rcx\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -456(%rbp),%rax\nleaq <main.main..thunk0>(%rip),%rdx\nleaq -577(%rbp),%rsi\nleaq -544(%rbp),%rdi\nmovq %rax,%rcx\ncall <runtime.deferprocStack@PLT>\n.L14:\n.LBE5:\n.LBB6:\n.LBB7:\n.LBB8:\nmovq -608(%rbp),%rax\nmovq <8>(%rax),%rcx\nmovq -600(%rbp),%rdx\nleaq -208(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall *%rcx\n.LVL1:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\n.LBB9:\nmovq -656(%rbp),%rax\ntestq %rax,%rax\nje .L5\n.LBB10:\nmovq -656(%rbp),%rax\ntestq %rax,%rax\njne .L6\nmovl $0,%eax\njmp .L7\n.L6:\nmovq -656(%rbp),%rax\nmovq (%rax),%rax\n.L7:\nmovq %rax,-720(%rbp)\nmovq -648(%rbp),%rax\nmovq %rax,-712(%rbp)\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.gopanic@PLT>\n.L5:\n.LBE10:\n.LBE9:\nmovq -640(%rbp),%rax\nmovq <32>(%rax),%rdx\nmovq -632(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL2:\nleaq <string..d>(%rip),%rbx\nmovq %rbx,-704(%rbp)\nleaq <go..C6>(%rip),%rbx\nmovq %rbx,-696(%rbp)\nmovq %rax,%rcx\ntestq %rcx,%rcx\njne .L8\nmovl $0,%ecx\njmp .L9\n.L8:\nmovq %rax,%rcx\nmovq (%rcx),%rcx\n.L9:\nmovq %rcx,-688(%rbp)\nmovq %rdx,%rax\nmovq %rax,-680(%rbp)\nmovdqa -704(%rbp),%xmm0\nmovups %xmm0,-384(%rbp)\nmovdqa -688(%rbp),%xmm1\nmovups %xmm1,-368(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq -144(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-400(%rbp)\nleaq -320(%rbp),%rax\nmovq %rax,%rdi\ncall <time.Now@PLT>\nleaq <time.Time..d>(%rip),%rax\nmovq %rax,-672(%rbp)\nleaq <time.Time..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-272(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L10\n.LBB11:\nmovq -296(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\njmp .L11\n.L10:\n.LBB12:\nmovq -296(%rbp),%rax\nleaq -288(%rbp),%rdx\nmovq %rax,%rsi\nleaq <time.Time..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L11:\n.LBE12:\nmovq -296(%rbp),%rax\nmovq %rax,-664(%rbp)\nmovdqa -672(%rbp),%xmm2\nmovups %xmm2,-256(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\ncall <fmt.Sprint@PLT>\naddq $32,%rsp\nmovq %rax,%r12\nmovq %rdx,%r13\nmovq -640(%rbp),%rax\ntestq %rax,%rax\njne .L12\nmovl $0,%eax\njmp .L13\n.L12:\nmovq -640(%rbp),%rax\nmovq (%rax),%rax\n.L13:\nmovq %rax,%rsi\nleaq <io.Writer..d>(%rip),%rdi\ncall <runtime.requireitab@PLT>\nmovq %rax,%r14\nmovq -632(%rbp),%rax\nmovq %rax,%r15\nleaq -80(%rbp),%r9\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rcx,%rdi\nmovq %rdx,%r8\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq %rdi,%rcx\nmovq %rax,%rdx\nmovq %r9,%rdi\ncall <io.WriteString@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-336(%rbp)\nmovq -640(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -632(%rbp),%rax\nmovq %rax,%rdi\ncall *%rdx\n.LVL3:\n.LEHE1:\n.LBE8:\njmp .L14\n.L26:\n.LBE7:\n.LBE6:\n.LBE2:\nmovl $1,%ebx\n.L21:\nleaq -577(%rbp),%rax\nmovq %rax,%rdi\n.LEHB2:\ncall <runtime.deferreturn@PLT>\n.LEHE2:\ncmpl $1,%ebx\njne .L15\njmp .L25\n.L22:\nleaq -577(%rbp),%rax\nmovq %rax,%rdi\n.LEHB3:\ncall <runtime.checkdefer@PLT>\n.LEHE3:\njmp .L26\n.L23:\nmovq %rax,-728(%rbp)\nmovl $0,%ebx\njmp .L21\n.L15:\nmovq -728(%rbp),%rax\nmovq %rax,%rdi\n.LEHB4:\ncall <_Unwind_Resume@PLT>\n.L24:\nleaq -577(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L21\n.L25:\nleaq -40(%rbp),%rsp\n.LEHE4:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "ln, err := net.Listen(\"STR\", \"STR\")\nif err != nil {\n\tpanic(err)\n}\ndefer ln.Close()\nfor {\n\tconn, err := ln.Accept()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(\"STR\", conn.RemoteAddr())\n\tio.WriteString(conn, fmt.Sprint(time.Now()))\n\tconn.Close()\n}"}
{"src": "cmpq %fs:112,%rsp\njnb .L173\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL30:\nret\n.L173:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,-40(%rbp)\nmovq %rsi,-48(%rbp)\nmovl %edx,-52(%rbp)\nmovq -40(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-16(%rbp)\nmovq -24(%rbp),%rax\nmovq -48(%rbp),%rdx\ntestq %rdx,%rdx\njs .L171\nmovq -48(%rbp),%rdx\ncmpq %rdx,%rax\njle .L171\nmovq -32(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $4,%rax\naddq %rax,%rdx\nmovl -52(%rbp),%eax\nmovl %eax,(%rdx)\njmp .L172\n.L171:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndexU@PLT>\n.L172:\nleave\nret", "tgt": "self.table[index].Num = value"}
{"src": ".LFB7:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-32(%rbp)\nmovq %rdi,-24(%rbp)\nmovq %rdx,-48(%rbp)\nmovq %rcx,-40(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\nmovq -32(%rbp),%rax\nleaq <int..d>(%rip),%rdx\ncmpq %rdx,%rax\nje .L2\nmovq -32(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L2:\nmovq -48(%rbp),%rax\nleaq <int..d>(%rip),%rdx\ncmpq %rdx,%rax\nje .L3\nmovq -48(%rbp),%rax\nleaq <type..interface.4.5>(%rip),%rdx\nmovq %rax,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.panicdottype@PLT>\n.L3:\nmovq -24(%rbp),%rax\nmovq (%rax),%rdx\nmovq -40(%rbp),%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsetl %al\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return x.(int) < y.(int)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $56,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $40,%rsp\nmovq %rsi,%r8\nmovq %rdi,%r9\nmovq %r9,%rsi\nmovq %r10,%rdi\nmovq %r8,%rdi\nmovq %rsi,-48(%rbp)\nmovq %rdi,-40(%rbp)\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\n.LBB2:\n.LBB3:\nleaq <.LC0>(%rip),%rcx\nmovl $3,%ebx\nleaq <.LC1>(%rip),%rax\nmovl $1,%edx\nmovq -48(%rbp),%rdi\nmovq -40(%rbp),%rsi\nsubq $8,%rsp\npushq $-1\nmovq %rcx,%r8\nmovq %rbx,%r9\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <strings.Replace@PLT>\naddq $16,%rsp\nmovq %rax,-32(%rbp)\nmovq %rdx,-24(%rbp)\nmovq -32(%rbp),%rax\nmovq -24(%rbp),%rdx\n.LBE3:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "return strings.Replace(address, \"STR\", \"STR\", -1)"}
{"src": ".LFB0:\nleaq -344(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L55\nmovl $344,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L55:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $296,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq $0,-88(%rbp)\n.LBB2:\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\nmovb $0,-49(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-80(%rbp)\n.LBB3:\nmovq $0,-96(%rbp)\nmovl $0,-100(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -280(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L54:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -280(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -288(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L42\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\nleaq <1>(%rbx),%rdi\nmovq %rdi,-296(%rbp)\n.LBE10:\njmp .L6\n.L42:\n.LBB11:\nmovq -288(%rbp),%rcx\nmovq -280(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovl %esi,%eax\nmovq %rdi,-296(%rbp)\n.L6:\n.LBE11:\n.LBE9:\n.LBB12:\nmovq %rbx,-96(%rbp)\nmovl %eax,-100(%rbp)\n.LBE12:\n.LBB13:\n.LBB14:\n.LBB15:\nmovl $1,%ebx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovl -100(%rbp),%esi\nmovq -96(%rbp),%rdi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <go.day17.isNewStart>\ncmpb %al,%bl\njne .L50\n.LBB16:\nmovq -96(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBE16:\njmp .L9\n.L50:\n.LBB17:\nnop\n.LBE17:\ncmpl $46,-100(%rbp)\nsete %al\ncmpb %al,%bl\njne .L51\n.LBB18:\nmovb $1,-49(%rbp)\n.LBE18:\njmp .L9\n.L51:\n.LBB19:\nnop\n.LBE19:\ncmpl $9,-100(%rbp)\nsete %al\ncmpb %al,%bl\njne .L52\n.LBB20:\naddq $1,-72(%rbp)\n.LBE20:\njmp .L9\n.L52:\n.LBB21:\nnop\n.LBE21:\ncmpl $10,-100(%rbp)\nsete %al\ncmpb %al,%bl\njne .L53\n.LBB22:\n.LBB23:\nmovq -72(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -264(%rbp),%rax\ncmpq %rax,-112(%rbp)\njge .L15\n.LBB24:\nmovq -256(%rbp),%rax\ncmpq $0,-112(%rbp)\njs .L16\ncmpq %rax,-112(%rbp)\njg .L16\ncmpq $0,-112(%rbp)\njns .L17\njmp .L46\n.L16:\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAcap@PLT>\n.L46:\nmovq -112(%rbp),%rax\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L17:\nmovq -272(%rbp),%rdx\nmovq -256(%rbp),%rax\nmovq %rdx,-272(%rbp)\nmovq -112(%rbp),%rdx\nmovq %rdx,-264(%rbp)\nmovq %rax,-256(%rbp)\n.L15:\n.LBE24:\n.LBE23:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%rbx\nmovq -280(%rbp),%rax\ncmpq $0,-96(%rbp)\njs .L19\ncmpq %rax,-96(%rbp)\njg .L19\ncmpq $0,-64(%rbp)\njns .L20\njmp .L21\n.L19:\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceAlen@PLT>\n.L20:\nmovq -64(%rbp),%rax\ncmpq -96(%rbp),%rax\njg .L21\nmovq -288(%rbp),%rdx\nmovq -96(%rbp),%rax\ncmpq -64(%rbp),%rax\njne .L22\njmp .L47\n.L21:\nmovq -96(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L22:\nmovq -64(%rbp),%rax\njmp .L24\n.L47:\nmovl $0,%eax\n.L24:\naddq %rdx,%rax\nmovq %rax,%r14\nmovq -96(%rbp),%rax\nsubq -64(%rbp),%rax\nmovq %rax,%r15\nleaq <1>(%rbx),%rcx\nmovq -224(%rbp),%rsi\nmovq %rcx,%rdx\nmovq %rsi,%rax\ncmpq %rax,%rdx\njbe .L25\n.LBB25:\nmovq -240(%rbp),%rax\nleaq -176(%rbp),%rdi\nmovq %rcx,%r9\nmovq %rsi,%r8\nmovq %rbx,%rcx\nmovq %rax,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-256(%rbp)\n.LBE25:\njmp .L26\n.L25:\n.LBB26:\nmovq -240(%rbp),%rdx\nmovq -224(%rbp),%rax\nmovq %rdx,-272(%rbp)\nmovq %rcx,-264(%rbp)\nmovq %rax,-256(%rbp)\n.L26:\n.LBE26:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r15,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L27\n.LBB27:\nmovq %r14,%rdx\nmovq %rdx,(%rax)\njmp .L28\n.L27:\n.LBE27:\n.LBB28:\nmovq %r14,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L28:\n.LBE28:\n.LBB29:\nleaq <.LC9>(%rip),%rax\nmovq %rax,-336(%rbp)\nmovq $1,-328(%rbp)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <strings.Join@PLT>\naddq $32,%rsp\nmovq %rdx,%rax\nmovq %rax,-120(%rbp)\n.LBB30:\nmovzbl -49(%rbp),%eax\ntestb %al,%al\nje .L29\n.LBB31:\nmovq -120(%rbp),%rax\ncmpq -80(%rbp),%rax\nsetg %al\n.L29:\n.LBE31:\n.LBE30:\ntestb %al,%al\nje .L30\n.LBB32:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\n.L30:\n.LBE32:\n.LBE29:\nmovb $0,-49(%rbp)\nmovq $0,-72(%rbp)\n.LBE22:\njmp .L9\n.L53:\n.LBB33:\nnop\n.L9:\n.LBE33:\n.LBE15:\n.LBE14:\n.LBE13:\n.LBE8:\n.LBB34:\nmovq -296(%rbp),%rbx\n.L2:\n.LBE34:\ncmpq -304(%rbp),%rbx\njl .L54\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB35:\ncmpb $0,-49(%rbp)\nje .L33\n.LBB36:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rbx\nmovq -280(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L34\ncmpq %rax,-64(%rbp)\njg .L34\nmovq -288(%rbp),%rdx\nmovq -280(%rbp),%rax\ncmpq %rax,-64(%rbp)\njne .L35\njmp .L49\n.L34:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L35:\nmovq -64(%rbp),%rax\njmp .L37\n.L49:\nmovl $0,%eax\n.L37:\naddq %rdx,%rax\nmovq %rax,%r12\nmovq -280(%rbp),%rax\nsubq -64(%rbp),%rax\nmovq %rax,%r13\nleaq <1>(%rbx),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L38\n.LBB37:\nmovq -208(%rbp),%rsi\nleaq -144(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-256(%rbp)\n.LBE37:\njmp .L39\n.L38:\n.LBB38:\nmovq -208(%rbp),%rcx\nmovq -192(%rbp),%rdx\nmovq %rcx,-272(%rbp)\nmovq %rax,-264(%rbp)\nmovq %rdx,-256(%rbp)\n.L39:\n.LBE38:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq %r13,%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L40\n.LBB39:\nmovq %r12,%rdx\nmovq %rdx,(%rax)\njmp .L33\n.L40:\n.LBE39:\n.LBB40:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L33:\n.LBE40:\n.LBE36:\n.LBE35:\n.LBB41:\nleaq <.LC9>(%rip),%rax\nmovq %rax,-320(%rbp)\nmovq $1,-312(%rbp)\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <strings.Join@PLT>\naddq $32,%rsp\nmovq %rdx,%rax\nmovq %rax,-88(%rbp)\nmovq -88(%rbp),%rax\n.LBE41:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "var parts []string\nvar isFile bool\nvar partStart, tabCount, maxLength int\nfor i, r := range fs {\n\tswitch {\n\tcase isNewStart(i, r, fs):\n\t\tpartStart = i\n\tcase r == '.':\n\t\tisFile = true\n\tcase r == '\\t':\n\t\ttabCount++\n\tcase r == '\\n':\n\t\tif pos := tabCount; len(parts) > pos {\n\t\t\tparts = parts[:pos]\n\t\t}\n\t\tparts = append(parts, fs[partStart:i])\n\t\tif len := len(strings.Join(parts, \"STR\")); isFile && len > maxLength {\n\t\t\tmaxLength = len\n\t\t}\n\t\tisFile = false\n\t\ttabCount = 0\n\t}\n}\nif isFile {\n\tparts = append(parts, fs[partStart:])\n}\nreturn len(strings.Join(parts, \"STR\"))"}
{"src": "cmpq %fs:112,%rsp\njnb .L11\nmovl $24,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L11:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $8,%rsp\nleaq <pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File>(%rip),%rax\nmovq <os.Stdout>(%rip),%rcx\nmovq %rcx,%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.version.FprintVersion>\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "FprintVersion(os.Stdout)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L33\nmovl $56,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L33:\npushq %rbp\nmovq %rsp,%rbp\nsubq $48,%rsp\nmovq %rdi,-40(%rbp)\nmovb $0,-17(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\n.LBB3:\nmovq $0,-16(%rbp)\n.LBB4:\njmp .L2\n.L32:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\n.LBB8:\ncmpq $0,-16(%rbp)\nsetg %al\ntestb %al,%al\nje .L3\n.LBB9:\nmovq -16(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L4\ncmpq %rdx,%rax\njl .L23\n.L4:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L23:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq $1,%rax\nsete %al\n.L3:\n.LBE9:\n.LBE8:\ntestb %al,%al\njne .L29\n.LBE7:\n.LBB11:\n.LBB12:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-16(%rbp)\nsetl %al\ntestb %al,%al\nje .L8\n.LBB13:\nmovq -16(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L9\ncmpq %rdx,%rax\njl .L24\n.L9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq $1,%rax\nsete %al\n.L8:\n.LBE13:\n.LBE12:\ntestb %al,%al\njne .L30\n.LBE11:\n.LBB15:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L12\ncmpq %rax,-16(%rbp)\njl .L25\n.L12:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\njne .L31\n.LBE15:\nmovq <24>(%rbp),%rax\ncmpq $0,-16(%rbp)\njs .L15\ncmpq %rax,-16(%rbp)\njl .L26\n.L15:\nmovq -16(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\nmovq <16>(%rbp),%rdx\nmovq -16(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq $1,(%rax)\naddq $1,-8(%rbp)\n.LBB17:\nmovq <24>(%rbp),%rax\nsubq $1,%rax\ncmpq %rax,-16(%rbp)\njge .L7\n.LBB18:\nmovq -16(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L17\ncmpq %rdx,%rax\njl .L27\n.L17:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq $-1,(%rax)\njmp .L7\n.L29:\n.LBE18:\n.LBE17:\n.LBB19:\n.LBB10:\nnop\njmp .L7\n.L30:\n.LBE10:\n.LBE19:\n.LBB20:\n.LBB14:\nnop\njmp .L7\n.L31:\n.LBE14:\n.LBE20:\n.LBB21:\n.LBB16:\nnop\n.L7:\n.LBE16:\n.LBE21:\n.LBE6:\n.LBB22:\naddq $1,-16(%rbp)\n.L2:\n.LBE22:\n.LBB23:\nmovq -8(%rbp),%rax\ncmpq -40(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L19\n.LBB24:\nmovq <24>(%rbp),%rax\ncmpq %rax,-16(%rbp)\nsetl %al\n.L19:\n.LBE24:\n.LBE23:\ntestb %al,%al\njne .L32\n.LBE4:\n.LBE3:\n.LBB25:\nmovq -8(%rbp),%rax\ncmpq -40(%rbp),%rax\nsetge %al\nmovb %al,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.LBE25:\n.LBE2:\nleave\nret", "tgt": "cnt := 0\nfor i := 0; cnt < n && i < len(flowerbed); i++ {\n\tif i > 0 && flowerbed[i-1] == 1 {\n\t\tcontinue\n\t}\n\tif i < len(flowerbed)-1 && flowerbed[i+1] == 1 {\n\t\tcontinue\n\t}\n\tif flowerbed[i] != 0 {\n\t\tcontinue\n\t}\n\tflowerbed[i] = 1\n\tcnt++\n\tif i < len(flowerbed)-1 {\n\t\tflowerbed[i+1] = -1\n\t}\n}\nreturn cnt >= n"}
{"src": ".LFB0:\nleaq -280(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L34\nmovl $280,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L34:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $248,%rsp\nmovq %rdi,-264(%rbp)\nmovq $0,-224(%rbp)\nmovq $0,-216(%rbp)\nmovq $0,-208(%rbp)\n.LBB2:\nmovq <24>(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-64(%rbp)\nmovq -64(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-256(%rbp)\nmovq %rbx,-248(%rbp)\nmovq %rbx,-240(%rbp)\n.LBB3:\nmovq $0,-72(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq -184(%rbp),%r13\nmovl $0,%r12d\n.LBE6:\njmp .L3\n.L31:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\nmovq %r12,-72(%rbp)\n.LBB9:\nmovq -56(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,%rdx\nmovq -248(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L4\ncmpq %rax,-72(%rbp)\njl .L24\n.L4:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq -256(%rbp),%rsi\nmovq -72(%rbp),%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rsi,%rax\nmovq %rdx,-160(%rbp)\nmovq %rbx,-152(%rbp)\nmovq %rbx,-144(%rbp)\nmovq -152(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -144(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L6\n.LBB10:\nmovq -160(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L7\n.L6:\n.LBE10:\n.LBB11:\nmovq -160(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L7:\n.LBE11:\n.LBE9:\n.LBE8:\n.LBB12:\naddq $1,%r12\n.L3:\n.LBE12:\ncmpq %r13,%r12\njl .L31\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB13:\nmovq $0,-40(%rbp)\n.LBB14:\njmp .L10\n.L33:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\n.LBB17:\nmovq $0,-48(%rbp)\n.LBB18:\njmp .L11\n.L32:\n.LBB19:\nnop\n.LBE19:\n.LBB20:\nmovq -248(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L12\ncmpq %rax,-48(%rbp)\njl .L26\n.L12:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\nmovq -256(%rbp),%rcx\nmovq -48(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L14\ncmpq %rax,-40(%rbp)\njl .L27\n.L14:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L16\ncmpq %rax,-40(%rbp)\njl .L28\n.L16:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-80(%rbp)\nmovq -88(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L18\ncmpq %rax,-48(%rbp)\njge .L18\nmovq -96(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -128(%rbp),%rcx\nmovq -40(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\n.LBE20:\n.LBB21:\naddq $1,-48(%rbp)\njmp .L11\n.L18:\n.LBE21:\n.LBB22:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L11:\n.LBE22:\nmovq -48(%rbp),%rax\ncmpq -64(%rbp),%rax\njl .L32\n.LBE18:\n.LBE17:\n.LBE16:\n.LBB23:\naddq $1,-40(%rbp)\n.L10:\n.LBE23:\nmovq -40(%rbp),%rax\ncmpq -56(%rbp),%rax\njl .L33\n.LBE14:\n.LBE13:\n.LBB24:\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -264(%rbp),%rcx\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -208(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE24:\n.LBE2:\nmovq -264(%rbp),%rax\naddq $248,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "m := len(A)\nn := len(A[0])\nans := make([][]int, n)\nfor k := range ans {\n\tans[k] = make([]int, m)\n}\nfor r := 0; r < m; r++ {\n\tfor c := 0; c < n; c++ {\n\t\tans[c][r] = A[r][c]\n\t}\n}\nreturn ans"}
{"src": ".LFB0:\nleaq -904(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L52\nmovl $904,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L52:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $856,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r9\nmovq %r9,%rsi\nmovq %r10,%rdi\nmovq %rax,%rdi\nmovq %rsi,-752(%rbp)\nmovq %rdi,-744(%rbp)\nmovq %rdx,-768(%rbp)\nmovq %rcx,-760(%rbp)\nmovb $0,-57(%rbp)\n.LBB2:\ncall <runtime.makemap_small@PLT>\nmovq %rax,-72(%rbp)\ncall <runtime.makemap_small@PLT>\nmovq %rax,-80(%rbp)\nmovq -744(%rbp),%rax\nmovq %rax,-88(%rbp)\nleaq <.LC18>(%rip),%r12\nmovl $1,%r13d\nleaq -704(%rbp),%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rsi\nmovq -768(%rbp),%rdx\nmovq -760(%rbp),%rax\nmovq %rsi,%r8\nmovq %rdx,%rsi\nmovq %rax,%rdx\ncall <strings.Split@PLT>\nleaq <.LC19>(%rip),%r14\nmovl $0,%r15d\nleaq -736(%rbp),%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rsi\nmovq -752(%rbp),%rdx\nmovq -744(%rbp),%rax\nmovq %rsi,%r8\nmovq %rdx,%rsi\nmovq %rax,%rdx\ncall <strings.Split@PLT>\n.LBB3:\nmovq -696(%rbp),%rax\ncmpq %rax,-88(%rbp)\nje .L2\n.LBB4:\n.LBB5:\nmovb $0,-57(%rbp)\nmovzbl -57(%rbp),%eax\njmp .L39\n.L2:\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB6:\nmovq $0,-56(%rbp)\n.LBB7:\njmp .L4\n.L51:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovb $0,-89(%rbp)\n.LBB11:\nmovq -728(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L5\ncmpq %rdx,-56(%rbp)\njl .L40\n.L5:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\nmovq -736(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq -72(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovl %edx,%eax\nmovb %al,-89(%rbp)\n.LBE11:\nmovzbl -89(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L7\n.LBB12:\n.LBB13:\nmovq -736(%rbp),%rax\nmovq -728(%rbp),%rdx\nmovq %rax,-672(%rbp)\nmovq %rdx,-664(%rbp)\nmovq -720(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq -56(%rbp),%rax\nmovq -664(%rbp),%rdx\ntestq %rax,%rax\njs .L8\ncmpq %rdx,%rax\njl .L41\n.L8:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L41:\nmovq -672(%rbp),%rdx\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq -696(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L10\ncmpq %rdx,-56(%rbp)\njl .L42\n.L10:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L42:\nmovq -704(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nmovq <8>(%rax),%r13\nmovq -72(%rbp),%rax\nmovq %rcx,%rdx\nmovq %rbx,%rcx\nmovq %rax,%rsi\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %rax,%rcx\nmovq %r13,%rax\nmovq %rax,<8>(%rcx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L12\n.LBB14:\nmovq %r12,%rax\nmovq %rax,(%rcx)\njmp .L7\n.L12:\n.LBE14:\n.LBB15:\nmovq %r12,%rax\nmovq %rax,%rdx\nmovq %rcx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L7:\n.LBE15:\n.LBE13:\n.LBE12:\n.LBE10:\n.LBB16:\nmovb $0,-90(%rbp)\n.LBB17:\nmovq -696(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L13\ncmpq %rdx,-56(%rbp)\njl .L43\n.L13:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\nmovq -704(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq -80(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess2_faststr@PLT>\nmovl %edx,%eax\nmovb %al,-90(%rbp)\n.LBE17:\nmovzbl -90(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L15\n.LBB18:\n.LBB19:\nmovq -704(%rbp),%rax\nmovq -696(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -688(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq -56(%rbp),%rax\nmovq -632(%rbp),%rdx\ntestq %rax,%rax\njs .L16\ncmpq %rdx,%rax\njl .L44\n.L16:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L44:\nmovq -640(%rbp),%rdx\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%rcx\nmovq <8>(%rax),%rbx\nmovq -728(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L18\ncmpq %rdx,-56(%rbp)\njl .L45\n.L18:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L45:\nmovq -736(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq (%rax),%r12\nmovq <8>(%rax),%r13\nmovq -80(%rbp),%rax\nmovq %rcx,%rdx\nmovq %rbx,%rcx\nmovq %rax,%rsi\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapassign_faststr@PLT>\nmovq %rax,%rcx\nmovq %r13,%rax\nmovq %rax,<8>(%rcx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L20\n.LBB20:\nmovq %r12,%rax\nmovq %rax,(%rcx)\njmp .L15\n.L20:\n.LBE20:\n.LBB21:\nmovq %r12,%rax\nmovq %rax,%rdx\nmovq %rcx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L15:\n.LBE21:\n.LBE19:\n.LBE18:\n.LBE16:\n.LBB22:\n.LBB23:\nmovq -728(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L21\ncmpq %rdx,-56(%rbp)\njl .L46\n.L21:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L46:\nmovq -736(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq -72(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq -696(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L23\ncmpq %rdx,-56(%rbp)\njl .L47\n.L23:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L47:\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq -704(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rdi,%r8\nmovq %rdx,%rcx\ncmpq %rcx,%r8\njne .L25\nmovq %rsi,%r8\nmovq %rax,%rcx\ncmpq %rcx,%r8\nje .L26\nmovq %rdx,%rcx\nmovq %rcx,%r8\nmovq %rax,%rcx\nmovq %rsi,%rax\nmovq %r8,%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L26\n.L25:\nmovl $1,%edx\njmp .L27\n.L26:\nmovl $0,%edx\n.L27:\nmovl %edx,%eax\nxorl $1,%eax\ntestb %al,%al\nje .L28\n.LBB24:\nmovq -696(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L29\ncmpq %rdx,-56(%rbp)\njl .L48\n.L29:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L48:\nmovq -704(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq -80(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\nleaq <type..map.6string.7string>(%rip),%rdi\ncall <runtime.mapaccess1_faststr@PLT>\nmovq -728(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L31\ncmpq %rdx,-56(%rbp)\njl .L49\n.L31:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L49:\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq -736(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $4,%rax\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\nmovq %rdi,%r8\nmovq %rdx,%rcx\ncmpq %rcx,%r8\njne .L33\nmovq %rsi,%r8\nmovq %rax,%rcx\ncmpq %rcx,%r8\nje .L34\nmovq %rdx,%rcx\nmovq %rcx,%r8\nmovq %rax,%rcx\nmovq %rsi,%rax\nmovq %r8,%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nje .L34\n.L33:\nmovl $1,%edx\njmp .L28\n.L34:\nmovl $0,%edx\n.L28:\n.LBE24:\n.LBE23:\ntestb %dl,%dl\nje .L36\n.LBB25:\nleaq <string..d>(%rip),%rbx\nmovq %rbx,-896(%rbp)\nleaq <go..C22>(%rip),%rax\nmovq %rax,-888(%rbp)\nleaq <type..map.6string.7string>(%rip),%r15\nmovq %r15,-880(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-872(%rbp)\nmovdqa -896(%rbp),%xmm0\nmovups %xmm0,-576(%rbp)\nmovdqa -880(%rbp),%xmm1\nmovups %xmm1,-560(%rbp)\nleaq -576(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $2,-344(%rbp)\nmovq $2,-336(%rbp)\nleaq -320(%rbp),%rax\nsubq $8,%rsp\npushq -336(%rbp)\npushq -344(%rbp)\npushq -352(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -320(%rbp),%rax\nmovq -312(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -304(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq %rbx,-864(%rbp)\nleaq <go..C23>(%rip),%rax\nmovq %rax,-856(%rbp)\nmovq %r15,-848(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-840(%rbp)\nmovdqa -864(%rbp),%xmm2\nmovups %xmm2,-512(%rbp)\nmovdqa -848(%rbp),%xmm3\nmovups %xmm3,-496(%rbp)\nleaq -512(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovq $2,-280(%rbp)\nmovq $2,-272(%rbp)\nleaq -256(%rbp),%rax\nsubq $8,%rsp\npushq -272(%rbp)\npushq -280(%rbp)\npushq -288(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -240(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB26:\nmovb $0,-57(%rbp)\nmovzbl -57(%rbp),%eax\njmp .L39\n.L36:\n.LBE26:\n.LBE25:\n.LBE22:\n.LBE9:\n.LBB27:\naddq $1,-56(%rbp)\n.L4:\n.LBE27:\nmovq -56(%rbp),%rax\ncmpq -88(%rbp),%rax\njl .L51\n.LBE7:\n.LBE6:\nleaq <string..d>(%rip),%rbx\nmovq %rbx,-832(%rbp)\nleaq <go..C24>(%rip),%rax\nmovq %rax,-824(%rbp)\nleaq <type..map.6string.7string>(%rip),%r14\nmovq %r14,-816(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-808(%rbp)\nmovdqa -832(%rbp),%xmm4\nmovups %xmm4,-448(%rbp)\nmovdqa -816(%rbp),%xmm5\nmovups %xmm5,-432(%rbp)\nleaq -448(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq $2,-216(%rbp)\nmovq $2,-208(%rbp)\nleaq -192(%rbp),%rax\nsubq $8,%rsp\npushq -208(%rbp)\npushq -216(%rbp)\npushq -224(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq %rbx,-800(%rbp)\nleaq <go..C25>(%rip),%rax\nmovq %rax,-792(%rbp)\nmovq %r14,-784(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-776(%rbp)\nmovdqa -800(%rbp),%xmm6\nmovups %xmm6,-384(%rbp)\nmovdqa -784(%rbp),%xmm7\nmovups %xmm7,-368(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq $2,-152(%rbp)\nmovq $2,-144(%rbp)\nleaq -128(%rbp),%rax\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBB28:\nmovb $1,-57(%rbp)\nmovzbl -57(%rbp),%eax\n.L39:\n.LBE28:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "patternMap := make(map[string]string)\nstrMap := make(map[string]string)\nplen := len(pattern)\nstrArr := strings.Split(str, \"STR\")\npatternArr := strings.Split(pattern, \"STR\")\nif plen != len(strArr) {\n\treturn false\n}\nfor i := 0; i < plen; i++ {\n\tif _, ok := patternMap[patternArr[i]]; !ok {\n\t\tpatternMap[patternArr[i]] = strArr[i]\n\t}\n\tif _, ok := strMap[strArr[i]]; !ok {\n\t\tstrMap[strArr[i]] = patternArr[i]\n\t}\n\tif patternMap[patternArr[i]] != strArr[i] || strMap[strArr[i]] != patternArr[i] {\n\t\tfmt.Println(\"STR\", patternMap)\n\t\tfmt.Println(\"STR\", strMap)\n\t\treturn false\n\t}\n}\nfmt.Println(\"STR\", patternMap)\nfmt.Println(\"STR\", strMap)\nreturn true"}
{"src": "leaq -264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L263\nmovl $264,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL6:\nret\n.L263:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $224,%rsp\nmovq %rdi,-232(%rbp)\nmovq %rsi,-240(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <24>(%rbp),%rax\nmovq %rax,-64(%rbp)\n.LBB108:\nmovq $0,-40(%rbp)\n.LBB109:\njmp .L171\n.L262:\n.LBB110:\nnop\n.LBE110:\n.LBB111:\n.LBB112:\n.LBB113:\ncmpq $0,-40(%rbp)\nsetne %al\ntestb %al,%al\nje .L172\n.LBB114:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L173\ncmpq %rax,-40(%rbp)\njl .L234\n.L173:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L234:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L175\ncmpq %rdx,%rax\njl .L235\n.L175:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L235:\nmovq <16>(%rbp),%rcx\nmovq -40(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L172:\n.LBE114:\n.LBE113:\ntestb %al,%al\njne .L256\n.LBE112:\nmovq -40(%rbp),%rax\naddq $1,%rax\nmovq %rax,-48(%rbp)\nmovq -64(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-56(%rbp)\n.LBB116:\n.LBB117:\njmp .L179\n.L261:\n.LBB118:\nnop\n.LBE118:\n.LBB119:\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L180\ncmpq %rax,-40(%rbp)\njl .L236\n.L180:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L236:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L182\ncmpq %rax,-48(%rbp)\njl .L237\n.L182:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L237:\nmovq <24>(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L184\ncmpq %rax,-56(%rbp)\njl .L238\n.L184:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L238:\nmovq <16>(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nleaq (%rdx,%rax),%rcx\nmovq <16>(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\naddq %rcx,%rax\nmovq %rax,-72(%rbp)\n.LBB120:\nmovq -72(%rbp),%rax\ncmpq -248(%rbp),%rax\njne .L186\n.LBB121:\nmovq -232(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%r12\nmovq <24>(%rbp),%rax\ncmpq $0,-40(%rbp)\njs .L187\ncmpq %rax,-40(%rbp)\njl .L239\n.L187:\nmovq -40(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L239:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L189\ncmpq %rax,-48(%rbp)\njl .L240\n.L189:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L240:\nmovq <24>(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L191\ncmpq %rax,-56(%rbp)\njl .L241\n.L191:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L241:\nmovq <16>(%rbp),%rdx\nmovq -40(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r14\nmovq <16>(%rbp),%rdx\nmovq -48(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%r13\nmovq <16>(%rbp),%rdx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rbx\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rax\nmovq -240(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq %r14,<8>(%rax)\nmovq %r13,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -200(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq $4,-184(%rbp)\nmovq $4,-176(%rbp)\nleaq <1>(%r12),%rax\nmovq -208(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L193\n.LBB122:\nmovq -232(%rbp),%rbx\nmovq -224(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <type...6.7int>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\nmovq %rax,<8>(%rbx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rbx)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L194\n.LBB123:\nmovq -160(%rbp),%rax\nmovq %rax,(%rbx)\n.LBE123:\njmp .L195\n.L194:\n.LBB124:\nmovq -160(%rbp),%rax\nmovq %rax,%rdx\nmovq %rbx,%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L195\n.L193:\n.LBE124:\n.LBE122:\n.LBB125:\nmovq -224(%rbp),%rsi\nmovq -208(%rbp),%rdx\nmovq -232(%rbp),%rcx\nmovq %rsi,(%rcx)\nmovq -232(%rbp),%rcx\nmovq %rax,<8>(%rcx)\nmovq -232(%rbp),%rax\nmovq %rdx,<16>(%rax)\n.L195:\n.LBE125:\nmovq -232(%rbp),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-208(%rbp)\nmovq -224(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq -192(%rbp),%rcx\nmovq -184(%rbp),%rbx\nmovq %rcx,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq -176(%rbp),%rdx\nmovq %rdx,-112(%rbp)\nmovq -120(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -112(%rbp),%rdx\nmovq %rdx,<16>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L196\n.LBB126:\nmovq -128(%rbp),%rdx\nmovq %rdx,(%rax)\n.LBE126:\njmp .L198\n.L196:\n.LBB127:\nmovq -128(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.LBE127:\n.LBB128:\n.LBB129:\njmp .L198\n.L257:\n.LBB130:\nnop\n.LBE130:\n.LBB131:\naddq $1,-48(%rbp)\n.L198:\n.LBE131:\n.LBB132:\nmovq -48(%rbp),%rax\ncmpq -56(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L199\n.LBB133:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L200\ncmpq %rax,-48(%rbp)\njl .L242\n.L200:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L242:\nmovq -48(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L202\ncmpq %rdx,%rax\njl .L243\n.L202:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L243:\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L199:\n.LBE133:\n.LBE132:\ntestb %al,%al\njne .L257\n.LBE129:\n.LBE128:\n.LBB134:\n.LBB135:\njmp .L206\n.L258:\n.LBB136:\nnop\n.LBE136:\n.LBB137:\nsubq $1,-56(%rbp)\n.L206:\n.LBE137:\n.LBB138:\nmovq -48(%rbp),%rax\ncmpq -56(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L207\n.LBB139:\nmovq <24>(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L208\ncmpq %rax,-56(%rbp)\njl .L245\n.L208:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L245:\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L210\ncmpq %rdx,%rax\njl .L246\n.L210:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L246:\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L207:\n.LBE139:\n.LBE138:\ntestb %al,%al\njne .L258\n.LBE135:\n.LBE134:\naddq $1,-48(%rbp)\nsubq $1,-56(%rbp)\n.LBE121:\njmp .L179\n.L186:\n.LBB140:\n.LBB141:\nmovq -72(%rbp),%rax\ncmpq -248(%rbp),%rax\njge .L223\n.LBB142:\n.LBB143:\n.LBB144:\njmp .L215\n.L259:\n.LBB145:\nnop\n.LBE145:\n.LBB146:\naddq $1,-48(%rbp)\n.L215:\n.LBE146:\n.LBB147:\nmovq -48(%rbp),%rax\ncmpq -56(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L216\n.LBB148:\nmovq <24>(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L217\ncmpq %rax,-48(%rbp)\njl .L248\n.L217:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L248:\nmovq -48(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L219\ncmpq %rdx,%rax\njl .L249\n.L219:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L249:\nmovq <16>(%rbp),%rcx\nmovq -48(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L216:\n.LBE148:\n.LBE147:\ntestb %al,%al\njne .L259\n.LBE144:\n.LBE143:\naddq $1,-48(%rbp)\n.LBE142:\njmp .L179\n.L260:\n.LBB149:\n.LBB150:\n.LBB151:\n.LBB152:\nnop\n.LBE152:\n.LBB153:\nsubq $1,-56(%rbp)\n.L223:\n.LBE153:\n.LBB154:\nmovq -48(%rbp),%rax\ncmpq -56(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L224\n.LBB155:\nmovq <24>(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L225\ncmpq %rax,-56(%rbp)\njl .L251\n.L225:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L251:\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L227\ncmpq %rdx,%rax\njl .L252\n.L227:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L252:\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\nsete %al\n.L224:\n.LBE155:\n.LBE154:\ntestb %al,%al\njne .L260\n.LBE151:\n.LBE150:\nsubq $1,-56(%rbp)\n.L179:\n.LBE149:\n.LBE141:\n.LBE140:\n.LBE120:\n.LBE119:\nmovq -48(%rbp),%rax\ncmpq -56(%rbp),%rax\njl .L261\njmp .L178\n.L256:\n.LBE117:\n.LBE116:\n.LBB156:\n.LBB115:\nnop\n.L178:\n.LBE115:\n.LBE156:\n.LBE111:\n.LBB157:\naddq $1,-40(%rbp)\n.L171:\n.LBE157:\nmovq -64(%rbp),%rax\nsubq $2,%rax\ncmpq %rax,-40(%rbp)\njl .L262\n.LBE109:\n.LBE108:\naddq $224,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "nlen := len(nums)\nfor i := 0; i < nlen-2; i++ {\n\tif i != 0 && nums[i] == nums[i-1] {\n\t\tcontinue\n\t}\n\tleft, right := i+1, nlen-1\n\tfor left < right {\n\t\tsum := nums[i] + nums[left] + nums[right]\n\t\tif sum == target {\n\t\t\t*res = append(*res, []int{first, nums[i], nums[left], nums[right]})\n\t\t\tfor left < right && nums[left] == nums[left+1] {\n\t\t\t\tleft++\n\t\t\t}\n\t\t\tfor left < right && nums[right] == nums[right-1] {\n\t\t\t\tright--\n\t\t\t}\n\t\t\tleft++\n\t\t\tright--\n\t\t} else if sum < target {\n\t\t\tfor left < right && nums[left] == nums[left+1] {\n\t\t\t\tleft++\n\t\t\t}\n\t\t\tleft++\n\t\t} else {\n\t\t\tfor left < right && nums[right] == nums[right-1] {\n\t\t\t\tright--\n\t\t\t}\n\t\t\tright--\n\t\t}\n\t}\n}"}
{"src": ".LFB0:\nleaq -4264(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L76\nmovl $4264,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L76:\npushq %rbp\nmovq %rsp,%rbp\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $4224,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-4240(%rbp)\nmovq %rdi,-4232(%rbp)\nmovq %rdx,-4256(%rbp)\nmovq %rcx,-4248(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\n.LBB2:\nmovq -4232(%rbp),%rax\nmovq %rax,-88(%rbp)\nmovq -4248(%rbp),%rax\nmovq %rax,-96(%rbp)\nleaq -4224(%rbp),%rdx\nmovl $0,%eax\nmovl $256,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB3:\nmovq $0,-104(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq -4248(%rbp),%r14\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L73:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -4248(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -4256(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L4\njmp .L57\n.L3:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB10:\nleaq <1>(%rbx),%rsi\n.LBE10:\njmp .L6\n.L57:\n.LBB11:\nmovq -4256(%rbp),%rcx\nmovq -4248(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rdx,%rsi\n.L6:\n.LBE11:\n.LBE9:\nmovq %rbx,-104(%rbp)\n.LBB12:\n.LBB13:\nmovq -4256(%rbp),%rcx\nmovq -4248(%rbp),%rbx\nmovq -104(%rbp),%rax\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L7\ncmpq %rdx,%rax\njge .L7\nmovq %rcx,%rdi\nmovq %rax,%rdx\naddq %rdi,%rdx\nmovzbl (%rdx),%edi\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L9\njmp .L58\n.L7:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L58:\ncmpq %rdx,%rax\njge .L9\nmovq %rcx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\njmp .L59\n.L9:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L59:\nmovzbl %al,%eax\nmovq -4224(%rbp,%rax,8),%rdx\nmovzbl %dil,%eax\naddq $1,%rdx\nmovq %rdx,-4224(%rbp,%rax,8)\n.LBE13:\n.LBE12:\n.LBE8:\n.LBB14:\nmovq %rsi,%rbx\n.L2:\n.LBE14:\ncmpq %r14,%rbx\njl .L73\n.LBE5:\n.LBE4:\n.LBE3:\nleaq -2176(%rbp),%rdx\nmovl $0,%eax\nmovl $256,%ecx\nmovq %rdx,%rdi\nrep stosqmovq -88(%rbp),%rax\naddq $1,%rax\nmovq %rax,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB15:\n.LBB16:\njmp .L13\n.L75:\n.LBB17:\nnop\n.LBE17:\n.LBB18:\n.LBB19:\nmovq -4232(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L14\ncmpq %rax,-64(%rbp)\njge .L14\nmovq -4240(%rbp),%rdx\nmovq -64(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\nmovq -4224(%rbp,%rax,8),%rax\ntestq %rax,%rax\njne .L16\n.LBB20:\njmp .L17\n.L14:\n.LBE20:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\n.LBE19:\n.LBB21:\nmovq -4232(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L18\ncmpq %rax,-64(%rbp)\njge .L18\nmovq -4240(%rbp),%rdx\nmovq -64(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -4232(%rbp),%rax\ncmpq $0,-64(%rbp)\njs .L20\njmp .L61\n.L18:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L61:\ncmpq %rax,-64(%rbp)\njge .L20\nmovq -4240(%rbp),%rcx\nmovq -64(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%ecx\nmovzbl %dl,%eax\nmovq -2176(%rbp,%rax,8),%rdx\nmovzbl %cl,%eax\nmovq -4224(%rbp,%rax,8),%rax\ncmpq %rax,%rdx\njge .L22\njmp .L62\n.L20:\nmovq -64(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L62:\n.LBB22:\naddq $1,-40(%rbp)\n.L22:\n.LBE22:\n.LBE21:\n.LBB23:\nmovq -4240(%rbp),%rcx\nmovq -4232(%rbp),%rbx\nmovq -64(%rbp),%rax\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L23\ncmpq %rdx,%rax\njge .L23\nmovq %rcx,%rsi\nmovq %rax,%rdx\naddq %rsi,%rdx\nmovzbl (%rdx),%esi\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L25\njmp .L63\n.L23:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L63:\ncmpq %rdx,%rax\njge .L25\nmovq %rcx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\nmovq -2176(%rbp,%rax,8),%rdx\nmovzbl %sil,%eax\naddq $1,%rdx\nmovq %rdx,-2176(%rbp,%rax,8)\n.LBE23:\n.LBB24:\nmovq -40(%rbp),%rax\ncmpq -96(%rbp),%rax\njne .L17\njmp .L27\n.L25:\n.LBE24:\n.LBB37:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L74:\n.LBE37:\n.LBB38:\n.LBB25:\n.LBB26:\n.LBB27:\n.LBB28:\nnop\n.LBE28:\n.LBB29:\n.LBB30:\nmovq -4232(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L28\ncmpq %rax,-72(%rbp)\njge .L28\nmovq -4240(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -4232(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L30\njmp .L65\n.L28:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L65:\ncmpq %rax,-72(%rbp)\njge .L30\nmovq -4240(%rbp),%rcx\nmovq -72(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%ecx\nmovzbl %dl,%eax\nmovq -2176(%rbp,%rax,8),%rdx\nmovzbl %cl,%eax\nmovq -4224(%rbp,%rax,8),%rax\ncmpq %rax,%rdx\njle .L32\njmp .L66\n.L30:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L66:\n.LBB31:\n.LBB32:\nmovq -4240(%rbp),%rcx\nmovq -4232(%rbp),%rbx\nmovq -72(%rbp),%rax\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L33\ncmpq %rdx,%rax\njge .L33\nmovq %rcx,%rsi\nmovq %rax,%rdx\naddq %rsi,%rdx\nmovzbl (%rdx),%esi\nmovq %rbx,%rdx\ntestq %rax,%rax\njs .L35\njmp .L67\n.L33:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L67:\ncmpq %rdx,%rax\njge .L35\nmovq %rcx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\nmovq -2176(%rbp,%rax,8),%rdx\nmovzbl %sil,%eax\nsubq $1,%rdx\nmovq %rdx,-2176(%rbp,%rax,8)\njmp .L32\n.L35:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L32:\n.LBE32:\n.LBE31:\n.LBE30:\naddq $1,-72(%rbp)\n.L27:\n.LBE29:\n.LBB33:\nmovq -4232(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L37\ncmpq %rax,-72(%rbp)\njge .L37\nmovq -4240(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\nmovq -4224(%rbp,%rax,8),%rax\ntestq %rax,%rax\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L39\njmp .L68\n.L37:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L68:\n.LBB34:\nmovq -4232(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L40\ncmpq %rax,-72(%rbp)\njge .L40\nmovq -4240(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%edx\nmovq -4232(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L42\njmp .L69\n.L40:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L69:\ncmpq %rax,-72(%rbp)\njge .L42\nmovq -4240(%rbp),%rcx\nmovq -72(%rbp),%rax\naddq %rcx,%rax\nmovzbl (%rax),%ecx\nmovzbl %dl,%eax\nmovq -2176(%rbp,%rax,8),%rdx\nmovzbl %cl,%eax\nmovq -4224(%rbp,%rax,8),%rax\ncmpq %rax,%rdx\nsetg %al\njmp .L39\n.L42:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L39:\n.LBE34:\n.LBE33:\ntestb %al,%al\njne .L74\n.LBE27:\n.LBE26:\nmovq -64(%rbp),%rax\nsubq -72(%rbp),%rax\naddq $1,%rax\nmovq %rax,-112(%rbp)\n.LBB35:\nmovq -80(%rbp),%rax\ncmpq -112(%rbp),%rax\njle .L17\n.LBB36:\nmovq -112(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -72(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-48(%rbp)\n.L17:\n.LBE36:\n.LBE35:\n.LBE25:\n.LBE38:\n.LBE18:\n.LBB39:\naddq $1,-64(%rbp)\n.L13:\n.LBE39:\nmovq -64(%rbp),%rax\ncmpq -88(%rbp),%rax\njl .L75\n.LBE16:\n.LBE15:\n.LBB40:\nmovq -40(%rbp),%rax\ncmpq -96(%rbp),%rax\njge .L48\n.LBB41:\n.LBB42:\nleaq <.LC0>(%rip),%r12\nmovl $0,%r13d\nmovq %r12,-128(%rbp)\nmovq %r13,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\njmp .L56\n.L48:\n.LBE42:\n.LBE41:\n.LBE40:\n.LBB43:\nmovq -48(%rbp),%rax\nleaq <1>(%rax),%rdi\nmovq -4232(%rbp),%rax\ntestq %rdi,%rdi\njs .L50\ncmpq %rax,%rdi\njg .L50\ncmpq $0,-56(%rbp)\njns .L51\njmp .L52\n.L50:\nmovq %rax,%rsi\ncall <runtime.goPanicSliceAlen@PLT>\n.L51:\ncmpq %rdi,-56(%rbp)\njg .L52\nmovq -4240(%rbp),%rdx\ncmpq -56(%rbp),%rdi\njne .L53\njmp .L72\n.L52:\nmovq -56(%rbp),%rax\nmovq %rdi,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicSliceB@PLT>\n.L53:\nmovq -56(%rbp),%rax\njmp .L55\n.L72:\nmovl $0,%eax\n.L55:\naddq %rax,%rdx\nmovq %rdi,%rax\nsubq -56(%rbp),%rax\nmovq %rdx,-128(%rbp)\nmovq %rax,-120(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\n.L56:\n.LBE43:\n.LBE2:\naddq $4224,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %rbp\nret", "tgt": "sLen, tLen := len(s), len(t)\nneed := [256]int{}\nfor i := range t {\n\tneed[t[i]]++\n}\nhas := [256]int{}\nmin := sLen + 1\nbegin, end, winBegin, winEnd, count := 0, 0, 0, 0, 0\nfor ; end < sLen; end++ {\n\tif need[s[end]] == 0 {\n\t\tcontinue\n\t}\n\tif has[s[end]] < need[s[end]] {\n\t\tcount++\n\t}\n\thas[s[end]]++\n\tif count == tLen {\n\t\tfor need[s[begin]] == 0 || has[s[begin]] > need[s[begin]] {\n\t\t\tif has[s[begin]] > need[s[begin]] {\n\t\t\t\thas[s[begin]]--\n\t\t\t}\n\t\t\tbegin++\n\t\t}\n\t\ttemp := end - begin + 1\n\t\tif min > temp {\n\t\t\tmin = temp\n\t\t\twinBegin = begin\n\t\t\twinEnd = end\n\t\t}\n\t}\n}\nif count < tLen {\n\treturn \"STR\"\n}\nreturn s[winBegin : winEnd+1]"}
{"src": ".LFB2:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L35\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL3:\nret\n.L35:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rdi,-280(%rbp)\nmovq -280(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB23:\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\n.LBB24:\n.LBB25:\n.LBB26:\nmovq <go.day100.testcases>(%rip),%rax\nmovq <8+go.day100.testcases>(%rip),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq <16+go.day100.testcases>(%rip),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rax\nmovq %rax,-288(%rbp)\nmovl $0,%ebx\n.LBE26:\njmp .L25\n.L34:\n.LBB27:\nnop\n.LBE27:\n.LBB28:\n.LBB29:\nmovq -200(%rbp),%rax\ntestq %rbx,%rbx\njs .L26\ncmpq %rax,%rbx\njge .L26\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\n.LBE29:\n.LBB30:\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -224(%rbp),%rax\nmovq -216(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\n.LBE30:\n.LBB31:\n.LBB32:\nsubq $8,%rsp\npushq -256(%rbp)\npushq -264(%rbp)\npushq -272(%rbp)\ncall <go.day100.MinimumStepsPath>\naddq $32,%rsp\nmovq %rax,-56(%rbp)\nmovq -248(%rbp),%rax\ncmpq %rax,-56(%rbp)\njne .L27\njmp .L28\n.L26:\n.LBE32:\n.LBE31:\n.LBB37:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\n.LBE37:\n.LBB38:\n.LBB36:\n.LBB33:\nleaq <int..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L29\n.LBB34:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE34:\njmp .L30\n.L29:\n.LBB35:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L30:\n.LBE35:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC11>(%rip),%r12\nmovl $18,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -280(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L28:\n.LBE33:\n.LBE36:\n.LBE38:\n.LBE28:\n.LBB39:\naddq $1,%rbx\n.L25:\n.LBE39:\ncmpq -288(%rbp),%rbx\njl .L34\n.LBE25:\n.LBE24:\n.LBE23:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif steps := MinimumStepsPath(tc.path); steps != tc.minimumSteps {\n\t\tt.Errorf(\"STR\", tc.minimumSteps, steps)\n\t}\n}"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L57\nmovl $136,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L57:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $120,%rsp\nmovq $0,-32(%rbp)\n.LBB26:\nmovq <24>(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rbx\nmovq %rbx,%rdx\nmovq %rbx,%rsi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-128(%rbp)\nmovq %rbx,-120(%rbp)\nmovq %rbx,-112(%rbp)\n.LBB27:\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovq -112(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L29\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rcx\nmovq <24>(%rbp),%rax\ncmpq $1,%rax\njg .L30\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L30:\nmovq <16>(%rbp),%rax\nmovq <8>(%rax),%rdx\nmovq -88(%rbp),%rax\ntestq %rax,%rax\njg .L31\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L31:\nmovq -96(%rbp),%rax\nmovq %rcx,(%rax)\nmovq -56(%rbp),%rax\ncmpq $1,%rax\njg .L32\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicIndex@PLT>\n.L32:\nmovq -64(%rbp),%rax\naddq $8,%rax\nmovq %rdx,(%rax)\n.LBE27:\n.LBB28:\nmovq $2,-24(%rbp)\n.LBB29:\njmp .L33\n.L56:\n.LBB30:\nnop\n.LBE30:\n.LBB31:\nmovq -24(%rbp),%rax\nsubq $2,%rax\nmovq -120(%rbp),%rdx\ntestq %rax,%rax\njs .L34\ncmpq %rdx,%rax\njl .L49\n.L34:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L49:\nmovq -24(%rbp),%rdx\nsubq $1,%rdx\nmovq -120(%rbp),%rcx\ntestq %rdx,%rdx\njs .L36\ncmpq %rcx,%rdx\njl .L50\n.L36:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L50:\nmovq -128(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq -128(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.Solution.min>\nmovq %rax,%rdx\nmovq -120(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L38\ncmpq %rax,-24(%rbp)\njl .L51\n.L38:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L51:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L40\ncmpq %rax,-24(%rbp)\njl .L52\n.L40:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L52:\nmovq <16>(%rbp),%rcx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rcx\nmovq -128(%rbp),%rsi\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rsi,%rax\naddq %rcx,%rdx\nmovq %rdx,(%rax)\n.LBE31:\n.LBB32:\naddq $1,-24(%rbp)\n.L33:\n.LBE32:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L56\n.LBE29:\n.LBE28:\n.LBB33:\nmovq -40(%rbp),%rax\nsubq $2,%rax\nmovq -120(%rbp),%rdx\ntestq %rax,%rax\njs .L44\ncmpq %rdx,%rax\njl .L54\n.L44:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L54:\nmovq -40(%rbp),%rdx\nsubq $1,%rdx\nmovq -120(%rbp),%rcx\ntestq %rdx,%rdx\njs .L46\ncmpq %rcx,%rdx\njl .L55\n.L46:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L55:\nmovq -128(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq -128(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.Solution.min>\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\n.LBE33:\n.LBE26:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "n := len(cost)\ndp := make([]int, n)\ndp[0], dp[1] = cost[0], cost[1]\nfor i := 2; i < n; i++ {\n\tdp[i] = cost[i] + min(dp[i-2], dp[i-1])\n}\nreturn min(dp[n-2], dp[n-1])"}
{"src": ".LFB1:\nleaq -856(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L58\nmovl $856,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L58:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $808,%rsp\nmovq %rdi,-792(%rbp)\nleaq <type...66x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-696(%rbp)\nmovq -696(%rbp),%rax\nmovq $875,(%rax)\nmovq $884,<8>(%rax)\nmovq $239,<16>(%rax)\nmovq $731,<24>(%rax)\nmovq $723,<32>(%rax)\nmovq $685,<40>(%rax)\nmovq -696(%rbp),%rax\nmovq %rax,-656(%rbp)\nmovq $6,-648(%rbp)\nmovq $6,-640(%rbp)\nmovq $4,-632(%rbp)\nleaq <type...611x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-688(%rbp)\nmovq -688(%rbp),%rax\nmovq $0,(%rax)\nmovq $1,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq $3,<24>(%rax)\nmovq $4,<32>(%rax)\nmovq $5,<40>(%rax)\nmovq $4,<48>(%rax)\nmovq $3,<56>(%rax)\nmovq $2,<64>(%rax)\nmovq $1,<72>(%rax)\nmovq $0,<80>(%rax)\nmovq -688(%rbp),%rax\nmovq %rax,-624(%rbp)\nmovq $11,-616(%rbp)\nmovq $11,-608(%rbp)\nmovq $11,-600(%rbp)\nleaq <type...62x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-680(%rbp)\nmovq -680(%rbp),%rax\nmovq $2,(%rax)\nmovq $3,<8>(%rax)\nmovq -680(%rbp),%rax\nmovq %rax,-592(%rbp)\nmovq $2,-584(%rbp)\nmovq $2,-576(%rbp)\nmovq $0,-568(%rbp)\nleaq <type...67x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-672(%rbp)\nmovq -672(%rbp),%rax\nmovq $2,(%rax)\nmovq $1,<8>(%rax)\nmovq $4,<16>(%rax)\nmovq $7,<24>(%rax)\nmovq $3,<32>(%rax)\nmovq $2,<40>(%rax)\nmovq $5,<48>(%rax)\nmovq -672(%rbp),%rax\nmovq %rax,-560(%rbp)\nmovq $7,-552(%rbp)\nmovq $7,-544(%rbp)\nmovq $5,-536(%rbp)\nleaq <type...63x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-664(%rbp)\nmovq -664(%rbp),%rax\nmovq $2,(%rax)\nmovq $2,<8>(%rax)\nmovq $2,<16>(%rax)\nmovq -664(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovq $3,-520(%rbp)\nmovq $3,-512(%rbp)\nmovq $0,-504(%rbp)\nleaq -656(%rbp),%rax\nmovq %rax,-720(%rbp)\nmovq $5,-712(%rbp)\nmovq $5,-704(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC19>(%rip),%rax\nmovq %rax,-816(%rbp)\nmovq $69,-808(%rbp)\nleaq -208(%rbp),%rax\nmovq -816(%rbp),%rcx\nmovq -808(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-480(%rbp)\n.LBB36:\nmovq $0,-784(%rbp)\nmovq $0,-776(%rbp)\nmovq $0,-768(%rbp)\nmovq $0,-760(%rbp)\n.LBB37:\n.LBB38:\n.LBB39:\nmovq -720(%rbp),%rax\nmovq -712(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -704(%rbp),%rax\nmovq %rax,-416(%rbp)\nmovq -424(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovl $0,%ebx\n.LBE39:\njmp .L48\n.L57:\n.LBB40:\nnop\n.LBE40:\n.LBB41:\n.LBB42:\nmovq -424(%rbp),%rax\ntestq %rbx,%rbx\njs .L49\ncmpq %rax,%rbx\njge .L49\nmovq -432(%rbp),%rax\nmovq %rbx,%rdx\nsalq $5,%rdx\nleaq (%rax,%rdx),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\n.LBE42:\n.LBB43:\nmovq -464(%rbp),%rax\nmovq -456(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -448(%rbp),%rax\nmovq -440(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-768(%rbp)\nmovq %rdx,-760(%rbp)\n.LBE43:\n.LBB44:\nmovq -760(%rbp),%rax\nmovq %rax,-728(%rbp)\nmovq -784(%rbp),%rax\nmovq -776(%rbp),%rdx\nmovq %rax,-752(%rbp)\nmovq %rdx,-744(%rbp)\nmovq -768(%rbp),%rax\nmovq %rax,-736(%rbp)\nsubq $8,%rsp\npushq -736(%rbp)\npushq -744(%rbp)\npushq -752(%rbp)\ncall <go.leetcode.longestMountain>\naddq $32,%rsp\nmovq %rax,-800(%rbp)\nleaq <go.leetcode..go.leetcode.para845..d>(%rip),%rax\nmovq %rax,-848(%rbp)\nleaq <go.leetcode..go.leetcode.para845..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-344(%rbp)\nmovq -752(%rbp),%rax\nmovq -744(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -736(%rbp),%rax\nmovq %rax,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L50\njmp .L55\n.L49:\n.LBE44:\n.LBB47:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L50:\n.LBE47:\n.LBB48:\n.LBB45:\nmovq -344(%rbp),%rcx\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -320(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE45:\njmp .L52\n.L55:\n.LBB46:\nmovq -344(%rbp),%rax\nleaq -336(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para845..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L52:\n.LBE46:\nmovq -344(%rbp),%rax\nmovq %rax,-840(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-832(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -800(%rbp),%rdi\nmovq %rdi,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-824(%rbp)\nmovdqa -848(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -832(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC20>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-352(%rbp)\n.LBE48:\n.LBE41:\n.LBB49:\naddq $1,%rbx\n.L48:\n.LBE49:\ncmpq -816(%rbp),%rbx\njl .L57\n.LBE38:\n.LBE37:\n.LBE36:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC21>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question845{\n\t{\n\t\tpara845{[]int{875, 884, 239, 731, 723, 685}},\n\t\tans845{4},\n\t},\n\t{\n\t\tpara845{[]int{0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0}},\n\t\tans845{11},\n\t},\n\t{\n\t\tpara845{[]int{2, 3}},\n\t\tans845{0},\n\t},\n\t{\n\t\tpara845{[]int{2, 1, 4, 7, 3, 2, 5}},\n\t\tans845{5},\n\t},\n\t{\n\t\tpara845{[]int{2, 2, 2}},\n\t\tans845{0},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans845, q.para845\n\tfmt.Printf(\"STR\", p, longestMountain(p.one))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB2:\ncmpq %fs:112,%rsp\njnb .L56\nmovl $200,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L56:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $184,%rsp\nmovq %rdi,-184(%rbp)\nmovq $0,-144(%rbp)\nmovq $0,-136(%rbp)\nmovq $0,-128(%rbp)\n.LBB34:\nmovl $0,%edx\nmovl $0,%esi\nleaq <int..d>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\n.LBB35:\nmovq $0,-24(%rbp)\n.LBB36:\njmp .L37\n.L55:\n.LBB37:\nnop\n.LBE37:\n.LBB38:\nmovq <24>(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L38\ncmpq %rax,-24(%rbp)\njl .L50\n.L38:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L50:\nmovq <16>(%rbp),%rdx\nmovq -24(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-40(%rbp)\nmovq -24(%rbp),%rax\naddq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L40\ncmpq %rdx,%rax\njl .L51\n.L40:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L51:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nmovq %rax,-48(%rbp)\n.LBB39:\nmovq $0,-32(%rbp)\n.LBB40:\njmp .L42\n.L54:\n.LBB41:\nnop\n.LBE41:\n.LBB42:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%rbx\nleaq <1>(%rbx),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L43\n.LBB43:\nmovq -112(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-160(%rbp)\n.LBE43:\njmp .L44\n.L43:\n.LBB44:\nmovq -112(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rcx,-176(%rbp)\nmovq %rax,-168(%rbp)\nmovq %rdx,-160(%rbp)\n.L44:\n.LBE44:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -48(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE42:\n.LBB45:\naddq $1,-32(%rbp)\n.L42:\n.LBE45:\nmovq -32(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L54\n.LBE40:\n.LBE39:\n.LBE38:\n.LBB46:\naddq $2,-24(%rbp)\n.L37:\n.LBE46:\nmovq <24>(%rbp),%rax\ncmpq %rax,-24(%rbp)\njl .L55\n.LBE36:\n.LBE35:\n.LBB47:\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -160(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -184(%rbp),%rcx\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -128(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE47:\n.LBE34:\nmovq -184(%rbp),%rax\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "res := make([]int, 0)\nfor i := 0; i < len(nums); i = i + 2 {\n\tfreq, val := nums[i], nums[i+1]\n\tfor j := 0; j < freq; j++ {\n\t\tres = append(res, val)\n\t}\n}\nreturn res"}
{"src": "leaq -664(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L38\nmovl $664,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\n.LEHB0:\nret\n.L38:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $616,%rsp\n.LEHE0:\nmovq %rdi,-520(%rbp)\nmovq %rsi,-528(%rbp)\nmovb $0,-497(%rbp)\n.LBB19:\n.LBB20:\nleaq -432(%rbp),%rax\nmovq %rax,-432(%rbp)\nmovq -432(%rbp),%rdx\nleaq <main.main..thunk1>(%rip),%rdi\nleaq -497(%rbp),%rsi\nleaq -496(%rbp),%rax\nmovq %rdx,%rcx\nmovq %rdi,%rdx\nmovq %rax,%rdi\n.LEHB1:\ncall <runtime.deferprocStack@PLT>\n.LBE20:\n.LBB21:\nmovq $0,-56(%rbp)\n.L26:\n.LBB22:\n.LBB23:\n.LBB24:\n.LBB25:\n.LBB26:\nleaq -424(%rbp),%rdx\nmovq -520(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.chanrecv2@PLT>\nmovq -424(%rbp),%rdx\n.LBE26:\nxorl $1,%eax\ntestb %al,%al\njne .L37\n.LBE25:\nmovq %rdx,-56(%rbp)\n.LBB28:\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-640(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nmovq -392(%rbp),%rdx\nmovq -528(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -392(%rbp),%rax\nmovq %rax,-632(%rbp)\nmovq %rbx,-624(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-384(%rbp)\nmovq -384(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,(%rdx)\nmovq -384(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq %rbx,-608(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -376(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,(%rdx)\nmovq -376(%rbp),%rax\nmovq %rax,-600(%rbp)\nmovdqa -640(%rbp),%xmm0\nmovups %xmm0,-368(%rbp)\nmovdqa -624(%rbp),%xmm1\nmovups %xmm1,-352(%rbp)\nmovdqa -608(%rbp),%xmm2\nmovups %xmm2,-336(%rbp)\nleaq -368(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $3,-168(%rbp)\nmovq $3,-160(%rbp)\nleaq <.LC21>(%rip),%r14\nmovl $48,%r15d\nleaq -144(%rbp),%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <main.Task.Run>\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-592(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-288(%rbp)\nmovq -288(%rbp),%rdx\nmovq -528(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -288(%rbp),%rax\nmovq %rax,-584(%rbp)\nleaq <string..d>(%rip),%rax\nmovq %rax,-576(%rbp)\nleaq <string..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-280(%rbp)\nmovq -56(%rbp),%rax\nmovq <24>(%rax),%rdx\nmovq <16>(%rax),%rax\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L24\n.LBB29:\nmovq -280(%rbp),%rcx\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE29:\njmp .L25\n.L24:\n.LBB30:\nmovq -280(%rbp),%rcx\nleaq -272(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <string..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L25:\n.LBE30:\nmovq -280(%rbp),%rax\nmovq %rax,-568(%rbp)\nleaq <int..d>(%rip),%rbx\nmovq %rbx,-560(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-256(%rbp)\nmovq -256(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,(%rdx)\nmovq -256(%rbp),%rax\nmovq %rax,-552(%rbp)\nmovq %rbx,-544(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-248(%rbp)\nmovq -248(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,(%rdx)\nmovq -248(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovdqa -592(%rbp),%xmm3\nmovups %xmm3,-240(%rbp)\nmovdqa -576(%rbp),%xmm4\nmovups %xmm4,-224(%rbp)\nmovdqa -560(%rbp),%xmm5\nmovups %xmm5,-208(%rbp)\nmovdqa -544(%rbp),%xmm6\nmovups %xmm6,-192(%rbp)\nleaq -240(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $4,-104(%rbp)\nmovq $4,-96(%rbp)\nleaq <.LC22>(%rip),%r12\nmovl $41,%r13d\nleaq -80(%rbp),%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\n.LEHE1:\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-304(%rbp)\n.LBE28:\n.LBE24:\njmp .L26\n.L37:\n.LBB32:\n.LBB31:\n.LBB27:\nnop\n.L23:\n.LBE27:\n.LBE31:\n.LBE32:\n.LBE23:\n.LBE22:\n.LBE21:\n.LBE19:\nmovl $1,%ebx\n.L32:\nleaq -497(%rbp),%rax\nmovq %rax,%rdi\n.LEHB2:\ncall <runtime.deferreturn@PLT>\n.LEHE2:\ncmpl $1,%ebx\njne .L27\njmp .L36\n.L33:\nleaq -497(%rbp),%rax\nmovq %rax,%rdi\n.LEHB3:\ncall <runtime.checkdefer@PLT>\n.LEHE3:\njmp .L23\n.L34:\nmovq %rax,-648(%rbp)\nmovl $0,%ebx\njmp .L32\n.L27:\nmovq -648(%rbp),%rax\nmovq %rax,%rdi\n.LEHB4:\ncall <_Unwind_Resume@PLT>\n.L35:\nleaq -497(%rbp),%rax\nmovq %rax,%rdi\ncall <runtime.checkdefer@PLT>\njmp .L32\n.L36:\nleaq -40(%rbp),%rsp\n.LEHE4:\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "defer wg.Done()\nfor v := range taskQueue {\n\tfmt.Printf(\"STR\", workerId, v.Id, v.JobId)\n\tv.Run()\n\tfmt.Printf(\"STR\", workerId, v.Status, v.Id, v.JobId)\n}"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L23\nmovl $216,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $168,%rsp\nmovq %rdi,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB10:\nmovq $0,-168(%rbp)\n.LBB11:\n.LBB12:\n.LBB13:\nmovq <go.day161.testcases>(%rip),%rax\nmovq <8+go.day161.testcases>(%rip),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <16+go.day161.testcases>(%rip),%rax\nmovq %rax,-144(%rbp)\nmovq -152(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovl $0,%ebx\n.LBE13:\njmp .L13\n.L22:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\n.LBB16:\nmovq -152(%rbp),%rax\ntestq %rbx,%rbx\njs .L14\ncmpq %rax,%rbx\njge .L14\nmovq -160(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE16:\n.LBB17:\nmovq %rax,-168(%rbp)\n.LBE17:\n.LBB18:\n.LBB19:\nmovl -168(%rbp),%eax\nmovl %eax,%edi\ncall <go.day161.Reverse32Bits>\nmovl %eax,-52(%rbp)\nmovl -164(%rbp),%eax\ncmpl %eax,-52(%rbp)\njne .L15\njmp .L16\n.L14:\n.LBE19:\n.LBE18:\n.LBB24:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L15:\n.LBE24:\n.LBB25:\n.LBB23:\n.LBB20:\nleaq <uint32..d>(%rip),%rax\nmovq %rax,-208(%rbp)\nleaq <uint32..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -136(%rbp),%rax\nmovl -164(%rbp),%edx\nmovl %edx,(%rax)\nmovq -136(%rbp),%rax\nmovq %rax,-200(%rbp)\nleaq <uint32..d>(%rip),%r14\nleaq <uint32..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-128(%rbp)\nmovq -128(%rbp),%rax\nmovl -52(%rbp),%edx\nmovl %edx,(%rax)\nmovq -128(%rbp),%rax\nmovq %rax,%r15\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovdqa -208(%rbp),%xmm0\nmovups %xmm0,-112(%rbp)\nmovq %r14,-96(%rbp)\nmovq %r15,-88(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L17\n.LBB21:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE21:\njmp .L18\n.L17:\n.LBB22:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L18:\n.LBE22:\nmovq -120(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $2,-72(%rbp)\nmovq $2,-64(%rbp)\nleaq <.LC5>(%rip),%r12\nmovl $18,%r13d\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rsi,%rcx\nmovq -184(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L16:\n.LBE20:\n.LBE23:\n.LBE25:\n.LBE15:\n.LBB26:\naddq $1,%rbx\n.L13:\n.LBE26:\ncmpq -192(%rbp),%rbx\njl .L22\n.LBE12:\n.LBE11:\n.LBE10:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tif result := Reverse32Bits(tc.given); result != tc.expected {\n\t\tt.Errorf(\"STR\", tc.expected, result)\n\t}\n}"}
{"src": ".LFB14:\ncmpq %fs:112,%rsp\njnb .L233\nmovl $8,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL19:\nret\n.L233:\npushq %rbp\nmovq %rsp,%rbp\nmovq %rdi,-72(%rbp)\nmovq $0,-24(%rbp)\n.LBB220:\nmovl $0,%edx\nmovq $0,-64(%rbp)\nmovq $0,-56(%rbp)\nleaq -64(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\nmovq %rdx,(%rax)\nmovq -72(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nmovq -40(%rbp),%rax\nmovq %rax,-32(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-16(%rbp)\n.LBB221:\n.LBB222:\njmp .L226\n.L232:\n.LBB223:\nnop\n.LBE223:\n.LBB224:\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-16(%rbp)\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-8(%rbp)\n.L226:\n.LBE224:\n.LBB225:\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsetne %al\ntestb %al,%al\nje .L227\n.LBB226:\nmovq -16(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nsetne %al\n.L227:\n.LBE226:\n.LBE225:\ntestb %al,%al\njne .L232\n.LBE222:\n.LBE221:\n.LBB227:\nmovq -8(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE227:\n.LBE220:\npopq %rbp\nret", "tgt": "dummy := &ListNode{0, head}\nslow, fast := dummy, dummy\nfor fast.Next != nil && fast.Next.Next != nil {\n\tfast = fast.Next.Next\n\tslow = slow.Next\n}\nreturn slow.Next"}
{"src": ".LFB0:\nleaq -408(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L2\nmovl $408,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L2:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $360,%rsp\nmovl $2,%esi\nmovl $1,%edi\ncall <main.superEggDrop>\nmovq %rax,%rbx\nleaq <int..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq -360(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -360(%rbp),%rax\nmovq %rax,-392(%rbp)\nmovdqa -400(%rbp),%xmm0\nmovups %xmm0,-352(%rbp)\nleaq -352(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nleaq -208(%rbp),%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovl $6,%esi\nmovl $2,%edi\ncall <main.superEggDrop>\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,-304(%rbp)\nmovq %r15,-296(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nleaq -144(%rbp),%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-320(%rbp)\nmovl $4,%esi\nmovl $2,%edi\ncall <main.superEggDrop>\nmovq %rax,%rbx\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -264(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -264(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-256(%rbp)\nmovq %r13,-248(%rbp)\nleaq -256(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nleaq -80(%rbp),%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-272(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "fmt.Println(superEggDrop(1, 2))\nfmt.Println(superEggDrop(2, 6))\nfmt.Println(superEggDrop(2, 4))"}
{"src": ".LFB0:\nleaq -328(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L19\nmovl $328,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L19:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $304,%rsp\nmovq %rdi,-312(%rbp)\nmovq %rsi,-320(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\n.LBB2:\nmovq $0,-272(%rbp)\nmovq $0,-264(%rbp)\nmovq $0,-256(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-216(%rbp)\nleaq -216(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $1,-296(%rbp)\nmovq $1,-288(%rbp)\n.LBB3:\n.LBB4:\njmp .L2\n.L18:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -296(%rbp),%rax\ntestq %rax,%rax\njg .L3\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L3:\nmovq -304(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-320(%rbp)\nmovq -288(%rbp),%rax\ntestq %rax,%rax\njg .L4\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L4:\nmovq -304(%rbp),%rdx\nmovq -288(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%eax\nsalq $3,%rax\nleaq (%rdx,%rax),%rcx\nmovq -296(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq -288(%rbp),%rax\nsubq $1,%rax\nmovq %rcx,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq %rax,-288(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rbx\nmovq -320(%rbp),%rax\nmovq (%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -192(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L5\n.LBB7:\nmovq -208(%rbp),%rsi\nleaq -112(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-256(%rbp)\n.LBE7:\njmp .L6\n.L5:\n.LBB8:\nmovq -208(%rbp),%rcx\nmovq -192(%rbp),%rdx\nmovq %rcx,-272(%rbp)\nmovq %rax,-264(%rbp)\nmovq %rdx,-256(%rbp)\n.L6:\n.LBE8:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -208(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq %r12,(%rax)\n.LBB9:\nmovq -320(%rbp),%rax\nmovq <8>(%rax),%rax\ntestq %rax,%rax\nje .L7\n.LBB10:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -168(%rbp),%rbx\nmovq -320(%rbp),%rax\nmovq <8>(%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -160(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L8\n.LBB11:\nmovq -176(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...1main.preOrderTree>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-288(%rbp)\n.LBE11:\njmp .L9\n.L8:\n.LBB12:\nmovq -176(%rbp),%rcx\nmovq -160(%rbp),%rdx\nmovq %rcx,-304(%rbp)\nmovq %rax,-296(%rbp)\nmovq %rdx,-288(%rbp)\n.L9:\n.LBE12:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -176(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L10\n.LBB13:\nmovq %r12,(%rax)\njmp .L7\n.L10:\n.LBE13:\n.LBB14:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L7:\n.LBE14:\n.LBE10:\n.LBE9:\n.LBB15:\nmovq -320(%rbp),%rax\nmovq <16>(%rax),%rax\ntestq %rax,%rax\nje .L2\n.LBB16:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%rbx\nmovq -320(%rbp),%rax\nmovq <16>(%rax),%r12\nleaq <1>(%rbx),%rax\nmovq -128(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L11\n.LBB17:\nmovq -144(%rbp),%rsi\nleaq -48(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %rbx,%rcx\nmovq %rsi,%rdx\nleaq <type...1main.preOrderTree>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -32(%rbp),%rax\nmovq %rax,-288(%rbp)\n.LBE17:\njmp .L12\n.L11:\n.LBB18:\nmovq -144(%rbp),%rcx\nmovq -128(%rbp),%rdx\nmovq %rcx,-304(%rbp)\nmovq %rax,-296(%rbp)\nmovq %rdx,-288(%rbp)\n.L12:\n.LBE18:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -144(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L13\n.LBB19:\nmovq %r12,(%rax)\njmp .L2\n.L13:\n.LBE19:\n.LBB20:\nmovq %r12,%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\n.L2:\n.LBE20:\n.LBE16:\n.LBE15:\n.LBE6:\nmovq -296(%rbp),%rax\ntestq %rax,%rax\njg .L18\n.LBE4:\n.LBE3:\n.LBB21:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -312(%rbp),%rcx\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -224(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE21:\n.LBE2:\nmovq -312(%rbp),%rax\naddq $304,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "var res []int\nstack := []*preOrderTree{root}\nfor len(stack) > 0 {\n\troot = stack[0]\n\tstack = stack[1:]\n\tres = append(res, root.data)\n\tif root.left != nil {\n\t\tstack = append(stack, root.left)\n\t}\n\tif root.right != nil {\n\t\tstack = append(stack, root.right)\n\t}\n}\nreturn res"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $72,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\nsubq $64,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-64(%rbp)\nmovq %rdx,-56(%rbp)\nmovb $0,-25(%rbp)\n.LBB2:\nmovq $0,-8(%rbp)\nmovq $0,-16(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB3:\nmovq $0,-24(%rbp)\n.LBB4:\njmp .L2\n.L19:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq -56(%rbp),%rax\ncmpq $0,-24(%rbp)\njs .L3\ncmpq %rax,-24(%rbp)\njge .L3\nmovq -64(%rbp),%rdx\nmovq -24(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $41,%al\nje .L4\njmp .L16\n.L3:\nmovq -24(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBB8:\nsubq $1,-8(%rbp)\n.LBE8:\njmp .L6\n.L16:\n.LBB9:\naddq $1,-8(%rbp)\n.L6:\n.LBE9:\n.LBE7:\nmovq -40(%rbp),%rax\nsubq -24(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-48(%rbp)\n.LBB10:\nmovq -56(%rbp),%rax\ncmpq $0,-48(%rbp)\njs .L7\ncmpq %rax,-48(%rbp)\njge .L7\nmovq -64(%rbp),%rdx\nmovq -48(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\ncmpb $40,%al\nje .L8\njmp .L17\n.L7:\nmovq -48(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBB11:\nsubq $1,-16(%rbp)\n.LBE11:\njmp .L10\n.L17:\n.LBB12:\naddq $1,-16(%rbp)\n.L10:\n.LBE12:\n.LBE10:\n.LBB13:\n.LBB14:\nmovq -8(%rbp),%rax\nshrq $63,%rax\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L11\n.LBB15:\nmovq -16(%rbp),%rax\nshrq $63,%rax\n.L11:\n.LBE15:\n.LBE14:\ntestb %al,%al\nje .L12\n.LBB16:\n.LBB17:\nmovb $0,-25(%rbp)\nmovzbl -25(%rbp),%eax\njmp .L13\n.L12:\n.LBE17:\n.LBE16:\n.LBE13:\n.LBE6:\n.LBB18:\naddq $1,-24(%rbp)\n.L2:\n.LBE18:\nmovq -24(%rbp),%rax\ncmpq -40(%rbp),%rax\njl .L19\n.LBE4:\n.LBE3:\n.LBB19:\nmovb $1,-25(%rbp)\nmovzbl -25(%rbp),%eax\n.L13:\n.LBE19:\n.LBE2:\nleave\nret", "tgt": "l, r := 0, 0\nn := len(s)\nfor i := 0; i < n; i++ {\n\tif s[i] == ')' {\n\t\tl--\n\t} else {\n\t\tl++\n\t}\n\tj := n - i - 1\n\tif s[j] == '(' {\n\t\tr--\n\t} else {\n\t\tr++\n\t}\n\tif l < 0 || r < 0 {\n\t\treturn false\n\t}\n}\nreturn true"}
{"src": "cmpq %fs:112,%rsp\njnb .L1535\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL161:\nret\n.L1535:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $184,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\nleaq <.LC248>(%rip),%rax\nmovl $7,%edx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovl $123,%ebx\nleaq <go.structs.TestHasZero_Nested.go.structs.B..i1..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq %rbx,-128(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1530\n.LBB1557:\nmovq -168(%rbp),%rax\nmovq -160(%rbp),%rcx\nmovq -152(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -128(%rbp),%rdx\nmovq %rdx,<32>(%rax)\n.LBE1557:\njmp .L1531\n.L1530:\n.LBB1558:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.structs.TestHasZero_Nested.go.structs.B..i1..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1531:\n.LBE1558:\nmovq -168(%rbp),%rax\nmovq %rax,-56(%rbp)\nleaq <type...1go.structs.TestHasZero_Nested.B..i1>(%rip),%r12\nmovq -56(%rbp),%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <go.structs.HasZero>\nmovb %al,-57(%rbp)\n.LBB1559:\nmovzbl -57(%rbp),%eax\nxorl $1,%eax\ntestb %al,%al\nje .L1529\n.LBB1560:\nleaq <string..d>(%rip),%r14\nleaq <go..C1065>(%rip),%r15\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq %r14,-112(%rbp)\nmovq %r15,-104(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L1533\n.LBB1561:\nmovq -120(%rbp),%rcx\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE1561:\njmp .L1534\n.L1533:\n.LBB1562:\nmovq -120(%rbp),%rax\nleaq -112(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...61x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L1534:\n.LBE1562:\nmovq -120(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nmovq -216(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <testing.T.Error..stub@PLT>\naddq $32,%rsp\n.L1529:\n.LBE1560:\n.LBE1559:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "type A struct {\n\tName string\n\tD    string\n}\na := A{Name: \"STR\"}\ntype B struct {\n\tAA\n\tC int\n}\nb := &B{A: a, C: 123}\nok := HasZero(b)\nif !ok {\n\tt.Error(\"STR\")\n}"}
{"src": ".LFB0:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L27\nmovl $312,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L27:\npushq %rbp\nmovq %rsp,%rbp\npushq %rbx\nsubq $296,%rsp\nmovb $0,-17(%rbp)\n.LBB2:\n.LBB3:\nmovq $0,-32(%rbp)\nmovq $0,-304(%rbp)\nmovq $0,-296(%rbp)\nmovq $0,-288(%rbp)\n.LBB4:\nmovq <32>(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L2:\nmovq <16>(%rbp),%rcx\nmovq <32>(%rbp),%rax\ncmpq $1,%rax\nsetne %al\nmovzbl %al,%edx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq %rax,-272(%rbp)\nmovq <24>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-264(%rbp)\nmovq <32>(%rbp),%rax\nsubq $1,%rax\nmovq %rax,-256(%rbp)\n.LBB5:\n.LBB6:\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-192(%rbp)\nmovq -200(%rbp),%rdi\nmovl $0,%eax\n.LBE6:\njmp .L3\n.L26:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -200(%rbp),%rdx\ntestq %rax,%rax\njs .L4\ncmpq %rdx,%rax\njge .L4\nmovq -208(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rsi,%rdx\naddq %rdx,%rdx\naddq %rsi,%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rcx\nmovq <8>(%rdx),%rbx\nmovq %rcx,-240(%rbp)\nmovq %rbx,-232(%rbp)\nmovq <16>(%rdx),%rdx\nmovq %rdx,-224(%rbp)\n.LBE9:\n.LBB10:\nmovq -240(%rbp),%rcx\nmovq -232(%rbp),%rbx\nmovq %rcx,-176(%rbp)\nmovq %rbx,-168(%rbp)\nmovq -224(%rbp),%rdx\nmovq %rdx,-160(%rbp)\nmovq %rax,-32(%rbp)\nmovq -176(%rbp),%rcx\nmovq -168(%rbp),%rbx\nmovq %rcx,-304(%rbp)\nmovq %rbx,-296(%rbp)\nmovq -160(%rbp),%rdx\nmovq %rdx,-288(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB13:\nmovq -288(%rbp),%rdx\ntestq %rdx,%rdx\njg .L5\njmp .L20\n.L4:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB30:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\n.LBE30:\n.LBB31:\n.LBB29:\n.LBB28:\nmovq %rdx,%rsi\nmovl $1,%edi\ncall <runtime.goPanicSliceB@PLT>\n.L5:\nmovq -304(%rbp),%rcx\nmovq -288(%rbp),%rdx\ncmpq $1,%rdx\nsetne %dl\nmovzbl %dl,%edx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq %rdx,-144(%rbp)\nmovq -296(%rbp),%rdx\nsubq $1,%rdx\nmovq %rdx,-136(%rbp)\nmovq -288(%rbp),%rdx\nsubq $1,%rdx\nmovq %rdx,-128(%rbp)\n.LBB14:\n.LBB15:\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,-112(%rbp)\nmovq %rbx,-104(%rbp)\nmovq -128(%rbp),%rdx\nmovq %rdx,-96(%rbp)\nmovq -104(%rbp),%r8\nmovl $0,%edx\n.LBE15:\njmp .L7\n.L25:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\nmovq -104(%rbp),%rcx\ntestq %rdx,%rdx\njs .L8\ncmpq %rcx,%rdx\njge .L8\nmovq -112(%rbp),%rcx\nmovq %rdx,%rsi\nsalq $3,%rsi\naddq %rsi,%rcx\nmovq (%rcx),%rcx\n.LBE18:\n.LBB19:\nmovq %rdx,-40(%rbp)\nmovq %rcx,-48(%rbp)\n.LBE19:\n.LBB20:\n.LBB21:\nmovq <24>(%rbp),%rcx\ncmpq $0,-32(%rbp)\njns .L9\njmp .L10\n.L8:\n.LBE21:\n.LBE20:\n.LBB25:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9:\n.LBE25:\n.LBB26:\n.LBB24:\ncmpq %rcx,-32(%rbp)\njl .L21\n.L10:\nmovq -32(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L21:\nmovq <16>(%rbp),%r9\nmovq -32(%rbp),%rsi\nmovq %rsi,%rcx\naddq %rcx,%rcx\naddq %rsi,%rcx\nsalq $3,%rcx\nleaq (%r9,%rcx),%rsi\nmovq (%rsi),%rcx\nmovq <8>(%rsi),%rbx\nmovq %rcx,-80(%rbp)\nmovq %rbx,-72(%rbp)\nmovq <16>(%rsi),%rcx\nmovq %rcx,-64(%rbp)\nmovq -72(%rbp),%rcx\ncmpq $0,-40(%rbp)\njs .L12\ncmpq %rcx,-40(%rbp)\njge .L12\nmovq -80(%rbp),%rsi\nmovq -40(%rbp),%rcx\nsalq $3,%rcx\naddq %rsi,%rcx\nmovq (%rcx),%rcx\ncmpq %rcx,-48(%rbp)\njne .L13\njmp .L22\n.L12:\nmovq -40(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\n.LBB22:\n.LBB23:\nmovb $0,-17(%rbp)\nmovzbl -17(%rbp),%eax\njmp .L15\n.L22:\n.LBE23:\n.LBE22:\n.LBE24:\n.LBE26:\n.LBE17:\n.LBB27:\naddq $1,%rdx\n.L7:\n.LBE27:\ncmpq %r8,%rdx\njl .L25\n.LBE14:\n.LBE28:\n.LBE29:\n.LBE31:\n.LBE8:\n.LBB32:\naddq $1,%rax\n.L3:\n.LBE32:\ncmpq %rdi,%rax\njl .L26\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB33:\nmovb $1,-17(%rbp)\nmovzbl -17(%rbp),%eax\n.L15:\n.LBE33:\n.LBE2:\nmovq -8(%rbp),%rbx\nleave\nret", "tgt": "for i, row := range matrix[1:] {\n\tfor j, v := range row[1:] {\n\t\tif v != matrix[i][j] {\n\t\t\treturn false\n\t\t}\n\t}\n}\nreturn true"}
{"src": ".LFB2:\nleaq -1096(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L32\nmovl $1096,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL2:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $1048,%rsp\nmovq %rdi,-904(%rbp)\nleaq <.LC17>(%rip),%rax\nmovl $4,%edx\nmovq %rax,-784(%rbp)\nmovq %rdx,-776(%rbp)\nleaq <.LC18>(%rip),%rcx\nmovl $2,%ebx\nmovq %rcx,-768(%rbp)\nmovq %rbx,-760(%rbp)\nmovq $0,-752(%rbp)\nleaq <.LC19>(%rip),%r8\nmovl $5,%r9d\nmovq %r8,-744(%rbp)\nmovq %r9,-736(%rbp)\nleaq <.LC20>(%rip),%r10\nmovl $2,%r11d\nmovq %r10,-728(%rbp)\nmovq %r11,-720(%rbp)\nmovq $2,-712(%rbp)\nleaq <.LC21>(%rip),%rbx\nmovq %rbx,-1056(%rbp)\nmovq $0,-1048(%rbp)\nmovdqa -1056(%rbp),%xmm0\nmovups %xmm0,-704(%rbp)\nleaq <.LC22>(%rip),%rdi\nmovq %rdi,-1040(%rbp)\nmovq $3,-1032(%rbp)\nmovdqa -1040(%rbp),%xmm1\nmovups %xmm1,-688(%rbp)\nmovq $0,-672(%rbp)\nleaq <.LC23>(%rip),%rax\nmovq %rax,-1024(%rbp)\nmovq $8,-1016(%rbp)\nmovdqa -1024(%rbp),%xmm2\nmovups %xmm2,-664(%rbp)\nmovq %rdi,-1008(%rbp)\nmovq $3,-1000(%rbp)\nmovdqa -1008(%rbp),%xmm3\nmovups %xmm3,-648(%rbp)\nmovq $5,-632(%rbp)\nmovq %rax,-992(%rbp)\nmovq $8,-984(%rbp)\nmovdqa -992(%rbp),%xmm4\nmovups %xmm4,-624(%rbp)\nleaq <.LC24>(%rip),%rdx\nmovq %rdx,-976(%rbp)\nmovq $4,-968(%rbp)\nmovdqa -976(%rbp),%xmm5\nmovups %xmm5,-608(%rbp)\nmovq $-1,-592(%rbp)\nmovq %rax,-960(%rbp)\nmovq $8,-952(%rbp)\nmovdqa -960(%rbp),%xmm6\nmovups %xmm6,-584(%rbp)\nmovq %rbx,-944(%rbp)\nmovq $0,-936(%rbp)\nmovdqa -944(%rbp),%xmm7\nmovups %xmm7,-568(%rbp)\nmovq $0,-552(%rbp)\nleaq -784(%rbp),%rax\nmovq %rax,-816(%rbp)\nmovq $6,-808(%rbp)\nmovq $6,-800(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC25>(%rip),%r12\nmovl $68,%r13d\nleaq -208(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB23:\nmovq $0,-864(%rbp)\nmovq $0,-856(%rbp)\nmovq $0,-848(%rbp)\nmovq $0,-840(%rbp)\nmovq $0,-832(%rbp)\n.LBB24:\n.LBB25:\n.LBB26:\nmovq -816(%rbp),%rax\nmovq -808(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -800(%rbp),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%r13\nmovl $0,%ebx\n.LBE26:\njmp .L22\n.L31:\n.LBB27:\nnop\n.LBE27:\n.LBB28:\n.LBB29:\nmovq -456(%rbp),%rax\ntestq %rbx,%rbx\njs .L23\ncmpq %rax,%rbx\njge .L23\nmovq -464(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $2,%rax\naddq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-512(%rbp)\nmovq %rdi,-504(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-496(%rbp)\nmovq %rdi,-488(%rbp)\nmovq <32>(%rax),%rax\nmovq %rax,-480(%rbp)\n.LBE29:\n.LBB30:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -480(%rbp),%rax\nmovq %rax,-400(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-864(%rbp)\nmovq %rdx,-856(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-848(%rbp)\nmovq %rdx,-840(%rbp)\nmovq -400(%rbp),%rax\nmovq %rax,-832(%rbp)\n.LBE30:\n.LBB31:\nmovq -832(%rbp),%rax\nmovq %rax,-824(%rbp)\nmovq -864(%rbp),%rax\nmovq -856(%rbp),%rdx\nmovq %rax,-896(%rbp)\nmovq %rdx,-888(%rbp)\nmovq -848(%rbp),%rax\nmovq -840(%rbp),%rdx\nmovq %rax,-880(%rbp)\nmovq %rdx,-872(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq -896(%rbp),%rdi\nmovq -888(%rbp),%rsi\nmovq %rdx,%rcx\nmovq %rax,%rdx\ncall <go.leetcode.strStr>\nmovq %rax,%r12\nleaq <go.leetcode..go.leetcode.para28..d>(%rip),%rax\nmovq %rax,-1088(%rbp)\nleaq <go.leetcode..go.leetcode.para28..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-360(%rbp)\nmovq -896(%rbp),%rax\nmovq -888(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -880(%rbp),%rax\nmovq -872(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\nje .L24\njmp .L29\n.L23:\n.LBE31:\n.LBB34:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\n.LBE34:\n.LBB35:\n.LBB32:\nmovq -360(%rbp),%rcx\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE32:\njmp .L26\n.L29:\n.LBB33:\nmovq -360(%rbp),%rax\nleaq -352(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode..go.leetcode.para28..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L26:\n.LBE33:\nmovq -360(%rbp),%rax\nmovq %rax,-1080(%rbp)\nleaq <int..d>(%rip),%rax\nmovq %rax,-1072(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq %r12,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-1064(%rbp)\nmovdqa -1088(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -1072(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC26>(%rip),%rax\nmovq %rax,-928(%rbp)\nmovq $37,-920(%rbp)\nleaq -144(%rbp),%rax\nmovq -928(%rbp),%rsi\nmovq -920(%rbp),%rdi\nmovq %rsi,%r8\nmovq %rdi,%r9\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE35:\n.LBE28:\n.LBB36:\naddq $1,%rbx\n.L22:\n.LBE36:\ncmpq %r13,%rbx\njl .L31\n.LBE25:\n.LBE24:\n.LBE23:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC27>(%rip),%r14\nmovl $3,%r15d\nleaq -80(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question28{\n\t{\n\t\tpara28{\"STR\", \"STR\"},\n\t\tans28{0},\n\t},\n\t{\n\t\tpara28{\"STR\", \"STR\"},\n\t\tans28{2},\n\t},\n\t{\n\t\tpara28{\"STR\", \"STR\"},\n\t\tans28{0},\n\t},\n\t{\n\t\tpara28{\"STR\", \"STR\"},\n\t\tans28{5},\n\t},\n\t{\n\t\tpara28{\"STR\", \"STR\"},\n\t\tans28{-1},\n\t},\n\t{\n\t\tpara28{\"STR\", \"STR\"},\n\t\tans28{0},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans28, q.para28\n\tfmt.Printf(\"STR\", p, strStr(p.s, p.p))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L20\nmovl $232,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L20:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $184,%rsp\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\n.LBB2:\nleaq <.LC0>(%rip),%rax\nmovl $9,%edx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\n.LBB3:\nmovq $1,-56(%rbp)\n.LBB4:\njmp .L2\n.L19:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nleaq <.LC1>(%rip),%rax\nmovq %rax,-224(%rbp)\nmovq $0,-216(%rbp)\nmovdqa -224(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\n.LBB7:\nmovq $1,-64(%rbp)\n.LBB8:\njmp .L3\n.L18:\n.LBB9:\nnop\n.LBE9:\n.LBB10:\n.LBB11:\nmovq -136(%rbp),%rax\ncmpq $8,%rax\njg .L4\n.LBB12:\nmovq -56(%rbp),%rax\nimulq -64(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -144(%rbp),%rcx\nmovq -136(%rbp),%rbx\nmovq %rcx,-96(%rbp)\nmovq %rbx,-88(%rbp)\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nleaq -96(%rbp),%rax\nmovl $2,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\n.L4:\n.LBE12:\n.LBE11:\n.LBE10:\n.LBB13:\naddq $1,-64(%rbp)\n.L3:\n.LBE13:\ncmpq $4,-64(%rbp)\njle .L18\n.LBE8:\n.LBE7:\nleaq <.LC1>(%rip),%r14\nmovl $0,%r15d\nleaq -176(%rbp),%rax\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %rsi,%rdi\nmovq %rbx,%r8\nmovq -144(%rbp),%rsi\nmovq -136(%rbp),%rdx\nmovq %rdi,%rcx\nmovq %rax,%rdi\ncall <strings.Split@PLT>\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\ncall <sort.Strings@PLT>\naddq $32,%rsp\nleaq <.LC1>(%rip),%r12\nmovl $0,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <strings.Join@PLT>\naddq $32,%rsp\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\n.LBB14:\nmovq -184(%rbp),%rdx\nmovq -120(%rbp),%rax\ncmpq %rax,%rdx\njne .L7\nmovq -192(%rbp),%rdx\nmovq -128(%rbp),%rax\ncmpq %rax,%rdx\njne .L8\nmovl $1,%eax\njmp .L10\n.L8:\nmovq -120(%rbp),%rax\nmovq %rax,%rdx\nmovq -128(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <memcmp@PLT>\ntestl %eax,%eax\nsete %al\njmp .L10\n.L7:\nmovl $0,%eax\n.L10:\ntestb %al,%al\nje .L11\n.LBB15:\n.LBB16:\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\njmp .L15\n.L11:\n.LBE16:\n.LBE15:\n.LBE14:\n.LBE6:\n.LBB17:\naddq $1,-56(%rbp)\n.L2:\n.LBE17:\ncmpq $9998,-56(%rbp)\njle .L19\n.LBE4:\n.LBE3:\n.LBB18:\nleaq <.LC2>(%rip),%rax\nmovq %rax,-208(%rbp)\nmovq $1,-200(%rbp)\nmovdqa -208(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\n.L15:\n.LBE18:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "digits := \"STR\"\nfor i := 1; i < 9999; i++ {\n\tnum := \"STR\"\n\tfor j := 1; j < 5; j++ {\n\t\tif len(num) < 9 {\n\t\t\tnum += strconv.Itoa(i * j)\n\t\t}\n\t}\n\tarr := strings.Split(num, \"STR\")\n\tsort.Strings(arr)\n\tnumSorted := strings.Join(arr, \"STR\")\n\tif numSorted == digits {\n\t\treturn num\n\t}\n}\nreturn \"STR\""}
{"src": ".LFB0:\nleaq -824(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L4\nmovl $824,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $776,%rsp\nmovq %rdi,-680(%rbp)\nleaq -672(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.Constructor933>\nleaq <go.leetcode.RecentCounter..d>(%rip),%rax\nmovq %rax,-816(%rbp)\nleaq <go.leetcode.RecentCounter..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-616(%rbp)\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-608(%rbp)\nmovq %rdx,-600(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-592(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -616(%rbp),%rcx\nmovq -608(%rbp),%rax\nmovq -600(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -592(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -616(%rbp),%rcx\nleaq -608(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <go.leetcode.RecentCounter..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -616(%rbp),%rax\nmovq %rax,-808(%rbp)\nmovdqa -816(%rbp),%xmm0\nmovups %xmm0,-576(%rbp)\nleaq -576(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq $1,-360(%rbp)\nmovq $1,-352(%rbp)\nleaq <.LC13>(%rip),%r12\nmovl $9,%r13d\nleaq -336(%rbp),%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -352(%rbp)\npushq -360(%rbp)\npushq -368(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -336(%rbp),%rax\nmovq -328(%rbp),%rdx\nmovq %rax,-640(%rbp)\nmovq %rdx,-632(%rbp)\nmovq -320(%rbp),%rax\nmovq %rax,-624(%rbp)\nleaq -672(%rbp),%rax\nmovl $1,%esi\nmovq %rax,%rdi\ncall <go.leetcode.RecentCounter.Ping>\nmovq %rax,-56(%rbp)\nleaq <int..d>(%rip),%r13\nmovq %r13,-800(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-536(%rbp)\nmovq -536(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -536(%rbp),%rax\nmovq %rax,-792(%rbp)\nmovdqa -800(%rbp),%xmm1\nmovups %xmm1,-528(%rbp)\nleaq -528(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq $1,-296(%rbp)\nmovq $1,-288(%rbp)\nleaq <.LC14>(%rip),%r14\nmovl $11,%r15d\nleaq -272(%rbp),%rdi\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -288(%rbp)\npushq -296(%rbp)\npushq -304(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdx\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-544(%rbp)\nleaq -672(%rbp),%rax\nmovl $100,%esi\nmovq %rax,%rdi\ncall <go.leetcode.RecentCounter.Ping>\nmovq %rax,-56(%rbp)\nmovq %r13,%r15\nmovq %r15,-784(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-488(%rbp)\nmovq -488(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -488(%rbp),%rax\nmovq %rax,-776(%rbp)\nmovdqa -784(%rbp),%xmm2\nmovups %xmm2,-480(%rbp)\nleaq -480(%rbp),%rax\nmovq %rax,-240(%rbp)\nmovq $1,-232(%rbp)\nmovq $1,-224(%rbp)\nleaq <.LC14>(%rip),%r14\nmovq %r14,-736(%rbp)\nmovq $11,-728(%rbp)\nleaq -208(%rbp),%rax\nmovq -736(%rbp),%rcx\nmovq -728(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-496(%rbp)\nleaq -672(%rbp),%rax\nmovl $3001,%esi\nmovq %rax,%rdi\ncall <go.leetcode.RecentCounter.Ping>\nmovq %rax,-56(%rbp)\nmovq %r15,-768(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-440(%rbp)\nmovq -440(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -440(%rbp),%rax\nmovq %rax,-760(%rbp)\nmovdqa -768(%rbp),%xmm3\nmovups %xmm3,-432(%rbp)\nleaq -432(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $1,-168(%rbp)\nmovq $1,-160(%rbp)\nmovq %r14,-720(%rbp)\nmovq $11,-712(%rbp)\nleaq -144(%rbp),%rax\nmovq -720(%rbp),%rcx\nmovq -712(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-448(%rbp)\nleaq -672(%rbp),%rax\nmovl $3002,%esi\nmovq %rax,%rdi\ncall <go.leetcode.RecentCounter.Ping>\nmovq %rax,-56(%rbp)\nmovq %r15,-752(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-392(%rbp)\nmovq -392(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -392(%rbp),%rax\nmovq %rax,-744(%rbp)\nmovdqa -752(%rbp),%xmm4\nmovups %xmm4,-384(%rbp)\nleaq -384(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $1,-104(%rbp)\nmovq $1,-96(%rbp)\nmovq %r14,-704(%rbp)\nmovq $11,-696(%rbp)\nleaq -80(%rbp),%rax\nmovq -704(%rbp),%rcx\nmovq -696(%rbp),%rbx\nmovq %rcx,%rsi\nmovq %rbx,%rdi\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-400(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "obj := Constructor933()\nfmt.Printf(\"STR\", obj)\nparam1 := obj.Ping(1)\nfmt.Printf(\"STR\", param1)\nparam1 = obj.Ping(100)\nfmt.Printf(\"STR\", param1)\nparam1 = obj.Ping(3001)\nfmt.Printf(\"STR\", param1)\nparam1 = obj.Ping(3002)\nfmt.Printf(\"STR\", param1)"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $40,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq $0,-8(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\nleaq -24(%rbp),%rax\nmovq %rax,-16(%rbp)\nmovq -16(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovl $0,%esi\nmovq %rax,%rdi\ncall <go.algorithms.insertArrayToTreeNode>\naddq $32,%rsp\n.LBB3:\nmovq -16(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "root := new(*TreeNode)\ninsertArrayToTreeNode(root, array, 0)\nreturn *root"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L33\nmovl $120,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L33:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $96,%rsp\nmovq $0,-48(%rbp)\n.LBB2:\nmovq $0,-24(%rbp)\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\nsubq $8,%rsp\npushq <56>(%rbp)\npushq <48>(%rbp)\npushq <40>(%rbp)\ncall <sort.Ints@PLT>\naddq $32,%rsp\nmovq <24>(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq <48>(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq <24>(%rbp),%rax\ntestq %rax,%rax\njg .L2\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.goPanicIndex@PLT>\n.L2:\nmovq <16>(%rbp),%rax\nmovq (%rax),%rax\nsubq $8,%rsp\npushq <56>(%rbp)\npushq <48>(%rbp)\npushq <40>(%rbp)\nmovq %rax,%rdi\ncall <sort.SearchInts@PLT>\naddq $32,%rsp\nmovq %rax,-32(%rbp)\n.LBB3:\nmovq $0,-72(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L3\n.L32:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -104(%rbp),%rax\ntestq %rbx,%rbx\njs .L4\ncmpq %rax,%rbx\njge .L4\nmovq -112(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-72(%rbp)\n.LBE10:\n.LBB11:\n.LBB12:\n.LBB13:\njmp .L5\n.L4:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB25:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L31:\n.LBE25:\n.LBB26:\n.LBB19:\n.LBB18:\n.LBB14:\nnop\n.LBE14:\n.LBB15:\naddq $1,-32(%rbp)\n.L5:\n.LBE15:\n.LBB16:\nmovq -32(%rbp),%rax\ncmpq -64(%rbp),%rax\nsetl %al\ntestb %al,%al\nje .L6\n.LBB17:\nmovq <48>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L7\ncmpq %rax,-32(%rbp)\njl .L24\n.L7:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq <40>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ncmpq %rax,-72(%rbp)\nsetg %al\n.L6:\n.LBE17:\n.LBE16:\ntestb %al,%al\njne .L31\n.LBE18:\n.LBE19:\n.LBB20:\nmovq -32(%rbp),%rax\ncmpq -64(%rbp),%rax\njne .L11\n.LBB21:\n.LBB22:\nmovq -56(%rbp),%rax\nleaq -1(%rax),%rdx\nmovq <24>(%rbp),%rax\ntestq %rdx,%rdx\njs .L12\ncmpq %rax,%rdx\njl .L26\n.L12:\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq <48>(%rbp),%rcx\ntestq %rax,%rax\njs .L14\ncmpq %rcx,%rax\njl .L27\n.L14:\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq <16>(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <40>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\nsubq %rax,%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0475.max>\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\njmp .L16\n.L11:\n.LBE22:\n.LBE21:\n.LBE20:\nmovq $2147483647,-40(%rbp)\n.LBB23:\ncmpq $0,-32(%rbp)\njle .L17\n.LBB24:\nmovq -32(%rbp),%rax\nsubq $1,%rax\nmovq <48>(%rbp),%rdx\ntestq %rax,%rax\njs .L18\ncmpq %rdx,%rax\njl .L28\n.L18:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq <40>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq -72(%rbp),%rax\nsubq %rdx,%rax\nmovq %rax,-40(%rbp)\n.L17:\n.LBE24:\n.LBE23:\nmovq <48>(%rbp),%rax\ncmpq $0,-32(%rbp)\njs .L20\ncmpq %rax,-32(%rbp)\njl .L29\n.L20:\nmovq -32(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq <40>(%rbp),%rdx\nmovq -32(%rbp),%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\nsubq -72(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq -80(%rbp),%rdx\nmovq -40(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0475.min>\nmovq %rax,%rdx\nmovq -24(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0475.max>\nmovq %rax,-24(%rbp)\n.LBE26:\n.LBE8:\n.LBB27:\naddq $1,%rbx\n.L3:\n.LBE27:\ncmpq %r12,%rbx\njl .L32\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB28:\nmovq -24(%rbp),%rax\nmovq %rax,-48(%rbp)\nmovq -48(%rbp),%rax\n.L16:\n.LBE28:\n.LBE2:\nleaq -16(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "res := 0\nsort.Ints(houses)\nsort.Ints(heaters)\nm, n := len(houses), len(heaters)\nindex := sort.SearchInts(heaters, houses[0])\nfor _, house := range houses {\n\tfor index < n && house > heaters[index] {\n\t\tindex++\n\t}\n\tif index == n {\n\t\treturn max(res, houses[m-1]-heaters[index-1])\n\t}\n\tleft := math.MaxInt32\n\tif index > 0 {\n\t\tleft = house - heaters[index-1]\n\t}\n\tright := heaters[index] - house\n\tres = max(res, min(left, right))\n}\nreturn res"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L5\nmovl $184,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L5:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovq %rdi,-168(%rbp)\nmovq %rsi,-176(%rbp)\nmovq $0,-128(%rbp)\nmovq $0,-120(%rbp)\nmovq $0,-112(%rbp)\n.LBB2:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq <imt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Swap.0func.8int.3int.9.8.9.5..go.leetcode.Candidates>(%rip),%r12\nleaq <go.leetcode.Candidates..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-104(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-80(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB3:\nmovq -104(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE3:\njmp .L3\n.L2:\n.LBB4:\nmovq -104(%rbp),%rax\nleaq -96(%rbp),%rdx\nmovq %rax,%rsi\nleaq <go.leetcode.Candidates..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE4:\nmovq -104(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.Sort@PLT>\n.LBB5:\nleaq -64(%rbp),%rax\nmovq -176(%rbp),%rdx\nsubq $8,%rsp\npushq -144(%rbp)\npushq -152(%rbp)\npushq -160(%rbp)\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode.orderedCombinationSum2>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -168(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE5:\n.LBE2:\nmovq -168(%rbp),%rax\nleaq -24(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "c := Candidates(candidates)\nsort.Sort(c)\nreturn orderedCombinationSum2(c, target)"}
{"src": ".LFB4:\nleaq -680(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L128\nmovl $680,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL4:\nret\n.L128:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $632,%rsp\nmovq %rdi,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB48:\nmovq $0,-592(%rbp)\nmovq $0,-584(%rbp)\nmovq $0,-576(%rbp)\nmovq $0,-568(%rbp)\nmovq $0,-560(%rbp)\nmovq $0,-552(%rbp)\n.LBB49:\n.LBB50:\n.LBB51:\nmovq <go.day96.testcases>(%rip),%rax\nmovq <8+go.day96.testcases>(%rip),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq <16+go.day96.testcases>(%rip),%rax\nmovq %rax,-448(%rbp)\nmovq -456(%rbp),%r13\nmovl $0,%r12d\n.LBE51:\njmp .L100\n.L127:\n.LBB52:\nnop\n.LBE52:\n.LBB53:\n.LBB54:\nmovq -456(%rbp),%rax\ntestq %r12,%r12\njs .L101\ncmpq %rax,%r12\njge .L101\nmovq -464(%rbp),%rdx\nmovq %r12,%rcx\nmovq %rcx,%rax\naddq %rax,%rax\naddq %rcx,%rax\nsalq $4,%rax\nleaq (%rdx,%rax),%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq <16>(%rcx),%rax\nmovq <24>(%rcx),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq <32>(%rcx),%rax\nmovq <40>(%rcx),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\n.LBE54:\n.LBB55:\nmovq -512(%rbp),%rax\nmovq -504(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -496(%rbp),%rax\nmovq -488(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovq -432(%rbp),%rax\nmovq -424(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -416(%rbp),%rax\nmovq -408(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -400(%rbp),%rax\nmovq -392(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\n.LBE55:\n.LBB56:\nsubq $8,%rsp\npushq -576(%rbp)\npushq -584(%rbp)\npushq -592(%rbp)\ncall <go.day96.HeapsAlgorithmRecursive>\naddq $32,%rsp\nmovq %rax,-64(%rbp)\nmovq $0,-56(%rbp)\n.LBB57:\nmovq $0,-544(%rbp)\nmovq $0,-536(%rbp)\nmovq $0,-528(%rbp)\njmp .L102\n.L101:\n.LBE57:\n.LBE56:\n.LBB80:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L102:\n.LBE80:\n.LBB81:\n.LBB79:\n.LBB58:\n.LBB59:\n.LBB60:\n.LBB61:\n.LBB62:\nleaq -352(%rbp),%rdx\nmovq -64(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.chanrecv2@PLT>\nmovl %eax,%ecx\nmovq -352(%rbp),%rax\nmovq -344(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -336(%rbp),%rax\nmovq %rax,-368(%rbp)\n.LBE62:\nmovl %ecx,%eax\nxorl $1,%eax\ntestb %al,%al\njne .L126\n.LBE61:\nmovq -384(%rbp),%rax\nmovq -376(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -368(%rbp),%rax\nmovq %rax,-528(%rbp)\n.LBB64:\n.LBB65:\nmovq -568(%rbp),%rax\nmovq -560(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -552(%rbp),%rax\nmovq %rax,-304(%rbp)\nmovq -312(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L105\ncmpq %rax,-56(%rbp)\njl .L123\n.L105:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L123:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-640(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-264(%rbp)\nmovq -320(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-240(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L107\n.LBB66:\nmovq -264(%rbp),%rcx\nmovq -256(%rbp),%rax\nmovq -248(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -240(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE66:\njmp .L108\n.L107:\n.LBB67:\nmovq -264(%rbp),%rax\nleaq -256(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L108:\n.LBE67:\nmovq -264(%rbp),%rax\nmovq %rax,-632(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-624(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-296(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,-272(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L109\n.LBB68:\nmovq -296(%rbp),%rcx\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -272(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE68:\njmp .L110\n.L109:\n.LBB69:\nmovq -296(%rbp),%rax\nleaq -288(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L110:\n.LBE69:\nmovq -296(%rbp),%rax\nmovq %rax,-616(%rbp)\nmovq -624(%rbp),%rax\nmovq -616(%rbp),%rdx\nmovq %rax,%rcx\nmovq %rdx,%rbx\nmovq %rcx,%rsi\nmovq %rdx,%rax\nmovq -640(%rbp),%rdx\nmovq -632(%rbp),%rcx\nmovq %rsi,%rdi\nmovq %rax,%rsi\ncall <reflect.DeepEqual@PLT>\nxorl $1,%eax\ntestb %al,%al\nje .L111\n.LBB70:\nmovq -568(%rbp),%rax\nmovq -560(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -552(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq -216(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L112\ncmpq %rax,-56(%rbp)\njl .L124\n.L112:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L124:\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-672(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -224(%rbp),%rcx\nmovq -56(%rbp),%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-176(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L114\n.LBB71:\nmovq -200(%rbp),%rcx\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -176(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE71:\njmp .L115\n.L114:\n.LBB72:\nmovq -200(%rbp),%rax\nleaq -192(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L115:\n.LBE72:\nmovq -200(%rbp),%rax\nmovq %rax,-664(%rbp)\nleaq <type...6.7int>(%rip),%rax\nmovq %rax,-656(%rbp)\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovq -544(%rbp),%rax\nmovq -536(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -528(%rbp),%rax\nmovq %rax,-144(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L116\n.LBB73:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE73:\njmp .L117\n.L116:\n.LBB74:\nmovq -168(%rbp),%rax\nleaq -160(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...6.7int>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L117:\n.LBE74:\nmovq -168(%rbp),%rax\nmovq %rax,-648(%rbp)\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovdqa -672(%rbp),%xmm0\nmovups %xmm0,-128(%rbp)\nmovdqa -656(%rbp),%xmm1\nmovups %xmm1,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L118\n.LBB75:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\n.LBE75:\njmp .L119\n.L118:\n.LBB76:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...62x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L119:\n.LBE76:\nmovq -136(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $2,-88(%rbp)\nmovq $2,-80(%rbp)\nleaq <.LC11>(%rip),%r14\nmovl $18,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -600(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L111:\n.LBE70:\n.LBE65:\naddq $1,-56(%rbp)\n.LBE64:\n.LBE60:\njmp .L102\n.L126:\n.LBB78:\n.LBB77:\n.LBB63:\nnop\n.LBE63:\n.LBE77:\n.LBE78:\n.LBE59:\n.LBE58:\n.LBE79:\n.LBE81:\n.LBE53:\n.LBB82:\naddq $1,%r12\n.L100:\n.LBE82:\ncmpq %r13,%r12\njl .L127\n.LBE50:\n.LBE49:\n.LBE48:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, tc := range testcases {\n\tresults := HeapsAlgorithmRecursive(tc.input)\n\tpos := 0\n\tfor result := range results {\n\t\tif !reflect.DeepEqual(result, tc.expected[pos]) {\n\t\t\tt.Errorf(\"STR\", tc.expected[pos], result)\n\t\t}\n\t\tpos++\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L32\nmovl $200,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L32:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $152,%rsp\nmovb $0,-57(%rbp)\n.LBB2:\n.LBB3:\nmovq $1,-56(%rbp)\n.LBB4:\njmp .L2\n.L31:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\n.LBB7:\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L3\ncmpq %rdx,%rax\njl .L24\n.L3:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L24:\nmovq <24>(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L5\ncmpq %rdx,-56(%rbp)\njl .L25\n.L5:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L25:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rdx\nmovq <16>(%rbp),%rcx\nmovq -56(%rbp),%rax\nsalq $3,%rax\naddq %rcx,%rax\nmovq (%rax),%rax\ncmpq %rax,%rdx\njle .L7\n.LBB8:\nleaq -160(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <go.problem0665.deepCopy>\naddq $32,%rsp\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq -152(%rbp),%rdx\ntestq %rax,%rax\njs .L8\ncmpq %rdx,%rax\njl .L26\n.L8:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L26:\nmovq -152(%rbp),%rdx\ncmpq $0,-56(%rbp)\njs .L10\ncmpq %rdx,-56(%rbp)\njl .L27\n.L10:\nmovq -56(%rbp),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L27:\nmovq -160(%rbp),%rcx\nmovq -56(%rbp),%rdx\nsalq $3,%rdx\naddq %rdx,%rcx\nmovq -160(%rbp),%rdx\nsalq $3,%rax\naddq %rax,%rdx\nmovq (%rcx),%rax\nmovq %rax,(%rdx)\nleaq -192(%rbp),%rax\nsubq $8,%rsp\npushq <32>(%rbp)\npushq <24>(%rbp)\npushq <16>(%rbp)\nmovq %rax,%rdi\ncall <go.problem0665.deepCopy>\naddq $32,%rsp\nmovq -184(%rbp),%rax\ncmpq $0,-56(%rbp)\njs .L12\ncmpq %rax,-56(%rbp)\njl .L28\n.L12:\nmovq -56(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L28:\nmovq -56(%rbp),%rax\nsubq $1,%rax\nmovq -184(%rbp),%rdx\ntestq %rax,%rax\njs .L14\ncmpq %rdx,%rax\njl .L29\n.L14:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L29:\nmovq -192(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq -192(%rbp),%rcx\nmovq -56(%rbp),%rdx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rax),%rax\nmovq %rax,(%rdx)\n.LBB9:\n.LBB10:\nleaq <imt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Swap.0func.8int.3int.9.8.9.5..sort.IntSlice>(%rip),%r14\nleaq <sort.IntSlice..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-136(%rbp)\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L16\n.LBB11:\nmovq -136(%rbp),%rcx\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -112(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE11:\njmp .L17\n.L16:\n.LBB12:\nmovq -136(%rbp),%rax\nleaq -128(%rbp),%rdx\nmovq %rax,%rsi\nleaq <sort.IntSlice..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L17:\n.LBE12:\nmovq -136(%rbp),%rax\nmovq %rax,%r15\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.IsSorted@PLT>\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L18\n.LBB13:\nleaq <imt..interface.4Len.0func.8.9.8int.9.2Less.0func.8int.3int.9.8bool.9.2Swap.0func.8int.3int.9.8.9.5..sort.IntSlice>(%rip),%r12\nleaq <sort.IntSlice..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq -184(%rbp),%rdx\nmovq %rax,-96(%rbp)\nmovq %rdx,-88(%rbp)\nmovq -176(%rbp),%rax\nmovq %rax,-80(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L19\n.LBB14:\nmovq -104(%rbp),%rcx\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -80(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE14:\njmp .L20\n.L19:\n.LBB15:\nmovq -104(%rbp),%rax\nleaq -96(%rbp),%rdx\nmovq %rax,%rsi\nleaq <sort.IntSlice..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L20:\n.LBE15:\nmovq -104(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <sort.IsSorted@PLT>\n.L18:\n.LBE13:\n.LBE10:\nmovb %al,-57(%rbp)\nmovzbl -57(%rbp),%eax\njmp .L21\n.L7:\n.LBE9:\n.LBE8:\n.LBE7:\n.LBE6:\n.LBB16:\naddq $1,-56(%rbp)\n.L2:\n.LBE16:\nmovq <24>(%rbp),%rax\ncmpq %rax,-56(%rbp)\njl .L31\n.LBE4:\n.LBE3:\n.LBB17:\nmovb $1,-57(%rbp)\nmovzbl -57(%rbp),%eax\n.L21:\n.LBE17:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "for i := 1; i < len(nums); i++ {\n\tif nums[i-1] > nums[i] {\n\t\tpre := deepCopy(nums)\n\t\tpre[i-1] = pre[i]\n\t\tnext := deepCopy(nums)\n\t\tnext[i] = next[i-1]\n\t\treturn sort.IsSorted(sort.IntSlice(pre)) || sort.IsSorted(sort.IntSlice(next))\n\t}\n}\nreturn true"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L23\nmovl $232,%r10d\nmovl $24,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L23:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $200,%rsp\nmovq %rdi,-216(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\nmovq $0,-160(%rbp)\n.LBB2:\nleaq <type...60x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq %rax,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\n.LBB3:\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovq -136(%rbp),%r13\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L22:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -136(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -144(%rbp),%rax\nmovq %rbx,%rdx\nsalq $3,%rdx\naddq %rdx,%rax\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-48(%rbp)\n.LBE10:\n.LBB11:\nmovq -48(%rbp),%rax\nmovq %rax,-40(%rbp)\n.LBB12:\ncmpq $0,-40(%rbp)\njs .L4\njmp .L5\n.L3:\n.LBE12:\n.LBE11:\n.LBB20:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\n.LBE20:\n.LBB21:\n.LBB14:\n.LBB13:\nnegq -40(%rbp)\n.L5:\n.LBE13:\n.LBE14:\n.LBB15:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L6\ncmpq %rdx,%rax\njl .L19\n.L6:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L19:\nmovq <16>(%rbp),%rdx\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rax\ntestq %rax,%rax\njns .L8\n.LBB16:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -104(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -96(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L9\n.LBB17:\nmovq -112(%rbp),%rsi\nleaq -80(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <int..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-192(%rbp)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -112(%rbp),%rcx\nmovq -96(%rbp),%rdx\nmovq %rcx,-208(%rbp)\nmovq %rax,-200(%rbp)\nmovq %rdx,-192(%rbp)\n.L10:\n.LBE18:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq -112(%rbp),%rax\nmovq %r12,%rdx\nsalq $3,%rdx\naddq %rax,%rdx\nmovq -40(%rbp),%rax\nmovq %rax,(%rdx)\n.LBE16:\njmp .L11\n.L8:\n.LBB19:\nmovq -40(%rbp),%rax\nsubq $1,%rax\nmovq <24>(%rbp),%rdx\ntestq %rax,%rax\njs .L12\ncmpq %rdx,%rax\njge .L12\nmovq -40(%rbp),%rdx\nsubq $1,%rdx\nmovq <24>(%rbp),%rcx\ntestq %rdx,%rdx\njns .L13\njmp .L14\n.L12:\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\ncmpq %rcx,%rdx\njl .L20\n.L14:\nmovq %rcx,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq <16>(%rbp),%rcx\nsalq $3,%rdx\naddq %rcx,%rdx\nmovq (%rdx),%rdx\nmovq <16>(%rbp),%rcx\nsalq $3,%rax\naddq %rcx,%rax\nnegq %rdx\nmovq %rdx,(%rax)\n.L11:\n.LBE19:\n.LBE15:\n.LBE21:\n.LBE8:\n.LBB22:\naddq $1,%rbx\n.L2:\n.LBE22:\ncmpq %r13,%rbx\njl .L22\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB23:\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq -216(%rbp),%rcx\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -160(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE23:\n.LBE2:\nmovq -216(%rbp),%rax\naddq $200,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "res := []int{}\nfor _, num := range nums {\n\tn := num\n\tif n < 0 {\n\t\tn *= -1\n\t}\n\tif nums[n-1] < 0 {\n\t\tres = append(res, n)\n\t} else {\n\t\tnums[n-1] *= -1\n\t}\n}\nreturn res"}
{"src": ".LFB0:\nleaq -584(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L8\nmovl $584,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L8:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $536,%rsp\nmovq %rdi,-520(%rbp)\nmovq $234,-448(%rbp)\nmovq $15,-440(%rbp)\nmovq $4421,-432(%rbp)\nmovq $21,-424(%rbp)\nleaq -448(%rbp),%rcx\nmovq %rcx,-480(%rbp)\nmovq $2,-472(%rbp)\nmovq $2,-464(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nleaq <.LC14>(%rip),%rax\nmovl $70,%edx\nleaq -208(%rbp),%rcx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -224(%rbp)\npushq -232(%rbp)\npushq -240(%rbp)\nmovq %rax,%rdx\nmovq %rcx,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -208(%rbp),%rax\nmovq -200(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -192(%rbp),%rax\nmovq %rax,-400(%rbp)\n.LBB2:\nmovq $0,-496(%rbp)\nmovq $0,-488(%rbp)\n.LBB3:\n.LBB4:\n.LBB5:\nmovq -480(%rbp),%rax\nmovq -472(%rbp),%rdx\nmovq %rax,-384(%rbp)\nmovq %rdx,-376(%rbp)\nmovq -464(%rbp),%rax\nmovq %rax,-368(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,-528(%rbp)\nmovl $0,%ebx\n.LBE5:\njmp .L2\n.L7:\n.LBB6:\nnop\n.LBE6:\n.LBB7:\n.LBB8:\nmovq -376(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -384(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE8:\n.LBB9:\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\n.LBE9:\n.LBB10:\nmovq -488(%rbp),%rax\nmovq %rax,-504(%rbp)\nmovq -496(%rbp),%rax\nmovq %rax,-512(%rbp)\nmovq -512(%rbp),%rax\nmovq %rax,%rdi\ncall <go.leetcode.subtractProductAndSum>\nmovq %rax,-568(%rbp)\nleaq <go.leetcode..go.leetcode.para1281..d>(%rip),%rcx\nmovq %rcx,-560(%rbp)\nleaq <go.leetcode..go.leetcode.para1281..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-320(%rbp)\nmovq -320(%rbp),%rax\nmovq -512(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -320(%rbp),%rax\nmovq %rax,-552(%rbp)\nleaq <int..d>(%rip),%rdi\nmovq %rdi,-544(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-312(%rbp)\nmovq -312(%rbp),%rax\nmovq -568(%rbp),%rcx\nmovq %rcx,(%rax)\nmovq -312(%rbp),%rax\nmovq %rax,-536(%rbp)\nmovdqa -560(%rbp),%xmm0\nmovups %xmm0,-304(%rbp)\nmovdqa -544(%rbp),%xmm1\nmovups %xmm1,-288(%rbp)\nleaq -304(%rbp),%rax\nmovq %rax,-176(%rbp)\nmovq $2,-168(%rbp)\nmovq $2,-160(%rbp)\nleaq <.LC15>(%rip),%r14\nmovl $37,%r15d\nleaq -144(%rbp),%rax\nmovq %r14,%r8\nmovq %r15,%r9\nmovq %r14,%rsi\nmovq %r15,%rdi\nmovq %r8,%rcx\nmovq %rdi,%rdx\nsubq $8,%rsp\npushq -160(%rbp)\npushq -168(%rbp)\npushq -176(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,-352(%rbp)\nmovq %rdx,-344(%rbp)\nmovq -128(%rbp),%rax\nmovq %rax,-336(%rbp)\n.LBE10:\n.LBE7:\n.LBB12:\naddq $1,%rbx\njmp .L2\n.L3:\n.LBE12:\n.LBB13:\n.LBB11:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L2:\n.LBE11:\n.LBE13:\ncmpq -528(%rbp),%rbx\njl .L7\n.LBE4:\n.LBE3:\n.LBE2:\nmovq $0,-112(%rbp)\nmovq $0,-104(%rbp)\nmovq $0,-96(%rbp)\nleaq <.LC16>(%rip),%r12\nmovl $3,%r13d\nleaq -80(%rbp),%rax\nmovq %r12,%rsi\nmovq %r13,%rdi\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %rbx,%rdx\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rax,%rdi\ncall <fmt.Printf@PLT>\naddq $32,%rsp\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -64(%rbp),%rax\nmovq %rax,-256(%rbp)\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "qs := []question1281{\n\t{\n\t\tpara1281{234},\n\t\tans1281{15},\n\t},\n\t{\n\t\tpara1281{4421},\n\t\tans1281{21},\n\t},\n}\nfmt.Printf(\"STR\")\nfor _, q := range qs {\n\t_, p := q.ans1281, q.para1281\n\tfmt.Printf(\"STR\", p, subtractProductAndSum(p.n))\n}\nfmt.Printf(\"STR\")"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $104,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\nsubq $80,%rsp\nmovq %rdi,-72(%rbp)\nmovq %rsi,-80(%rbp)\nmovq %rdx,-88(%rbp)\nmovq $0,-24(%rbp)\nmovb $0,-25(%rbp)\n.LBB2:\npxor %xmm0,%xmm0\ncvtsi 2sdq-80(%rbp),%xmm0\nmovsd %xmm0,-40(%rbp)\npxor %xmm0,%xmm0\ncvtsi 2sdq-88(%rbp),%xmm0\nmovsd %xmm0,-48(%rbp)\nmovsd -48(%rbp),%xmm0\nmovapd %xmm0,%xmm1\naddsd %xmm0,%xmm1\nmovsd -40(%rbp),%xmm0\nsubsd %xmm1,%xmm0\nmovapd %xmm0,%xmm1\nmulsd -40(%rbp),%xmm1\nmovsd -40(%rbp),%xmm0\nsubsd -48(%rbp),%xmm0\nmovapd %xmm0,%xmm2\naddsd %xmm0,%xmm2\ndivsd %xmm2,%xmm1\nmovapd %xmm1,%xmm0\nmovsd %xmm0,-56(%rbp)\nmovsd -56(%rbp),%xmm0\ncvttsd 2siq%xmm0,%rax\nmovq %rax,-24(%rbp)\nmovq -56(%rbp),%rax\nmovq %rax,%xmm0\ncall <math.Floor@PLT>\nmovsd -56(%rbp),%xmm1\nsubsd %xmm0,%xmm1\nmovq %xmm1,%rax\nmovq %rax,%xmm0\ncall <math.Abs@PLT>\nmovsd <.LC17>(%rip),%xmm1\ncomisd %xmm0,%xmm1\nseta %al\nmovb %al,-25(%rbp)\nmovq -24(%rbp),%r12\nmovb -25(%rbp),%r13b\nmovq %r12,%rax\nmovq %r13,%rdx\n.LBE2:\naddq $80,%rsp\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "fp := float64(p)\nfa := float64(a)\nfb := (fp * (fp - 2.0*fa)) / (2.0 * (fp - fa))\nb = int(fb)\nvalid = math.Abs(fb-math.Floor(fb)) < 0.000001\nreturn"}
{"src": ".LFB0:\nleaq -2152(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L26\nmovl $2152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L26:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\nsubq $2128,%rsp\nmovq %rdi,%rax\nmovq %rsi,%rcx\nmovq %rcx,%rdx\nmovq %rax,-2144(%rbp)\nmovq %rdx,-2136(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\nmovq $-1,-24(%rbp)\nmovq $0,-32(%rbp)\nleaq -2128(%rbp),%rdx\nmovl $0,%eax\nmovl $256,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB3:\nmovq $0,-48(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovl $256,%ecx\nmovl $0,%eax\n.LBE6:\njmp .L2\n.L24:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\nmovq %rax,-48(%rbp)\n.LBB9:\ncmpq $0,-48(%rbp)\njs .L3\ncmpq $255,-48(%rbp)\njle .L20\n.L3:\nmovq -48(%rbp),%rax\nmovl $256,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\nmovq -48(%rbp),%rdx\nmovq $-1,-2128(%rbp,%rdx,8)\n.LBE9:\n.LBE8:\n.LBB10:\naddq $1,%rax\n.L2:\n.LBE10:\ncmpq %rcx,%rax\njl .L24\n.LBE5:\n.LBE4:\n.LBE3:\n.LBB11:\nmovq $0,-56(%rbp)\nmovl $0,-60(%rbp)\n.LBB12:\n.LBB13:\n.LBB14:\nmovq -2136(%rbp),%r12\nmovl $0,%ebx\n.LBE14:\njmp .L7\n.L25:\n.LBB15:\nnop\n.LBE15:\n.LBB16:\n.LBB17:\nmovq -2136(%rbp),%rax\ntestq %rbx,%rbx\njs .L8\ncmpq %rax,%rbx\njge .L8\nmovq -2144(%rbp),%rax\nmovq %rbx,%rdx\naddq %rdx,%rax\nmovzbl (%rax),%eax\nmovzbl %al,%eax\ncmpl $127,%eax\njle .L9\njmp .L22\n.L8:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9:\n.LBB18:\nleaq <1>(%rbx),%rdx\n.LBE18:\njmp .L11\n.L22:\n.LBB19:\nmovq -2144(%rbp),%rcx\nmovq -2136(%rbp),%rax\nmovq %rbx,%rdx\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <runtime.decoderune@PLT>\nmovq %rdx,%rcx\nmovq %rcx,%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovl %esi,%eax\nmovq %rdi,%rdx\n.L11:\n.LBE19:\n.LBE17:\n.LBB20:\nmovq %rbx,-56(%rbp)\nmovl %eax,-60(%rbp)\n.LBE20:\n.LBB21:\n.LBB22:\ncmpl $0,-60(%rbp)\njs .L12\ncmpl $255,-60(%rbp)\njg .L12\nmovl -60(%rbp),%eax\ncltq\nmovq -2128(%rbp,%rax,8),%rax\nmovq %rax,-72(%rbp)\nmovq -72(%rbp),%rax\ncmpq -24(%rbp),%rax\njg .L13\njmp .L14\n.L12:\nmovl -60(%rbp),%eax\ncltq\nmovl $256,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\n.LBB23:\nmovq -72(%rbp),%rax\nmovq %rax,-24(%rbp)\n.L14:\n.LBE23:\n.LBE22:\nmovq -56(%rbp),%rax\nsubq -24(%rbp),%rax\nmovq %rax,-80(%rbp)\n.LBB24:\nmovq -80(%rbp),%rax\ncmpq -32(%rbp),%rax\njle .L15\n.LBB25:\nmovq -80(%rbp),%rax\nmovq %rax,-32(%rbp)\n.L15:\n.LBE25:\n.LBE24:\ncmpl $0,-60(%rbp)\njs .L16\ncmpl $255,-60(%rbp)\njg .L16\nmovl -60(%rbp),%eax\ncltq\nmovq -56(%rbp),%rcx\nmovq %rcx,-2128(%rbp,%rax,8)\n.LBE21:\n.LBE16:\n.LBB27:\nmovq %rdx,%rbx\njmp .L7\n.L16:\n.LBE27:\n.LBB28:\n.LBB26:\nmovl -60(%rbp),%eax\ncltq\nmovl $256,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L7:\n.LBE26:\n.LBE28:\ncmpq %r12,%rbx\njl .L25\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB29:\nmovq -32(%rbp),%rax\nmovq %rax,-40(%rbp)\nmovq -40(%rbp),%rax\n.LBE29:\n.LBE2:\naddq $2128,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "start := -1\nlenMax := 0\ndict := [256]int{}\nfor i := range dict {\n\tdict[i] = -1\n}\nfor i, r := range s {\n\tif v := dict[r]; v > start {\n\t\tstart = v\n\t}\n\tlength := i - start\n\tif length > lenMax {\n\t\tlenMax = length\n\t}\n\tdict[r] = i\n}\nreturn lenMax"}
{"src": ".LFB1:\ncmpq %fs:112,%rsp\njnb .L76\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL1:\nret\n.L76:\npushq %rbp\nmovq %rsp,%rbp\npushq %r12\npushq %rbx\naddq $-128,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-128(%rbp)\nmovq %rdi,-120(%rbp)\nmovq %rdx,-136(%rbp)\nmovq %rcx,-144(%rbp)\nmovq $0,-24(%rbp)\n.LBB46:\nmovq -144(%rbp),%r12\nmovq -144(%rbp),%rbx\n.LBB47:\nmovq %rbx,%rdx\nmovq %r12,%rsi\nleaq <type...1main.skipListNode>(%rip),%rdi\ncall <runtime.makeslice@PLT>\nmovq %rax,-112(%rbp)\nmovq %r12,-104(%rbp)\nmovq %rbx,-96(%rbp)\nleaq <main..main.skipListNode..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,-80(%rbp)\nmovq %rdx,-72(%rbp)\nmovq -136(%rbp),%rax\nmovq %rax,-64(%rbp)\nmovq -144(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -96(%rbp),%rax\nmovq %rax,-32(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L73\n.LBB48:\nmovq -88(%rbp),%rax\nmovq -80(%rbp),%rcx\nmovq -72(%rbp),%rbx\nmovq %rcx,(%rax)\nmovq %rbx,<8>(%rax)\nmovq -64(%rbp),%rcx\nmovq -56(%rbp),%rbx\nmovq %rcx,<16>(%rax)\nmovq %rbx,<24>(%rax)\nmovq -48(%rbp),%rcx\nmovq -40(%rbp),%rbx\nmovq %rcx,<32>(%rax)\nmovq %rbx,<40>(%rax)\nmovq -32(%rbp),%rdx\nmovq %rdx,<48>(%rax)\n.LBE48:\njmp .L74\n.L73:\n.LBB49:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <main..main.skipListNode..d>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L74:\n.LBE49:\nmovq -88(%rbp),%rax\nmovq %rax,-24(%rbp)\nmovq -24(%rbp),%rax\n.LBE47:\n.LBE46:\nsubq $-128,%rsp\npopq %rbx\npopq %r12\npopq %rbp\nret", "tgt": "return &skipListNode{v: v, score: score, forwards: make([]*skipListNode, level, level), level: level}"}
{"src": ".LFB0:\nleaq -1160(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L48\nmovl $1160,%r10d\nmovl $48,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L48:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\npushq %rbx\nsubq $1128,%rsp\nmovq %rdi,-1144(%rbp)\nmovq $0,-656(%rbp)\nmovq $0,-648(%rbp)\nmovq $0,-640(%rbp)\n.LBB2:\nleaq -1136(%rbp),%rdx\nmovl $0,%eax\nmovl $26,%ecx\nmovq %rdx,%rdi\nrep stosq.LBB3:\nmovq $0,-704(%rbp)\nmovq $0,-696(%rbp)\n.LBB4:\n.LBB5:\n.LBB6:\nmovq <40>(%rbp),%rax\nmovq <48>(%rbp),%rdx\nmovq %rax,-624(%rbp)\nmovq %rdx,-616(%rbp)\nmovq <56>(%rbp),%rax\nmovq %rax,-608(%rbp)\nmovq -616(%rbp),%r12\nmovl $0,%ebx\n.LBE6:\njmp .L2\n.L44:\n.LBB7:\nnop\n.LBE7:\n.LBB8:\n.LBB9:\nmovq -616(%rbp),%rax\ntestq %rbx,%rbx\njs .L3\ncmpq %rax,%rbx\njge .L3\nmovq -624(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE9:\n.LBB10:\nmovq %rax,-704(%rbp)\nmovq %rdx,-696(%rbp)\n.LBE10:\n.LBB11:\nleaq -928(%rbp),%rax\nmovq -704(%rbp),%rcx\nmovq -696(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0916.counter>\n.LBB12:\nmovq $0,-56(%rbp)\nmovq $0,-64(%rbp)\n.LBB13:\n.LBB14:\n.LBB15:\nmovq -1136(%rbp),%rax\nmovq -1128(%rbp),%rdx\nmovq %rax,-592(%rbp)\nmovq %rdx,-584(%rbp)\nmovq -1120(%rbp),%rax\nmovq -1112(%rbp),%rdx\nmovq %rax,-576(%rbp)\nmovq %rdx,-568(%rbp)\nmovq -1104(%rbp),%rax\nmovq -1096(%rbp),%rdx\nmovq %rax,-560(%rbp)\nmovq %rdx,-552(%rbp)\nmovq -1088(%rbp),%rax\nmovq -1080(%rbp),%rdx\nmovq %rax,-544(%rbp)\nmovq %rdx,-536(%rbp)\nmovq -1072(%rbp),%rax\nmovq -1064(%rbp),%rdx\nmovq %rax,-528(%rbp)\nmovq %rdx,-520(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-512(%rbp)\nmovq %rdx,-504(%rbp)\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,-496(%rbp)\nmovq %rdx,-488(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-480(%rbp)\nmovq %rdx,-472(%rbp)\nmovq -1008(%rbp),%rax\nmovq -1000(%rbp),%rdx\nmovq %rax,-464(%rbp)\nmovq %rdx,-456(%rbp)\nmovq -992(%rbp),%rax\nmovq -984(%rbp),%rdx\nmovq %rax,-448(%rbp)\nmovq %rdx,-440(%rbp)\nmovq -976(%rbp),%rax\nmovq -968(%rbp),%rdx\nmovq %rax,-432(%rbp)\nmovq %rdx,-424(%rbp)\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,-416(%rbp)\nmovq %rdx,-408(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-400(%rbp)\nmovq %rdx,-392(%rbp)\nmovl $26,%esi\nmovl $0,%eax\n.LBE15:\njmp .L4\n.L3:\n.LBE14:\n.LBE13:\n.LBE12:\n.LBE11:\n.LBB30:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L43:\n.LBE30:\n.LBB31:\n.LBB29:\n.LBB28:\n.LBB27:\n.LBB16:\nnop\n.LBE16:\n.LBB17:\n.LBB18:\ntestq %rax,%rax\njs .L5\ncmpq $25,%rax\njg .L5\nmovq -592(%rbp,%rax,8),%rdx\n.LBE18:\n.LBB19:\nmovq %rax,-56(%rbp)\nmovq %rdx,-64(%rbp)\n.LBE19:\n.LBB20:\n.LBB21:\ncmpq $0,-56(%rbp)\njns .L6\njmp .L7\n.L5:\n.LBE21:\n.LBE20:\n.LBB24:\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE24:\n.LBB25:\n.LBB23:\ncmpq $25,-56(%rbp)\njg .L7\nmovq -56(%rbp),%rdx\nmovq -928(%rbp,%rdx,8),%rdx\ncmpq %rdx,-64(%rbp)\njl .L8\njmp .L9\n.L7:\nmovq -56(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBB22:\ncmpq $0,-56(%rbp)\njs .L10\ncmpq $25,-56(%rbp)\njle .L37\n.L10:\nmovq -56(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L37:\ncmpq $0,-56(%rbp)\njs .L12\ncmpq $25,-56(%rbp)\njg .L12\nmovq -56(%rbp),%rdx\nmovq -928(%rbp,%rdx,8),%rcx\nmovq -56(%rbp),%rdx\nmovq %rcx,-1136(%rbp,%rdx,8)\njmp .L9\n.L12:\nmovq -56(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L9:\n.LBE22:\n.LBE23:\n.LBE25:\n.LBE17:\n.LBB26:\naddq $1,%rax\n.L4:\n.LBE26:\ncmpq %rsi,%rax\njl .L43\n.LBE27:\n.LBE28:\n.LBE29:\n.LBE31:\n.LBE8:\n.LBB32:\naddq $1,%rbx\n.L2:\n.LBE32:\ncmpq %r12,%rbx\njl .L44\n.LBE5:\n.LBE4:\n.LBE3:\nleaq <type...60x.7string>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-376(%rbp)\nmovq -376(%rbp),%rax\nmovq %rax,-688(%rbp)\nmovq $0,-680(%rbp)\nmovq $0,-672(%rbp)\n.L17:\n.LBB33:\nmovq $0,-720(%rbp)\nmovq $0,-712(%rbp)\n.LBB34:\n.LBB35:\n.LBB36:\nmovq <16>(%rbp),%rax\nmovq <24>(%rbp),%rdx\nmovq %rax,-368(%rbp)\nmovq %rdx,-360(%rbp)\nmovq <32>(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq -360(%rbp),%r13\nmovl $0,%ebx\n.LBE36:\njmp .L18\n.L47:\n.LBB37:\nnop\n.LBE37:\n.LBB38:\n.LBB39:\nmovq -360(%rbp),%rax\ntestq %rbx,%rbx\njs .L19\ncmpq %rax,%rbx\njge .L19\nmovq -368(%rbp),%rax\nmovq %rbx,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq <8>(%rax),%rdx\nmovq (%rax),%rax\n.LBE39:\n.LBB40:\nmovq %rax,-720(%rbp)\nmovq %rdx,-712(%rbp)\n.LBE40:\n.LBB41:\nleaq -928(%rbp),%rax\nmovq -720(%rbp),%rcx\nmovq -712(%rbp),%rdx\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <go.leetcode0916.counter>\n.LBB42:\nmovq $0,-40(%rbp)\nmovq $0,-48(%rbp)\n.LBB43:\n.LBB44:\n.LBB45:\nmovq -1136(%rbp),%rax\nmovq -1128(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -1120(%rbp),%rax\nmovq -1112(%rbp),%rdx\nmovq %rax,-320(%rbp)\nmovq %rdx,-312(%rbp)\nmovq -1104(%rbp),%rax\nmovq -1096(%rbp),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq -1088(%rbp),%rax\nmovq -1080(%rbp),%rdx\nmovq %rax,-288(%rbp)\nmovq %rdx,-280(%rbp)\nmovq -1072(%rbp),%rax\nmovq -1064(%rbp),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq -1056(%rbp),%rax\nmovq -1048(%rbp),%rdx\nmovq %rax,-256(%rbp)\nmovq %rdx,-248(%rbp)\nmovq -1040(%rbp),%rax\nmovq -1032(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -1024(%rbp),%rax\nmovq -1016(%rbp),%rdx\nmovq %rax,-224(%rbp)\nmovq %rdx,-216(%rbp)\nmovq -1008(%rbp),%rax\nmovq -1000(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -992(%rbp),%rax\nmovq -984(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -976(%rbp),%rax\nmovq -968(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -960(%rbp),%rax\nmovq -952(%rbp),%rdx\nmovq %rax,-160(%rbp)\nmovq %rdx,-152(%rbp)\nmovq -944(%rbp),%rax\nmovq -936(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovl $26,%ecx\nmovl $0,%eax\n.LBE45:\njmp .L20\n.L19:\n.LBE44:\n.LBE43:\n.LBE42:\n.LBE41:\n.LBB70:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L46:\n.LBE70:\n.LBB71:\n.LBB64:\n.LBB62:\n.LBB60:\n.LBB46:\nnop\n.LBE46:\n.LBB47:\n.LBB48:\ntestq %rax,%rax\njs .L21\ncmpq $25,%rax\njg .L21\nmovq -336(%rbp,%rax,8),%rdx\n.LBE48:\n.LBB49:\nmovq %rax,-40(%rbp)\nmovq %rdx,-48(%rbp)\n.LBE49:\n.LBB50:\n.LBB51:\ncmpq $0,-40(%rbp)\njns .L22\njmp .L23\n.L21:\n.LBE51:\n.LBE50:\n.LBB55:\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L22:\n.LBE55:\n.LBB56:\n.LBB53:\ncmpq $25,-40(%rbp)\njg .L23\nmovq -40(%rbp),%rdx\nmovq -928(%rbp,%rdx,8),%rdx\ncmpq %rdx,-48(%rbp)\njl .L45\njmp .L40\n.L23:\nmovq -40(%rbp),%rax\nmovl $26,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L40:\n.LBE53:\n.LBE56:\n.LBE47:\n.LBB58:\naddq $1,%rax\n.L20:\n.LBE58:\ncmpq %rcx,%rax\njl .L46\n.LBE60:\n.LBE62:\n.LBE64:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -120(%rbp),%r12\nleaq <1>(%r12),%rax\nmovq -112(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rcx\ncmpq %rcx,%rsi\njbe .L29\n.LBB65:\nmovq -128(%rbp),%rsi\nleaq -96(%rbp),%rdi\nmovq %rax,%r9\nmovq %rdx,%r8\nmovq %r12,%rcx\nmovq %rsi,%rdx\nleaq <string..d>(%rip),%rsi\ncall <runtime.growslice@PLT>\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,-688(%rbp)\nmovq %rdx,-680(%rbp)\nmovq -80(%rbp),%rax\nmovq %rax,-672(%rbp)\n.LBE65:\njmp .L30\n.L29:\n.LBB66:\nmovq -128(%rbp),%rcx\nmovq -112(%rbp),%rdx\nmovq %rcx,-688(%rbp)\nmovq %rax,-680(%rbp)\nmovq %rdx,-672(%rbp)\n.L30:\n.LBE66:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-128(%rbp)\nmovq %rdx,-120(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq -128(%rbp),%rax\nmovq %r12,%rdx\nsalq $4,%rdx\naddq %rdx,%rax\nmovq -712(%rbp),%rdx\nmovq %rdx,<8>(%rax)\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\njne .L31\n.LBB67:\nmovq -720(%rbp),%rdx\nmovq %rdx,(%rax)\njmp .L33\n.L31:\n.LBE67:\n.LBB68:\nmovq -720(%rbp),%rdx\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <runtime.gcWriteBarrier@PLT>\njmp .L33\n.L45:\n.LBE68:\n.LBB69:\n.LBB63:\n.LBB61:\n.LBB59:\n.LBB57:\n.LBB54:\n.LBB52:\nnop\n.L33:\n.LBE52:\n.LBE54:\n.LBE57:\n.LBE59:\n.LBE61:\n.LBE63:\n.LBE69:\n.LBE71:\n.LBE38:\n.LBB72:\naddq $1,%rbx\n.L18:\n.LBE72:\ncmpq %r13,%rbx\njl .L47\n.LBE35:\n.LBE34:\n.LBE33:\n.LBB73:\nmovq -688(%rbp),%rax\nmovq -680(%rbp),%rdx\nmovq %rax,-656(%rbp)\nmovq %rdx,-648(%rbp)\nmovq -672(%rbp),%rax\nmovq %rax,-640(%rbp)\nmovq -1144(%rbp),%rcx\nmovq -656(%rbp),%rax\nmovq -648(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -640(%rbp),%rax\nmovq %rax,<16>(%rcx)\n.LBE73:\n.LBE2:\nmovq -1144(%rbp),%rax\naddq $1128,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %rbp\nret", "tgt": "m := [26]int{}\nfor _, b := range B {\n\tcount := counter(b)\n\tfor i, c := range m {\n\t\tif count[i] > c {\n\t\t\tm[i] = count[i]\n\t\t}\n\t}\n}\nres := []string{}\nfor _, a := range A {\n\tcount := counter(a)\n\tfor i, c := range m {\n\t\tif count[i] > c {\n\t\t\tcontinueL\n\t\t}\n\t}\n\tres = append(res, a)\n}\nreturn res"}
{"src": ".LFB0:\nleaq -312(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L28\nmovl $312,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L28:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $264,%rsp\nmovq %rsi,%rax\nmovq %rdi,%r8\nmovq %r8,%rsi\nmovq %r9,%rdi\nmovq %rax,%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq %rdx,-288(%rbp)\nmovq %rcx,-280(%rbp)\nmovq $0,-176(%rbp)\nmovq $0,-168(%rbp)\n.LBB2:\nmovq $0,-56(%rbp)\nmovq $0,-64(%rbp)\nmovq $0,-256(%rbp)\nmovq $0,-248(%rbp)\nmovq $0,-240(%rbp)\nmovq $0,-232(%rbp)\nmovq $0,-224(%rbp)\nmovq $0,-216(%rbp)\nmovq $0,-208(%rbp)\nmovq $0,-200(%rbp)\nmovq $0,-192(%rbp)\nmovq $0,-184(%rbp)\n.LBB3:\nmovq $0,-72(%rbp)\n.LBB4:\njmp .L2\n.L27:\n.LBB5:\nnop\n.LBE5:\n.LBB6:\nmovq -264(%rbp),%rax\ncmpq $0,-72(%rbp)\njs .L3\ncmpq %rax,-72(%rbp)\njge .L3\nmovq -272(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nsubl $48,%eax\nmovzbl %al,%eax\nmovq %rax,-80(%rbp)\nmovq -280(%rbp),%rax\ncmpq $0,-72(%rbp)\njns .L4\njmp .L5\n.L3:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L4:\ncmpq %rax,-72(%rbp)\njge .L5\nmovq -288(%rbp),%rdx\nmovq -72(%rbp),%rax\naddq %rdx,%rax\nmovzbl (%rax),%eax\nsubl $48,%eax\nmovzbl %al,%eax\nmovq %rax,-88(%rbp)\n.LBB7:\nmovq -80(%rbp),%rax\ncmpq -88(%rbp),%rax\nje .L6\njmp .L25\n.L5:\n.LBE7:\nmovq -72(%rbp),%rdx\nmovq %rax,%rsi\nmovq %rdx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBB14:\n.LBB8:\naddq $1,-56(%rbp)\n.LBE8:\njmp .L8\n.L25:\n.LBB9:\n.LBB10:\ncmpq $0,-80(%rbp)\njs .L9\ncmpq $9,-80(%rbp)\njg .L9\nmovq -80(%rbp),%rax\nmovq -256(%rbp,%rax,8),%rax\ntestq %rax,%rax\njs .L10\njmp .L11\n.L9:\nmovq -80(%rbp),%rax\nmovl $10,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L10:\n.LBB11:\naddq $1,-64(%rbp)\n.L11:\n.LBE11:\n.LBE10:\n.LBB12:\ncmpq $0,-88(%rbp)\njs .L12\ncmpq $9,-88(%rbp)\njg .L12\nmovq -88(%rbp),%rax\nmovq -256(%rbp,%rax,8),%rax\ntestq %rax,%rax\njg .L13\njmp .L14\n.L12:\nmovq -88(%rbp),%rax\nmovl $10,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L13:\n.LBB13:\naddq $1,-64(%rbp)\n.L14:\n.LBE13:\n.LBE12:\ncmpq $0,-80(%rbp)\njs .L15\ncmpq $9,-80(%rbp)\njg .L15\ncmpq $0,-80(%rbp)\njns .L16\njmp .L17\n.L15:\nmovq -80(%rbp),%rax\nmovl $10,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L16:\ncmpq $9,-80(%rbp)\njg .L17\nmovq -80(%rbp),%rax\nmovq -256(%rbp,%rax,8),%rax\nleaq <1>(%rax),%rdx\nmovq -80(%rbp),%rax\nmovq %rdx,-256(%rbp,%rax,8)\ncmpq $0,-88(%rbp)\njns .L18\njmp .L19\n.L17:\nmovq -80(%rbp),%rax\nmovl $10,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L18:\ncmpq $9,-88(%rbp)\njg .L19\ncmpq $0,-88(%rbp)\njns .L20\njmp .L21\n.L19:\nmovq -88(%rbp),%rax\nmovl $10,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L20:\ncmpq $9,-88(%rbp)\njg .L21\nmovq -88(%rbp),%rax\nmovq -256(%rbp,%rax,8),%rax\nleaq -1(%rax),%rdx\nmovq -88(%rbp),%rax\nmovq %rdx,-256(%rbp,%rax,8)\njmp .L8\n.L21:\nmovq -88(%rbp),%rax\nmovl $10,%esi\nmovq %rax,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L8:\n.LBE9:\n.LBE14:\n.LBE6:\n.LBB15:\naddq $1,-72(%rbp)\n.L2:\n.LBE15:\nmovq -264(%rbp),%rax\ncmpq %rax,-72(%rbp)\njl .L27\n.LBE4:\n.LBE3:\n.LBB16:\nleaq <int..d>(%rip),%rax\nmovq %rax,-304(%rbp)\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-160(%rbp)\nmovq -160(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -160(%rbp),%rax\nmovq %rax,-296(%rbp)\nleaq <int..d>(%rip),%r14\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-152(%rbp)\nmovq -152(%rbp),%rax\nmovq -64(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -152(%rbp),%rax\nmovq %rax,%r15\nmovdqa -304(%rbp),%xmm0\nmovups %xmm0,-144(%rbp)\nmovq %r14,-128(%rbp)\nmovq %r15,-120(%rbp)\nleaq -144(%rbp),%rax\nmovq %rax,-112(%rbp)\nmovq $2,-104(%rbp)\nmovq $2,-96(%rbp)\nleaq <.LC2>(%rip),%r12\nmovl $6,%r13d\nmovq %r12,%rcx\nmovq %r13,%rbx\nmovq %r12,%rax\nmovq %r13,%rdx\nmovq %rdx,%rax\nsubq $8,%rsp\npushq -96(%rbp)\npushq -104(%rbp)\npushq -112(%rbp)\nmovq %rcx,%rdi\nmovq %rax,%rsi\ncall <fmt.Sprintf@PLT>\naddq $32,%rsp\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -176(%rbp),%rax\nmovq -168(%rbp),%rdx\n.LBE16:\n.LBE2:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "bulls, cows := 0, 0\nnums := [10]int{}\nfor i := 0; i < len(secret); i++ {\n\ts, g := int(secret[i]-'0'), int(guess[i]-'0')\n\tif s == g {\n\t\tbulls++\n\t} else {\n\t\tif nums[s] < 0 {\n\t\t\tcows++\n\t\t}\n\t\tif nums[g] > 0 {\n\t\t\tcows++\n\t\t}\n\t\tnums[s]++\n\t\tnums[g]--\n\t}\n}\nreturn fmt.Sprintf(\"STR\", bulls, cows)"}
{"src": ".LFB9:\nleaq -440(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L130\nmovl $440,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL9:\nret\n.L130:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $392,%rsp\nmovq %rdi,-344(%rbp)\nmovq -344(%rbp),%rax\nmovq %rax,%rdi\ncall <testing.T.Parallel@PLT>\n.LBB76:\nmovq $0,-336(%rbp)\nmovq $0,-328(%rbp)\nmovq $0,-320(%rbp)\n.LBB77:\n.LBB78:\n.LBB79:\nmovq <go.bytepool.mathTestData>(%rip),%rax\nmovq <8+go.bytepool.mathTestData>(%rip),%rdx\nmovq %rax,-272(%rbp)\nmovq %rdx,-264(%rbp)\nmovq <16+go.bytepool.mathTestData>(%rip),%rax\nmovq %rax,-256(%rbp)\nmovq -264(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovl $0,%r12d\n.LBE79:\njmp .L119\n.L129:\n.LBB80:\nnop\n.LBE80:\n.LBB81:\n.LBB82:\nmovq -264(%rbp),%rax\ntestq %r12,%r12\njs .L120\ncmpq %rax,%r12\njge .L120\nmovq -272(%rbp),%rcx\nmovq %r12,%rdx\nmovq %rdx,%rax\naddq %rax,%rax\naddq %rdx,%rax\nsalq $3,%rax\naddq %rax,%rcx\nmovq (%rcx),%rax\nmovq <8>(%rcx),%rdx\nmovq %rax,-304(%rbp)\nmovq %rdx,-296(%rbp)\nmovq <16>(%rcx),%rax\nmovq %rax,-288(%rbp)\n.LBE82:\n.LBB83:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -288(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -240(%rbp),%rax\nmovq -232(%rbp),%rdx\nmovq %rax,-336(%rbp)\nmovq %rdx,-328(%rbp)\nmovq -224(%rbp),%rax\nmovq %rax,-320(%rbp)\n.LBE83:\n.LBB84:\n.LBB85:\n.LBB86:\nmovl -336(%rbp),%eax\nmovl %eax,%edi\ncall <go.bytepool.log2Floor>\nmovq %rax,%rdx\nmovq -328(%rbp),%rax\ncmpq %rax,%rdx\nsetne %dl\nmovl %edx,%eax\nxorl $1,%eax\ntestb %al,%al\njne .L121\njmp .L122\n.L120:\n.LBE86:\n.LBE85:\n.LBE84:\n.LBB93:\nmovq %rax,%rsi\nmovq %r12,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L121:\n.LBE93:\n.LBB94:\n.LBB92:\n.LBB88:\n.LBB87:\nmovl -336(%rbp),%eax\nmovl %eax,%edi\ncall <go.bytepool.log2Ceil>\nmovq %rax,%rdx\nmovq -320(%rbp),%rax\ncmpq %rax,%rdx\nsetne %dl\n.L122:\n.LBE87:\n.LBE88:\ntestb %dl,%dl\nje .L123\n.LBB89:\nmovl -336(%rbp),%eax\nmovl %eax,%edi\ncall <go.bytepool.log2Floor>\nmovq %rax,%rbx\nmovl -336(%rbp),%eax\nmovl %eax,%edi\ncall <go.bytepool.log2Ceil>\nmovq %rax,%r13\nleaq <uint32..d>(%rip),%rax\nmovq %rax,-432(%rbp)\nleaq <uint32..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-208(%rbp)\nmovq -208(%rbp),%rdx\nmovl -336(%rbp),%eax\nmovl %eax,(%rdx)\nmovq -208(%rbp),%rax\nmovq %rax,-424(%rbp)\nleaq <uint..d>(%rip),%rax\nmovq %rax,-416(%rbp)\nleaq <uint..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-200(%rbp)\nmovq -200(%rbp),%rdx\nmovq -328(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -200(%rbp),%rax\nmovq %rax,-408(%rbp)\nleaq <uint..d>(%rip),%rax\nmovq %rax,-400(%rbp)\nleaq <uint..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-192(%rbp)\nmovq -192(%rbp),%rdx\nmovq -320(%rbp),%rax\nmovq %rax,(%rdx)\nmovq -192(%rbp),%rax\nmovq %rax,-392(%rbp)\nleaq <uint..d>(%rip),%rax\nmovq %rax,-384(%rbp)\nleaq <uint..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-184(%rbp)\nmovq -184(%rbp),%rax\nmovq %rbx,(%rax)\nmovq -184(%rbp),%rax\nmovq %rax,-376(%rbp)\nleaq <uint..d>(%rip),%rax\nmovq %rax,-368(%rbp)\nleaq <uint..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-176(%rbp)\nmovq -176(%rbp),%rax\nmovq %r13,(%rax)\nmovq -176(%rbp),%rax\nmovq %rax,-360(%rbp)\nleaq <type...65x.7interface.4.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-168(%rbp)\nmovdqa -432(%rbp),%xmm0\nmovups %xmm0,-160(%rbp)\nmovdqa -416(%rbp),%xmm1\nmovups %xmm1,-144(%rbp)\nmovdqa -400(%rbp),%xmm2\nmovups %xmm2,-128(%rbp)\nmovdqa -384(%rbp),%xmm3\nmovups %xmm3,-112(%rbp)\nmovdqa -368(%rbp),%xmm4\nmovups %xmm4,-96(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L124\n.LBB90:\nmovq -168(%rbp),%rcx\nmovq -160(%rbp),%rax\nmovq -152(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\nmovq -144(%rbp),%rax\nmovq -136(%rbp),%rdx\nmovq %rax,<16>(%rcx)\nmovq %rdx,<24>(%rcx)\nmovq -128(%rbp),%rax\nmovq -120(%rbp),%rdx\nmovq %rax,<32>(%rcx)\nmovq %rdx,<40>(%rcx)\nmovq -112(%rbp),%rax\nmovq -104(%rbp),%rdx\nmovq %rax,<48>(%rcx)\nmovq %rdx,<56>(%rcx)\nmovq -96(%rbp),%rax\nmovq -88(%rbp),%rdx\nmovq %rax,<64>(%rcx)\nmovq %rdx,<72>(%rcx)\n.LBE90:\njmp .L125\n.L124:\n.LBB91:\nmovq -168(%rbp),%rcx\nleaq -160(%rbp),%rax\nmovq %rax,%rdx\nmovq %rcx,%rsi\nleaq <type...65x.7interface.4.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L125:\n.LBE91:\nmovq -168(%rbp),%rax\nmovq %rax,-80(%rbp)\nmovq $5,-72(%rbp)\nmovq $5,-64(%rbp)\nleaq <.LC58>(%rip),%r14\nmovl $68,%r15d\nmovq %r14,%rcx\nmovq %r15,%rbx\nmovq %r14,%rax\nmovq %r15,%rdx\nmovq -344(%rbp),%rax\nsubq $8,%rsp\npushq -64(%rbp)\npushq -72(%rbp)\npushq -80(%rbp)\nmovq %rcx,%rsi\nmovq %rax,%rdi\ncall <testing.T.Errorf..stub@PLT>\naddq $32,%rsp\n.L123:\n.LBE89:\n.LBE92:\n.LBE94:\n.LBE81:\n.LBB95:\naddq $1,%r12\n.L119:\n.LBE95:\ncmpq -352(%rbp),%r12\njl .L129\n.LBE78:\n.LBE77:\n.LBE76:\nleaq -40(%rbp),%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "t.Parallel()\nfor _, l := range mathTestData {\n\tif log2Floor(l.n) != l.f || log2Ceil(l.n) != l.c {\n\t\tt.Errorf(\"STR\",\n\t\t\tl.n, l.f, l.c, log2Floor(l.n), log2Ceil(l.n))\n\t}\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L3\nmovl $120,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L3:\npushq %rbp\nmovq %rsp,%rbp\nsubq $112,%rsp\nmovq %rdi,-104(%rbp)\nmovq $0,-48(%rbp)\nmovq $0,-40(%rbp)\n.LBB2:\nmovq $0,-96(%rbp)\nmovq $0,-88(%rbp)\nmovq $0,-80(%rbp)\nmovq $0,-72(%rbp)\nmovq $0,-56(%rbp)\nleaq <go.leetcode0606.tree2str..func1>(%rip),%rsi\nleaq -96(%rbp),%rcx\nleaq -56(%rbp),%rdx\nmovq $0,-32(%rbp)\nmovq $0,-24(%rbp)\nmovq $0,-16(%rbp)\nleaq -32(%rbp),%rax\nmovq %rax,-8(%rbp)\nmovq -8(%rbp),%rax\nmovq %rsi,(%rax)\nmovq %rcx,<8>(%rax)\nmovq %rdx,<16>(%rax)\nmovq -8(%rbp),%rax\nmovq %rax,-56(%rbp)\nmovq -56(%rbp),%rdx\nmovq -56(%rbp),%rax\nmovq (%rax),%rax\nmovq %rax,%rcx\nmovq -104(%rbp),%rax\nmovq %rdx,%r10\nmovq %rax,%rdi\ncall *%rcx\n.LVL1:\n.LBB3:\nleaq -96(%rbp),%rax\nmovq %rax,%rdi\ncall <strings.Builder.String@PLT>\nmovq %rax,-48(%rbp)\nmovq %rdx,-40(%rbp)\nmovq -48(%rbp),%rax\nmovq -40(%rbp),%rdx\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "bs := strings.Builder{}\nvar dfs func(*TreeNode)\ndfs = func(node *TreeNode) {\n\tif node == nil {\n\t\treturn\n\t}\n\tbs.WriteString(strconv.Itoa(node.Val))\n\tif node.Left == nil && node.Right == nil {\n\t\treturn\n\t}\n\tbs.WriteByte('(')\n\tif node.Left != nil {\n\t\tdfs(node.Left)\n\t}\n\tbs.WriteByte(')')\n\tif node.Right != nil {\n\t\tbs.WriteByte('(')\n\t\tdfs(node.Right)\n\t\tbs.WriteByte(')')\n\t}\n}\ndfs(t)\nreturn bs.String()"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L4\nmovl $40,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L4:\npushq %rbp\nmovq %rsp,%rbp\nsubq $32,%rsp\nmovq %rdi,-24(%rbp)\nmovb $0,-1(%rbp)\n.LBB2:\n.LBB3:\n.LBB4:\ncmpq $0,-24(%rbp)\nsete %al\nmovl %eax,%edx\nxorl $1,%edx\ntestb %dl,%dl\nje .L2\n.LBB5:\nmovq -24(%rbp),%rax\nmovq <16>(%rax),%rdx\nmovq -24(%rbp),%rax\nmovq <8>(%rax),%rax\nmovq %rdx,%rsi\nmovq %rax,%rdi\ncall <go.problem101.isSame>\n.L2:\n.LBE5:\n.LBE4:\nmovb %al,-1(%rbp)\nmovzbl -1(%rbp),%eax\n.LBE3:\n.LBE2:\nleave\nret", "tgt": "return nil == root || isSame(root.Left, root.Right)"}
{"src": ".LFB0:\nleaq -744(%rsp),%r11\ncmpq %fs:112,%r11\njnb .L16\nmovl $744,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L16:\npushq %rbp\nmovq %rsp,%rbp\npushq %r15\npushq %r14\npushq %r13\npushq %r12\npushq %rbx\nsubq $696,%rsp\nmovq %rdi,-680(%rbp)\nleaq <type...65x.7struct.4.go.Solution.name.0string.2.go.Solution.flowerbed.0.6.7int.2.go.Solution.n.0int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-640(%rbp)\nleaq <.LC26>(%rip),%rbx\nmovq %rbx,-736(%rbp)\nmovq $8,-728(%rbp)\nmovdqa -736(%rbp),%xmm0\nmovups %xmm0,-592(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-632(%rbp)\nmovq -632(%rbp),%rax\nmovq $1,(%rax)\nmovq $0,<8>(%rax)\nmovq $0,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -632(%rbp),%rax\nmovq %rax,-576(%rbp)\nmovq $5,-568(%rbp)\nmovq $5,-560(%rbp)\nmovq $1,-552(%rbp)\nmovb $1,-544(%rbp)\nmovq %rbx,-720(%rbp)\nmovq $8,-712(%rbp)\nmovdqa -720(%rbp),%xmm1\nmovups %xmm1,-536(%rbp)\nleaq <type...65x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-624(%rbp)\nmovq -624(%rbp),%rax\nmovq $1,(%rax)\nmovq $0,<8>(%rax)\nmovq $0,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq -624(%rbp),%rax\nmovq %rax,-520(%rbp)\nmovq $5,-512(%rbp)\nmovq $5,-504(%rbp)\nmovq $2,-496(%rbp)\nmovb $0,-488(%rbp)\nmovq %rbx,-704(%rbp)\nmovq $8,-696(%rbp)\nmovdqa -704(%rbp),%xmm2\nmovups %xmm2,-480(%rbp)\nleaq <type...64x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-616(%rbp)\nmovq -616(%rbp),%rax\nmovq $1,(%rax)\nmovq $0,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq -616(%rbp),%rax\nmovq %rax,-464(%rbp)\nmovq $4,-456(%rbp)\nmovq $4,-448(%rbp)\nmovq $0,-440(%rbp)\nmovb $1,-432(%rbp)\nleaq <.LC26>(%rip),%r14\nmovl $8,%r15d\nmovq %r14,-424(%rbp)\nmovq %r15,-416(%rbp)\nleaq <type...61x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-608(%rbp)\nmovq -608(%rbp),%rax\nmovq $0,(%rax)\nmovq -608(%rbp),%rax\nmovq %rax,-408(%rbp)\nmovq $1,-400(%rbp)\nmovq $1,-392(%rbp)\nmovq $1,-384(%rbp)\nmovb $1,-376(%rbp)\nleaq <.LC26>(%rip),%r12\nmovl $8,%r13d\nmovq %r12,-368(%rbp)\nmovq %r13,-360(%rbp)\nleaq <type...67x.7int>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-600(%rbp)\nmovq -600(%rbp),%rax\nmovq $1,(%rax)\nmovq $0,<8>(%rax)\nmovq $1,<16>(%rax)\nmovq $0,<24>(%rax)\nmovq $1,<32>(%rax)\nmovq $0,<40>(%rax)\nmovq $1,<48>(%rax)\nmovq -600(%rbp),%rax\nmovq %rax,-352(%rbp)\nmovq $7,-344(%rbp)\nmovq $7,-336(%rbp)\nmovq $1,-328(%rbp)\nmovb $0,-320(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L2\n.LBB2:\nmovq -640(%rbp),%rax\nmovq %rax,%rdi\nleaq -592(%rbp),%rax\nmovl $35,%edx\nmovq %rax,%rsi\nmovq %rdx,%rcx\nrep movsq.LBE2:\njmp .L3\n.L2:\n.LBB3:\nmovq -640(%rbp),%rax\nleaq -592(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type...65x.7struct.4.go.Solution.name.0string.2.go.Solution.flowerbed.0.6.7int.2.go.Solution.n.0int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L3:\n.LBE3:\nmovq -640(%rbp),%rax\nmovq %rax,-672(%rbp)\nmovq $5,-664(%rbp)\nmovq $5,-656(%rbp)\n.LBB4:\nmovq $0,-56(%rbp)\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.flowerbed.0.6.7int.2.go.Solution.n.0int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-64(%rbp)\n.LBB5:\n.LBB6:\n.LBB7:\nmovq -672(%rbp),%rax\nmovq -664(%rbp),%rdx\nmovq %rax,-240(%rbp)\nmovq %rdx,-232(%rbp)\nmovq -656(%rbp),%rax\nmovq %rax,-224(%rbp)\nmovq -232(%rbp),%r13\nmovl $0,%ebx\n.LBE7:\njmp .L4\n.L15:\n.LBB8:\nnop\n.LBE8:\n.LBB9:\n.LBB10:\nmovq -232(%rbp),%rax\ntestq %rbx,%rbx\njs .L5\ncmpq %rax,%rbx\njge .L5\nmovq -240(%rbp),%rdx\nmovq %rbx,%rcx\nmovq %rcx,%rax\nsalq $3,%rax\nsubq %rcx,%rax\nsalq $3,%rax\naddq %rdx,%rax\nmovq (%rax),%rsi\nmovq <8>(%rax),%rdi\nmovq %rsi,-304(%rbp)\nmovq %rdi,-296(%rbp)\nmovq <16>(%rax),%rsi\nmovq <24>(%rax),%rdi\nmovq %rsi,-288(%rbp)\nmovq %rdi,-280(%rbp)\nmovq <32>(%rax),%rsi\nmovq <40>(%rax),%rdi\nmovq %rsi,-272(%rbp)\nmovq %rdi,-264(%rbp)\nmovq <48>(%rax),%rax\nmovq %rax,-256(%rbp)\n.LBE10:\n.LBB11:\nmovq -304(%rbp),%rax\nmovq -296(%rbp),%rdx\nmovq %rax,-208(%rbp)\nmovq %rdx,-200(%rbp)\nmovq -288(%rbp),%rax\nmovq -280(%rbp),%rdx\nmovq %rax,-192(%rbp)\nmovq %rdx,-184(%rbp)\nmovq -272(%rbp),%rax\nmovq -264(%rbp),%rdx\nmovq %rax,-176(%rbp)\nmovq %rdx,-168(%rbp)\nmovq -256(%rbp),%rax\nmovq %rax,-160(%rbp)\nmovq %rbx,-56(%rbp)\nmovq -64(%rbp),%rax\nleaq <runtime.writeBarrier>(%rip),%rdx\nmovl (%rdx),%edx\ntestl %edx,%edx\nje .L6\njmp .L13\n.L5:\n.LBE11:\n.LBB14:\nmovq %rax,%rsi\nmovq %rbx,%rdi\ncall <runtime.goPanicIndex@PLT>\n.L6:\n.LBE14:\n.LBB15:\n.LBB12:\nmovq -208(%rbp),%rsi\nmovq -200(%rbp),%rdi\nmovq %rsi,(%rax)\nmovq %rdi,<8>(%rax)\nmovq -192(%rbp),%rsi\nmovq -184(%rbp),%rdi\nmovq %rsi,<16>(%rax)\nmovq %rdi,<24>(%rax)\nmovq -176(%rbp),%rsi\nmovq -168(%rbp),%rdi\nmovq %rsi,<32>(%rax)\nmovq %rdi,<40>(%rax)\nmovq -160(%rbp),%rdx\nmovq %rdx,<48>(%rax)\njmp .L8\n.L13:\n.LBE12:\n.LBB13:\nleaq -208(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.go.Solution.name.0string.2.go.Solution.flowerbed.0.6.7int.2.go.Solution.n.0int.2.go.Solution.expect.0bool.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L8:\n.LBE13:\n.LBE15:\n.LBB16:\nmovq -56(%rbp),%rax\nmovq %rax,%rdi\ncall <strconv.Itoa@PLT>\nmovq -64(%rbp),%rcx\nmovq (%rcx),%rsi\nmovq <8>(%rcx),%rdi\nmovq %rsi,-144(%rbp)\nmovq %rdi,-136(%rbp)\nleaq <.LC27>(%rip),%rcx\nmovq %rcx,-128(%rbp)\nmovq $1,-120(%rbp)\nmovq %rax,-112(%rbp)\nmovq %rdx,-104(%rbp)\nleaq <go.Solution.TestSolution..func1>(%rip),%r14\nmovq -64(%rbp),%r12\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.flowerbed.0.6.7int.2.go.Solution.n.0int.2.go.Solution.expect.0bool.5.5>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-88(%rbp)\nmovq %r14,-80(%rbp)\nmovq %r12,-72(%rbp)\nleaq <runtime.writeBarrier>(%rip),%rax\nmovl (%rax),%eax\ntestl %eax,%eax\njne .L9\n.LBB17:\nmovq -88(%rbp),%rcx\nmovq -80(%rbp),%rax\nmovq -72(%rbp),%rdx\nmovq %rax,(%rcx)\nmovq %rdx,<8>(%rcx)\n.LBE17:\njmp .L10\n.L9:\n.LBB18:\nmovq -88(%rbp),%rax\nleaq -80(%rbp),%rdx\nmovq %rax,%rsi\nleaq <type..struct.4.4x.5.f.f.0.1.4void.5.2.go.Solution.c1.0.1struct.4.go.Solution.name.0string.2.go.Solution.flowerbed.0.6.7int.2.go.Solution.n.0int.2.go.Solution.expect.0bool.5.5>(%rip),%rdi\ncall <runtime.typedmemmove@PLT>\n.L10:\n.LBE18:\nmovq -88(%rbp),%r12\nleaq -144(%rbp),%rax\nmovl $3,%edx\nmovq %rax,%rsi\nmovl $0,%edi\ncall <runtime.concatstrings@PLT>\nmovq %rax,%rsi\nmovq %rdx,%rdi\nmovq -680(%rbp),%rax\nmovq %r12,%rcx\nmovq %rax,%rdi\ncall <testing.T.Run@PLT>\n.LBE16:\n.LBE9:\n.LBB19:\naddq $1,%rbx\n.L4:\n.LBE19:\ncmpq %r13,%rbx\njl .L15\n.LBE6:\n.LBE5:\n.LBE4:\naddq $696,%rsp\npopq %rbx\npopq %r12\npopq %r13\npopq %r14\npopq %r15\npopq %rbp\nret", "tgt": "cases := []struct {\n\tname      string\n\tflowerbed []int\n\tn         int\n\texpect    bool\n}{\n\t{\"STR\", []int{1, 0, 0, 0, 1}, 1, true},\n\t{\"STR\", []int{1, 0, 0, 0, 1}, 2, false},\n\t{\"STR\", []int{1, 0, 1, 0}, 0, true},\n\t{\"STR\", []int{0}, 1, true},\n\t{\"STR\", []int{1, 0, 1, 0, 1, 0, 1}, 1, false},\n}\nfor i, c := range cases {\n\tt.Run(c.name+\"STR\"+strconv.Itoa(i), func(t *testing.T) {\n\t\tgot := Solution(c.flowerbed, c.n)\n\t\tif !reflect.DeepEqual(got, c.expect) {\n\t\t\tt.Fatalf(\"STR\",\n\t\t\t\tc.expect, got, c.flowerbed, c.n)\n\t\t}\n\t})\n}"}
{"src": ".LFB0:\ncmpq %fs:112,%rsp\njnb .L9\nmovl $152,%r10d\nmovl $0,%r11d\ncall <__morestack>\n.LVL0:\nret\n.L9:\npushq %rbp\nmovq %rsp,%rbp\npushq %r13\npushq %r12\naddq $-128,%rsp\nmovq $20,-24(%rbp)\nmovq $19,-32(%rbp)\n.L8:\n.LBB2:\n.LBB3:\n.LBB4:\n.LBB5:\ncmpq $-1,-32(%rbp)\nje .L2\ncmpq $0,-32(%rbp)\njne .L3\ncall <runtime.panicdivide@PLT>\n.L3:\nmovq -24(%rbp),%rax\ncqto\nidivq -32(%rbp)\nmovq %rdx,%rax\ntestq %rax,%rax\nsete %al\njmp .L4\n.L2:\nmovl $1,%eax\n.L4:\ntestb %al,%al\nje .L5\n.LBB6:\n.LBB7:\ncmpq $1,-32(%rbp)\njle .L6\n.LBB8:\nsubq $1,-32(%rbp)\n.LBE8:\njmp .L8\n.L6:\n.LBB9:\nleaq <int..d>(%rip),%r12\nleaq <int..d>(%rip),%rdi\ncall <runtime.newobject@PLT>\nmovq %rax,-120(%rbp)\nmovq -120(%rbp),%rax\nmovq -24(%rbp),%rdx\nmovq %rdx,(%rax)\nmovq -120(%rbp),%rax\nmovq %rax,%r13\nmovq %r12,-112(%rbp)\nmovq %r13,-104(%rbp)\nleaq -112(%rbp),%rax\nmovq %rax,-96(%rbp)\nmovq $1,-88(%rbp)\nmovq $1,-80(%rbp)\nleaq -64(%rbp),%rax\nsubq $8,%rsp\npushq -80(%rbp)\npushq -88(%rbp)\npushq -96(%rbp)\nmovq %rax,%rdi\ncall <fmt.Println@PLT>\naddq $32,%rsp\nmovq -64(%rbp),%rax\nmovq -56(%rbp),%rdx\nmovq %rax,-144(%rbp)\nmovq %rdx,-136(%rbp)\nmovq -48(%rbp),%rax\nmovq %rax,-128(%rbp)\nmovl $0,%edi\ncall <os.Exit@PLT>\njmp .L8\n.L5:\n.LBE9:\n.LBE7:\n.LBE6:\n.LBB10:\naddq $20,-24(%rbp)\nmovq $19,-32(%rbp)\n.LBE10:\n.LBE5:\n.LBE4:\njmp .L8\n.LBE3:\n.LBE2:", "tgt": "const maxDiv = 20\ni, div := maxDiv, maxDiv-1\nfor {\n\tif i%div == 0 {\n\t\tif div > 1 {\n\t\t\tdiv--\n\t\t} else {\n\t\t\tfmt.Println(i)\n\t\t\tos.Exit(0)\n\t\t}\n\t} else {\n\t\ti += maxDiv\n\t\tdiv = maxDiv - 1\n\t}\n}"}
